
I2C_Motor_PCA9555_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  0000136e  00001402  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000136e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000020  00800138  00800138  0000143a  2**0
                  ALLOC
  3 .stab         000027c0  00000000  00000000  0000143c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002591  00000000  00000000  00003bfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000040  00000000  00000000  0000618d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000014a  00000000  00000000  000061cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000729  00000000  00000000  00006317  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000002db  00000000  00000000  00006a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000661  00000000  00000000  00006d1b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000120  00000000  00000000  0000737c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000045d  00000000  00000000  0000749c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000020f  00000000  00000000  000078f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__vector_11>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ee e6       	ldi	r30, 0x6E	; 110
      a0:	f3 e1       	ldi	r31, 0x13	; 19
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a8 33       	cpi	r26, 0x38	; 56
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	11 e0       	ldi	r17, 0x01	; 1
      b4:	a8 e3       	ldi	r26, 0x38	; 56
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a8 35       	cpi	r26, 0x58	; 88
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <main>
      c6:	0c 94 b5 09 	jmp	0x136a	; 0x136a <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <__cxa_guard_acquire>:

extern "C" int __cxa_guard_acquire(__guard *); 
extern "C" void __cxa_guard_release (__guard *); 
extern "C" void __cxa_guard_abort (__guard *); 

int __cxa_guard_acquire(__guard *g) {return !*(char *)(g);}; 
      ce:	fc 01       	movw	r30, r24
      d0:	20 e0       	ldi	r18, 0x00	; 0
      d2:	30 e0       	ldi	r19, 0x00	; 0
      d4:	80 81       	ld	r24, Z
      d6:	88 23       	and	r24, r24
      d8:	11 f4       	brne	.+4      	; 0xde <__cxa_guard_acquire+0x10>
      da:	21 e0       	ldi	r18, 0x01	; 1
      dc:	30 e0       	ldi	r19, 0x00	; 0
      de:	c9 01       	movw	r24, r18
      e0:	08 95       	ret

000000e2 <__cxa_guard_release>:
void __cxa_guard_release (__guard *g) {*(char *)g = 1;}; 
      e2:	fc 01       	movw	r30, r24
      e4:	81 e0       	ldi	r24, 0x01	; 1
      e6:	80 83       	st	Z, r24
      e8:	08 95       	ret

000000ea <__cxa_guard_abort>:
void __cxa_guard_abort (__guard *) {}; 
      ea:	08 95       	ret

000000ec <__cxa_pure_virtual>:

extern "C" void __cxa_pure_virtual(void); 
void __cxa_pure_virtual(void) {}; 
      ec:	08 95       	ret

000000ee <_Z3gcfiiiiii>:
	char byte1;
} u_byte1;



int gcf(int in1, int in2, int in3, int in4, int in5, int in6) //int
      ee:	6f 92       	push	r6
      f0:	7f 92       	push	r7
      f2:	8f 92       	push	r8
      f4:	9f 92       	push	r9
      f6:	af 92       	push	r10
      f8:	bf 92       	push	r11
      fa:	cf 92       	push	r12
      fc:	df 92       	push	r13
      fe:	ef 92       	push	r14
     100:	ff 92       	push	r15
     102:	0f 93       	push	r16
     104:	1f 93       	push	r17
     106:	cf 93       	push	r28
     108:	df 93       	push	r29
{
	int gcf = 1;
	for(int i = 2; i <= 100*in1; i ++)
     10a:	e4 e6       	ldi	r30, 0x64	; 100
     10c:	f0 e0       	ldi	r31, 0x00	; 0
     10e:	8e 9f       	mul	r24, r30
     110:	e0 01       	movw	r28, r0
     112:	8f 9f       	mul	r24, r31
     114:	d0 0d       	add	r29, r0
     116:	9e 9f       	mul	r25, r30
     118:	d0 0d       	add	r29, r0
     11a:	11 24       	eor	r1, r1
	{
		if(100*in1 % i == 0)
		{
			if(100*in2 % i == 0)
     11c:	6e 9f       	mul	r22, r30
     11e:	30 01       	movw	r6, r0
     120:	6f 9f       	mul	r22, r31
     122:	70 0c       	add	r7, r0
     124:	7e 9f       	mul	r23, r30
     126:	70 0c       	add	r7, r0
     128:	11 24       	eor	r1, r1
			{
				if(100*in3 % i == 0)
     12a:	4e 9f       	mul	r20, r30
     12c:	40 01       	movw	r8, r0
     12e:	4f 9f       	mul	r20, r31
     130:	90 0c       	add	r9, r0
     132:	5e 9f       	mul	r21, r30
     134:	90 0c       	add	r9, r0
     136:	11 24       	eor	r1, r1
				{
					if(100*in4 % i == 0)
     138:	2e 9f       	mul	r18, r30
     13a:	50 01       	movw	r10, r0
     13c:	2f 9f       	mul	r18, r31
     13e:	b0 0c       	add	r11, r0
     140:	3e 9f       	mul	r19, r30
     142:	b0 0c       	add	r11, r0
     144:	11 24       	eor	r1, r1
					{
						if(100*in5 % i == 0)
     146:	0e 9f       	mul	r16, r30
     148:	60 01       	movw	r12, r0
     14a:	0f 9f       	mul	r16, r31
     14c:	d0 0c       	add	r13, r0
     14e:	1e 9f       	mul	r17, r30
     150:	d0 0c       	add	r13, r0
     152:	11 24       	eor	r1, r1
						{
							if(100*in6 % i == 0)
     154:	ee 9e       	mul	r14, r30
     156:	80 01       	movw	r16, r0
     158:	ef 9e       	mul	r14, r31
     15a:	10 0d       	add	r17, r0
     15c:	fe 9e       	mul	r15, r30
     15e:	10 0d       	add	r17, r0
     160:	11 24       	eor	r1, r1
     162:	e1 e0       	ldi	r30, 0x01	; 1
     164:	f0 e0       	ldi	r31, 0x00	; 0
     166:	22 e0       	ldi	r18, 0x02	; 2
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	27 c0       	rjmp	.+78     	; 0x1ba <_Z3gcfiiiiii+0xcc>
int gcf(int in1, int in2, int in3, int in4, int in5, int in6) //int
{
	int gcf = 1;
	for(int i = 2; i <= 100*in1; i ++)
	{
		if(100*in1 % i == 0)
     16c:	ce 01       	movw	r24, r28
     16e:	b9 01       	movw	r22, r18
     170:	0e 94 c1 07 	call	0xf82	; 0xf82 <__divmodhi4>
     174:	89 2b       	or	r24, r25
     176:	f9 f4       	brne	.+62     	; 0x1b6 <_Z3gcfiiiiii+0xc8>
		{
			if(100*in2 % i == 0)
     178:	c3 01       	movw	r24, r6
     17a:	b9 01       	movw	r22, r18
     17c:	0e 94 c1 07 	call	0xf82	; 0xf82 <__divmodhi4>
     180:	89 2b       	or	r24, r25
     182:	c9 f4       	brne	.+50     	; 0x1b6 <_Z3gcfiiiiii+0xc8>
			{
				if(100*in3 % i == 0)
     184:	c4 01       	movw	r24, r8
     186:	b9 01       	movw	r22, r18
     188:	0e 94 c1 07 	call	0xf82	; 0xf82 <__divmodhi4>
     18c:	89 2b       	or	r24, r25
     18e:	99 f4       	brne	.+38     	; 0x1b6 <_Z3gcfiiiiii+0xc8>
				{
					if(100*in4 % i == 0)
     190:	c5 01       	movw	r24, r10
     192:	b9 01       	movw	r22, r18
     194:	0e 94 c1 07 	call	0xf82	; 0xf82 <__divmodhi4>
     198:	89 2b       	or	r24, r25
     19a:	69 f4       	brne	.+26     	; 0x1b6 <_Z3gcfiiiiii+0xc8>
					{
						if(100*in5 % i == 0)
     19c:	c6 01       	movw	r24, r12
     19e:	b9 01       	movw	r22, r18
     1a0:	0e 94 c1 07 	call	0xf82	; 0xf82 <__divmodhi4>
     1a4:	89 2b       	or	r24, r25
     1a6:	39 f4       	brne	.+14     	; 0x1b6 <_Z3gcfiiiiii+0xc8>
						{
							if(100*in6 % i == 0)
     1a8:	c8 01       	movw	r24, r16
     1aa:	b9 01       	movw	r22, r18
     1ac:	0e 94 c1 07 	call	0xf82	; 0xf82 <__divmodhi4>
     1b0:	89 2b       	or	r24, r25
     1b2:	09 f4       	brne	.+2      	; 0x1b6 <_Z3gcfiiiiii+0xc8>
     1b4:	f9 01       	movw	r30, r18


int gcf(int in1, int in2, int in3, int in4, int in5, int in6) //int
{
	int gcf = 1;
	for(int i = 2; i <= 100*in1; i ++)
     1b6:	2f 5f       	subi	r18, 0xFF	; 255
     1b8:	3f 4f       	sbci	r19, 0xFF	; 255
     1ba:	c2 17       	cp	r28, r18
     1bc:	d3 07       	cpc	r29, r19
     1be:	b4 f6       	brge	.-84     	; 0x16c <_Z3gcfiiiiii+0x7e>
				}
			}
		}
	}
	return gcf;
}
     1c0:	cf 01       	movw	r24, r30
     1c2:	df 91       	pop	r29
     1c4:	cf 91       	pop	r28
     1c6:	1f 91       	pop	r17
     1c8:	0f 91       	pop	r16
     1ca:	ff 90       	pop	r15
     1cc:	ef 90       	pop	r14
     1ce:	df 90       	pop	r13
     1d0:	cf 90       	pop	r12
     1d2:	bf 90       	pop	r11
     1d4:	af 90       	pop	r10
     1d6:	9f 90       	pop	r9
     1d8:	8f 90       	pop	r8
     1da:	7f 90       	pop	r7
     1dc:	6f 90       	pop	r6
     1de:	08 95       	ret

000001e0 <main>:
  
int main()   
     1e0:	1f 93       	push	r17
     1e2:	cf 93       	push	r28
     1e4:	df 93       	push	r29
	int runtime = 20000, steplength0 = 1, steplength1 = 2, steplength2 = 3, steplength3 = 4, steplength4 = 5;
	int totallength0 = 2, totallength1 = 3;
	int totallength2 = 4, totallength3 = 5, totallength4 = 6;
	int delaytime = 1;//gcf(totallength0, totallength1, totallength2, totallength3, totallength4, steplength)/100;
    
	u_byte0.byte0 = 0;  // initialize byte0
     1e6:	10 92 38 01 	sts	0x0138, r1
	u_byte1.byte1 = 0;  // initialize byte1
     1ea:	10 92 39 01 	sts	0x0139, r1
	
	OrangutanLCD::clear();
     1ee:	0e 94 12 04 	call	0x824	; 0x824 <_ZN12OrangutanLCD5clearEv>
	OrangutanLCD::print("BEGIN ");
     1f2:	80 e0       	ldi	r24, 0x00	; 0
     1f4:	91 e0       	ldi	r25, 0x01	; 1
     1f6:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_ZN12OrangutanLCD5printEPKc>
// another C++ file.
inline unsigned long get_ms() { return OrangutanTime::ms(); }
inline unsigned long millis() { return OrangutanTime::ms(); }

inline void delay(unsigned int milliseconds) { OrangutanTime::delayMilliseconds(milliseconds); }
inline void delay_ms(unsigned int milliseconds) { OrangutanTime::delayMilliseconds(milliseconds); }
     1fa:	88 ee       	ldi	r24, 0xE8	; 232
     1fc:	93 e0       	ldi	r25, 0x03	; 3
     1fe:	0e 94 07 07 	call	0xe0e	; 0xe0e <_ZN13OrangutanTime17delayMillisecondsEj>
    //DDRB  = 0xff;                              // use all pins on port B for output 
    //PORTB = 0xff;                              // (active low LED's )
	
	delay_ms(1000);

    i2c_init();                                // init I2C interface
     202:	0e 94 c1 01 	call	0x382	; 0x382 <_Z8i2c_initv>
	
    OrangutanLCD::print("INIT ");
     206:	87 e0       	ldi	r24, 0x07	; 7
     208:	91 e0       	ldi	r25, 0x01	; 1
     20a:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_ZN12OrangutanLCD5printEPKc>
	
	/* write 0x75 to eeprom address 0x05 (Byte Write) */
    ret = i2c_start(PCA9555+I2C_WRITE);       // set device address and write mode
     20e:	80 e4       	ldi	r24, 0x40	; 64
     210:	0e 94 c7 01 	call	0x38e	; 0x38e <_Z9i2c_starth>
     214:	18 2f       	mov	r17, r24
    
	OrangutanLCD::clear();
     216:	0e 94 12 04 	call	0x824	; 0x824 <_ZN12OrangutanLCD5clearEv>
	OrangutanLCD::print("START ");
     21a:	8d e0       	ldi	r24, 0x0D	; 13
     21c:	91 e0       	ldi	r25, 0x01	; 1
     21e:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_ZN12OrangutanLCD5printEPKc>
	
	if ( ret ) {
     222:	11 23       	and	r17, r17
     224:	59 f0       	breq	.+22     	; 0x23c <main+0x5c>
        /* failed to issue start condition, possibly no device found */
        
		OrangutanLCD::print("NACK ");
     226:	84 e1       	ldi	r24, 0x14	; 20
     228:	91 e0       	ldi	r25, 0x01	; 1
     22a:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_ZN12OrangutanLCD5printEPKc>
		i2c_stop();
     22e:	0e 94 18 02 	call	0x430	; 0x430 <_Z8i2c_stopv>
        //PORTB=0x00;                            // activate all 8 LED to show error */
		OrangutanLCD::print("STOP ");
     232:	8a e1       	ldi	r24, 0x1A	; 26
     234:	91 e0       	ldi	r25, 0x01	; 1
     236:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_ZN12OrangutanLCD5printEPKc>
     23a:	98 c0       	rjmp	.+304    	; 0x36c <main+0x18c>
    }else {
		OrangutanLCD::print("ACK ");
     23c:	80 e2       	ldi	r24, 0x20	; 32
     23e:	91 e0       	ldi	r25, 0x01	; 1
     240:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_ZN12OrangutanLCD5printEPKc>
        /* issuing start condition ok, device accessible */
		OrangutanLCD::print("BINIT ");
     244:	85 e2       	ldi	r24, 0x25	; 37
     246:	91 e0       	ldi	r25, 0x01	; 1
     248:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_ZN12OrangutanLCD5printEPKc>
		i2c_write(0x6);
     24c:	86 e0       	ldi	r24, 0x06	; 6
     24e:	0e 94 20 02 	call	0x440	; 0x440 <_Z9i2c_writeh>
		i2c_write(0x0);
     252:	80 e0       	ldi	r24, 0x00	; 0
     254:	0e 94 20 02 	call	0x440	; 0x440 <_Z9i2c_writeh>
		i2c_write(0x0);
     258:	80 e0       	ldi	r24, 0x00	; 0
     25a:	0e 94 20 02 	call	0x440	; 0x440 <_Z9i2c_writeh>
		i2c_stop();
     25e:	0e 94 18 02 	call	0x430	; 0x430 <_Z8i2c_stopv>
		i2c_start(PCA9555+I2C_WRITE);
     262:	80 e4       	ldi	r24, 0x40	; 64
     264:	0e 94 c7 01 	call	0x38e	; 0x38e <_Z9i2c_starth>
		u_byte0.bits_in_byte0.bit_1 = 1;
     268:	80 91 38 01 	lds	r24, 0x0138
		u_byte0.bits_in_byte0.bit_2 = 1;
		u_byte0.bits_in_byte0.bit_4 = 1;
		u_byte0.bits_in_byte0.bit_5 = 1;
		u_byte0.bits_in_byte0.bit_7 = 1;
     26c:	86 6b       	ori	r24, 0xB6	; 182
     26e:	80 93 38 01 	sts	0x0138, r24
		u_byte1.bits_in_byte1.bit_10 = 1;
     272:	80 91 39 01 	lds	r24, 0x0139
		u_byte1.bits_in_byte1.bit_12 = 1;
		u_byte1.bits_in_byte1.bit_13 = 1;
		u_byte1.bits_in_byte1.bit_15 = 1;
		u_byte1.bits_in_byte1.bit_16 = 1;
     276:	8d 66       	ori	r24, 0x6D	; 109
     278:	80 93 39 01 	sts	0x0139, r24
     27c:	88 ee       	ldi	r24, 0xE8	; 232
     27e:	93 e0       	ldi	r25, 0x03	; 3
     280:	0e 94 07 07 	call	0xe0e	; 0xe0e <_ZN13OrangutanTime17delayMillisecondsEj>

		delay_ms(1000);
		OrangutanLCD::clear();
     284:	0e 94 12 04 	call	0x824	; 0x824 <_ZN12OrangutanLCD5clearEv>
     288:	c0 e0       	ldi	r28, 0x00	; 0
     28a:	d0 e0       	ldi	r29, 0x00	; 0
     28c:	20 91 38 01 	lds	r18, 0x0138
		{

			//OrangutanLCD::print( (int) u_byte0.byte0);
			//OrangutanLCD::print(" ");

			if( (j % (totallength0/delaytime) ) < (steplength0/delaytime) )  //check if it is in the right period of the loop to send high
     290:	c0 fd       	sbrc	r28, 0
     292:	02 c0       	rjmp	.+4      	; 0x298 <main+0xb8>
			{
				//motorouts[0] = 1;
				u_byte0.bits_in_byte0.bit_0 = 1; // set bit 0
     294:	21 60       	ori	r18, 0x01	; 1
     296:	01 c0       	rjmp	.+2      	; 0x29a <main+0xba>
			}
			else
			{
				//motorouts[0] = 0;
				u_byte0.bits_in_byte0.bit_0 = 0; // set bit 0
     298:	2e 7f       	andi	r18, 0xFE	; 254
     29a:	20 93 38 01 	sts	0x0138, r18
			}

			if( (j % (totallength1/delaytime) ) < (steplength1/delaytime) )
     29e:	ce 01       	movw	r24, r28
     2a0:	63 e0       	ldi	r22, 0x03	; 3
     2a2:	70 e0       	ldi	r23, 0x00	; 0
     2a4:	0e 94 c1 07 	call	0xf82	; 0xf82 <__divmodhi4>
     2a8:	20 91 38 01 	lds	r18, 0x0138
     2ac:	02 97       	sbiw	r24, 0x02	; 2
     2ae:	14 f4       	brge	.+4      	; 0x2b4 <main+0xd4>
			{
				//motorouts[0] = 1;
				u_byte0.bits_in_byte0.bit_3 = 1; // set bit 1
     2b0:	28 60       	ori	r18, 0x08	; 8
     2b2:	01 c0       	rjmp	.+2      	; 0x2b6 <main+0xd6>
			}
			else
			{
				//motorouts[0] = 0;
				u_byte0.bits_in_byte0.bit_3 = 0; // set bit 1
     2b4:	27 7f       	andi	r18, 0xF7	; 247
     2b6:	20 93 38 01 	sts	0x0138, r18
			}

			if( (j % (totallength2/delaytime) ) < (steplength2/delaytime) )
     2ba:	ce 01       	movw	r24, r28
     2bc:	83 70       	andi	r24, 0x03	; 3
     2be:	90 70       	andi	r25, 0x00	; 0
     2c0:	20 91 38 01 	lds	r18, 0x0138
     2c4:	03 97       	sbiw	r24, 0x03	; 3
     2c6:	11 f0       	breq	.+4      	; 0x2cc <main+0xec>
			{
				//motorouts[0] = 1;
				u_byte0.bits_in_byte0.bit_6 = 1; // set bit 1
     2c8:	20 64       	ori	r18, 0x40	; 64
     2ca:	01 c0       	rjmp	.+2      	; 0x2ce <main+0xee>
			}
			else
			{
				//motorouts[0] = 0;
				u_byte0.bits_in_byte0.bit_6 = 0; // set bit 1
     2cc:	2f 7b       	andi	r18, 0xBF	; 191
     2ce:	20 93 38 01 	sts	0x0138, r18
			}

			if( (j % (totallength3/delaytime) ) < (steplength3/delaytime) )
     2d2:	ce 01       	movw	r24, r28
     2d4:	65 e0       	ldi	r22, 0x05	; 5
     2d6:	70 e0       	ldi	r23, 0x00	; 0
     2d8:	0e 94 c1 07 	call	0xf82	; 0xf82 <__divmodhi4>
     2dc:	20 91 39 01 	lds	r18, 0x0139
     2e0:	04 97       	sbiw	r24, 0x04	; 4
     2e2:	14 f4       	brge	.+4      	; 0x2e8 <main+0x108>
			{
				//motorouts[0] = 1;
				u_byte1.bits_in_byte1.bit_11 = 1; // set bit 1
     2e4:	22 60       	ori	r18, 0x02	; 2
     2e6:	01 c0       	rjmp	.+2      	; 0x2ea <main+0x10a>
			}
			else
			{
				//motorouts[0] = 0;
				u_byte1.bits_in_byte1.bit_11 = 0; // set bit 1
     2e8:	2d 7f       	andi	r18, 0xFD	; 253
     2ea:	20 93 39 01 	sts	0x0139, r18
			}

			if( (j % (totallength4/delaytime) ) < (steplength4/delaytime) )
     2ee:	ce 01       	movw	r24, r28
     2f0:	66 e0       	ldi	r22, 0x06	; 6
     2f2:	70 e0       	ldi	r23, 0x00	; 0
     2f4:	0e 94 c1 07 	call	0xf82	; 0xf82 <__divmodhi4>
     2f8:	20 91 39 01 	lds	r18, 0x0139
     2fc:	05 97       	sbiw	r24, 0x05	; 5
     2fe:	14 f4       	brge	.+4      	; 0x304 <main+0x124>
			{
				//motorouts[0] = 1;
				u_byte1.bits_in_byte1.bit_14 = 1; // set bit 1
     300:	20 61       	ori	r18, 0x10	; 16
     302:	01 c0       	rjmp	.+2      	; 0x306 <main+0x126>
			}
			else
			{
				//motorouts[0] = 0;
				u_byte1.bits_in_byte1.bit_14 = 0; // set bit 1
     304:	2f 7e       	andi	r18, 0xEF	; 239
     306:	20 93 39 01 	sts	0x0139, r18
			}

			i2c_write(0x2);									// write command byte
     30a:	82 e0       	ldi	r24, 0x02	; 2
     30c:	0e 94 20 02 	call	0x440	; 0x440 <_Z9i2c_writeh>
			i2c_write(u_byte0.byte0);                       // write first byte of output
     310:	80 91 38 01 	lds	r24, 0x0138
     314:	0e 94 20 02 	call	0x440	; 0x440 <_Z9i2c_writeh>
        	i2c_write(u_byte1.byte1);                       // write second byte of output
     318:	80 91 39 01 	lds	r24, 0x0139
     31c:	0e 94 20 02 	call	0x440	; 0x440 <_Z9i2c_writeh>
        	i2c_stop();                            // set stop conditon = release bus
     320:	0e 94 18 02 	call	0x430	; 0x430 <_Z8i2c_stopv>
     324:	81 e0       	ldi	r24, 0x01	; 1
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	0e 94 07 07 	call	0xe0e	; 0xe0e <_ZN13OrangutanTime17delayMillisecondsEj>
			delay_ms(delaytime);
			i2c_start(PCA9555+I2C_WRITE);	//start up for next write
     32c:	80 e4       	ldi	r24, 0x40	; 64
     32e:	0e 94 c7 01 	call	0x38e	; 0x38e <_Z9i2c_starth>
		u_byte1.bits_in_byte1.bit_15 = 1;
		u_byte1.bits_in_byte1.bit_16 = 1;

		delay_ms(1000);
		OrangutanLCD::clear();
		for(int j = 0; j < (runtime)/(delaytime); j ++)
     332:	21 96       	adiw	r28, 0x01	; 1
     334:	8e e4       	ldi	r24, 0x4E	; 78
     336:	c0 32       	cpi	r28, 0x20	; 32
     338:	d8 07       	cpc	r29, r24
     33a:	09 f0       	breq	.+2      	; 0x33e <main+0x15e>
     33c:	a7 cf       	rjmp	.-178    	; 0x28c <main+0xac>
        	i2c_write(u_byte1.byte1);                       // write second byte of output
        	i2c_stop();                            // set stop conditon = release bus
			delay_ms(delaytime);
			i2c_start(PCA9555+I2C_WRITE);	//start up for next write
    	}
		u_byte0.bits_in_byte0.bit_2 = 0;
     33e:	80 91 38 01 	lds	r24, 0x0138
		u_byte0.bits_in_byte0.bit_5 = 0;
     342:	8b 7d       	andi	r24, 0xDB	; 219
     344:	80 93 38 01 	sts	0x0138, r24
		u_byte1.bits_in_byte1.bit_10 = 0;
     348:	80 91 39 01 	lds	r24, 0x0139
		u_byte1.bits_in_byte1.bit_13 = 0;
		u_byte1.bits_in_byte1.bit_16 = 0;
     34c:	86 7b       	andi	r24, 0xB6	; 182
     34e:	80 93 39 01 	sts	0x0139, r24
		i2c_write(0x2);
     352:	82 e0       	ldi	r24, 0x02	; 2
     354:	0e 94 20 02 	call	0x440	; 0x440 <_Z9i2c_writeh>
		i2c_write(u_byte0.byte0);
     358:	80 91 38 01 	lds	r24, 0x0138
     35c:	0e 94 20 02 	call	0x440	; 0x440 <_Z9i2c_writeh>
		i2c_write(u_byte1.byte1);
     360:	80 91 39 01 	lds	r24, 0x0139
     364:	0e 94 20 02 	call	0x440	; 0x440 <_Z9i2c_writeh>
		i2c_stop();			//final stop
     368:	0e 94 18 02 	call	0x430	; 0x430 <_Z8i2c_stopv>
	}
	OrangutanLCD::print("END");
     36c:	8c e2       	ldi	r24, 0x2C	; 44
     36e:	91 e0       	ldi	r25, 0x01	; 1
     370:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_ZN12OrangutanLCD5printEPKc>
     374:	ff cf       	rjmp	.-2      	; 0x374 <main+0x194>

00000376 <_ZdlPv>:
  return malloc(size); 
} 

void operator delete(void * ptr) 
{ 
  free(ptr); 
     376:	0e 94 ee 08 	call	0x11dc	; 0x11dc <free>
} 
     37a:	08 95       	ret

0000037c <_Znwj>:
void * operator new(size_t size); 
void operator delete(void * ptr); 

void * operator new(size_t size) 
{ 
  return malloc(size); 
     37c:	0e 94 41 08 	call	0x1082	; 0x1082 <malloc>
} 
     380:	08 95       	ret

00000382 <_Z8i2c_initv>:
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR = 0;                         /* no prescaler */
     382:	10 92 b9 00 	sts	0x00B9, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     386:	8c e0       	ldi	r24, 0x0C	; 12
     388:	80 93 b8 00 	sts	0x00B8, r24

}/* i2c_init */
     38c:	08 95       	ret

0000038e <_Z9i2c_starth>:

/*************************************************************************	
  Issues a start condition and sends address and transfer direction.
  return 0 = device accessible, 1= failed to access device
*************************************************************************/
unsigned char i2c_start(unsigned char address)
     38e:	98 2f       	mov	r25, r24
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     390:	84 ea       	ldi	r24, 0xA4	; 164
     392:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     396:	80 91 bc 00 	lds	r24, 0x00BC
     39a:	87 ff       	sbrs	r24, 7
     39c:	fc cf       	rjmp	.-8      	; 0x396 <_Z9i2c_starth+0x8>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     39e:	80 91 b9 00 	lds	r24, 0x00B9
     3a2:	88 7f       	andi	r24, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     3a4:	88 30       	cpi	r24, 0x08	; 8
     3a6:	21 f0       	breq	.+8      	; 0x3b0 <_Z9i2c_starth+0x22>
     3a8:	80 31       	cpi	r24, 0x10	; 16
     3aa:	11 f0       	breq	.+4      	; 0x3b0 <_Z9i2c_starth+0x22>
     3ac:	81 e0       	ldi	r24, 0x01	; 1
     3ae:	08 95       	ret

	// send device address
	TWDR = address;
     3b0:	90 93 bb 00 	sts	0x00BB, r25
	TWCR = (1<<TWINT) | (1<<TWEN);
     3b4:	84 e8       	ldi	r24, 0x84	; 132
     3b6:	80 93 bc 00 	sts	0x00BC, r24

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     3ba:	80 91 bc 00 	lds	r24, 0x00BC
     3be:	87 ff       	sbrs	r24, 7
     3c0:	fc cf       	rjmp	.-8      	; 0x3ba <_Z9i2c_starth+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     3c2:	90 91 b9 00 	lds	r25, 0x00B9
     3c6:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     3c8:	98 31       	cpi	r25, 0x18	; 24
     3ca:	11 f4       	brne	.+4      	; 0x3d0 <_Z9i2c_starth+0x42>
     3cc:	80 e0       	ldi	r24, 0x00	; 0
     3ce:	08 95       	ret
     3d0:	80 e0       	ldi	r24, 0x00	; 0
     3d2:	90 34       	cpi	r25, 0x40	; 64
     3d4:	09 f0       	breq	.+2      	; 0x3d8 <_Z9i2c_starth+0x4a>
     3d6:	81 e0       	ldi	r24, 0x01	; 1

	return 0;

}/* i2c_start */
     3d8:	08 95       	ret

000003da <_Z14i2c_start_waith>:
 Issues a start condition and sends address and transfer direction.
 If device is busy, use ack polling to wait until device is ready
 
 Input:   address and transfer direction of I2C device
*************************************************************************/
void i2c_start_wait(unsigned char address)
     3da:	98 2f       	mov	r25, r24


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     3dc:	44 ea       	ldi	r20, 0xA4	; 164
    	twst = TW_STATUS & 0xF8;
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
    
    	// send device address
    	TWDR = address;
    	TWCR = (1<<TWINT) | (1<<TWEN);
     3de:	34 e8       	ldi	r19, 0x84	; 132
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     3e0:	24 e9       	ldi	r18, 0x94	; 148


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     3e2:	40 93 bc 00 	sts	0x00BC, r20
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     3e6:	80 91 bc 00 	lds	r24, 0x00BC
     3ea:	87 ff       	sbrs	r24, 7
     3ec:	fc cf       	rjmp	.-8      	; 0x3e6 <_Z14i2c_start_waith+0xc>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     3ee:	80 91 b9 00 	lds	r24, 0x00B9
     3f2:	88 7f       	andi	r24, 0xF8	; 248
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
     3f4:	88 30       	cpi	r24, 0x08	; 8
     3f6:	11 f0       	breq	.+4      	; 0x3fc <_Z14i2c_start_waith+0x22>
     3f8:	80 31       	cpi	r24, 0x10	; 16
     3fa:	99 f7       	brne	.-26     	; 0x3e2 <_Z14i2c_start_waith+0x8>
    
    	// send device address
    	TWDR = address;
     3fc:	90 93 bb 00 	sts	0x00BB, r25
    	TWCR = (1<<TWINT) | (1<<TWEN);
     400:	30 93 bc 00 	sts	0x00BC, r19
    
    	// wail until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     404:	80 91 bc 00 	lds	r24, 0x00BC
     408:	87 ff       	sbrs	r24, 7
     40a:	fc cf       	rjmp	.-8      	; 0x404 <_Z14i2c_start_waith+0x2a>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     40c:	80 91 b9 00 	lds	r24, 0x00B9
     410:	88 7f       	andi	r24, 0xF8	; 248
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
     412:	80 32       	cpi	r24, 0x20	; 32
     414:	11 f0       	breq	.+4      	; 0x41a <_Z14i2c_start_waith+0x40>
     416:	88 35       	cpi	r24, 0x58	; 88
     418:	39 f4       	brne	.+14     	; 0x428 <_Z14i2c_start_waith+0x4e>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     41a:	20 93 bc 00 	sts	0x00BC, r18
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR & (1<<TWSTO));
     41e:	80 91 bc 00 	lds	r24, 0x00BC
     422:	84 fd       	sbrc	r24, 4
     424:	fc cf       	rjmp	.-8      	; 0x41e <_Z14i2c_start_waith+0x44>
     426:	dd cf       	rjmp	.-70     	; 0x3e2 <_Z14i2c_start_waith+0x8>
     428:	08 95       	ret

0000042a <_Z13i2c_rep_starth>:
 Return:  0 device accessible
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );
     42a:	0e 94 c7 01 	call	0x38e	; 0x38e <_Z9i2c_starth>

}/* i2c_rep_start */
     42e:	08 95       	ret

00000430 <_Z8i2c_stopv>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     430:	84 e9       	ldi	r24, 0x94	; 148
     432:	80 93 bc 00 	sts	0x00BC, r24
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     436:	80 91 bc 00 	lds	r24, 0x00BC
     43a:	84 fd       	sbrc	r24, 4
     43c:	fc cf       	rjmp	.-8      	; 0x436 <_Z8i2c_stopv+0x6>

}/* i2c_stop */
     43e:	08 95       	ret

00000440 <_Z9i2c_writeh>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     440:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     444:	84 e8       	ldi	r24, 0x84	; 132
     446:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     44a:	80 91 bc 00 	lds	r24, 0x00BC
     44e:	87 ff       	sbrs	r24, 7
     450:	fc cf       	rjmp	.-8      	; 0x44a <_Z9i2c_writeh+0xa>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     452:	80 91 b9 00 	lds	r24, 0x00B9
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	88 7f       	andi	r24, 0xF8	; 248
     45a:	88 32       	cpi	r24, 0x28	; 40
     45c:	09 f0       	breq	.+2      	; 0x460 <_Z9i2c_writeh+0x20>
     45e:	91 e0       	ldi	r25, 0x01	; 1
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     460:	89 2f       	mov	r24, r25
     462:	08 95       	ret

00000464 <_Z11i2c_readAckv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     464:	84 ec       	ldi	r24, 0xC4	; 196
     466:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));    
     46a:	80 91 bc 00 	lds	r24, 0x00BC
     46e:	87 ff       	sbrs	r24, 7
     470:	fc cf       	rjmp	.-8      	; 0x46a <_Z11i2c_readAckv+0x6>

    return TWDR;
     472:	80 91 bb 00 	lds	r24, 0x00BB

}/* i2c_readAck */
     476:	08 95       	ret

00000478 <_Z11i2c_readNakv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     478:	84 e8       	ldi	r24, 0x84	; 132
     47a:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
     47e:	80 91 bc 00 	lds	r24, 0x00BC
     482:	87 ff       	sbrs	r24, 7
     484:	fc cf       	rjmp	.-8      	; 0x47e <_Z11i2c_readNakv+0x6>
	
    return TWDR;
     486:	80 91 bb 00 	lds	r24, 0x00BB

}/* i2c_readNak */
     48a:	08 95       	ret

0000048c <_ZN12OrangutanLCDC2Ev>:
     48c:	08 95       	ret

0000048e <_ZN12OrangutanLCDC1Ev>:
     48e:	08 95       	ret

00000490 <void_getchar>:
     490:	80 e0       	ldi	r24, 0x00	; 0
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	08 95       	ret

00000496 <_ZN12OrangutanLCD8busyWaitEv>:
     496:	ef 92       	push	r14
     498:	ff 92       	push	r15
     49a:	0f 93       	push	r16
     49c:	1f 93       	push	r17
     49e:	67 b1       	in	r22, 0x07	; 7
     4a0:	3d 98       	cbi	0x07, 5	; 7
     4a2:	28 98       	cbi	0x05, 0	; 5
     4a4:	29 9a       	sbi	0x05, 1	; 5
     4a6:	e0 90 3e 01 	lds	r14, 0x013E
     4aa:	f0 90 3f 01 	lds	r15, 0x013F
     4ae:	00 91 40 01 	lds	r16, 0x0140
     4b2:	10 91 41 01 	lds	r17, 0x0141
     4b6:	20 e0       	ldi	r18, 0x00	; 0
     4b8:	30 e0       	ldi	r19, 0x00	; 0
     4ba:	41 e0       	ldi	r20, 0x01	; 1
     4bc:	50 e0       	ldi	r21, 0x00	; 0
     4be:	ca 01       	movw	r24, r20
     4c0:	6f 93       	push	r22
     4c2:	64 e0       	ldi	r22, 0x04	; 4
     4c4:	6a 95       	dec	r22
     4c6:	f1 f7       	brne	.-4      	; 0x4c4 <_ZN12OrangutanLCD8busyWaitEv+0x2e>
     4c8:	6f 91       	pop	r22
     4ca:	01 97       	sbiw	r24, 0x01	; 1
     4cc:	c9 f7       	brne	.-14     	; 0x4c0 <_ZN12OrangutanLCD8busyWaitEv+0x2a>
     4ce:	2a 9a       	sbi	0x05, 2	; 5
     4d0:	ca 01       	movw	r24, r20
     4d2:	6f 93       	push	r22
     4d4:	64 e0       	ldi	r22, 0x04	; 4
     4d6:	6a 95       	dec	r22
     4d8:	f1 f7       	brne	.-4      	; 0x4d6 <_ZN12OrangutanLCD8busyWaitEv+0x40>
     4da:	6f 91       	pop	r22
     4dc:	01 97       	sbiw	r24, 0x01	; 1
     4de:	c9 f7       	brne	.-14     	; 0x4d2 <_ZN12OrangutanLCD8busyWaitEv+0x3c>
     4e0:	86 b1       	in	r24, 0x06	; 6
     4e2:	2a 98       	cbi	0x05, 2	; 5
     4e4:	fa 01       	movw	r30, r20
     4e6:	6f 93       	push	r22
     4e8:	64 e0       	ldi	r22, 0x04	; 4
     4ea:	6a 95       	dec	r22
     4ec:	f1 f7       	brne	.-4      	; 0x4ea <_ZN12OrangutanLCD8busyWaitEv+0x54>
     4ee:	6f 91       	pop	r22
     4f0:	31 97       	sbiw	r30, 0x01	; 1
     4f2:	c9 f7       	brne	.-14     	; 0x4e6 <_ZN12OrangutanLCD8busyWaitEv+0x50>
     4f4:	2a 9a       	sbi	0x05, 2	; 5
     4f6:	fa 01       	movw	r30, r20
     4f8:	6f 93       	push	r22
     4fa:	64 e0       	ldi	r22, 0x04	; 4
     4fc:	6a 95       	dec	r22
     4fe:	f1 f7       	brne	.-4      	; 0x4fc <_ZN12OrangutanLCD8busyWaitEv+0x66>
     500:	6f 91       	pop	r22
     502:	31 97       	sbiw	r30, 0x01	; 1
     504:	c9 f7       	brne	.-14     	; 0x4f8 <_ZN12OrangutanLCD8busyWaitEv+0x62>
     506:	2a 98       	cbi	0x05, 2	; 5
     508:	2c 5f       	subi	r18, 0xFC	; 252
     50a:	3f 4f       	sbci	r19, 0xFF	; 255
     50c:	85 ff       	sbrs	r24, 5
     50e:	09 c0       	rjmp	.+18     	; 0x522 <_ZN12OrangutanLCD8busyWaitEv+0x8c>
     510:	c9 01       	movw	r24, r18
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	8e 15       	cp	r24, r14
     518:	9f 05       	cpc	r25, r15
     51a:	a0 07       	cpc	r26, r16
     51c:	b1 07       	cpc	r27, r17
     51e:	08 f4       	brcc	.+2      	; 0x522 <_ZN12OrangutanLCD8busyWaitEv+0x8c>
     520:	ce cf       	rjmp	.-100    	; 0x4be <_ZN12OrangutanLCD8busyWaitEv+0x28>
     522:	c9 01       	movw	r24, r18
     524:	a0 e0       	ldi	r26, 0x00	; 0
     526:	b0 e0       	ldi	r27, 0x00	; 0
     528:	8e 15       	cp	r24, r14
     52a:	9f 05       	cpc	r25, r15
     52c:	a0 07       	cpc	r26, r16
     52e:	b1 07       	cpc	r27, r17
     530:	28 f0       	brcs	.+10     	; 0x53c <_ZN12OrangutanLCD8busyWaitEv+0xa6>
     532:	82 e3       	ldi	r24, 0x32	; 50
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	a0 e0       	ldi	r26, 0x00	; 0
     538:	b0 e0       	ldi	r27, 0x00	; 0
     53a:	04 c0       	rjmp	.+8      	; 0x544 <_ZN12OrangutanLCD8busyWaitEv+0xae>
     53c:	80 e3       	ldi	r24, 0x30	; 48
     53e:	95 e7       	ldi	r25, 0x75	; 117
     540:	a0 e0       	ldi	r26, 0x00	; 0
     542:	b0 e0       	ldi	r27, 0x00	; 0
     544:	80 93 3e 01 	sts	0x013E, r24
     548:	90 93 3f 01 	sts	0x013F, r25
     54c:	a0 93 40 01 	sts	0x0140, r26
     550:	b0 93 41 01 	sts	0x0141, r27
     554:	67 b9       	out	0x07, r22	; 7
     556:	1f 91       	pop	r17
     558:	0f 91       	pop	r16
     55a:	ff 90       	pop	r15
     55c:	ef 90       	pop	r14
     55e:	08 95       	ret

00000560 <_ZN12OrangutanLCD8sendDataEh>:
     560:	28 b1       	in	r18, 0x08	; 8
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	8f 70       	andi	r24, 0x0F	; 15
     566:	90 70       	andi	r25, 0x00	; 0
     568:	88 0f       	add	r24, r24
     56a:	99 1f       	adc	r25, r25
     56c:	88 0f       	add	r24, r24
     56e:	99 1f       	adc	r25, r25
     570:	23 7c       	andi	r18, 0xC3	; 195
     572:	28 2b       	or	r18, r24
     574:	28 b9       	out	0x08, r18	; 8
     576:	2a 9a       	sbi	0x05, 2	; 5
     578:	81 e0       	ldi	r24, 0x01	; 1
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	fc 01       	movw	r30, r24
     57e:	6f 93       	push	r22
     580:	64 e0       	ldi	r22, 0x04	; 4
     582:	6a 95       	dec	r22
     584:	f1 f7       	brne	.-4      	; 0x582 <_ZN12OrangutanLCD8sendDataEh+0x22>
     586:	6f 91       	pop	r22
     588:	31 97       	sbiw	r30, 0x01	; 1
     58a:	c9 f7       	brne	.-14     	; 0x57e <_ZN12OrangutanLCD8sendDataEh+0x1e>
     58c:	2a 98       	cbi	0x05, 2	; 5
     58e:	6f 93       	push	r22
     590:	64 e0       	ldi	r22, 0x04	; 4
     592:	6a 95       	dec	r22
     594:	f1 f7       	brne	.-4      	; 0x592 <_ZN12OrangutanLCD8sendDataEh+0x32>
     596:	6f 91       	pop	r22
     598:	01 97       	sbiw	r24, 0x01	; 1
     59a:	c9 f7       	brne	.-14     	; 0x58e <_ZN12OrangutanLCD8sendDataEh+0x2e>
     59c:	08 95       	ret

0000059e <_ZN12OrangutanLCD10initPrintfEv>:
     59e:	80 91 3a 01 	lds	r24, 0x013A
     5a2:	90 91 3b 01 	lds	r25, 0x013B
     5a6:	00 97       	sbiw	r24, 0x00	; 0
     5a8:	11 f0       	breq	.+4      	; 0x5ae <_ZN12OrangutanLCD10initPrintfEv+0x10>
     5aa:	0e 94 ee 08 	call	0x11dc	; 0x11dc <free>
     5ae:	80 91 30 01 	lds	r24, 0x0130
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	01 97       	sbiw	r24, 0x01	; 1
     5b6:	20 91 31 01 	lds	r18, 0x0131
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	ac 01       	movw	r20, r24
     5be:	42 9f       	mul	r20, r18
     5c0:	c0 01       	movw	r24, r0
     5c2:	43 9f       	mul	r20, r19
     5c4:	90 0d       	add	r25, r0
     5c6:	52 9f       	mul	r21, r18
     5c8:	90 0d       	add	r25, r0
     5ca:	11 24       	eor	r1, r1
     5cc:	0e 94 41 08 	call	0x1082	; 0x1082 <malloc>
     5d0:	90 93 3b 01 	sts	0x013B, r25
     5d4:	80 93 3a 01 	sts	0x013A, r24
     5d8:	00 97       	sbiw	r24, 0x00	; 0
     5da:	29 f1       	breq	.+74     	; 0x626 <_ZN12OrangutanLCD10initPrintfEv+0x88>
     5dc:	60 e0       	ldi	r22, 0x00	; 0
     5de:	70 e2       	ldi	r23, 0x20	; 32
     5e0:	08 c0       	rjmp	.+16     	; 0x5f2 <_ZN12OrangutanLCD10initPrintfEv+0x54>
     5e2:	e0 91 3a 01 	lds	r30, 0x013A
     5e6:	f0 91 3b 01 	lds	r31, 0x013B
     5ea:	e4 0f       	add	r30, r20
     5ec:	f5 1f       	adc	r31, r21
     5ee:	70 83       	st	Z, r23
     5f0:	6f 5f       	subi	r22, 0xFF	; 255
     5f2:	46 2f       	mov	r20, r22
     5f4:	50 e0       	ldi	r21, 0x00	; 0
     5f6:	80 91 30 01 	lds	r24, 0x0130
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	01 97       	sbiw	r24, 0x01	; 1
     5fe:	20 91 31 01 	lds	r18, 0x0131
     602:	30 e0       	ldi	r19, 0x00	; 0
     604:	fc 01       	movw	r30, r24
     606:	e2 9f       	mul	r30, r18
     608:	c0 01       	movw	r24, r0
     60a:	e3 9f       	mul	r30, r19
     60c:	90 0d       	add	r25, r0
     60e:	f2 9f       	mul	r31, r18
     610:	90 0d       	add	r25, r0
     612:	11 24       	eor	r1, r1
     614:	48 17       	cp	r20, r24
     616:	59 07       	cpc	r21, r25
     618:	24 f3       	brlt	.-56     	; 0x5e2 <_ZN12OrangutanLCD10initPrintfEv+0x44>
     61a:	84 e3       	ldi	r24, 0x34	; 52
     61c:	95 e0       	ldi	r25, 0x05	; 5
     61e:	68 e4       	ldi	r22, 0x48	; 72
     620:	72 e0       	ldi	r23, 0x02	; 2
     622:	0e 94 46 09 	call	0x128c	; 0x128c <fdevopen>
     626:	08 95       	ret

00000628 <_ZN12OrangutanLCD10initPrintfEhh>:
     628:	80 93 31 01 	sts	0x0131, r24
     62c:	60 93 30 01 	sts	0x0130, r22
     630:	0e 94 cf 02 	call	0x59e	; 0x59e <_ZN12OrangutanLCD10initPrintfEv>
     634:	08 95       	ret

00000636 <lcd_init_printf_with_dimensions>:
     636:	80 93 31 01 	sts	0x0131, r24
     63a:	60 93 30 01 	sts	0x0130, r22
     63e:	0e 94 cf 02 	call	0x59e	; 0x59e <_ZN12OrangutanLCD10initPrintfEv>
     642:	08 95       	ret

00000644 <lcd_init_printf>:
     644:	0e 94 cf 02 	call	0x59e	; 0x59e <_ZN12OrangutanLCD10initPrintfEv>
     648:	08 95       	ret

0000064a <_ZN12OrangutanLCD5init2Ev>:
     64a:	3d 98       	cbi	0x07, 5	; 7
     64c:	45 9a       	sbi	0x08, 5	; 8
     64e:	80 e3       	ldi	r24, 0x30	; 48
     650:	95 e7       	ldi	r25, 0x75	; 117
     652:	a0 e0       	ldi	r26, 0x00	; 0
     654:	b0 e0       	ldi	r27, 0x00	; 0
     656:	80 93 3e 01 	sts	0x013E, r24
     65a:	90 93 3f 01 	sts	0x013F, r25
     65e:	a0 93 40 01 	sts	0x0140, r26
     662:	b0 93 41 01 	sts	0x0141, r27
     666:	20 9a       	sbi	0x04, 0	; 4
     668:	21 9a       	sbi	0x04, 1	; 4
     66a:	22 9a       	sbi	0x04, 2	; 4
     66c:	8e e1       	ldi	r24, 0x1E	; 30
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	0e 94 07 07 	call	0xe0e	; 0xe0e <_ZN13OrangutanTime17delayMillisecondsEj>
     674:	83 e0       	ldi	r24, 0x03	; 3
     676:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     67a:	86 e0       	ldi	r24, 0x06	; 6
     67c:	90 e0       	ldi	r25, 0x00	; 0
     67e:	0e 94 07 07 	call	0xe0e	; 0xe0e <_ZN13OrangutanTime17delayMillisecondsEj>
     682:	83 e0       	ldi	r24, 0x03	; 3
     684:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     688:	82 e0       	ldi	r24, 0x02	; 2
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	0e 94 07 07 	call	0xe0e	; 0xe0e <_ZN13OrangutanTime17delayMillisecondsEj>
     690:	83 e0       	ldi	r24, 0x03	; 3
     692:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     696:	82 e0       	ldi	r24, 0x02	; 2
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	0e 94 07 07 	call	0xe0e	; 0xe0e <_ZN13OrangutanTime17delayMillisecondsEj>
     69e:	82 e0       	ldi	r24, 0x02	; 2
     6a0:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     6a4:	82 e0       	ldi	r24, 0x02	; 2
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	0e 94 07 07 	call	0xe0e	; 0xe0e <_ZN13OrangutanTime17delayMillisecondsEj>
     6ac:	88 e2       	ldi	r24, 0x28	; 40
     6ae:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN12OrangutanLCD8send_cmdEh>
     6b2:	88 e0       	ldi	r24, 0x08	; 8
     6b4:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN12OrangutanLCD8send_cmdEh>
     6b8:	81 e0       	ldi	r24, 0x01	; 1
     6ba:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN12OrangutanLCD8send_cmdEh>
     6be:	86 e0       	ldi	r24, 0x06	; 6
     6c0:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN12OrangutanLCD8send_cmdEh>
     6c4:	8c e0       	ldi	r24, 0x0C	; 12
     6c6:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN12OrangutanLCD8send_cmdEh>
     6ca:	08 95       	ret

000006cc <_ZN12OrangutanLCD4initEv>:
     6cc:	80 91 42 01 	lds	r24, 0x0142
     6d0:	88 23       	and	r24, r24
     6d2:	29 f4       	brne	.+10     	; 0x6de <_ZN12OrangutanLCD4initEv+0x12>
     6d4:	81 e0       	ldi	r24, 0x01	; 1
     6d6:	80 93 42 01 	sts	0x0142, r24
     6da:	0e 94 25 03 	call	0x64a	; 0x64a <_ZN12OrangutanLCD5init2Ev>
     6de:	08 95       	ret

000006e0 <_ZN12OrangutanLCD4sendEhhh>:
     6e0:	ff 92       	push	r15
     6e2:	0f 93       	push	r16
     6e4:	1f 93       	push	r17
     6e6:	08 2f       	mov	r16, r24
     6e8:	16 2f       	mov	r17, r22
     6ea:	f4 2e       	mov	r15, r20
     6ec:	0e 94 66 03 	call	0x6cc	; 0x6cc <_ZN12OrangutanLCD4initEv>
     6f0:	0e 94 4b 02 	call	0x496	; 0x496 <_ZN12OrangutanLCD8busyWaitEv>
     6f4:	37 b1       	in	r19, 0x07	; 7
     6f6:	28 b1       	in	r18, 0x08	; 8
     6f8:	29 98       	cbi	0x05, 1	; 5
     6fa:	11 23       	and	r17, r17
     6fc:	11 f0       	breq	.+4      	; 0x702 <_ZN12OrangutanLCD4sendEhhh+0x22>
     6fe:	28 9a       	sbi	0x05, 0	; 5
     700:	01 c0       	rjmp	.+2      	; 0x704 <_ZN12OrangutanLCD4sendEhhh+0x24>
     702:	28 98       	cbi	0x05, 0	; 5
     704:	87 b1       	in	r24, 0x07	; 7
     706:	8c 63       	ori	r24, 0x3C	; 60
     708:	87 b9       	out	0x07, r24	; 7
     70a:	81 e0       	ldi	r24, 0x01	; 1
     70c:	f8 16       	cp	r15, r24
     70e:	e1 f0       	breq	.+56     	; 0x748 <_ZN12OrangutanLCD4sendEhhh+0x68>
     710:	88 b1       	in	r24, 0x08	; 8
     712:	90 2f       	mov	r25, r16
     714:	92 95       	swap	r25
     716:	9f 70       	andi	r25, 0x0F	; 15
     718:	99 0f       	add	r25, r25
     71a:	99 0f       	add	r25, r25
     71c:	83 7c       	andi	r24, 0xC3	; 195
     71e:	98 2b       	or	r25, r24
     720:	98 b9       	out	0x08, r25	; 8
     722:	2a 9a       	sbi	0x05, 2	; 5
     724:	81 e0       	ldi	r24, 0x01	; 1
     726:	90 e0       	ldi	r25, 0x00	; 0
     728:	fc 01       	movw	r30, r24
     72a:	6f 93       	push	r22
     72c:	64 e0       	ldi	r22, 0x04	; 4
     72e:	6a 95       	dec	r22
     730:	f1 f7       	brne	.-4      	; 0x72e <_ZN12OrangutanLCD4sendEhhh+0x4e>
     732:	6f 91       	pop	r22
     734:	31 97       	sbiw	r30, 0x01	; 1
     736:	c9 f7       	brne	.-14     	; 0x72a <_ZN12OrangutanLCD4sendEhhh+0x4a>
     738:	2a 98       	cbi	0x05, 2	; 5
     73a:	6f 93       	push	r22
     73c:	64 e0       	ldi	r22, 0x04	; 4
     73e:	6a 95       	dec	r22
     740:	f1 f7       	brne	.-4      	; 0x73e <_ZN12OrangutanLCD4sendEhhh+0x5e>
     742:	6f 91       	pop	r22
     744:	01 97       	sbiw	r24, 0x01	; 1
     746:	c9 f7       	brne	.-14     	; 0x73a <_ZN12OrangutanLCD4sendEhhh+0x5a>
     748:	88 b1       	in	r24, 0x08	; 8
     74a:	0f 70       	andi	r16, 0x0F	; 15
     74c:	00 0f       	add	r16, r16
     74e:	00 0f       	add	r16, r16
     750:	83 7c       	andi	r24, 0xC3	; 195
     752:	80 2b       	or	r24, r16
     754:	88 b9       	out	0x08, r24	; 8
     756:	2a 9a       	sbi	0x05, 2	; 5
     758:	81 e0       	ldi	r24, 0x01	; 1
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	fc 01       	movw	r30, r24
     75e:	6f 93       	push	r22
     760:	64 e0       	ldi	r22, 0x04	; 4
     762:	6a 95       	dec	r22
     764:	f1 f7       	brne	.-4      	; 0x762 <_ZN12OrangutanLCD4sendEhhh+0x82>
     766:	6f 91       	pop	r22
     768:	31 97       	sbiw	r30, 0x01	; 1
     76a:	c9 f7       	brne	.-14     	; 0x75e <_ZN12OrangutanLCD4sendEhhh+0x7e>
     76c:	2a 98       	cbi	0x05, 2	; 5
     76e:	6f 93       	push	r22
     770:	64 e0       	ldi	r22, 0x04	; 4
     772:	6a 95       	dec	r22
     774:	f1 f7       	brne	.-4      	; 0x772 <_ZN12OrangutanLCD4sendEhhh+0x92>
     776:	6f 91       	pop	r22
     778:	01 97       	sbiw	r24, 0x01	; 1
     77a:	c9 f7       	brne	.-14     	; 0x76e <_ZN12OrangutanLCD4sendEhhh+0x8e>
     77c:	37 b9       	out	0x07, r19	; 7
     77e:	28 b9       	out	0x08, r18	; 8
     780:	1f 91       	pop	r17
     782:	0f 91       	pop	r16
     784:	ff 90       	pop	r15
     786:	08 95       	ret

00000788 <_ZN12OrangutanLCD8send_cmdEh>:
     788:	60 e0       	ldi	r22, 0x00	; 0
     78a:	42 e0       	ldi	r20, 0x02	; 2
     78c:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN12OrangutanLCD4sendEhhh>
     790:	08 95       	ret

00000792 <_ZN12OrangutanLCD10moveCursorEhh>:
     792:	0f 93       	push	r16
     794:	1f 93       	push	r17
     796:	08 2f       	mov	r16, r24
     798:	16 2f       	mov	r17, r22
     79a:	08 c0       	rjmp	.+16     	; 0x7ac <_ZN12OrangutanLCD10moveCursorEhh+0x1a>
     79c:	00 23       	and	r16, r16
     79e:	11 f4       	brne	.+4      	; 0x7a4 <_ZN12OrangutanLCD10moveCursorEhh+0x12>
     7a0:	80 e1       	ldi	r24, 0x10	; 16
     7a2:	01 c0       	rjmp	.+2      	; 0x7a6 <_ZN12OrangutanLCD10moveCursorEhh+0x14>
     7a4:	84 e1       	ldi	r24, 0x14	; 20
     7a6:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN12OrangutanLCD8send_cmdEh>
     7aa:	11 50       	subi	r17, 0x01	; 1
     7ac:	11 23       	and	r17, r17
     7ae:	b1 f7       	brne	.-20     	; 0x79c <_ZN12OrangutanLCD10moveCursorEhh+0xa>
     7b0:	1f 91       	pop	r17
     7b2:	0f 91       	pop	r16
     7b4:	08 95       	ret

000007b6 <lcd_move_cursor>:
     7b6:	0e 94 c9 03 	call	0x792	; 0x792 <_ZN12OrangutanLCD10moveCursorEhh>
     7ba:	08 95       	ret

000007bc <_ZN12OrangutanLCD10hideCursorEv>:
     7bc:	8c e0       	ldi	r24, 0x0C	; 12
     7be:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN12OrangutanLCD8send_cmdEh>
     7c2:	08 95       	ret

000007c4 <lcd_hide_cursor>:
     7c4:	0e 94 de 03 	call	0x7bc	; 0x7bc <_ZN12OrangutanLCD10hideCursorEv>
     7c8:	08 95       	ret

000007ca <_ZN12OrangutanLCD10showCursorEh>:
     7ca:	81 30       	cpi	r24, 0x01	; 1
     7cc:	11 f4       	brne	.+4      	; 0x7d2 <_ZN12OrangutanLCD10showCursorEh+0x8>
     7ce:	8f e0       	ldi	r24, 0x0F	; 15
     7d0:	01 c0       	rjmp	.+2      	; 0x7d4 <_ZN12OrangutanLCD10showCursorEh+0xa>
     7d2:	8e e0       	ldi	r24, 0x0E	; 14
     7d4:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN12OrangutanLCD8send_cmdEh>
     7d8:	08 95       	ret

000007da <lcd_show_cursor>:
     7da:	0e 94 e5 03 	call	0x7ca	; 0x7ca <_ZN12OrangutanLCD10showCursorEh>
     7de:	08 95       	ret

000007e0 <_ZN12OrangutanLCD6gotoXYEhh>:
     7e0:	a4 e0       	ldi	r26, 0x04	; 4
     7e2:	b0 e0       	ldi	r27, 0x00	; 0
     7e4:	e6 ef       	ldi	r30, 0xF6	; 246
     7e6:	f3 e0       	ldi	r31, 0x03	; 3
     7e8:	0c 94 04 08 	jmp	0x1008	; 0x1008 <__prologue_saves__+0x1c>
     7ec:	18 2f       	mov	r17, r24
     7ee:	06 2f       	mov	r16, r22
     7f0:	80 e8       	ldi	r24, 0x80	; 128
     7f2:	89 83       	std	Y+1, r24	; 0x01
     7f4:	80 ec       	ldi	r24, 0xC0	; 192
     7f6:	8a 83       	std	Y+2, r24	; 0x02
     7f8:	84 e9       	ldi	r24, 0x94	; 148
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	84 ed       	ldi	r24, 0xD4	; 212
     7fe:	8c 83       	std	Y+4, r24	; 0x04
     800:	fe 01       	movw	r30, r28
     802:	e6 0f       	add	r30, r22
     804:	f1 1d       	adc	r31, r1
     806:	81 81       	ldd	r24, Z+1	; 0x01
     808:	81 0f       	add	r24, r17
     80a:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN12OrangutanLCD8send_cmdEh>
     80e:	10 93 3d 01 	sts	0x013D, r17
     812:	00 93 3c 01 	sts	0x013C, r16
     816:	24 96       	adiw	r28, 0x04	; 4
     818:	e4 e0       	ldi	r30, 0x04	; 4
     81a:	0c 94 20 08 	jmp	0x1040	; 0x1040 <__epilogue_restores__+0x1c>

0000081e <lcd_goto_xy>:
     81e:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <_ZN12OrangutanLCD6gotoXYEhh>
     822:	08 95       	ret

00000824 <_ZN12OrangutanLCD5clearEv>:
     824:	81 e0       	ldi	r24, 0x01	; 1
     826:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN12OrangutanLCD8send_cmdEh>
     82a:	80 91 3a 01 	lds	r24, 0x013A
     82e:	90 91 3b 01 	lds	r25, 0x013B
     832:	89 2b       	or	r24, r25
     834:	19 f1       	breq	.+70     	; 0x87c <_ZN12OrangutanLCD5clearEv+0x58>
     836:	60 e0       	ldi	r22, 0x00	; 0
     838:	70 e2       	ldi	r23, 0x20	; 32
     83a:	08 c0       	rjmp	.+16     	; 0x84c <_ZN12OrangutanLCD5clearEv+0x28>
     83c:	e0 91 3a 01 	lds	r30, 0x013A
     840:	f0 91 3b 01 	lds	r31, 0x013B
     844:	e4 0f       	add	r30, r20
     846:	f5 1f       	adc	r31, r21
     848:	70 83       	st	Z, r23
     84a:	6f 5f       	subi	r22, 0xFF	; 255
     84c:	46 2f       	mov	r20, r22
     84e:	50 e0       	ldi	r21, 0x00	; 0
     850:	80 91 30 01 	lds	r24, 0x0130
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	01 97       	sbiw	r24, 0x01	; 1
     858:	20 91 31 01 	lds	r18, 0x0131
     85c:	30 e0       	ldi	r19, 0x00	; 0
     85e:	fc 01       	movw	r30, r24
     860:	e2 9f       	mul	r30, r18
     862:	c0 01       	movw	r24, r0
     864:	e3 9f       	mul	r30, r19
     866:	90 0d       	add	r25, r0
     868:	f2 9f       	mul	r31, r18
     86a:	90 0d       	add	r25, r0
     86c:	11 24       	eor	r1, r1
     86e:	48 17       	cp	r20, r24
     870:	59 07       	cpc	r21, r25
     872:	24 f3       	brlt	.-56     	; 0x83c <_ZN12OrangutanLCD5clearEv+0x18>
     874:	10 92 3d 01 	sts	0x013D, r1
     878:	10 92 3c 01 	sts	0x013C, r1
     87c:	08 95       	ret

0000087e <clear>:
     87e:	0e 94 12 04 	call	0x824	; 0x824 <_ZN12OrangutanLCD5clearEv>
     882:	08 95       	ret

00000884 <_ZN12OrangutanLCD9send_dataEh>:
     884:	61 e0       	ldi	r22, 0x01	; 1
     886:	42 e0       	ldi	r20, 0x02	; 2
     888:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN12OrangutanLCD4sendEhhh>
     88c:	08 95       	ret

0000088e <_ZN12OrangutanLCD11printBinaryEh>:
     88e:	0f 93       	push	r16
     890:	1f 93       	push	r17
     892:	cf 93       	push	r28
     894:	df 93       	push	r29
     896:	00 e0       	ldi	r16, 0x00	; 0
     898:	10 e8       	ldi	r17, 0x80	; 128
     89a:	c8 2f       	mov	r28, r24
     89c:	d0 e0       	ldi	r29, 0x00	; 0
     89e:	81 2f       	mov	r24, r17
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	8c 23       	and	r24, r28
     8a4:	9d 23       	and	r25, r29
     8a6:	89 2b       	or	r24, r25
     8a8:	11 f0       	breq	.+4      	; 0x8ae <_ZN12OrangutanLCD11printBinaryEh+0x20>
     8aa:	81 e3       	ldi	r24, 0x31	; 49
     8ac:	01 c0       	rjmp	.+2      	; 0x8b0 <_ZN12OrangutanLCD11printBinaryEh+0x22>
     8ae:	80 e3       	ldi	r24, 0x30	; 48
     8b0:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD9send_dataEh>
     8b4:	0f 5f       	subi	r16, 0xFF	; 255
     8b6:	08 30       	cpi	r16, 0x08	; 8
     8b8:	11 f0       	breq	.+4      	; 0x8be <_ZN12OrangutanLCD11printBinaryEh+0x30>
     8ba:	16 95       	lsr	r17
     8bc:	f0 cf       	rjmp	.-32     	; 0x89e <_ZN12OrangutanLCD11printBinaryEh+0x10>
     8be:	df 91       	pop	r29
     8c0:	cf 91       	pop	r28
     8c2:	1f 91       	pop	r17
     8c4:	0f 91       	pop	r16
     8c6:	08 95       	ret

000008c8 <print_binary>:
     8c8:	0e 94 47 04 	call	0x88e	; 0x88e <_ZN12OrangutanLCD11printBinaryEh>
     8cc:	08 95       	ret

000008ce <_ZN12OrangutanLCD14printHexNibbleEh>:
     8ce:	8a 30       	cpi	r24, 0x0A	; 10
     8d0:	10 f4       	brcc	.+4      	; 0x8d6 <_ZN12OrangutanLCD14printHexNibbleEh+0x8>
     8d2:	80 5d       	subi	r24, 0xD0	; 208
     8d4:	01 c0       	rjmp	.+2      	; 0x8d8 <_ZN12OrangutanLCD14printHexNibbleEh+0xa>
     8d6:	89 5c       	subi	r24, 0xC9	; 201
     8d8:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD9send_dataEh>
     8dc:	08 95       	ret

000008de <_ZN12OrangutanLCD8printHexEh>:
     8de:	1f 93       	push	r17
     8e0:	18 2f       	mov	r17, r24
     8e2:	82 95       	swap	r24
     8e4:	8f 70       	andi	r24, 0x0F	; 15
     8e6:	0e 94 67 04 	call	0x8ce	; 0x8ce <_ZN12OrangutanLCD14printHexNibbleEh>
     8ea:	81 2f       	mov	r24, r17
     8ec:	8f 70       	andi	r24, 0x0F	; 15
     8ee:	0e 94 67 04 	call	0x8ce	; 0x8ce <_ZN12OrangutanLCD14printHexNibbleEh>
     8f2:	1f 91       	pop	r17
     8f4:	08 95       	ret

000008f6 <_ZN12OrangutanLCD8printHexEj>:
     8f6:	1f 93       	push	r17
     8f8:	18 2f       	mov	r17, r24
     8fa:	89 2f       	mov	r24, r25
     8fc:	0e 94 6f 04 	call	0x8de	; 0x8de <_ZN12OrangutanLCD8printHexEh>
     900:	81 2f       	mov	r24, r17
     902:	0e 94 6f 04 	call	0x8de	; 0x8de <_ZN12OrangutanLCD8printHexEh>
     906:	1f 91       	pop	r17
     908:	08 95       	ret

0000090a <print_hex>:
     90a:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <_ZN12OrangutanLCD8printHexEj>
     90e:	08 95       	ret

00000910 <print_hex_byte>:
     910:	0e 94 6f 04 	call	0x8de	; 0x8de <_ZN12OrangutanLCD8printHexEh>
     914:	08 95       	ret

00000916 <_ZN12OrangutanLCD5printEm>:
     916:	6f 92       	push	r6
     918:	7f 92       	push	r7
     91a:	8f 92       	push	r8
     91c:	9f 92       	push	r9
     91e:	af 92       	push	r10
     920:	bf 92       	push	r11
     922:	cf 92       	push	r12
     924:	df 92       	push	r13
     926:	ff 92       	push	r15
     928:	0f 93       	push	r16
     92a:	df 93       	push	r29
     92c:	cf 93       	push	r28
     92e:	cd b7       	in	r28, 0x3d	; 61
     930:	de b7       	in	r29, 0x3e	; 62
     932:	2a 97       	sbiw	r28, 0x0a	; 10
     934:	0f b6       	in	r0, 0x3f	; 63
     936:	f8 94       	cli
     938:	de bf       	out	0x3e, r29	; 62
     93a:	0f be       	out	0x3f, r0	; 63
     93c:	cd bf       	out	0x3d, r28	; 61
     93e:	5b 01       	movw	r10, r22
     940:	6c 01       	movw	r12, r24
     942:	0a e0       	ldi	r16, 0x0A	; 10
     944:	3e 01       	movw	r6, r28
     946:	08 94       	sec
     948:	61 1c       	adc	r6, r1
     94a:	71 1c       	adc	r7, r1
     94c:	fa 2c       	mov	r15, r10
     94e:	c6 01       	movw	r24, r12
     950:	b5 01       	movw	r22, r10
     952:	2a e0       	ldi	r18, 0x0A	; 10
     954:	30 e0       	ldi	r19, 0x00	; 0
     956:	40 e0       	ldi	r20, 0x00	; 0
     958:	50 e0       	ldi	r21, 0x00	; 0
     95a:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <__udivmodsi4>
     95e:	c9 01       	movw	r24, r18
     960:	da 01       	movw	r26, r20
     962:	5c 01       	movw	r10, r24
     964:	6d 01       	movw	r12, r26
     966:	01 50       	subi	r16, 0x01	; 1
     968:	43 01       	movw	r8, r6
     96a:	80 0e       	add	r8, r16
     96c:	91 1c       	adc	r9, r1
     96e:	80 e3       	ldi	r24, 0x30	; 48
     970:	f8 0e       	add	r15, r24
     972:	c6 01       	movw	r24, r12
     974:	b5 01       	movw	r22, r10
     976:	2a e0       	ldi	r18, 0x0A	; 10
     978:	30 e0       	ldi	r19, 0x00	; 0
     97a:	40 e0       	ldi	r20, 0x00	; 0
     97c:	50 e0       	ldi	r21, 0x00	; 0
     97e:	0e 94 a2 07 	call	0xf44	; 0xf44 <__mulsi3>
     982:	f6 1a       	sub	r15, r22
     984:	f4 01       	movw	r30, r8
     986:	f0 82       	st	Z, r15
     988:	a1 14       	cp	r10, r1
     98a:	b1 04       	cpc	r11, r1
     98c:	c1 04       	cpc	r12, r1
     98e:	d1 04       	cpc	r13, r1
     990:	e9 f6       	brne	.-70     	; 0x94c <_ZN12OrangutanLCD5printEm+0x36>
     992:	08 c0       	rjmp	.+16     	; 0x9a4 <_ZN12OrangutanLCD5printEm+0x8e>
     994:	f6 01       	movw	r30, r12
     996:	e0 0f       	add	r30, r16
     998:	f1 1d       	adc	r31, r1
     99a:	80 81       	ld	r24, Z
     99c:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD9send_dataEh>
     9a0:	0f 5f       	subi	r16, 0xFF	; 255
     9a2:	04 c0       	rjmp	.+8      	; 0x9ac <_ZN12OrangutanLCD5printEm+0x96>
     9a4:	6e 01       	movw	r12, r28
     9a6:	08 94       	sec
     9a8:	c1 1c       	adc	r12, r1
     9aa:	d1 1c       	adc	r13, r1
     9ac:	0a 30       	cpi	r16, 0x0A	; 10
     9ae:	90 f3       	brcs	.-28     	; 0x994 <_ZN12OrangutanLCD5printEm+0x7e>
     9b0:	2a 96       	adiw	r28, 0x0a	; 10
     9b2:	0f b6       	in	r0, 0x3f	; 63
     9b4:	f8 94       	cli
     9b6:	de bf       	out	0x3e, r29	; 62
     9b8:	0f be       	out	0x3f, r0	; 63
     9ba:	cd bf       	out	0x3d, r28	; 61
     9bc:	cf 91       	pop	r28
     9be:	df 91       	pop	r29
     9c0:	0f 91       	pop	r16
     9c2:	ff 90       	pop	r15
     9c4:	df 90       	pop	r13
     9c6:	cf 90       	pop	r12
     9c8:	bf 90       	pop	r11
     9ca:	af 90       	pop	r10
     9cc:	9f 90       	pop	r9
     9ce:	8f 90       	pop	r8
     9d0:	7f 90       	pop	r7
     9d2:	6f 90       	pop	r6
     9d4:	08 95       	ret

000009d6 <print_unsigned_long>:
     9d6:	0e 94 8b 04 	call	0x916	; 0x916 <_ZN12OrangutanLCD5printEm>
     9da:	08 95       	ret

000009dc <_ZN12OrangutanLCD5printEl>:
     9dc:	ef 92       	push	r14
     9de:	ff 92       	push	r15
     9e0:	0f 93       	push	r16
     9e2:	1f 93       	push	r17
     9e4:	7b 01       	movw	r14, r22
     9e6:	8c 01       	movw	r16, r24
     9e8:	97 ff       	sbrs	r25, 7
     9ea:	0b c0       	rjmp	.+22     	; 0xa02 <_ZN12OrangutanLCD5printEl+0x26>
     9ec:	10 95       	com	r17
     9ee:	00 95       	com	r16
     9f0:	f0 94       	com	r15
     9f2:	e0 94       	com	r14
     9f4:	e1 1c       	adc	r14, r1
     9f6:	f1 1c       	adc	r15, r1
     9f8:	01 1d       	adc	r16, r1
     9fa:	11 1d       	adc	r17, r1
     9fc:	8d e2       	ldi	r24, 0x2D	; 45
     9fe:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD9send_dataEh>
     a02:	c8 01       	movw	r24, r16
     a04:	b7 01       	movw	r22, r14
     a06:	0e 94 8b 04 	call	0x916	; 0x916 <_ZN12OrangutanLCD5printEm>
     a0a:	1f 91       	pop	r17
     a0c:	0f 91       	pop	r16
     a0e:	ff 90       	pop	r15
     a10:	ef 90       	pop	r14
     a12:	08 95       	ret

00000a14 <print_long>:
     a14:	0e 94 ee 04 	call	0x9dc	; 0x9dc <_ZN12OrangutanLCD5printEl>
     a18:	08 95       	ret

00000a1a <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>:
     a1a:	cf 93       	push	r28
     a1c:	df 93       	push	r29
     a1e:	ec 01       	movw	r28, r24
     a20:	03 c0       	rjmp	.+6      	; 0xa28 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0xe>
     a22:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD9send_dataEh>
     a26:	21 96       	adiw	r28, 0x01	; 1
     a28:	fe 01       	movw	r30, r28
     a2a:	84 91       	lpm	r24, Z+
     a2c:	88 23       	and	r24, r24
     a2e:	c9 f7       	brne	.-14     	; 0xa22 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0x8>
     a30:	df 91       	pop	r29
     a32:	cf 91       	pop	r28
     a34:	08 95       	ret

00000a36 <print_from_program_space>:
     a36:	0e 94 0d 05 	call	0xa1a	; 0xa1a <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>
     a3a:	08 95       	ret

00000a3c <_ZN12OrangutanLCD5printEPKc>:
     a3c:	cf 93       	push	r28
     a3e:	df 93       	push	r29
     a40:	ec 01       	movw	r28, r24
     a42:	03 c0       	rjmp	.+6      	; 0xa4a <_ZN12OrangutanLCD5printEPKc+0xe>
     a44:	21 96       	adiw	r28, 0x01	; 1
     a46:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD9send_dataEh>
     a4a:	88 81       	ld	r24, Y
     a4c:	88 23       	and	r24, r24
     a4e:	d1 f7       	brne	.-12     	; 0xa44 <_ZN12OrangutanLCD5printEPKc+0x8>
     a50:	df 91       	pop	r29
     a52:	cf 91       	pop	r28
     a54:	08 95       	ret

00000a56 <print>:
     a56:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_ZN12OrangutanLCD5printEPKc>
     a5a:	08 95       	ret

00000a5c <_ZN12OrangutanLCD5printEc>:
     a5c:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD9send_dataEh>
     a60:	08 95       	ret

00000a62 <print_character>:
     a62:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD9send_dataEh>
     a66:	08 95       	ret

00000a68 <lcd_putchar>:
     a68:	a0 e0       	ldi	r26, 0x00	; 0
     a6a:	b0 e0       	ldi	r27, 0x00	; 0
     a6c:	ea e3       	ldi	r30, 0x3A	; 58
     a6e:	f5 e0       	ldi	r31, 0x05	; 5
     a70:	0c 94 00 08 	jmp	0x1000	; 0x1000 <__prologue_saves__+0x14>
     a74:	e8 2e       	mov	r14, r24
     a76:	80 91 3a 01 	lds	r24, 0x013A
     a7a:	90 91 3b 01 	lds	r25, 0x013B
     a7e:	89 2b       	or	r24, r25
     a80:	09 f4       	brne	.+2      	; 0xa84 <lcd_putchar+0x1c>
     a82:	05 c1       	rjmp	.+522    	; 0xc8e <lcd_putchar+0x226>
     a84:	2a e0       	ldi	r18, 0x0A	; 10
     a86:	e2 16       	cp	r14, r18
     a88:	09 f4       	brne	.+2      	; 0xa8c <lcd_putchar+0x24>
     a8a:	46 c0       	rjmp	.+140    	; 0xb18 <lcd_putchar+0xb0>
     a8c:	38 e0       	ldi	r19, 0x08	; 8
     a8e:	e3 16       	cp	r14, r19
     a90:	c9 f4       	brne	.+50     	; 0xac4 <lcd_putchar+0x5c>
     a92:	80 91 3d 01 	lds	r24, 0x013D
     a96:	81 50       	subi	r24, 0x01	; 1
     a98:	80 93 3d 01 	sts	0x013D, r24
     a9c:	8f 3f       	cpi	r24, 0xFF	; 255
     a9e:	51 f4       	brne	.+20     	; 0xab4 <lcd_putchar+0x4c>
     aa0:	80 91 3c 01 	lds	r24, 0x013C
     aa4:	81 50       	subi	r24, 0x01	; 1
     aa6:	80 93 3c 01 	sts	0x013C, r24
     aaa:	80 91 31 01 	lds	r24, 0x0131
     aae:	81 50       	subi	r24, 0x01	; 1
     ab0:	80 93 3d 01 	sts	0x013D, r24
     ab4:	80 91 3c 01 	lds	r24, 0x013C
     ab8:	8f 3f       	cpi	r24, 0xFF	; 255
     aba:	09 f0       	breq	.+2      	; 0xabe <lcd_putchar+0x56>
     abc:	e2 c0       	rjmp	.+452    	; 0xc82 <lcd_putchar+0x21a>
     abe:	10 92 3c 01 	sts	0x013C, r1
     ac2:	dd c0       	rjmp	.+442    	; 0xc7e <lcd_putchar+0x216>
     ac4:	8e 2d       	mov	r24, r14
     ac6:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD9send_dataEh>
     aca:	20 91 3c 01 	lds	r18, 0x013C
     ace:	22 23       	and	r18, r18
     ad0:	c9 f0       	breq	.+50     	; 0xb04 <lcd_putchar+0x9c>
     ad2:	30 e0       	ldi	r19, 0x00	; 0
     ad4:	21 50       	subi	r18, 0x01	; 1
     ad6:	30 40       	sbci	r19, 0x00	; 0
     ad8:	80 91 31 01 	lds	r24, 0x0131
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	ac 01       	movw	r20, r24
     ae0:	24 9f       	mul	r18, r20
     ae2:	c0 01       	movw	r24, r0
     ae4:	25 9f       	mul	r18, r21
     ae6:	90 0d       	add	r25, r0
     ae8:	34 9f       	mul	r19, r20
     aea:	90 0d       	add	r25, r0
     aec:	11 24       	eor	r1, r1
     aee:	20 91 3d 01 	lds	r18, 0x013D
     af2:	e0 91 3a 01 	lds	r30, 0x013A
     af6:	f0 91 3b 01 	lds	r31, 0x013B
     afa:	e8 0f       	add	r30, r24
     afc:	f9 1f       	adc	r31, r25
     afe:	e2 0f       	add	r30, r18
     b00:	f1 1d       	adc	r31, r1
     b02:	e0 82       	st	Z, r14
     b04:	80 91 3d 01 	lds	r24, 0x013D
     b08:	8f 5f       	subi	r24, 0xFF	; 255
     b0a:	80 93 3d 01 	sts	0x013D, r24
     b0e:	90 91 31 01 	lds	r25, 0x0131
     b12:	89 17       	cp	r24, r25
     b14:	09 f0       	breq	.+2      	; 0xb18 <lcd_putchar+0xb0>
     b16:	bb c0       	rjmp	.+374    	; 0xc8e <lcd_putchar+0x226>
     b18:	40 91 3c 01 	lds	r20, 0x013C
     b1c:	24 2f       	mov	r18, r20
     b1e:	30 e0       	ldi	r19, 0x00	; 0
     b20:	80 91 30 01 	lds	r24, 0x0130
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	01 97       	sbiw	r24, 0x01	; 1
     b28:	28 17       	cp	r18, r24
     b2a:	39 07       	cpc	r19, r25
     b2c:	09 f0       	breq	.+2      	; 0xb30 <lcd_putchar+0xc8>
     b2e:	a4 c0       	rjmp	.+328    	; 0xc78 <lcd_putchar+0x210>
     b30:	c0 e0       	ldi	r28, 0x00	; 0
     b32:	d0 e0       	ldi	r29, 0x00	; 0
     b34:	44 c0       	rjmp	.+136    	; 0xbbe <lcd_putchar+0x156>
     b36:	80 e0       	ldi	r24, 0x00	; 0
     b38:	6c 2f       	mov	r22, r28
     b3a:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <_ZN12OrangutanLCD6gotoXYEhh>
     b3e:	ff 24       	eor	r15, r15
     b40:	6e 01       	movw	r12, r28
     b42:	08 94       	sec
     b44:	c1 1c       	adc	r12, r1
     b46:	d1 1c       	adc	r13, r1
     b48:	35 c0       	rjmp	.+106    	; 0xbb4 <lcd_putchar+0x14c>
     b4a:	0f 2d       	mov	r16, r15
     b4c:	10 e0       	ldi	r17, 0x00	; 0
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	9c 01       	movw	r18, r24
     b52:	c2 9f       	mul	r28, r18
     b54:	c0 01       	movw	r24, r0
     b56:	c3 9f       	mul	r28, r19
     b58:	90 0d       	add	r25, r0
     b5a:	d2 9f       	mul	r29, r18
     b5c:	90 0d       	add	r25, r0
     b5e:	11 24       	eor	r1, r1
     b60:	e0 91 3a 01 	lds	r30, 0x013A
     b64:	f0 91 3b 01 	lds	r31, 0x013B
     b68:	e0 0f       	add	r30, r16
     b6a:	f1 1f       	adc	r31, r17
     b6c:	e8 0f       	add	r30, r24
     b6e:	f9 1f       	adc	r31, r25
     b70:	80 81       	ld	r24, Z
     b72:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD9send_dataEh>
     b76:	e0 91 3a 01 	lds	r30, 0x013A
     b7a:	f0 91 3b 01 	lds	r31, 0x013B
     b7e:	80 91 31 01 	lds	r24, 0x0131
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	c8 9f       	mul	r28, r24
     b86:	d0 01       	movw	r26, r0
     b88:	c9 9f       	mul	r28, r25
     b8a:	b0 0d       	add	r27, r0
     b8c:	d8 9f       	mul	r29, r24
     b8e:	b0 0d       	add	r27, r0
     b90:	11 24       	eor	r1, r1
     b92:	e0 0f       	add	r30, r16
     b94:	f1 1f       	adc	r31, r17
     b96:	ae 0f       	add	r26, r30
     b98:	bf 1f       	adc	r27, r31
     b9a:	ac 01       	movw	r20, r24
     b9c:	c4 9e       	mul	r12, r20
     b9e:	c0 01       	movw	r24, r0
     ba0:	c5 9e       	mul	r12, r21
     ba2:	90 0d       	add	r25, r0
     ba4:	d4 9e       	mul	r13, r20
     ba6:	90 0d       	add	r25, r0
     ba8:	11 24       	eor	r1, r1
     baa:	e8 0f       	add	r30, r24
     bac:	f9 1f       	adc	r31, r25
     bae:	80 81       	ld	r24, Z
     bb0:	8c 93       	st	X, r24
     bb2:	f3 94       	inc	r15
     bb4:	80 91 31 01 	lds	r24, 0x0131
     bb8:	f8 16       	cp	r15, r24
     bba:	38 f2       	brcs	.-114    	; 0xb4a <lcd_putchar+0xe2>
     bbc:	e6 01       	movw	r28, r12
     bbe:	60 91 30 01 	lds	r22, 0x0130
     bc2:	86 2f       	mov	r24, r22
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	02 97       	sbiw	r24, 0x02	; 2
     bc8:	c8 17       	cp	r28, r24
     bca:	d9 07       	cpc	r29, r25
     bcc:	0c f4       	brge	.+2      	; 0xbd0 <lcd_putchar+0x168>
     bce:	b3 cf       	rjmp	.-154    	; 0xb36 <lcd_putchar+0xce>
     bd0:	62 30       	cpi	r22, 0x02	; 2
     bd2:	08 f4       	brcc	.+2      	; 0xbd6 <lcd_putchar+0x16e>
     bd4:	40 c0       	rjmp	.+128    	; 0xc56 <lcd_putchar+0x1ee>
     bd6:	62 50       	subi	r22, 0x02	; 2
     bd8:	80 e0       	ldi	r24, 0x00	; 0
     bda:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <_ZN12OrangutanLCD6gotoXYEhh>
     bde:	ff 24       	eor	r15, r15
     be0:	40 e2       	ldi	r20, 0x20	; 32
     be2:	d4 2e       	mov	r13, r20
     be4:	34 c0       	rjmp	.+104    	; 0xc4e <lcd_putchar+0x1e6>
     be6:	0f 2d       	mov	r16, r15
     be8:	10 e0       	ldi	r17, 0x00	; 0
     bea:	80 91 30 01 	lds	r24, 0x0130
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	02 97       	sbiw	r24, 0x02	; 2
     bf2:	30 e0       	ldi	r19, 0x00	; 0
     bf4:	ac 01       	movw	r20, r24
     bf6:	42 9f       	mul	r20, r18
     bf8:	c0 01       	movw	r24, r0
     bfa:	43 9f       	mul	r20, r19
     bfc:	90 0d       	add	r25, r0
     bfe:	52 9f       	mul	r21, r18
     c00:	90 0d       	add	r25, r0
     c02:	11 24       	eor	r1, r1
     c04:	e0 91 3a 01 	lds	r30, 0x013A
     c08:	f0 91 3b 01 	lds	r31, 0x013B
     c0c:	e0 0f       	add	r30, r16
     c0e:	f1 1f       	adc	r31, r17
     c10:	e8 0f       	add	r30, r24
     c12:	f9 1f       	adc	r31, r25
     c14:	80 81       	ld	r24, Z
     c16:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD9send_dataEh>
     c1a:	20 91 30 01 	lds	r18, 0x0130
     c1e:	30 e0       	ldi	r19, 0x00	; 0
     c20:	22 50       	subi	r18, 0x02	; 2
     c22:	30 40       	sbci	r19, 0x00	; 0
     c24:	80 91 31 01 	lds	r24, 0x0131
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	ac 01       	movw	r20, r24
     c2c:	24 9f       	mul	r18, r20
     c2e:	c0 01       	movw	r24, r0
     c30:	25 9f       	mul	r18, r21
     c32:	90 0d       	add	r25, r0
     c34:	34 9f       	mul	r19, r20
     c36:	90 0d       	add	r25, r0
     c38:	11 24       	eor	r1, r1
     c3a:	e0 91 3a 01 	lds	r30, 0x013A
     c3e:	f0 91 3b 01 	lds	r31, 0x013B
     c42:	e0 0f       	add	r30, r16
     c44:	f1 1f       	adc	r31, r17
     c46:	e8 0f       	add	r30, r24
     c48:	f9 1f       	adc	r31, r25
     c4a:	d0 82       	st	Z, r13
     c4c:	f3 94       	inc	r15
     c4e:	20 91 31 01 	lds	r18, 0x0131
     c52:	f2 16       	cp	r15, r18
     c54:	40 f2       	brcs	.-112    	; 0xbe6 <lcd_putchar+0x17e>
     c56:	60 91 30 01 	lds	r22, 0x0130
     c5a:	61 50       	subi	r22, 0x01	; 1
     c5c:	80 e0       	ldi	r24, 0x00	; 0
     c5e:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <_ZN12OrangutanLCD6gotoXYEhh>
     c62:	00 e0       	ldi	r16, 0x00	; 0
     c64:	04 c0       	rjmp	.+8      	; 0xc6e <lcd_putchar+0x206>
     c66:	80 e2       	ldi	r24, 0x20	; 32
     c68:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD9send_dataEh>
     c6c:	0f 5f       	subi	r16, 0xFF	; 255
     c6e:	80 91 31 01 	lds	r24, 0x0131
     c72:	08 17       	cp	r16, r24
     c74:	c0 f3       	brcs	.-16     	; 0xc66 <lcd_putchar+0x1fe>
     c76:	03 c0       	rjmp	.+6      	; 0xc7e <lcd_putchar+0x216>
     c78:	4f 5f       	subi	r20, 0xFF	; 255
     c7a:	40 93 3c 01 	sts	0x013C, r20
     c7e:	10 92 3d 01 	sts	0x013D, r1
     c82:	80 91 3d 01 	lds	r24, 0x013D
     c86:	60 91 3c 01 	lds	r22, 0x013C
     c8a:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <_ZN12OrangutanLCD6gotoXYEhh>
     c8e:	2e 2d       	mov	r18, r14
     c90:	33 27       	eor	r19, r19
     c92:	27 fd       	sbrc	r18, 7
     c94:	30 95       	com	r19
     c96:	c9 01       	movw	r24, r18
     c98:	cd b7       	in	r28, 0x3d	; 61
     c9a:	de b7       	in	r29, 0x3e	; 62
     c9c:	e8 e0       	ldi	r30, 0x08	; 8
     c9e:	0c 94 1c 08 	jmp	0x1038	; 0x1038 <__epilogue_restores__+0x14>

00000ca2 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
     ca2:	ef 92       	push	r14
     ca4:	ff 92       	push	r15
     ca6:	0f 93       	push	r16
     ca8:	1f 93       	push	r17
     caa:	cf 93       	push	r28
     cac:	df 93       	push	r29
     cae:	7c 01       	movw	r14, r24
     cb0:	06 2f       	mov	r16, r22
     cb2:	10 e0       	ldi	r17, 0x00	; 0
     cb4:	53 e0       	ldi	r21, 0x03	; 3
     cb6:	00 0f       	add	r16, r16
     cb8:	11 1f       	adc	r17, r17
     cba:	5a 95       	dec	r21
     cbc:	e1 f7       	brne	.-8      	; 0xcb6 <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x14>
     cbe:	c0 e0       	ldi	r28, 0x00	; 0
     cc0:	d0 e0       	ldi	r29, 0x00	; 0
     cc2:	9e 01       	movw	r18, r28
     cc4:	20 0f       	add	r18, r16
     cc6:	82 2f       	mov	r24, r18
     cc8:	80 64       	ori	r24, 0x40	; 64
     cca:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN12OrangutanLCD8send_cmdEh>
     cce:	f7 01       	movw	r30, r14
     cd0:	ec 0f       	add	r30, r28
     cd2:	fd 1f       	adc	r31, r29
     cd4:	e4 91       	lpm	r30, Z+
     cd6:	8e 2f       	mov	r24, r30
     cd8:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD9send_dataEh>
     cdc:	21 96       	adiw	r28, 0x01	; 1
     cde:	c8 30       	cpi	r28, 0x08	; 8
     ce0:	d1 05       	cpc	r29, r1
     ce2:	79 f7       	brne	.-34     	; 0xcc2 <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x20>
     ce4:	cd b7       	in	r28, 0x3d	; 61
     ce6:	de b7       	in	r29, 0x3e	; 62
     ce8:	e6 e0       	ldi	r30, 0x06	; 6
     cea:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__epilogue_restores__+0x18>

00000cee <lcd_load_custom_character>:
     cee:	0e 94 51 06 	call	0xca2	; 0xca2 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
     cf2:	08 95       	ret

00000cf4 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     cf4:	60 e0       	ldi	r22, 0x00	; 0
     cf6:	41 e0       	ldi	r20, 0x01	; 1
     cf8:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN12OrangutanLCD4sendEhhh>
     cfc:	08 95       	ret

00000cfe <_ZN12OrangutanLCD6scrollEhhj>:
     cfe:	0f 93       	push	r16
     d00:	1f 93       	push	r17
     d02:	cf 93       	push	r28
     d04:	df 93       	push	r29
     d06:	08 2f       	mov	r16, r24
     d08:	16 2f       	mov	r17, r22
     d0a:	ea 01       	movw	r28, r20
     d0c:	0b c0       	rjmp	.+22     	; 0xd24 <_ZN12OrangutanLCD6scrollEhhj+0x26>
     d0e:	00 23       	and	r16, r16
     d10:	11 f4       	brne	.+4      	; 0xd16 <_ZN12OrangutanLCD6scrollEhhj+0x18>
     d12:	88 e1       	ldi	r24, 0x18	; 24
     d14:	01 c0       	rjmp	.+2      	; 0xd18 <_ZN12OrangutanLCD6scrollEhhj+0x1a>
     d16:	8c e1       	ldi	r24, 0x1C	; 28
     d18:	0e 94 c4 03 	call	0x788	; 0x788 <_ZN12OrangutanLCD8send_cmdEh>
     d1c:	ce 01       	movw	r24, r28
     d1e:	0e 94 07 07 	call	0xe0e	; 0xe0e <_ZN13OrangutanTime17delayMillisecondsEj>
     d22:	11 50       	subi	r17, 0x01	; 1
     d24:	11 23       	and	r17, r17
     d26:	99 f7       	brne	.-26     	; 0xd0e <_ZN12OrangutanLCD6scrollEhhj+0x10>
     d28:	df 91       	pop	r29
     d2a:	cf 91       	pop	r28
     d2c:	1f 91       	pop	r17
     d2e:	0f 91       	pop	r16
     d30:	08 95       	ret

00000d32 <lcd_scroll>:
     d32:	0e 94 7f 06 	call	0xcfe	; 0xcfe <_ZN12OrangutanLCD6scrollEhhj>
     d36:	08 95       	ret

00000d38 <__vector_11>:
     d38:	2f 92       	push	r2
     d3a:	8f 93       	push	r24
     d3c:	9f 93       	push	r25
     d3e:	2f b6       	in	r2, 0x3f	; 63
     d40:	80 91 44 01 	lds	r24, 0x0144
     d44:	90 91 45 01 	lds	r25, 0x0145
     d48:	01 96       	adiw	r24, 0x01	; 1
     d4a:	80 93 44 01 	sts	0x0144, r24
     d4e:	90 93 45 01 	sts	0x0145, r25
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	80 91 46 01 	lds	r24, 0x0146
     d58:	89 1f       	adc	r24, r25
     d5a:	80 93 46 01 	sts	0x0146, r24
     d5e:	90 91 4c 01 	lds	r25, 0x014C
     d62:	9c 5f       	subi	r25, 0xFC	; 252
     d64:	90 93 4c 01 	sts	0x014C, r25
     d68:	80 91 4b 01 	lds	r24, 0x014B
     d6c:	80 51       	subi	r24, 0x10	; 16
     d6e:	97 42       	sbci	r25, 0x27	; 39
     d70:	c0 f0       	brcs	.+48     	; 0xda2 <end>
     d72:	90 93 4c 01 	sts	0x014C, r25
     d76:	80 93 4b 01 	sts	0x014B, r24
     d7a:	80 91 47 01 	lds	r24, 0x0147
     d7e:	90 91 48 01 	lds	r25, 0x0148
     d82:	01 96       	adiw	r24, 0x01	; 1
     d84:	80 93 47 01 	sts	0x0147, r24
     d88:	90 93 48 01 	sts	0x0148, r25
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	80 91 49 01 	lds	r24, 0x0149
     d92:	89 1f       	adc	r24, r25
     d94:	80 93 49 01 	sts	0x0149, r24
     d98:	80 91 4a 01 	lds	r24, 0x014A
     d9c:	89 1f       	adc	r24, r25
     d9e:	80 93 4a 01 	sts	0x014A, r24

00000da2 <end>:
     da2:	2f be       	out	0x3f, r2	; 63
     da4:	9f 91       	pop	r25
     da6:	8f 91       	pop	r24
     da8:	2f 90       	pop	r2
     daa:	18 95       	reti

00000dac <ticks_to_microseconds>:
     dac:	6f 5f       	subi	r22, 0xFF	; 255
     dae:	7f 4f       	sbci	r23, 0xFF	; 255
     db0:	8f 4f       	sbci	r24, 0xFF	; 255
     db2:	9f 4f       	sbci	r25, 0xFF	; 255
     db4:	66 0f       	add	r22, r22
     db6:	77 1f       	adc	r23, r23
     db8:	88 1f       	adc	r24, r24
     dba:	99 1f       	adc	r25, r25
     dbc:	25 e0       	ldi	r18, 0x05	; 5
     dbe:	30 e0       	ldi	r19, 0x00	; 0
     dc0:	40 e0       	ldi	r20, 0x00	; 0
     dc2:	50 e0       	ldi	r21, 0x00	; 0
     dc4:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <__udivmodsi4>
     dc8:	ca 01       	movw	r24, r20
     dca:	b9 01       	movw	r22, r18
     dcc:	08 95       	ret

00000dce <delay_ms>:
     dce:	28 ee       	ldi	r18, 0xE8	; 232
     dd0:	33 e0       	ldi	r19, 0x03	; 3
     dd2:	09 c0       	rjmp	.+18     	; 0xde6 <delay_ms+0x18>
     dd4:	f9 01       	movw	r30, r18
     dd6:	6f 93       	push	r22
     dd8:	64 e0       	ldi	r22, 0x04	; 4
     dda:	6a 95       	dec	r22
     ddc:	f1 f7       	brne	.-4      	; 0xdda <delay_ms+0xc>
     dde:	6f 91       	pop	r22
     de0:	31 97       	sbiw	r30, 0x01	; 1
     de2:	c9 f7       	brne	.-14     	; 0xdd6 <delay_ms+0x8>
     de4:	01 97       	sbiw	r24, 0x01	; 1
     de6:	00 97       	sbiw	r24, 0x00	; 0
     de8:	a9 f7       	brne	.-22     	; 0xdd4 <delay_ms+0x6>
     dea:	08 95       	ret

00000dec <_ZN13OrangutanTime19ticksToMicrosecondsEm>:
     dec:	6f 5f       	subi	r22, 0xFF	; 255
     dee:	7f 4f       	sbci	r23, 0xFF	; 255
     df0:	8f 4f       	sbci	r24, 0xFF	; 255
     df2:	9f 4f       	sbci	r25, 0xFF	; 255
     df4:	66 0f       	add	r22, r22
     df6:	77 1f       	adc	r23, r23
     df8:	88 1f       	adc	r24, r24
     dfa:	99 1f       	adc	r25, r25
     dfc:	25 e0       	ldi	r18, 0x05	; 5
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	40 e0       	ldi	r20, 0x00	; 0
     e02:	50 e0       	ldi	r21, 0x00	; 0
     e04:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <__udivmodsi4>
     e08:	ca 01       	movw	r24, r20
     e0a:	b9 01       	movw	r22, r18
     e0c:	08 95       	ret

00000e0e <_ZN13OrangutanTime17delayMillisecondsEj>:
     e0e:	28 ee       	ldi	r18, 0xE8	; 232
     e10:	33 e0       	ldi	r19, 0x03	; 3
     e12:	09 c0       	rjmp	.+18     	; 0xe26 <_ZN13OrangutanTime17delayMillisecondsEj+0x18>
     e14:	f9 01       	movw	r30, r18
     e16:	6f 93       	push	r22
     e18:	64 e0       	ldi	r22, 0x04	; 4
     e1a:	6a 95       	dec	r22
     e1c:	f1 f7       	brne	.-4      	; 0xe1a <_ZN13OrangutanTime17delayMillisecondsEj+0xc>
     e1e:	6f 91       	pop	r22
     e20:	31 97       	sbiw	r30, 0x01	; 1
     e22:	c9 f7       	brne	.-14     	; 0xe16 <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
     e24:	01 97       	sbiw	r24, 0x01	; 1
     e26:	00 97       	sbiw	r24, 0x00	; 0
     e28:	a9 f7       	brne	.-22     	; 0xe14 <_ZN13OrangutanTime17delayMillisecondsEj+0x6>
     e2a:	08 95       	ret

00000e2c <_ZN13OrangutanTime5init2Ev>:
     e2c:	a0 e7       	ldi	r26, 0x70	; 112
     e2e:	b0 e0       	ldi	r27, 0x00	; 0
     e30:	8c 91       	ld	r24, X
     e32:	8e 7f       	andi	r24, 0xFE	; 254
     e34:	8c 93       	st	X, r24
     e36:	e0 eb       	ldi	r30, 0xB0	; 176
     e38:	f0 e0       	ldi	r31, 0x00	; 0
     e3a:	80 81       	ld	r24, Z
     e3c:	83 60       	ori	r24, 0x03	; 3
     e3e:	80 83       	st	Z, r24
     e40:	e1 eb       	ldi	r30, 0xB1	; 177
     e42:	f0 e0       	ldi	r31, 0x00	; 0
     e44:	80 81       	ld	r24, Z
     e46:	80 7f       	andi	r24, 0xF0	; 240
     e48:	80 83       	st	Z, r24
     e4a:	80 81       	ld	r24, Z
     e4c:	82 60       	ori	r24, 0x02	; 2
     e4e:	80 83       	st	Z, r24
     e50:	b8 9a       	sbi	0x17, 0	; 23
     e52:	8c 91       	ld	r24, X
     e54:	81 60       	ori	r24, 0x01	; 1
     e56:	8c 93       	st	X, r24
     e58:	78 94       	sei
     e5a:	08 95       	ret

00000e5c <_ZN13OrangutanTime4initEv>:
     e5c:	80 91 4d 01 	lds	r24, 0x014D
     e60:	88 23       	and	r24, r24
     e62:	29 f4       	brne	.+10     	; 0xe6e <_ZN13OrangutanTime4initEv+0x12>
     e64:	81 e0       	ldi	r24, 0x01	; 1
     e66:	80 93 4d 01 	sts	0x014D, r24
     e6a:	0e 94 16 07 	call	0xe2c	; 0xe2c <_ZN13OrangutanTime5init2Ev>
     e6e:	08 95       	ret

00000e70 <_ZN13OrangutanTime2msEv>:
     e70:	0e 94 2e 07 	call	0xe5c	; 0xe5c <_ZN13OrangutanTime4initEv>
     e74:	e0 e7       	ldi	r30, 0x70	; 112
     e76:	f0 e0       	ldi	r31, 0x00	; 0
     e78:	80 81       	ld	r24, Z
     e7a:	8e 7f       	andi	r24, 0xFE	; 254
     e7c:	80 83       	st	Z, r24
     e7e:	20 91 47 01 	lds	r18, 0x0147
     e82:	30 91 48 01 	lds	r19, 0x0148
     e86:	40 91 49 01 	lds	r20, 0x0149
     e8a:	50 91 4a 01 	lds	r21, 0x014A
     e8e:	80 81       	ld	r24, Z
     e90:	81 60       	ori	r24, 0x01	; 1
     e92:	80 83       	st	Z, r24
     e94:	b9 01       	movw	r22, r18
     e96:	ca 01       	movw	r24, r20
     e98:	08 95       	ret

00000e9a <get_ms>:
     e9a:	0e 94 38 07 	call	0xe70	; 0xe70 <_ZN13OrangutanTime2msEv>
     e9e:	08 95       	ret

00000ea0 <_ZN13OrangutanTime5ticksEv>:
     ea0:	0e 94 2e 07 	call	0xe5c	; 0xe5c <_ZN13OrangutanTime4initEv>
     ea4:	80 91 70 00 	lds	r24, 0x0070
     ea8:	8e 7f       	andi	r24, 0xFE	; 254
     eaa:	80 93 70 00 	sts	0x0070, r24
     eae:	60 91 b2 00 	lds	r22, 0x00B2
     eb2:	80 91 43 01 	lds	r24, 0x0143
     eb6:	90 91 44 01 	lds	r25, 0x0144
     eba:	a0 91 45 01 	lds	r26, 0x0145
     ebe:	b0 91 46 01 	lds	r27, 0x0146
     ec2:	b8 99       	sbic	0x17, 0	; 23
     ec4:	05 c0       	rjmp	.+10     	; 0xed0 <_ZN13OrangutanTime5ticksEv+0x30>
     ec6:	26 2f       	mov	r18, r22
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	40 e0       	ldi	r20, 0x00	; 0
     ecc:	50 e0       	ldi	r21, 0x00	; 0
     ece:	11 c0       	rjmp	.+34     	; 0xef2 <_ZN13OrangutanTime5ticksEv+0x52>
     ed0:	80 91 b2 00 	lds	r24, 0x00B2
     ed4:	20 91 43 01 	lds	r18, 0x0143
     ed8:	30 91 44 01 	lds	r19, 0x0144
     edc:	40 91 45 01 	lds	r20, 0x0145
     ee0:	50 91 46 01 	lds	r21, 0x0146
     ee4:	20 50       	subi	r18, 0x00	; 0
     ee6:	3f 4f       	sbci	r19, 0xFF	; 255
     ee8:	4f 4f       	sbci	r20, 0xFF	; 255
     eea:	5f 4f       	sbci	r21, 0xFF	; 255
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	a0 e0       	ldi	r26, 0x00	; 0
     ef0:	b0 e0       	ldi	r27, 0x00	; 0
     ef2:	28 2b       	or	r18, r24
     ef4:	39 2b       	or	r19, r25
     ef6:	4a 2b       	or	r20, r26
     ef8:	5b 2b       	or	r21, r27
     efa:	80 91 70 00 	lds	r24, 0x0070
     efe:	81 60       	ori	r24, 0x01	; 1
     f00:	80 93 70 00 	sts	0x0070, r24
     f04:	b9 01       	movw	r22, r18
     f06:	ca 01       	movw	r24, r20
     f08:	08 95       	ret

00000f0a <get_ticks>:
     f0a:	0e 94 50 07 	call	0xea0	; 0xea0 <_ZN13OrangutanTime5ticksEv>
     f0e:	08 95       	ret

00000f10 <_ZN13OrangutanTime5resetEv>:
     f10:	0e 94 2e 07 	call	0xe5c	; 0xe5c <_ZN13OrangutanTime4initEv>
     f14:	e0 e7       	ldi	r30, 0x70	; 112
     f16:	f0 e0       	ldi	r31, 0x00	; 0
     f18:	80 81       	ld	r24, Z
     f1a:	8e 7f       	andi	r24, 0xFE	; 254
     f1c:	80 83       	st	Z, r24
     f1e:	10 92 47 01 	sts	0x0147, r1
     f22:	10 92 48 01 	sts	0x0148, r1
     f26:	10 92 49 01 	sts	0x0149, r1
     f2a:	10 92 4a 01 	sts	0x014A, r1
     f2e:	10 92 4c 01 	sts	0x014C, r1
     f32:	10 92 4b 01 	sts	0x014B, r1
     f36:	80 81       	ld	r24, Z
     f38:	81 60       	ori	r24, 0x01	; 1
     f3a:	80 83       	st	Z, r24
     f3c:	08 95       	ret

00000f3e <time_reset>:
     f3e:	0e 94 88 07 	call	0xf10	; 0xf10 <_ZN13OrangutanTime5resetEv>
     f42:	08 95       	ret

00000f44 <__mulsi3>:
     f44:	62 9f       	mul	r22, r18
     f46:	d0 01       	movw	r26, r0
     f48:	73 9f       	mul	r23, r19
     f4a:	f0 01       	movw	r30, r0
     f4c:	82 9f       	mul	r24, r18
     f4e:	e0 0d       	add	r30, r0
     f50:	f1 1d       	adc	r31, r1
     f52:	64 9f       	mul	r22, r20
     f54:	e0 0d       	add	r30, r0
     f56:	f1 1d       	adc	r31, r1
     f58:	92 9f       	mul	r25, r18
     f5a:	f0 0d       	add	r31, r0
     f5c:	83 9f       	mul	r24, r19
     f5e:	f0 0d       	add	r31, r0
     f60:	74 9f       	mul	r23, r20
     f62:	f0 0d       	add	r31, r0
     f64:	65 9f       	mul	r22, r21
     f66:	f0 0d       	add	r31, r0
     f68:	99 27       	eor	r25, r25
     f6a:	72 9f       	mul	r23, r18
     f6c:	b0 0d       	add	r27, r0
     f6e:	e1 1d       	adc	r30, r1
     f70:	f9 1f       	adc	r31, r25
     f72:	63 9f       	mul	r22, r19
     f74:	b0 0d       	add	r27, r0
     f76:	e1 1d       	adc	r30, r1
     f78:	f9 1f       	adc	r31, r25
     f7a:	bd 01       	movw	r22, r26
     f7c:	cf 01       	movw	r24, r30
     f7e:	11 24       	eor	r1, r1
     f80:	08 95       	ret

00000f82 <__divmodhi4>:
     f82:	97 fb       	bst	r25, 7
     f84:	09 2e       	mov	r0, r25
     f86:	07 26       	eor	r0, r23
     f88:	0a d0       	rcall	.+20     	; 0xf9e <__divmodhi4_neg1>
     f8a:	77 fd       	sbrc	r23, 7
     f8c:	04 d0       	rcall	.+8      	; 0xf96 <__divmodhi4_neg2>
     f8e:	65 d0       	rcall	.+202    	; 0x105a <__udivmodhi4>
     f90:	06 d0       	rcall	.+12     	; 0xf9e <__divmodhi4_neg1>
     f92:	00 20       	and	r0, r0
     f94:	1a f4       	brpl	.+6      	; 0xf9c <__divmodhi4_exit>

00000f96 <__divmodhi4_neg2>:
     f96:	70 95       	com	r23
     f98:	61 95       	neg	r22
     f9a:	7f 4f       	sbci	r23, 0xFF	; 255

00000f9c <__divmodhi4_exit>:
     f9c:	08 95       	ret

00000f9e <__divmodhi4_neg1>:
     f9e:	f6 f7       	brtc	.-4      	; 0xf9c <__divmodhi4_exit>
     fa0:	90 95       	com	r25
     fa2:	81 95       	neg	r24
     fa4:	9f 4f       	sbci	r25, 0xFF	; 255
     fa6:	08 95       	ret

00000fa8 <__udivmodsi4>:
     fa8:	a1 e2       	ldi	r26, 0x21	; 33
     faa:	1a 2e       	mov	r1, r26
     fac:	aa 1b       	sub	r26, r26
     fae:	bb 1b       	sub	r27, r27
     fb0:	fd 01       	movw	r30, r26
     fb2:	0d c0       	rjmp	.+26     	; 0xfce <__udivmodsi4_ep>

00000fb4 <__udivmodsi4_loop>:
     fb4:	aa 1f       	adc	r26, r26
     fb6:	bb 1f       	adc	r27, r27
     fb8:	ee 1f       	adc	r30, r30
     fba:	ff 1f       	adc	r31, r31
     fbc:	a2 17       	cp	r26, r18
     fbe:	b3 07       	cpc	r27, r19
     fc0:	e4 07       	cpc	r30, r20
     fc2:	f5 07       	cpc	r31, r21
     fc4:	20 f0       	brcs	.+8      	; 0xfce <__udivmodsi4_ep>
     fc6:	a2 1b       	sub	r26, r18
     fc8:	b3 0b       	sbc	r27, r19
     fca:	e4 0b       	sbc	r30, r20
     fcc:	f5 0b       	sbc	r31, r21

00000fce <__udivmodsi4_ep>:
     fce:	66 1f       	adc	r22, r22
     fd0:	77 1f       	adc	r23, r23
     fd2:	88 1f       	adc	r24, r24
     fd4:	99 1f       	adc	r25, r25
     fd6:	1a 94       	dec	r1
     fd8:	69 f7       	brne	.-38     	; 0xfb4 <__udivmodsi4_loop>
     fda:	60 95       	com	r22
     fdc:	70 95       	com	r23
     fde:	80 95       	com	r24
     fe0:	90 95       	com	r25
     fe2:	9b 01       	movw	r18, r22
     fe4:	ac 01       	movw	r20, r24
     fe6:	bd 01       	movw	r22, r26
     fe8:	cf 01       	movw	r24, r30
     fea:	08 95       	ret

00000fec <__prologue_saves__>:
     fec:	2f 92       	push	r2
     fee:	3f 92       	push	r3
     ff0:	4f 92       	push	r4
     ff2:	5f 92       	push	r5
     ff4:	6f 92       	push	r6
     ff6:	7f 92       	push	r7
     ff8:	8f 92       	push	r8
     ffa:	9f 92       	push	r9
     ffc:	af 92       	push	r10
     ffe:	bf 92       	push	r11
    1000:	cf 92       	push	r12
    1002:	df 92       	push	r13
    1004:	ef 92       	push	r14
    1006:	ff 92       	push	r15
    1008:	0f 93       	push	r16
    100a:	1f 93       	push	r17
    100c:	cf 93       	push	r28
    100e:	df 93       	push	r29
    1010:	cd b7       	in	r28, 0x3d	; 61
    1012:	de b7       	in	r29, 0x3e	; 62
    1014:	ca 1b       	sub	r28, r26
    1016:	db 0b       	sbc	r29, r27
    1018:	0f b6       	in	r0, 0x3f	; 63
    101a:	f8 94       	cli
    101c:	de bf       	out	0x3e, r29	; 62
    101e:	0f be       	out	0x3f, r0	; 63
    1020:	cd bf       	out	0x3d, r28	; 61
    1022:	09 94       	ijmp

00001024 <__epilogue_restores__>:
    1024:	2a 88       	ldd	r2, Y+18	; 0x12
    1026:	39 88       	ldd	r3, Y+17	; 0x11
    1028:	48 88       	ldd	r4, Y+16	; 0x10
    102a:	5f 84       	ldd	r5, Y+15	; 0x0f
    102c:	6e 84       	ldd	r6, Y+14	; 0x0e
    102e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1030:	8c 84       	ldd	r8, Y+12	; 0x0c
    1032:	9b 84       	ldd	r9, Y+11	; 0x0b
    1034:	aa 84       	ldd	r10, Y+10	; 0x0a
    1036:	b9 84       	ldd	r11, Y+9	; 0x09
    1038:	c8 84       	ldd	r12, Y+8	; 0x08
    103a:	df 80       	ldd	r13, Y+7	; 0x07
    103c:	ee 80       	ldd	r14, Y+6	; 0x06
    103e:	fd 80       	ldd	r15, Y+5	; 0x05
    1040:	0c 81       	ldd	r16, Y+4	; 0x04
    1042:	1b 81       	ldd	r17, Y+3	; 0x03
    1044:	aa 81       	ldd	r26, Y+2	; 0x02
    1046:	b9 81       	ldd	r27, Y+1	; 0x01
    1048:	ce 0f       	add	r28, r30
    104a:	d1 1d       	adc	r29, r1
    104c:	0f b6       	in	r0, 0x3f	; 63
    104e:	f8 94       	cli
    1050:	de bf       	out	0x3e, r29	; 62
    1052:	0f be       	out	0x3f, r0	; 63
    1054:	cd bf       	out	0x3d, r28	; 61
    1056:	ed 01       	movw	r28, r26
    1058:	08 95       	ret

0000105a <__udivmodhi4>:
    105a:	aa 1b       	sub	r26, r26
    105c:	bb 1b       	sub	r27, r27
    105e:	51 e1       	ldi	r21, 0x11	; 17
    1060:	07 c0       	rjmp	.+14     	; 0x1070 <__udivmodhi4_ep>

00001062 <__udivmodhi4_loop>:
    1062:	aa 1f       	adc	r26, r26
    1064:	bb 1f       	adc	r27, r27
    1066:	a6 17       	cp	r26, r22
    1068:	b7 07       	cpc	r27, r23
    106a:	10 f0       	brcs	.+4      	; 0x1070 <__udivmodhi4_ep>
    106c:	a6 1b       	sub	r26, r22
    106e:	b7 0b       	sbc	r27, r23

00001070 <__udivmodhi4_ep>:
    1070:	88 1f       	adc	r24, r24
    1072:	99 1f       	adc	r25, r25
    1074:	5a 95       	dec	r21
    1076:	a9 f7       	brne	.-22     	; 0x1062 <__udivmodhi4_loop>
    1078:	80 95       	com	r24
    107a:	90 95       	com	r25
    107c:	bc 01       	movw	r22, r24
    107e:	cd 01       	movw	r24, r26
    1080:	08 95       	ret

00001082 <malloc>:
    1082:	cf 93       	push	r28
    1084:	df 93       	push	r29
    1086:	bc 01       	movw	r22, r24
    1088:	82 30       	cpi	r24, 0x02	; 2
    108a:	91 05       	cpc	r25, r1
    108c:	10 f4       	brcc	.+4      	; 0x1092 <malloc+0x10>
    108e:	62 e0       	ldi	r22, 0x02	; 2
    1090:	70 e0       	ldi	r23, 0x00	; 0
    1092:	a0 91 50 01 	lds	r26, 0x0150
    1096:	b0 91 51 01 	lds	r27, 0x0151
    109a:	ed 01       	movw	r28, r26
    109c:	e0 e0       	ldi	r30, 0x00	; 0
    109e:	f0 e0       	ldi	r31, 0x00	; 0
    10a0:	40 e0       	ldi	r20, 0x00	; 0
    10a2:	50 e0       	ldi	r21, 0x00	; 0
    10a4:	21 c0       	rjmp	.+66     	; 0x10e8 <malloc+0x66>
    10a6:	88 81       	ld	r24, Y
    10a8:	99 81       	ldd	r25, Y+1	; 0x01
    10aa:	86 17       	cp	r24, r22
    10ac:	97 07       	cpc	r25, r23
    10ae:	69 f4       	brne	.+26     	; 0x10ca <malloc+0x48>
    10b0:	8a 81       	ldd	r24, Y+2	; 0x02
    10b2:	9b 81       	ldd	r25, Y+3	; 0x03
    10b4:	30 97       	sbiw	r30, 0x00	; 0
    10b6:	19 f0       	breq	.+6      	; 0x10be <malloc+0x3c>
    10b8:	93 83       	std	Z+3, r25	; 0x03
    10ba:	82 83       	std	Z+2, r24	; 0x02
    10bc:	04 c0       	rjmp	.+8      	; 0x10c6 <malloc+0x44>
    10be:	90 93 51 01 	sts	0x0151, r25
    10c2:	80 93 50 01 	sts	0x0150, r24
    10c6:	fe 01       	movw	r30, r28
    10c8:	34 c0       	rjmp	.+104    	; 0x1132 <malloc+0xb0>
    10ca:	68 17       	cp	r22, r24
    10cc:	79 07       	cpc	r23, r25
    10ce:	38 f4       	brcc	.+14     	; 0x10de <malloc+0x5c>
    10d0:	41 15       	cp	r20, r1
    10d2:	51 05       	cpc	r21, r1
    10d4:	19 f0       	breq	.+6      	; 0x10dc <malloc+0x5a>
    10d6:	84 17       	cp	r24, r20
    10d8:	95 07       	cpc	r25, r21
    10da:	08 f4       	brcc	.+2      	; 0x10de <malloc+0x5c>
    10dc:	ac 01       	movw	r20, r24
    10de:	fe 01       	movw	r30, r28
    10e0:	8a 81       	ldd	r24, Y+2	; 0x02
    10e2:	9b 81       	ldd	r25, Y+3	; 0x03
    10e4:	9c 01       	movw	r18, r24
    10e6:	e9 01       	movw	r28, r18
    10e8:	20 97       	sbiw	r28, 0x00	; 0
    10ea:	e9 f6       	brne	.-70     	; 0x10a6 <malloc+0x24>
    10ec:	41 15       	cp	r20, r1
    10ee:	51 05       	cpc	r21, r1
    10f0:	a9 f1       	breq	.+106    	; 0x115c <malloc+0xda>
    10f2:	ca 01       	movw	r24, r20
    10f4:	86 1b       	sub	r24, r22
    10f6:	97 0b       	sbc	r25, r23
    10f8:	04 97       	sbiw	r24, 0x04	; 4
    10fa:	08 f4       	brcc	.+2      	; 0x10fe <malloc+0x7c>
    10fc:	ba 01       	movw	r22, r20
    10fe:	e0 e0       	ldi	r30, 0x00	; 0
    1100:	f0 e0       	ldi	r31, 0x00	; 0
    1102:	2a c0       	rjmp	.+84     	; 0x1158 <malloc+0xd6>
    1104:	8d 91       	ld	r24, X+
    1106:	9c 91       	ld	r25, X
    1108:	11 97       	sbiw	r26, 0x01	; 1
    110a:	84 17       	cp	r24, r20
    110c:	95 07       	cpc	r25, r21
    110e:	f9 f4       	brne	.+62     	; 0x114e <malloc+0xcc>
    1110:	64 17       	cp	r22, r20
    1112:	75 07       	cpc	r23, r21
    1114:	81 f4       	brne	.+32     	; 0x1136 <malloc+0xb4>
    1116:	12 96       	adiw	r26, 0x02	; 2
    1118:	8d 91       	ld	r24, X+
    111a:	9c 91       	ld	r25, X
    111c:	13 97       	sbiw	r26, 0x03	; 3
    111e:	30 97       	sbiw	r30, 0x00	; 0
    1120:	19 f0       	breq	.+6      	; 0x1128 <malloc+0xa6>
    1122:	93 83       	std	Z+3, r25	; 0x03
    1124:	82 83       	std	Z+2, r24	; 0x02
    1126:	04 c0       	rjmp	.+8      	; 0x1130 <malloc+0xae>
    1128:	90 93 51 01 	sts	0x0151, r25
    112c:	80 93 50 01 	sts	0x0150, r24
    1130:	fd 01       	movw	r30, r26
    1132:	32 96       	adiw	r30, 0x02	; 2
    1134:	4f c0       	rjmp	.+158    	; 0x11d4 <malloc+0x152>
    1136:	ca 01       	movw	r24, r20
    1138:	86 1b       	sub	r24, r22
    113a:	97 0b       	sbc	r25, r23
    113c:	fd 01       	movw	r30, r26
    113e:	e8 0f       	add	r30, r24
    1140:	f9 1f       	adc	r31, r25
    1142:	61 93       	st	Z+, r22
    1144:	71 93       	st	Z+, r23
    1146:	02 97       	sbiw	r24, 0x02	; 2
    1148:	8d 93       	st	X+, r24
    114a:	9c 93       	st	X, r25
    114c:	43 c0       	rjmp	.+134    	; 0x11d4 <malloc+0x152>
    114e:	fd 01       	movw	r30, r26
    1150:	82 81       	ldd	r24, Z+2	; 0x02
    1152:	93 81       	ldd	r25, Z+3	; 0x03
    1154:	9c 01       	movw	r18, r24
    1156:	d9 01       	movw	r26, r18
    1158:	10 97       	sbiw	r26, 0x00	; 0
    115a:	a1 f6       	brne	.-88     	; 0x1104 <malloc+0x82>
    115c:	80 91 4e 01 	lds	r24, 0x014E
    1160:	90 91 4f 01 	lds	r25, 0x014F
    1164:	89 2b       	or	r24, r25
    1166:	41 f4       	brne	.+16     	; 0x1178 <malloc+0xf6>
    1168:	80 91 34 01 	lds	r24, 0x0134
    116c:	90 91 35 01 	lds	r25, 0x0135
    1170:	90 93 4f 01 	sts	0x014F, r25
    1174:	80 93 4e 01 	sts	0x014E, r24
    1178:	40 91 36 01 	lds	r20, 0x0136
    117c:	50 91 37 01 	lds	r21, 0x0137
    1180:	41 15       	cp	r20, r1
    1182:	51 05       	cpc	r21, r1
    1184:	41 f4       	brne	.+16     	; 0x1196 <malloc+0x114>
    1186:	4d b7       	in	r20, 0x3d	; 61
    1188:	5e b7       	in	r21, 0x3e	; 62
    118a:	80 91 32 01 	lds	r24, 0x0132
    118e:	90 91 33 01 	lds	r25, 0x0133
    1192:	48 1b       	sub	r20, r24
    1194:	59 0b       	sbc	r21, r25
    1196:	20 91 4e 01 	lds	r18, 0x014E
    119a:	30 91 4f 01 	lds	r19, 0x014F
    119e:	24 17       	cp	r18, r20
    11a0:	35 07       	cpc	r19, r21
    11a2:	b0 f4       	brcc	.+44     	; 0x11d0 <malloc+0x14e>
    11a4:	ca 01       	movw	r24, r20
    11a6:	82 1b       	sub	r24, r18
    11a8:	93 0b       	sbc	r25, r19
    11aa:	86 17       	cp	r24, r22
    11ac:	97 07       	cpc	r25, r23
    11ae:	80 f0       	brcs	.+32     	; 0x11d0 <malloc+0x14e>
    11b0:	ab 01       	movw	r20, r22
    11b2:	4e 5f       	subi	r20, 0xFE	; 254
    11b4:	5f 4f       	sbci	r21, 0xFF	; 255
    11b6:	84 17       	cp	r24, r20
    11b8:	95 07       	cpc	r25, r21
    11ba:	50 f0       	brcs	.+20     	; 0x11d0 <malloc+0x14e>
    11bc:	42 0f       	add	r20, r18
    11be:	53 1f       	adc	r21, r19
    11c0:	50 93 4f 01 	sts	0x014F, r21
    11c4:	40 93 4e 01 	sts	0x014E, r20
    11c8:	f9 01       	movw	r30, r18
    11ca:	61 93       	st	Z+, r22
    11cc:	71 93       	st	Z+, r23
    11ce:	02 c0       	rjmp	.+4      	; 0x11d4 <malloc+0x152>
    11d0:	e0 e0       	ldi	r30, 0x00	; 0
    11d2:	f0 e0       	ldi	r31, 0x00	; 0
    11d4:	cf 01       	movw	r24, r30
    11d6:	df 91       	pop	r29
    11d8:	cf 91       	pop	r28
    11da:	08 95       	ret

000011dc <free>:
    11dc:	cf 93       	push	r28
    11de:	df 93       	push	r29
    11e0:	00 97       	sbiw	r24, 0x00	; 0
    11e2:	09 f4       	brne	.+2      	; 0x11e6 <free+0xa>
    11e4:	50 c0       	rjmp	.+160    	; 0x1286 <free+0xaa>
    11e6:	ec 01       	movw	r28, r24
    11e8:	22 97       	sbiw	r28, 0x02	; 2
    11ea:	1b 82       	std	Y+3, r1	; 0x03
    11ec:	1a 82       	std	Y+2, r1	; 0x02
    11ee:	a0 91 50 01 	lds	r26, 0x0150
    11f2:	b0 91 51 01 	lds	r27, 0x0151
    11f6:	10 97       	sbiw	r26, 0x00	; 0
    11f8:	09 f1       	breq	.+66     	; 0x123c <free+0x60>
    11fa:	40 e0       	ldi	r20, 0x00	; 0
    11fc:	50 e0       	ldi	r21, 0x00	; 0
    11fe:	ac 17       	cp	r26, r28
    1200:	bd 07       	cpc	r27, r29
    1202:	08 f1       	brcs	.+66     	; 0x1246 <free+0x6a>
    1204:	bb 83       	std	Y+3, r27	; 0x03
    1206:	aa 83       	std	Y+2, r26	; 0x02
    1208:	fe 01       	movw	r30, r28
    120a:	21 91       	ld	r18, Z+
    120c:	31 91       	ld	r19, Z+
    120e:	e2 0f       	add	r30, r18
    1210:	f3 1f       	adc	r31, r19
    1212:	ae 17       	cp	r26, r30
    1214:	bf 07       	cpc	r27, r31
    1216:	79 f4       	brne	.+30     	; 0x1236 <free+0x5a>
    1218:	8d 91       	ld	r24, X+
    121a:	9c 91       	ld	r25, X
    121c:	11 97       	sbiw	r26, 0x01	; 1
    121e:	28 0f       	add	r18, r24
    1220:	39 1f       	adc	r19, r25
    1222:	2e 5f       	subi	r18, 0xFE	; 254
    1224:	3f 4f       	sbci	r19, 0xFF	; 255
    1226:	39 83       	std	Y+1, r19	; 0x01
    1228:	28 83       	st	Y, r18
    122a:	12 96       	adiw	r26, 0x02	; 2
    122c:	8d 91       	ld	r24, X+
    122e:	9c 91       	ld	r25, X
    1230:	13 97       	sbiw	r26, 0x03	; 3
    1232:	9b 83       	std	Y+3, r25	; 0x03
    1234:	8a 83       	std	Y+2, r24	; 0x02
    1236:	41 15       	cp	r20, r1
    1238:	51 05       	cpc	r21, r1
    123a:	71 f4       	brne	.+28     	; 0x1258 <free+0x7c>
    123c:	d0 93 51 01 	sts	0x0151, r29
    1240:	c0 93 50 01 	sts	0x0150, r28
    1244:	20 c0       	rjmp	.+64     	; 0x1286 <free+0xaa>
    1246:	12 96       	adiw	r26, 0x02	; 2
    1248:	8d 91       	ld	r24, X+
    124a:	9c 91       	ld	r25, X
    124c:	13 97       	sbiw	r26, 0x03	; 3
    124e:	ad 01       	movw	r20, r26
    1250:	00 97       	sbiw	r24, 0x00	; 0
    1252:	11 f0       	breq	.+4      	; 0x1258 <free+0x7c>
    1254:	dc 01       	movw	r26, r24
    1256:	d3 cf       	rjmp	.-90     	; 0x11fe <free+0x22>
    1258:	fa 01       	movw	r30, r20
    125a:	d3 83       	std	Z+3, r29	; 0x03
    125c:	c2 83       	std	Z+2, r28	; 0x02
    125e:	21 91       	ld	r18, Z+
    1260:	31 91       	ld	r19, Z+
    1262:	e2 0f       	add	r30, r18
    1264:	f3 1f       	adc	r31, r19
    1266:	ce 17       	cp	r28, r30
    1268:	df 07       	cpc	r29, r31
    126a:	69 f4       	brne	.+26     	; 0x1286 <free+0xaa>
    126c:	88 81       	ld	r24, Y
    126e:	99 81       	ldd	r25, Y+1	; 0x01
    1270:	28 0f       	add	r18, r24
    1272:	39 1f       	adc	r19, r25
    1274:	2e 5f       	subi	r18, 0xFE	; 254
    1276:	3f 4f       	sbci	r19, 0xFF	; 255
    1278:	fa 01       	movw	r30, r20
    127a:	31 83       	std	Z+1, r19	; 0x01
    127c:	20 83       	st	Z, r18
    127e:	8a 81       	ldd	r24, Y+2	; 0x02
    1280:	9b 81       	ldd	r25, Y+3	; 0x03
    1282:	93 83       	std	Z+3, r25	; 0x03
    1284:	82 83       	std	Z+2, r24	; 0x02
    1286:	df 91       	pop	r29
    1288:	cf 91       	pop	r28
    128a:	08 95       	ret

0000128c <fdevopen>:
    128c:	0f 93       	push	r16
    128e:	1f 93       	push	r17
    1290:	cf 93       	push	r28
    1292:	df 93       	push	r29
    1294:	8c 01       	movw	r16, r24
    1296:	eb 01       	movw	r28, r22
    1298:	00 97       	sbiw	r24, 0x00	; 0
    129a:	31 f4       	brne	.+12     	; 0x12a8 <fdevopen+0x1c>
    129c:	61 15       	cp	r22, r1
    129e:	71 05       	cpc	r23, r1
    12a0:	19 f4       	brne	.+6      	; 0x12a8 <fdevopen+0x1c>
    12a2:	20 e0       	ldi	r18, 0x00	; 0
    12a4:	30 e0       	ldi	r19, 0x00	; 0
    12a6:	38 c0       	rjmp	.+112    	; 0x1318 <fdevopen+0x8c>
    12a8:	81 e0       	ldi	r24, 0x01	; 1
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	6e e0       	ldi	r22, 0x0E	; 14
    12ae:	70 e0       	ldi	r23, 0x00	; 0
    12b0:	0e 94 92 09 	call	0x1324	; 0x1324 <calloc>
    12b4:	fc 01       	movw	r30, r24
    12b6:	9c 01       	movw	r18, r24
    12b8:	00 97       	sbiw	r24, 0x00	; 0
    12ba:	71 f1       	breq	.+92     	; 0x1318 <fdevopen+0x8c>
    12bc:	80 e8       	ldi	r24, 0x80	; 128
    12be:	83 83       	std	Z+3, r24	; 0x03
    12c0:	20 97       	sbiw	r28, 0x00	; 0
    12c2:	71 f0       	breq	.+28     	; 0x12e0 <fdevopen+0x54>
    12c4:	d3 87       	std	Z+11, r29	; 0x0b
    12c6:	c2 87       	std	Z+10, r28	; 0x0a
    12c8:	81 e8       	ldi	r24, 0x81	; 129
    12ca:	83 83       	std	Z+3, r24	; 0x03
    12cc:	80 91 52 01 	lds	r24, 0x0152
    12d0:	90 91 53 01 	lds	r25, 0x0153
    12d4:	89 2b       	or	r24, r25
    12d6:	21 f4       	brne	.+8      	; 0x12e0 <fdevopen+0x54>
    12d8:	f0 93 53 01 	sts	0x0153, r31
    12dc:	e0 93 52 01 	sts	0x0152, r30
    12e0:	01 15       	cp	r16, r1
    12e2:	11 05       	cpc	r17, r1
    12e4:	c9 f0       	breq	.+50     	; 0x1318 <fdevopen+0x8c>
    12e6:	11 87       	std	Z+9, r17	; 0x09
    12e8:	00 87       	std	Z+8, r16	; 0x08
    12ea:	83 81       	ldd	r24, Z+3	; 0x03
    12ec:	82 60       	ori	r24, 0x02	; 2
    12ee:	83 83       	std	Z+3, r24	; 0x03
    12f0:	80 91 54 01 	lds	r24, 0x0154
    12f4:	90 91 55 01 	lds	r25, 0x0155
    12f8:	89 2b       	or	r24, r25
    12fa:	71 f4       	brne	.+28     	; 0x1318 <fdevopen+0x8c>
    12fc:	f0 93 55 01 	sts	0x0155, r31
    1300:	e0 93 54 01 	sts	0x0154, r30
    1304:	80 91 56 01 	lds	r24, 0x0156
    1308:	90 91 57 01 	lds	r25, 0x0157
    130c:	89 2b       	or	r24, r25
    130e:	21 f4       	brne	.+8      	; 0x1318 <fdevopen+0x8c>
    1310:	f0 93 57 01 	sts	0x0157, r31
    1314:	e0 93 56 01 	sts	0x0156, r30
    1318:	c9 01       	movw	r24, r18
    131a:	df 91       	pop	r29
    131c:	cf 91       	pop	r28
    131e:	1f 91       	pop	r17
    1320:	0f 91       	pop	r16
    1322:	08 95       	ret

00001324 <calloc>:
    1324:	0f 93       	push	r16
    1326:	1f 93       	push	r17
    1328:	cf 93       	push	r28
    132a:	df 93       	push	r29
    132c:	68 9f       	mul	r22, r24
    132e:	80 01       	movw	r16, r0
    1330:	69 9f       	mul	r22, r25
    1332:	10 0d       	add	r17, r0
    1334:	78 9f       	mul	r23, r24
    1336:	10 0d       	add	r17, r0
    1338:	11 24       	eor	r1, r1
    133a:	c8 01       	movw	r24, r16
    133c:	0e 94 41 08 	call	0x1082	; 0x1082 <malloc>
    1340:	ec 01       	movw	r28, r24
    1342:	00 97       	sbiw	r24, 0x00	; 0
    1344:	29 f0       	breq	.+10     	; 0x1350 <calloc+0x2c>
    1346:	60 e0       	ldi	r22, 0x00	; 0
    1348:	70 e0       	ldi	r23, 0x00	; 0
    134a:	a8 01       	movw	r20, r16
    134c:	0e 94 ae 09 	call	0x135c	; 0x135c <memset>
    1350:	ce 01       	movw	r24, r28
    1352:	df 91       	pop	r29
    1354:	cf 91       	pop	r28
    1356:	1f 91       	pop	r17
    1358:	0f 91       	pop	r16
    135a:	08 95       	ret

0000135c <memset>:
    135c:	dc 01       	movw	r26, r24
    135e:	01 c0       	rjmp	.+2      	; 0x1362 <memset+0x6>
    1360:	6d 93       	st	X+, r22
    1362:	41 50       	subi	r20, 0x01	; 1
    1364:	50 40       	sbci	r21, 0x00	; 0
    1366:	e0 f7       	brcc	.-8      	; 0x1360 <memset+0x4>
    1368:	08 95       	ret

0000136a <_exit>:
    136a:	f8 94       	cli

0000136c <__stop_program>:
    136c:	ff cf       	rjmp	.-2      	; 0x136c <__stop_program>
