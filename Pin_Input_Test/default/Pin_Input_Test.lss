
Pin_Input_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  000011d0  00001264  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001e  0080011a  0080011a  0000127e  2**0
                  ALLOC
  3 .stab         000027c0  00000000  00000000  00001280  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002591  00000000  00000000  00003a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000020  00000000  00000000  00005fd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000000e1  00000000  00000000  00005ff1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000066a  00000000  00000000  000060d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000026d  00000000  00000000  0000673c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000496  00000000  00000000  000069a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000a0  00000000  00000000  00006e40  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000003b7  00000000  00000000  00006ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000012d  00000000  00000000  00007297  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000018  00000000  00000000  000073c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 f4 05 	jmp	0xbe8	; 0xbe8 <__vector_11>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e0 ed       	ldi	r30, 0xD0	; 208
      a0:	f1 e1       	ldi	r31, 0x11	; 17
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	aa 31       	cpi	r26, 0x1A	; 26
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	11 e0       	ldi	r17, 0x01	; 1
      b4:	aa e1       	ldi	r26, 0x1A	; 26
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a8 33       	cpi	r26, 0x38	; 56
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 16 01 	call	0x22c	; 0x22c <main>
      c6:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
	
	
	// gets a structure with pointers to the three digital I/O registers associated
	// with the specified pin (DDR, PORT, and PIN) along with a bitmask with a
	// 1 in the position of the specified pin and 0s everywhere else.
	inline static void getIORegisters(struct IOStruct* io, unsigned char pin)
      ce:	fc 01       	movw	r30, r24
	{
		io->pinRegister = 0;
      d0:	11 82       	std	Z+1, r1	; 0x01
      d2:	10 82       	st	Z, r1
		io->portRegister = 0;
      d4:	13 82       	std	Z+3, r1	; 0x03
      d6:	12 82       	std	Z+2, r1	; 0x02
		io->ddrRegister = 0;
      d8:	15 82       	std	Z+5, r1	; 0x05
      da:	14 82       	std	Z+4, r1	; 0x04
		io->bitmask = 0;
      dc:	16 82       	std	Z+6, r1	; 0x06

		if (pin < 8)			// pin 0 = PD0, ..., 7 = PD7
      de:	68 30       	cpi	r22, 0x08	; 8
      e0:	a0 f4       	brcc	.+40     	; 0x10a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x3c>
		{
			io->pinRegister = (unsigned char*)&PIND;
      e2:	89 e2       	ldi	r24, 0x29	; 41
      e4:	90 e0       	ldi	r25, 0x00	; 0
      e6:	91 83       	std	Z+1, r25	; 0x01
      e8:	80 83       	st	Z, r24
			io->portRegister = (unsigned char*)&PORTD;
      ea:	8b e2       	ldi	r24, 0x2B	; 43
      ec:	90 e0       	ldi	r25, 0x00	; 0
      ee:	93 83       	std	Z+3, r25	; 0x03
      f0:	82 83       	std	Z+2, r24	; 0x02
			io->ddrRegister = (unsigned char*)&DDRD;
      f2:	8a e2       	ldi	r24, 0x2A	; 42
      f4:	90 e0       	ldi	r25, 0x00	; 0
      f6:	95 83       	std	Z+5, r25	; 0x05
      f8:	84 83       	std	Z+4, r24	; 0x04
			io->bitmask = 1 << pin;
      fa:	81 e0       	ldi	r24, 0x01	; 1
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	02 c0       	rjmp	.+4      	; 0x104 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x36>
     100:	88 0f       	add	r24, r24
     102:	99 1f       	adc	r25, r25
     104:	6a 95       	dec	r22
     106:	e2 f7       	brpl	.-8      	; 0x100 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x32>
     108:	2c c0       	rjmp	.+88     	; 0x162 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x94>
		}

#if defined(_ORANGUTAN_SVP) || defined(_ORANGUTAN_X2)

		else if (pin < 16)		// pin 8 = PB0, ..., 15 = PB7
     10a:	60 31       	cpi	r22, 0x10	; 16
     10c:	88 f4       	brcc	.+34     	; 0x130 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x62>
		{
			io->pinRegister = (unsigned char*)&PINB;
     10e:	83 e2       	ldi	r24, 0x23	; 35
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	91 83       	std	Z+1, r25	; 0x01
     114:	80 83       	st	Z, r24
			io->portRegister = (unsigned char*)&PORTB;
     116:	85 e2       	ldi	r24, 0x25	; 37
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	93 83       	std	Z+3, r25	; 0x03
     11c:	82 83       	std	Z+2, r24	; 0x02
			io->ddrRegister = (unsigned char*)&DDRB;
     11e:	84 e2       	ldi	r24, 0x24	; 36
     120:	90 e0       	ldi	r25, 0x00	; 0
     122:	95 83       	std	Z+5, r25	; 0x05
     124:	84 83       	std	Z+4, r24	; 0x04
			io->bitmask = 1 << (pin - 8);
     126:	26 2f       	mov	r18, r22
     128:	30 e0       	ldi	r19, 0x00	; 0
     12a:	28 50       	subi	r18, 0x08	; 8
     12c:	30 40       	sbci	r19, 0x00	; 0
     12e:	12 c0       	rjmp	.+36     	; 0x154 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x86>
		}
		else if (pin < 24)		// pin 16 = PC0, ..., 23 = PC7
     130:	68 31       	cpi	r22, 0x18	; 24
     132:	c8 f4       	brcc	.+50     	; 0x166 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x98>
		{
			io->pinRegister = (unsigned char*)&PINC;
     134:	86 e2       	ldi	r24, 0x26	; 38
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	91 83       	std	Z+1, r25	; 0x01
     13a:	80 83       	st	Z, r24
			io->portRegister = (unsigned char*)&PORTC;
     13c:	88 e2       	ldi	r24, 0x28	; 40
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	93 83       	std	Z+3, r25	; 0x03
     142:	82 83       	std	Z+2, r24	; 0x02
			io->ddrRegister = (unsigned char*)&DDRC;
     144:	87 e2       	ldi	r24, 0x27	; 39
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	95 83       	std	Z+5, r25	; 0x05
     14a:	84 83       	std	Z+4, r24	; 0x04
			io->bitmask = 1 << (pin - 16);
     14c:	26 2f       	mov	r18, r22
     14e:	30 e0       	ldi	r19, 0x00	; 0
     150:	20 51       	subi	r18, 0x10	; 16
     152:	30 40       	sbci	r19, 0x00	; 0
     154:	81 e0       	ldi	r24, 0x01	; 1
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	02 c0       	rjmp	.+4      	; 0x15e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x90>
     15a:	88 0f       	add	r24, r24
     15c:	99 1f       	adc	r25, r25
     15e:	2a 95       	dec	r18
     160:	e2 f7       	brpl	.-8      	; 0x15a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8c>
     162:	86 83       	std	Z+6, r24	; 0x06
     164:	08 95       	ret
		}
		else if (pin < 32)		// pin 24 = PA7, ..., 31 = PA0
     166:	60 32       	cpi	r22, 0x20	; 32
     168:	c0 f4       	brcc	.+48     	; 0x19a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0xcc>
		{
			io->pinRegister = (unsigned char*)&PINA;
     16a:	80 e2       	ldi	r24, 0x20	; 32
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	91 83       	std	Z+1, r25	; 0x01
     170:	80 83       	st	Z, r24
			io->portRegister = (unsigned char*)&PORTA;
     172:	82 e2       	ldi	r24, 0x22	; 34
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	93 83       	std	Z+3, r25	; 0x03
     178:	82 83       	std	Z+2, r24	; 0x02
			io->ddrRegister = (unsigned char*)&DDRA;
     17a:	81 e2       	ldi	r24, 0x21	; 33
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	95 83       	std	Z+5, r25	; 0x05
     180:	84 83       	std	Z+4, r24	; 0x04
			io->bitmask = 1 << (31 - pin);
     182:	2f e1       	ldi	r18, 0x1F	; 31
     184:	30 e0       	ldi	r19, 0x00	; 0
     186:	26 1b       	sub	r18, r22
     188:	31 09       	sbc	r19, r1
     18a:	81 e0       	ldi	r24, 0x01	; 1
     18c:	90 e0       	ldi	r25, 0x00	; 0
     18e:	02 c0       	rjmp	.+4      	; 0x194 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0xc6>
     190:	88 0f       	add	r24, r24
     192:	99 1f       	adc	r25, r25
     194:	2a 95       	dec	r18
     196:	e2 f7       	brpl	.-8      	; 0x190 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0xc2>
     198:	86 83       	std	Z+6, r24	; 0x06
     19a:	08 95       	ret

0000019c <_ZN16OrangutanDigital8setInputEhh>:

	// high-level method for setting the specified pin as an input with the specified input state.
	// An inputState value of 0 will cause the pin to be a high-impedance input; a value of 1 will enable the 
	// pin's internal pull-up resistor, which weakly pulls it to Vcc.  A value of 0xFF (255) will toggle the
	// input state.
	inline static void setInput(unsigned char pin, unsigned char inputState)
     19c:	1f 93       	push	r17
     19e:	df 93       	push	r29
     1a0:	cf 93       	push	r28
     1a2:	cd b7       	in	r28, 0x3d	; 61
     1a4:	de b7       	in	r29, 0x3e	; 62
     1a6:	27 97       	sbiw	r28, 0x07	; 7
     1a8:	0f b6       	in	r0, 0x3f	; 63
     1aa:	f8 94       	cli
     1ac:	de bf       	out	0x3e, r29	; 62
     1ae:	0f be       	out	0x3f, r0	; 63
     1b0:	cd bf       	out	0x3d, r28	; 61
     1b2:	28 2f       	mov	r18, r24
     1b4:	16 2f       	mov	r17, r22
	{
		struct IOStruct registers;
		getIORegisters(&registers, pin);
     1b6:	ce 01       	movw	r24, r28
     1b8:	01 96       	adiw	r24, 0x01	; 1
     1ba:	62 2f       	mov	r22, r18
     1bc:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
	inline static void setDataDirection(struct IOStruct* ioPin, unsigned char val)
	{
		if (val)
			*(ioPin->ddrRegister) |= ioPin->bitmask;
		else
			*(ioPin->ddrRegister) &= ~ioPin->bitmask;
     1c0:	ed 81       	ldd	r30, Y+5	; 0x05
     1c2:	fe 81       	ldd	r31, Y+6	; 0x06
     1c4:	90 81       	ld	r25, Z
     1c6:	8f 81       	ldd	r24, Y+7	; 0x07
     1c8:	80 95       	com	r24
     1ca:	89 23       	and	r24, r25
     1cc:	80 83       	st	Z, r24
	// setting it as high-impedance (val = 0) or enabling the internal pull-up (val = 1).  If the pin is an
	// output, this lets you choose between driving low (val = 0) and driving high (val = 1).
	// NOTE: if val is 0xFF (255), this method will toggle the PORT register pin(s).
	inline static void setOutputValue(struct IOStruct* ioPin, unsigned char val)
	{
		if (val == 0xFF)
     1ce:	1f 3f       	cpi	r17, 0xFF	; 255
     1d0:	31 f4       	brne	.+12     	; 0x1de <_ZN16OrangutanDigital8setInputEhh+0x42>
			*(ioPin->portRegister) ^= ioPin->bitmask;
     1d2:	eb 81       	ldd	r30, Y+3	; 0x03
     1d4:	fc 81       	ldd	r31, Y+4	; 0x04
     1d6:	80 81       	ld	r24, Z
     1d8:	9f 81       	ldd	r25, Y+7	; 0x07
     1da:	89 27       	eor	r24, r25
     1dc:	07 c0       	rjmp	.+14     	; 0x1ec <_ZN16OrangutanDigital8setInputEhh+0x50>
     1de:	9f 81       	ldd	r25, Y+7	; 0x07
     1e0:	eb 81       	ldd	r30, Y+3	; 0x03
     1e2:	fc 81       	ldd	r31, Y+4	; 0x04
		else if (val)
     1e4:	11 23       	and	r17, r17
     1e6:	21 f0       	breq	.+8      	; 0x1f0 <_ZN16OrangutanDigital8setInputEhh+0x54>
			*(ioPin->portRegister) |= ioPin->bitmask;
     1e8:	80 81       	ld	r24, Z
     1ea:	89 2b       	or	r24, r25
     1ec:	80 83       	st	Z, r24
     1ee:	04 c0       	rjmp	.+8      	; 0x1f8 <_ZN16OrangutanDigital8setInputEhh+0x5c>
		else
			*(ioPin->portRegister) &= ~ioPin->bitmask;
     1f0:	80 81       	ld	r24, Z
     1f2:	90 95       	com	r25
     1f4:	98 23       	and	r25, r24
     1f6:	90 83       	st	Z, r25
	{
		struct IOStruct registers;
		getIORegisters(&registers, pin);
		setDataDirection(&registers, 0);
		setOutputValue(&registers, inputState);
	}
     1f8:	27 96       	adiw	r28, 0x07	; 7
     1fa:	0f b6       	in	r0, 0x3f	; 63
     1fc:	f8 94       	cli
     1fe:	de bf       	out	0x3e, r29	; 62
     200:	0f be       	out	0x3f, r0	; 63
     202:	cd bf       	out	0x3d, r28	; 61
     204:	cf 91       	pop	r28
     206:	df 91       	pop	r29
     208:	1f 91       	pop	r17
     20a:	08 95       	ret

0000020c <__cxa_guard_acquire>:

extern "C" int __cxa_guard_acquire(__guard *); 
extern "C" void __cxa_guard_release (__guard *); 
extern "C" void __cxa_guard_abort (__guard *); 

int __cxa_guard_acquire(__guard *g) {return !*(char *)(g);}; 
     20c:	fc 01       	movw	r30, r24
     20e:	20 e0       	ldi	r18, 0x00	; 0
     210:	30 e0       	ldi	r19, 0x00	; 0
     212:	80 81       	ld	r24, Z
     214:	88 23       	and	r24, r24
     216:	11 f4       	brne	.+4      	; 0x21c <__cxa_guard_acquire+0x10>
     218:	21 e0       	ldi	r18, 0x01	; 1
     21a:	30 e0       	ldi	r19, 0x00	; 0
     21c:	c9 01       	movw	r24, r18
     21e:	08 95       	ret

00000220 <__cxa_guard_release>:
void __cxa_guard_release (__guard *g) {*(char *)g = 1;}; 
     220:	fc 01       	movw	r30, r24
     222:	81 e0       	ldi	r24, 0x01	; 1
     224:	80 83       	st	Z, r24
     226:	08 95       	ret

00000228 <__cxa_guard_abort>:
void __cxa_guard_abort (__guard *) {}; 
     228:	08 95       	ret

0000022a <__cxa_pure_virtual>:

extern "C" void __cxa_pure_virtual(void); 
void __cxa_pure_virtual(void) {}; 
     22a:	08 95       	ret

0000022c <main>:


int main()
     22c:	0f 93       	push	r16
     22e:	1f 93       	push	r17
     230:	df 93       	push	r29
     232:	cf 93       	push	r28
     234:	cd b7       	in	r28, 0x3d	; 61
     236:	de b7       	in	r29, 0x3e	; 62
     238:	27 97       	sbiw	r28, 0x07	; 7
     23a:	0f b6       	in	r0, 0x3f	; 63
     23c:	f8 94       	cli
     23e:	de bf       	out	0x3e, r29	; 62
     240:	0f be       	out	0x3f, r0	; 63
     242:	cd bf       	out	0x3d, r28	; 61
{
	OrangutanDigital::setInput(IO_D0, PULL_UP_ENABLED);
     244:	80 e0       	ldi	r24, 0x00	; 0
     246:	61 e0       	ldi	r22, 0x01	; 1
     248:	0e 94 ce 00 	call	0x19c	; 0x19c <_ZN16OrangutanDigital8setInputEhh>
	OrangutanDigital::setInput(IO_D1, PULL_UP_ENABLED);
     24c:	81 e0       	ldi	r24, 0x01	; 1
     24e:	61 e0       	ldi	r22, 0x01	; 1
     250:	0e 94 ce 00 	call	0x19c	; 0x19c <_ZN16OrangutanDigital8setInputEhh>
	OrangutanDigital::setInput(IO_D2, PULL_UP_ENABLED);
     254:	82 e0       	ldi	r24, 0x02	; 2
     256:	61 e0       	ldi	r22, 0x01	; 1
     258:	0e 94 ce 00 	call	0x19c	; 0x19c <_ZN16OrangutanDigital8setInputEhh>
	OrangutanDigital::setInput(IO_D3, PULL_UP_ENABLED);
     25c:	83 e0       	ldi	r24, 0x03	; 3
     25e:	61 e0       	ldi	r22, 0x01	; 1
     260:	0e 94 ce 00 	call	0x19c	; 0x19c <_ZN16OrangutanDigital8setInputEhh>
	// this method will return 0.  Otherwise, it will return a non-zero result that depends on the value of
	// the pin.
	inline static unsigned char isInputHigh(unsigned char pin)
	{
		struct IOStruct registers;
		getIORegisters(&registers, pin);
     264:	8e 01       	movw	r16, r28
     266:	0f 5f       	subi	r16, 0xFF	; 255
     268:	1f 4f       	sbci	r17, 0xFF	; 255

	while(1){
		OrangutanLCD::clear();
     26a:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <_ZN12OrangutanLCD5clearEv>
		OrangutanLCD::print("BUT ROT ROT SWIT");
     26e:	80 e0       	ldi	r24, 0x00	; 0
     270:	91 e0       	ldi	r25, 0x01	; 1
     272:	0e 94 76 04 	call	0x8ec	; 0x8ec <_ZN12OrangutanLCD5printEPKc>
		OrangutanLCD::gotoXY(0,1);
     276:	80 e0       	ldi	r24, 0x00	; 0
     278:	61 e0       	ldi	r22, 0x01	; 1
     27a:	0e 94 48 03 	call	0x690	; 0x690 <_ZN12OrangutanLCD6gotoXYEhh>
     27e:	c8 01       	movw	r24, r16
     280:	60 e0       	ldi	r22, 0x00	; 0
     282:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>

	// low-level method for reading the value of the PIN register for an pin or set of pins
	// described by an IOStruct pointer.
	inline static unsigned char getInputValue(struct IOStruct* ioPin)
	{
		return *(ioPin->pinRegister) & ioPin->bitmask;
     286:	e9 81       	ldd	r30, Y+1	; 0x01
     288:	fa 81       	ldd	r31, Y+2	; 0x02
     28a:	80 81       	ld	r24, Z
		if(OrangutanDigital::isInputHigh(IO_D0)){
     28c:	9f 81       	ldd	r25, Y+7	; 0x07
     28e:	89 23       	and	r24, r25
     290:	29 f0       	breq	.+10     	; 0x29c <main+0x70>
	{
		print((unsigned long)value);
	};
	static inline void print(int value)
	{
		print((long)value);
     292:	61 e0       	ldi	r22, 0x01	; 1
     294:	70 e0       	ldi	r23, 0x00	; 0
     296:	80 e0       	ldi	r24, 0x00	; 0
     298:	90 e0       	ldi	r25, 0x00	; 0
     29a:	04 c0       	rjmp	.+8      	; 0x2a4 <main+0x78>
	// this method will return 0.  Otherwise, it will return a non-zero result that depends on the value of
	// the pin.
	inline static unsigned char isInputHigh(unsigned char pin)
	{
		struct IOStruct registers;
		getIORegisters(&registers, pin);
     29c:	60 e0       	ldi	r22, 0x00	; 0
     29e:	70 e0       	ldi	r23, 0x00	; 0
     2a0:	80 e0       	ldi	r24, 0x00	; 0
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	0e 94 46 04 	call	0x88c	; 0x88c <_ZN12OrangutanLCD5printEl>
     2a8:	c8 01       	movw	r24, r16
     2aa:	61 e0       	ldi	r22, 0x01	; 1
     2ac:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>

	// low-level method for reading the value of the PIN register for an pin or set of pins
	// described by an IOStruct pointer.
	inline static unsigned char getInputValue(struct IOStruct* ioPin)
	{
		return *(ioPin->pinRegister) & ioPin->bitmask;
     2b0:	e9 81       	ldd	r30, Y+1	; 0x01
     2b2:	fa 81       	ldd	r31, Y+2	; 0x02
     2b4:	80 81       	ld	r24, Z
			OrangutanLCD::print(1);
		}
		else{
			OrangutanLCD::print(0);
		}
		if(OrangutanDigital::isInputHigh(IO_D1)){
     2b6:	9f 81       	ldd	r25, Y+7	; 0x07
     2b8:	89 23       	and	r24, r25
     2ba:	29 f0       	breq	.+10     	; 0x2c6 <main+0x9a>
     2bc:	61 e0       	ldi	r22, 0x01	; 1
     2be:	70 e0       	ldi	r23, 0x00	; 0
     2c0:	80 e0       	ldi	r24, 0x00	; 0
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	04 c0       	rjmp	.+8      	; 0x2ce <main+0xa2>
	// this method will return 0.  Otherwise, it will return a non-zero result that depends on the value of
	// the pin.
	inline static unsigned char isInputHigh(unsigned char pin)
	{
		struct IOStruct registers;
		getIORegisters(&registers, pin);
     2c6:	60 e0       	ldi	r22, 0x00	; 0
     2c8:	70 e0       	ldi	r23, 0x00	; 0
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	0e 94 46 04 	call	0x88c	; 0x88c <_ZN12OrangutanLCD5printEl>
     2d2:	c8 01       	movw	r24, r16
     2d4:	62 e0       	ldi	r22, 0x02	; 2
     2d6:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>

	// low-level method for reading the value of the PIN register for an pin or set of pins
	// described by an IOStruct pointer.
	inline static unsigned char getInputValue(struct IOStruct* ioPin)
	{
		return *(ioPin->pinRegister) & ioPin->bitmask;
     2da:	e9 81       	ldd	r30, Y+1	; 0x01
     2dc:	fa 81       	ldd	r31, Y+2	; 0x02
     2de:	80 81       	ld	r24, Z
			OrangutanLCD::print(1);
		}
		else{
			OrangutanLCD::print(0);
		}
		if(OrangutanDigital::isInputHigh(IO_D2)){
     2e0:	9f 81       	ldd	r25, Y+7	; 0x07
     2e2:	89 23       	and	r24, r25
     2e4:	29 f0       	breq	.+10     	; 0x2f0 <main+0xc4>
     2e6:	61 e0       	ldi	r22, 0x01	; 1
     2e8:	70 e0       	ldi	r23, 0x00	; 0
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	04 c0       	rjmp	.+8      	; 0x2f8 <main+0xcc>
	// this method will return 0.  Otherwise, it will return a non-zero result that depends on the value of
	// the pin.
	inline static unsigned char isInputHigh(unsigned char pin)
	{
		struct IOStruct registers;
		getIORegisters(&registers, pin);
     2f0:	60 e0       	ldi	r22, 0x00	; 0
     2f2:	70 e0       	ldi	r23, 0x00	; 0
     2f4:	80 e0       	ldi	r24, 0x00	; 0
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	0e 94 46 04 	call	0x88c	; 0x88c <_ZN12OrangutanLCD5printEl>
     2fc:	c8 01       	movw	r24, r16
     2fe:	63 e0       	ldi	r22, 0x03	; 3
     300:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>

	// low-level method for reading the value of the PIN register for an pin or set of pins
	// described by an IOStruct pointer.
	inline static unsigned char getInputValue(struct IOStruct* ioPin)
	{
		return *(ioPin->pinRegister) & ioPin->bitmask;
     304:	e9 81       	ldd	r30, Y+1	; 0x01
     306:	fa 81       	ldd	r31, Y+2	; 0x02
     308:	80 81       	ld	r24, Z
			OrangutanLCD::print(1);
		}
		else{
			OrangutanLCD::print(0);
		}
		if(OrangutanDigital::isInputHigh(IO_D3)){
     30a:	9f 81       	ldd	r25, Y+7	; 0x07
     30c:	89 23       	and	r24, r25
     30e:	29 f0       	breq	.+10     	; 0x31a <main+0xee>
     310:	61 e0       	ldi	r22, 0x01	; 1
     312:	70 e0       	ldi	r23, 0x00	; 0
     314:	80 e0       	ldi	r24, 0x00	; 0
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	04 c0       	rjmp	.+8      	; 0x322 <main+0xf6>
// another C++ file.
inline unsigned long get_ms() { return OrangutanTime::ms(); }
inline unsigned long millis() { return OrangutanTime::ms(); }

inline void delay(unsigned int milliseconds) { OrangutanTime::delayMilliseconds(milliseconds); }
inline void delay_ms(unsigned int milliseconds) { OrangutanTime::delayMilliseconds(milliseconds); }
     31a:	60 e0       	ldi	r22, 0x00	; 0
     31c:	70 e0       	ldi	r23, 0x00	; 0
     31e:	80 e0       	ldi	r24, 0x00	; 0
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	0e 94 46 04 	call	0x88c	; 0x88c <_ZN12OrangutanLCD5printEl>
     326:	85 e0       	ldi	r24, 0x05	; 5
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	0e 94 5f 06 	call	0xcbe	; 0xcbe <_ZN13OrangutanTime17delayMillisecondsEj>
     32e:	9d cf       	rjmp	.-198    	; 0x26a <main+0x3e>

00000330 <_ZdlPv>:
  return malloc(size); 
} 

void operator delete(void * ptr) 
{ 
  free(ptr); 
     330:	0e 94 1f 08 	call	0x103e	; 0x103e <free>
} 
     334:	08 95       	ret

00000336 <_Znwj>:
void * operator new(size_t size); 
void operator delete(void * ptr); 

void * operator new(size_t size) 
{ 
  return malloc(size); 
     336:	0e 94 72 07 	call	0xee4	; 0xee4 <malloc>
} 
     33a:	08 95       	ret

0000033c <_ZN12OrangutanLCDC2Ev>:
     33c:	08 95       	ret

0000033e <_ZN12OrangutanLCDC1Ev>:
     33e:	08 95       	ret

00000340 <void_getchar>:
     340:	80 e0       	ldi	r24, 0x00	; 0
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	08 95       	ret

00000346 <_ZN12OrangutanLCD8busyWaitEv>:
     346:	ef 92       	push	r14
     348:	ff 92       	push	r15
     34a:	0f 93       	push	r16
     34c:	1f 93       	push	r17
     34e:	67 b1       	in	r22, 0x07	; 7
     350:	3d 98       	cbi	0x07, 5	; 7
     352:	28 98       	cbi	0x05, 0	; 5
     354:	29 9a       	sbi	0x05, 1	; 5
     356:	e0 90 1e 01 	lds	r14, 0x011E
     35a:	f0 90 1f 01 	lds	r15, 0x011F
     35e:	00 91 20 01 	lds	r16, 0x0120
     362:	10 91 21 01 	lds	r17, 0x0121
     366:	20 e0       	ldi	r18, 0x00	; 0
     368:	30 e0       	ldi	r19, 0x00	; 0
     36a:	41 e0       	ldi	r20, 0x01	; 1
     36c:	50 e0       	ldi	r21, 0x00	; 0
     36e:	ca 01       	movw	r24, r20
     370:	6f 93       	push	r22
     372:	64 e0       	ldi	r22, 0x04	; 4
     374:	6a 95       	dec	r22
     376:	f1 f7       	brne	.-4      	; 0x374 <_ZN12OrangutanLCD8busyWaitEv+0x2e>
     378:	6f 91       	pop	r22
     37a:	01 97       	sbiw	r24, 0x01	; 1
     37c:	c9 f7       	brne	.-14     	; 0x370 <_ZN12OrangutanLCD8busyWaitEv+0x2a>
     37e:	2a 9a       	sbi	0x05, 2	; 5
     380:	ca 01       	movw	r24, r20
     382:	6f 93       	push	r22
     384:	64 e0       	ldi	r22, 0x04	; 4
     386:	6a 95       	dec	r22
     388:	f1 f7       	brne	.-4      	; 0x386 <_ZN12OrangutanLCD8busyWaitEv+0x40>
     38a:	6f 91       	pop	r22
     38c:	01 97       	sbiw	r24, 0x01	; 1
     38e:	c9 f7       	brne	.-14     	; 0x382 <_ZN12OrangutanLCD8busyWaitEv+0x3c>
     390:	86 b1       	in	r24, 0x06	; 6
     392:	2a 98       	cbi	0x05, 2	; 5
     394:	fa 01       	movw	r30, r20
     396:	6f 93       	push	r22
     398:	64 e0       	ldi	r22, 0x04	; 4
     39a:	6a 95       	dec	r22
     39c:	f1 f7       	brne	.-4      	; 0x39a <_ZN12OrangutanLCD8busyWaitEv+0x54>
     39e:	6f 91       	pop	r22
     3a0:	31 97       	sbiw	r30, 0x01	; 1
     3a2:	c9 f7       	brne	.-14     	; 0x396 <_ZN12OrangutanLCD8busyWaitEv+0x50>
     3a4:	2a 9a       	sbi	0x05, 2	; 5
     3a6:	fa 01       	movw	r30, r20
     3a8:	6f 93       	push	r22
     3aa:	64 e0       	ldi	r22, 0x04	; 4
     3ac:	6a 95       	dec	r22
     3ae:	f1 f7       	brne	.-4      	; 0x3ac <_ZN12OrangutanLCD8busyWaitEv+0x66>
     3b0:	6f 91       	pop	r22
     3b2:	31 97       	sbiw	r30, 0x01	; 1
     3b4:	c9 f7       	brne	.-14     	; 0x3a8 <_ZN12OrangutanLCD8busyWaitEv+0x62>
     3b6:	2a 98       	cbi	0x05, 2	; 5
     3b8:	2c 5f       	subi	r18, 0xFC	; 252
     3ba:	3f 4f       	sbci	r19, 0xFF	; 255
     3bc:	85 ff       	sbrs	r24, 5
     3be:	09 c0       	rjmp	.+18     	; 0x3d2 <_ZN12OrangutanLCD8busyWaitEv+0x8c>
     3c0:	c9 01       	movw	r24, r18
     3c2:	a0 e0       	ldi	r26, 0x00	; 0
     3c4:	b0 e0       	ldi	r27, 0x00	; 0
     3c6:	8e 15       	cp	r24, r14
     3c8:	9f 05       	cpc	r25, r15
     3ca:	a0 07       	cpc	r26, r16
     3cc:	b1 07       	cpc	r27, r17
     3ce:	08 f4       	brcc	.+2      	; 0x3d2 <_ZN12OrangutanLCD8busyWaitEv+0x8c>
     3d0:	ce cf       	rjmp	.-100    	; 0x36e <_ZN12OrangutanLCD8busyWaitEv+0x28>
     3d2:	c9 01       	movw	r24, r18
     3d4:	a0 e0       	ldi	r26, 0x00	; 0
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	8e 15       	cp	r24, r14
     3da:	9f 05       	cpc	r25, r15
     3dc:	a0 07       	cpc	r26, r16
     3de:	b1 07       	cpc	r27, r17
     3e0:	28 f0       	brcs	.+10     	; 0x3ec <_ZN12OrangutanLCD8busyWaitEv+0xa6>
     3e2:	82 e3       	ldi	r24, 0x32	; 50
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	a0 e0       	ldi	r26, 0x00	; 0
     3e8:	b0 e0       	ldi	r27, 0x00	; 0
     3ea:	04 c0       	rjmp	.+8      	; 0x3f4 <_ZN12OrangutanLCD8busyWaitEv+0xae>
     3ec:	80 e3       	ldi	r24, 0x30	; 48
     3ee:	95 e7       	ldi	r25, 0x75	; 117
     3f0:	a0 e0       	ldi	r26, 0x00	; 0
     3f2:	b0 e0       	ldi	r27, 0x00	; 0
     3f4:	80 93 1e 01 	sts	0x011E, r24
     3f8:	90 93 1f 01 	sts	0x011F, r25
     3fc:	a0 93 20 01 	sts	0x0120, r26
     400:	b0 93 21 01 	sts	0x0121, r27
     404:	67 b9       	out	0x07, r22	; 7
     406:	1f 91       	pop	r17
     408:	0f 91       	pop	r16
     40a:	ff 90       	pop	r15
     40c:	ef 90       	pop	r14
     40e:	08 95       	ret

00000410 <_ZN12OrangutanLCD8sendDataEh>:
     410:	28 b1       	in	r18, 0x08	; 8
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	8f 70       	andi	r24, 0x0F	; 15
     416:	90 70       	andi	r25, 0x00	; 0
     418:	88 0f       	add	r24, r24
     41a:	99 1f       	adc	r25, r25
     41c:	88 0f       	add	r24, r24
     41e:	99 1f       	adc	r25, r25
     420:	23 7c       	andi	r18, 0xC3	; 195
     422:	28 2b       	or	r18, r24
     424:	28 b9       	out	0x08, r18	; 8
     426:	2a 9a       	sbi	0x05, 2	; 5
     428:	81 e0       	ldi	r24, 0x01	; 1
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	fc 01       	movw	r30, r24
     42e:	6f 93       	push	r22
     430:	64 e0       	ldi	r22, 0x04	; 4
     432:	6a 95       	dec	r22
     434:	f1 f7       	brne	.-4      	; 0x432 <_ZN12OrangutanLCD8sendDataEh+0x22>
     436:	6f 91       	pop	r22
     438:	31 97       	sbiw	r30, 0x01	; 1
     43a:	c9 f7       	brne	.-14     	; 0x42e <_ZN12OrangutanLCD8sendDataEh+0x1e>
     43c:	2a 98       	cbi	0x05, 2	; 5
     43e:	6f 93       	push	r22
     440:	64 e0       	ldi	r22, 0x04	; 4
     442:	6a 95       	dec	r22
     444:	f1 f7       	brne	.-4      	; 0x442 <_ZN12OrangutanLCD8sendDataEh+0x32>
     446:	6f 91       	pop	r22
     448:	01 97       	sbiw	r24, 0x01	; 1
     44a:	c9 f7       	brne	.-14     	; 0x43e <_ZN12OrangutanLCD8sendDataEh+0x2e>
     44c:	08 95       	ret

0000044e <_ZN12OrangutanLCD10initPrintfEv>:
     44e:	80 91 1a 01 	lds	r24, 0x011A
     452:	90 91 1b 01 	lds	r25, 0x011B
     456:	00 97       	sbiw	r24, 0x00	; 0
     458:	11 f0       	breq	.+4      	; 0x45e <_ZN12OrangutanLCD10initPrintfEv+0x10>
     45a:	0e 94 1f 08 	call	0x103e	; 0x103e <free>
     45e:	80 91 11 01 	lds	r24, 0x0111
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	01 97       	sbiw	r24, 0x01	; 1
     466:	20 91 12 01 	lds	r18, 0x0112
     46a:	30 e0       	ldi	r19, 0x00	; 0
     46c:	ac 01       	movw	r20, r24
     46e:	42 9f       	mul	r20, r18
     470:	c0 01       	movw	r24, r0
     472:	43 9f       	mul	r20, r19
     474:	90 0d       	add	r25, r0
     476:	52 9f       	mul	r21, r18
     478:	90 0d       	add	r25, r0
     47a:	11 24       	eor	r1, r1
     47c:	0e 94 72 07 	call	0xee4	; 0xee4 <malloc>
     480:	90 93 1b 01 	sts	0x011B, r25
     484:	80 93 1a 01 	sts	0x011A, r24
     488:	00 97       	sbiw	r24, 0x00	; 0
     48a:	29 f1       	breq	.+74     	; 0x4d6 <_ZN12OrangutanLCD10initPrintfEv+0x88>
     48c:	60 e0       	ldi	r22, 0x00	; 0
     48e:	70 e2       	ldi	r23, 0x20	; 32
     490:	08 c0       	rjmp	.+16     	; 0x4a2 <_ZN12OrangutanLCD10initPrintfEv+0x54>
     492:	e0 91 1a 01 	lds	r30, 0x011A
     496:	f0 91 1b 01 	lds	r31, 0x011B
     49a:	e4 0f       	add	r30, r20
     49c:	f5 1f       	adc	r31, r21
     49e:	70 83       	st	Z, r23
     4a0:	6f 5f       	subi	r22, 0xFF	; 255
     4a2:	46 2f       	mov	r20, r22
     4a4:	50 e0       	ldi	r21, 0x00	; 0
     4a6:	80 91 11 01 	lds	r24, 0x0111
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	01 97       	sbiw	r24, 0x01	; 1
     4ae:	20 91 12 01 	lds	r18, 0x0112
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	fc 01       	movw	r30, r24
     4b6:	e2 9f       	mul	r30, r18
     4b8:	c0 01       	movw	r24, r0
     4ba:	e3 9f       	mul	r30, r19
     4bc:	90 0d       	add	r25, r0
     4be:	f2 9f       	mul	r31, r18
     4c0:	90 0d       	add	r25, r0
     4c2:	11 24       	eor	r1, r1
     4c4:	48 17       	cp	r20, r24
     4c6:	59 07       	cpc	r21, r25
     4c8:	24 f3       	brlt	.-56     	; 0x492 <_ZN12OrangutanLCD10initPrintfEv+0x44>
     4ca:	8c e8       	ldi	r24, 0x8C	; 140
     4cc:	94 e0       	ldi	r25, 0x04	; 4
     4ce:	60 ea       	ldi	r22, 0xA0	; 160
     4d0:	71 e0       	ldi	r23, 0x01	; 1
     4d2:	0e 94 77 08 	call	0x10ee	; 0x10ee <fdevopen>
     4d6:	08 95       	ret

000004d8 <_ZN12OrangutanLCD10initPrintfEhh>:
     4d8:	80 93 12 01 	sts	0x0112, r24
     4dc:	60 93 11 01 	sts	0x0111, r22
     4e0:	0e 94 27 02 	call	0x44e	; 0x44e <_ZN12OrangutanLCD10initPrintfEv>
     4e4:	08 95       	ret

000004e6 <lcd_init_printf_with_dimensions>:
     4e6:	80 93 12 01 	sts	0x0112, r24
     4ea:	60 93 11 01 	sts	0x0111, r22
     4ee:	0e 94 27 02 	call	0x44e	; 0x44e <_ZN12OrangutanLCD10initPrintfEv>
     4f2:	08 95       	ret

000004f4 <lcd_init_printf>:
     4f4:	0e 94 27 02 	call	0x44e	; 0x44e <_ZN12OrangutanLCD10initPrintfEv>
     4f8:	08 95       	ret

000004fa <_ZN12OrangutanLCD5init2Ev>:
     4fa:	3d 98       	cbi	0x07, 5	; 7
     4fc:	45 9a       	sbi	0x08, 5	; 8
     4fe:	80 e3       	ldi	r24, 0x30	; 48
     500:	95 e7       	ldi	r25, 0x75	; 117
     502:	a0 e0       	ldi	r26, 0x00	; 0
     504:	b0 e0       	ldi	r27, 0x00	; 0
     506:	80 93 1e 01 	sts	0x011E, r24
     50a:	90 93 1f 01 	sts	0x011F, r25
     50e:	a0 93 20 01 	sts	0x0120, r26
     512:	b0 93 21 01 	sts	0x0121, r27
     516:	20 9a       	sbi	0x04, 0	; 4
     518:	21 9a       	sbi	0x04, 1	; 4
     51a:	22 9a       	sbi	0x04, 2	; 4
     51c:	8e e1       	ldi	r24, 0x1E	; 30
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	0e 94 5f 06 	call	0xcbe	; 0xcbe <_ZN13OrangutanTime17delayMillisecondsEj>
     524:	83 e0       	ldi	r24, 0x03	; 3
     526:	0e 94 d2 05 	call	0xba4	; 0xba4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     52a:	86 e0       	ldi	r24, 0x06	; 6
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	0e 94 5f 06 	call	0xcbe	; 0xcbe <_ZN13OrangutanTime17delayMillisecondsEj>
     532:	83 e0       	ldi	r24, 0x03	; 3
     534:	0e 94 d2 05 	call	0xba4	; 0xba4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     538:	82 e0       	ldi	r24, 0x02	; 2
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	0e 94 5f 06 	call	0xcbe	; 0xcbe <_ZN13OrangutanTime17delayMillisecondsEj>
     540:	83 e0       	ldi	r24, 0x03	; 3
     542:	0e 94 d2 05 	call	0xba4	; 0xba4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     546:	82 e0       	ldi	r24, 0x02	; 2
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	0e 94 5f 06 	call	0xcbe	; 0xcbe <_ZN13OrangutanTime17delayMillisecondsEj>
     54e:	82 e0       	ldi	r24, 0x02	; 2
     550:	0e 94 d2 05 	call	0xba4	; 0xba4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     554:	82 e0       	ldi	r24, 0x02	; 2
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	0e 94 5f 06 	call	0xcbe	; 0xcbe <_ZN13OrangutanTime17delayMillisecondsEj>
     55c:	88 e2       	ldi	r24, 0x28	; 40
     55e:	0e 94 1c 03 	call	0x638	; 0x638 <_ZN12OrangutanLCD8send_cmdEh>
     562:	88 e0       	ldi	r24, 0x08	; 8
     564:	0e 94 1c 03 	call	0x638	; 0x638 <_ZN12OrangutanLCD8send_cmdEh>
     568:	81 e0       	ldi	r24, 0x01	; 1
     56a:	0e 94 1c 03 	call	0x638	; 0x638 <_ZN12OrangutanLCD8send_cmdEh>
     56e:	86 e0       	ldi	r24, 0x06	; 6
     570:	0e 94 1c 03 	call	0x638	; 0x638 <_ZN12OrangutanLCD8send_cmdEh>
     574:	8c e0       	ldi	r24, 0x0C	; 12
     576:	0e 94 1c 03 	call	0x638	; 0x638 <_ZN12OrangutanLCD8send_cmdEh>
     57a:	08 95       	ret

0000057c <_ZN12OrangutanLCD4initEv>:
     57c:	80 91 22 01 	lds	r24, 0x0122
     580:	88 23       	and	r24, r24
     582:	29 f4       	brne	.+10     	; 0x58e <_ZN12OrangutanLCD4initEv+0x12>
     584:	81 e0       	ldi	r24, 0x01	; 1
     586:	80 93 22 01 	sts	0x0122, r24
     58a:	0e 94 7d 02 	call	0x4fa	; 0x4fa <_ZN12OrangutanLCD5init2Ev>
     58e:	08 95       	ret

00000590 <_ZN12OrangutanLCD4sendEhhh>:
     590:	ff 92       	push	r15
     592:	0f 93       	push	r16
     594:	1f 93       	push	r17
     596:	08 2f       	mov	r16, r24
     598:	16 2f       	mov	r17, r22
     59a:	f4 2e       	mov	r15, r20
     59c:	0e 94 be 02 	call	0x57c	; 0x57c <_ZN12OrangutanLCD4initEv>
     5a0:	0e 94 a3 01 	call	0x346	; 0x346 <_ZN12OrangutanLCD8busyWaitEv>
     5a4:	37 b1       	in	r19, 0x07	; 7
     5a6:	28 b1       	in	r18, 0x08	; 8
     5a8:	29 98       	cbi	0x05, 1	; 5
     5aa:	11 23       	and	r17, r17
     5ac:	11 f0       	breq	.+4      	; 0x5b2 <_ZN12OrangutanLCD4sendEhhh+0x22>
     5ae:	28 9a       	sbi	0x05, 0	; 5
     5b0:	01 c0       	rjmp	.+2      	; 0x5b4 <_ZN12OrangutanLCD4sendEhhh+0x24>
     5b2:	28 98       	cbi	0x05, 0	; 5
     5b4:	87 b1       	in	r24, 0x07	; 7
     5b6:	8c 63       	ori	r24, 0x3C	; 60
     5b8:	87 b9       	out	0x07, r24	; 7
     5ba:	81 e0       	ldi	r24, 0x01	; 1
     5bc:	f8 16       	cp	r15, r24
     5be:	e1 f0       	breq	.+56     	; 0x5f8 <_ZN12OrangutanLCD4sendEhhh+0x68>
     5c0:	88 b1       	in	r24, 0x08	; 8
     5c2:	90 2f       	mov	r25, r16
     5c4:	92 95       	swap	r25
     5c6:	9f 70       	andi	r25, 0x0F	; 15
     5c8:	99 0f       	add	r25, r25
     5ca:	99 0f       	add	r25, r25
     5cc:	83 7c       	andi	r24, 0xC3	; 195
     5ce:	98 2b       	or	r25, r24
     5d0:	98 b9       	out	0x08, r25	; 8
     5d2:	2a 9a       	sbi	0x05, 2	; 5
     5d4:	81 e0       	ldi	r24, 0x01	; 1
     5d6:	90 e0       	ldi	r25, 0x00	; 0
     5d8:	fc 01       	movw	r30, r24
     5da:	6f 93       	push	r22
     5dc:	64 e0       	ldi	r22, 0x04	; 4
     5de:	6a 95       	dec	r22
     5e0:	f1 f7       	brne	.-4      	; 0x5de <_ZN12OrangutanLCD4sendEhhh+0x4e>
     5e2:	6f 91       	pop	r22
     5e4:	31 97       	sbiw	r30, 0x01	; 1
     5e6:	c9 f7       	brne	.-14     	; 0x5da <_ZN12OrangutanLCD4sendEhhh+0x4a>
     5e8:	2a 98       	cbi	0x05, 2	; 5
     5ea:	6f 93       	push	r22
     5ec:	64 e0       	ldi	r22, 0x04	; 4
     5ee:	6a 95       	dec	r22
     5f0:	f1 f7       	brne	.-4      	; 0x5ee <_ZN12OrangutanLCD4sendEhhh+0x5e>
     5f2:	6f 91       	pop	r22
     5f4:	01 97       	sbiw	r24, 0x01	; 1
     5f6:	c9 f7       	brne	.-14     	; 0x5ea <_ZN12OrangutanLCD4sendEhhh+0x5a>
     5f8:	88 b1       	in	r24, 0x08	; 8
     5fa:	0f 70       	andi	r16, 0x0F	; 15
     5fc:	00 0f       	add	r16, r16
     5fe:	00 0f       	add	r16, r16
     600:	83 7c       	andi	r24, 0xC3	; 195
     602:	80 2b       	or	r24, r16
     604:	88 b9       	out	0x08, r24	; 8
     606:	2a 9a       	sbi	0x05, 2	; 5
     608:	81 e0       	ldi	r24, 0x01	; 1
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	fc 01       	movw	r30, r24
     60e:	6f 93       	push	r22
     610:	64 e0       	ldi	r22, 0x04	; 4
     612:	6a 95       	dec	r22
     614:	f1 f7       	brne	.-4      	; 0x612 <_ZN12OrangutanLCD4sendEhhh+0x82>
     616:	6f 91       	pop	r22
     618:	31 97       	sbiw	r30, 0x01	; 1
     61a:	c9 f7       	brne	.-14     	; 0x60e <_ZN12OrangutanLCD4sendEhhh+0x7e>
     61c:	2a 98       	cbi	0x05, 2	; 5
     61e:	6f 93       	push	r22
     620:	64 e0       	ldi	r22, 0x04	; 4
     622:	6a 95       	dec	r22
     624:	f1 f7       	brne	.-4      	; 0x622 <_ZN12OrangutanLCD4sendEhhh+0x92>
     626:	6f 91       	pop	r22
     628:	01 97       	sbiw	r24, 0x01	; 1
     62a:	c9 f7       	brne	.-14     	; 0x61e <_ZN12OrangutanLCD4sendEhhh+0x8e>
     62c:	37 b9       	out	0x07, r19	; 7
     62e:	28 b9       	out	0x08, r18	; 8
     630:	1f 91       	pop	r17
     632:	0f 91       	pop	r16
     634:	ff 90       	pop	r15
     636:	08 95       	ret

00000638 <_ZN12OrangutanLCD8send_cmdEh>:
     638:	60 e0       	ldi	r22, 0x00	; 0
     63a:	42 e0       	ldi	r20, 0x02	; 2
     63c:	0e 94 c8 02 	call	0x590	; 0x590 <_ZN12OrangutanLCD4sendEhhh>
     640:	08 95       	ret

00000642 <_ZN12OrangutanLCD10moveCursorEhh>:
     642:	0f 93       	push	r16
     644:	1f 93       	push	r17
     646:	08 2f       	mov	r16, r24
     648:	16 2f       	mov	r17, r22
     64a:	08 c0       	rjmp	.+16     	; 0x65c <_ZN12OrangutanLCD10moveCursorEhh+0x1a>
     64c:	00 23       	and	r16, r16
     64e:	11 f4       	brne	.+4      	; 0x654 <_ZN12OrangutanLCD10moveCursorEhh+0x12>
     650:	80 e1       	ldi	r24, 0x10	; 16
     652:	01 c0       	rjmp	.+2      	; 0x656 <_ZN12OrangutanLCD10moveCursorEhh+0x14>
     654:	84 e1       	ldi	r24, 0x14	; 20
     656:	0e 94 1c 03 	call	0x638	; 0x638 <_ZN12OrangutanLCD8send_cmdEh>
     65a:	11 50       	subi	r17, 0x01	; 1
     65c:	11 23       	and	r17, r17
     65e:	b1 f7       	brne	.-20     	; 0x64c <_ZN12OrangutanLCD10moveCursorEhh+0xa>
     660:	1f 91       	pop	r17
     662:	0f 91       	pop	r16
     664:	08 95       	ret

00000666 <lcd_move_cursor>:
     666:	0e 94 21 03 	call	0x642	; 0x642 <_ZN12OrangutanLCD10moveCursorEhh>
     66a:	08 95       	ret

0000066c <_ZN12OrangutanLCD10hideCursorEv>:
     66c:	8c e0       	ldi	r24, 0x0C	; 12
     66e:	0e 94 1c 03 	call	0x638	; 0x638 <_ZN12OrangutanLCD8send_cmdEh>
     672:	08 95       	ret

00000674 <lcd_hide_cursor>:
     674:	0e 94 36 03 	call	0x66c	; 0x66c <_ZN12OrangutanLCD10hideCursorEv>
     678:	08 95       	ret

0000067a <_ZN12OrangutanLCD10showCursorEh>:
     67a:	81 30       	cpi	r24, 0x01	; 1
     67c:	11 f4       	brne	.+4      	; 0x682 <_ZN12OrangutanLCD10showCursorEh+0x8>
     67e:	8f e0       	ldi	r24, 0x0F	; 15
     680:	01 c0       	rjmp	.+2      	; 0x684 <_ZN12OrangutanLCD10showCursorEh+0xa>
     682:	8e e0       	ldi	r24, 0x0E	; 14
     684:	0e 94 1c 03 	call	0x638	; 0x638 <_ZN12OrangutanLCD8send_cmdEh>
     688:	08 95       	ret

0000068a <lcd_show_cursor>:
     68a:	0e 94 3d 03 	call	0x67a	; 0x67a <_ZN12OrangutanLCD10showCursorEh>
     68e:	08 95       	ret

00000690 <_ZN12OrangutanLCD6gotoXYEhh>:
     690:	a4 e0       	ldi	r26, 0x04	; 4
     692:	b0 e0       	ldi	r27, 0x00	; 0
     694:	ee e4       	ldi	r30, 0x4E	; 78
     696:	f3 e0       	ldi	r31, 0x03	; 3
     698:	0c 94 49 07 	jmp	0xe92	; 0xe92 <__prologue_saves__+0x1c>
     69c:	18 2f       	mov	r17, r24
     69e:	06 2f       	mov	r16, r22
     6a0:	80 e8       	ldi	r24, 0x80	; 128
     6a2:	89 83       	std	Y+1, r24	; 0x01
     6a4:	80 ec       	ldi	r24, 0xC0	; 192
     6a6:	8a 83       	std	Y+2, r24	; 0x02
     6a8:	84 e9       	ldi	r24, 0x94	; 148
     6aa:	8b 83       	std	Y+3, r24	; 0x03
     6ac:	84 ed       	ldi	r24, 0xD4	; 212
     6ae:	8c 83       	std	Y+4, r24	; 0x04
     6b0:	fe 01       	movw	r30, r28
     6b2:	e6 0f       	add	r30, r22
     6b4:	f1 1d       	adc	r31, r1
     6b6:	81 81       	ldd	r24, Z+1	; 0x01
     6b8:	81 0f       	add	r24, r17
     6ba:	0e 94 1c 03 	call	0x638	; 0x638 <_ZN12OrangutanLCD8send_cmdEh>
     6be:	10 93 1d 01 	sts	0x011D, r17
     6c2:	00 93 1c 01 	sts	0x011C, r16
     6c6:	24 96       	adiw	r28, 0x04	; 4
     6c8:	e4 e0       	ldi	r30, 0x04	; 4
     6ca:	0c 94 65 07 	jmp	0xeca	; 0xeca <__epilogue_restores__+0x1c>

000006ce <lcd_goto_xy>:
     6ce:	0e 94 48 03 	call	0x690	; 0x690 <_ZN12OrangutanLCD6gotoXYEhh>
     6d2:	08 95       	ret

000006d4 <_ZN12OrangutanLCD5clearEv>:
     6d4:	81 e0       	ldi	r24, 0x01	; 1
     6d6:	0e 94 1c 03 	call	0x638	; 0x638 <_ZN12OrangutanLCD8send_cmdEh>
     6da:	80 91 1a 01 	lds	r24, 0x011A
     6de:	90 91 1b 01 	lds	r25, 0x011B
     6e2:	89 2b       	or	r24, r25
     6e4:	19 f1       	breq	.+70     	; 0x72c <_ZN12OrangutanLCD5clearEv+0x58>
     6e6:	60 e0       	ldi	r22, 0x00	; 0
     6e8:	70 e2       	ldi	r23, 0x20	; 32
     6ea:	08 c0       	rjmp	.+16     	; 0x6fc <_ZN12OrangutanLCD5clearEv+0x28>
     6ec:	e0 91 1a 01 	lds	r30, 0x011A
     6f0:	f0 91 1b 01 	lds	r31, 0x011B
     6f4:	e4 0f       	add	r30, r20
     6f6:	f5 1f       	adc	r31, r21
     6f8:	70 83       	st	Z, r23
     6fa:	6f 5f       	subi	r22, 0xFF	; 255
     6fc:	46 2f       	mov	r20, r22
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 91 11 01 	lds	r24, 0x0111
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	01 97       	sbiw	r24, 0x01	; 1
     708:	20 91 12 01 	lds	r18, 0x0112
     70c:	30 e0       	ldi	r19, 0x00	; 0
     70e:	fc 01       	movw	r30, r24
     710:	e2 9f       	mul	r30, r18
     712:	c0 01       	movw	r24, r0
     714:	e3 9f       	mul	r30, r19
     716:	90 0d       	add	r25, r0
     718:	f2 9f       	mul	r31, r18
     71a:	90 0d       	add	r25, r0
     71c:	11 24       	eor	r1, r1
     71e:	48 17       	cp	r20, r24
     720:	59 07       	cpc	r21, r25
     722:	24 f3       	brlt	.-56     	; 0x6ec <_ZN12OrangutanLCD5clearEv+0x18>
     724:	10 92 1d 01 	sts	0x011D, r1
     728:	10 92 1c 01 	sts	0x011C, r1
     72c:	08 95       	ret

0000072e <clear>:
     72e:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <_ZN12OrangutanLCD5clearEv>
     732:	08 95       	ret

00000734 <_ZN12OrangutanLCD9send_dataEh>:
     734:	61 e0       	ldi	r22, 0x01	; 1
     736:	42 e0       	ldi	r20, 0x02	; 2
     738:	0e 94 c8 02 	call	0x590	; 0x590 <_ZN12OrangutanLCD4sendEhhh>
     73c:	08 95       	ret

0000073e <_ZN12OrangutanLCD11printBinaryEh>:
     73e:	0f 93       	push	r16
     740:	1f 93       	push	r17
     742:	cf 93       	push	r28
     744:	df 93       	push	r29
     746:	00 e0       	ldi	r16, 0x00	; 0
     748:	10 e8       	ldi	r17, 0x80	; 128
     74a:	c8 2f       	mov	r28, r24
     74c:	d0 e0       	ldi	r29, 0x00	; 0
     74e:	81 2f       	mov	r24, r17
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	8c 23       	and	r24, r28
     754:	9d 23       	and	r25, r29
     756:	89 2b       	or	r24, r25
     758:	11 f0       	breq	.+4      	; 0x75e <_ZN12OrangutanLCD11printBinaryEh+0x20>
     75a:	81 e3       	ldi	r24, 0x31	; 49
     75c:	01 c0       	rjmp	.+2      	; 0x760 <_ZN12OrangutanLCD11printBinaryEh+0x22>
     75e:	80 e3       	ldi	r24, 0x30	; 48
     760:	0e 94 9a 03 	call	0x734	; 0x734 <_ZN12OrangutanLCD9send_dataEh>
     764:	0f 5f       	subi	r16, 0xFF	; 255
     766:	08 30       	cpi	r16, 0x08	; 8
     768:	11 f0       	breq	.+4      	; 0x76e <_ZN12OrangutanLCD11printBinaryEh+0x30>
     76a:	16 95       	lsr	r17
     76c:	f0 cf       	rjmp	.-32     	; 0x74e <_ZN12OrangutanLCD11printBinaryEh+0x10>
     76e:	df 91       	pop	r29
     770:	cf 91       	pop	r28
     772:	1f 91       	pop	r17
     774:	0f 91       	pop	r16
     776:	08 95       	ret

00000778 <print_binary>:
     778:	0e 94 9f 03 	call	0x73e	; 0x73e <_ZN12OrangutanLCD11printBinaryEh>
     77c:	08 95       	ret

0000077e <_ZN12OrangutanLCD14printHexNibbleEh>:
     77e:	8a 30       	cpi	r24, 0x0A	; 10
     780:	10 f4       	brcc	.+4      	; 0x786 <_ZN12OrangutanLCD14printHexNibbleEh+0x8>
     782:	80 5d       	subi	r24, 0xD0	; 208
     784:	01 c0       	rjmp	.+2      	; 0x788 <_ZN12OrangutanLCD14printHexNibbleEh+0xa>
     786:	89 5c       	subi	r24, 0xC9	; 201
     788:	0e 94 9a 03 	call	0x734	; 0x734 <_ZN12OrangutanLCD9send_dataEh>
     78c:	08 95       	ret

0000078e <_ZN12OrangutanLCD8printHexEh>:
     78e:	1f 93       	push	r17
     790:	18 2f       	mov	r17, r24
     792:	82 95       	swap	r24
     794:	8f 70       	andi	r24, 0x0F	; 15
     796:	0e 94 bf 03 	call	0x77e	; 0x77e <_ZN12OrangutanLCD14printHexNibbleEh>
     79a:	81 2f       	mov	r24, r17
     79c:	8f 70       	andi	r24, 0x0F	; 15
     79e:	0e 94 bf 03 	call	0x77e	; 0x77e <_ZN12OrangutanLCD14printHexNibbleEh>
     7a2:	1f 91       	pop	r17
     7a4:	08 95       	ret

000007a6 <_ZN12OrangutanLCD8printHexEj>:
     7a6:	1f 93       	push	r17
     7a8:	18 2f       	mov	r17, r24
     7aa:	89 2f       	mov	r24, r25
     7ac:	0e 94 c7 03 	call	0x78e	; 0x78e <_ZN12OrangutanLCD8printHexEh>
     7b0:	81 2f       	mov	r24, r17
     7b2:	0e 94 c7 03 	call	0x78e	; 0x78e <_ZN12OrangutanLCD8printHexEh>
     7b6:	1f 91       	pop	r17
     7b8:	08 95       	ret

000007ba <print_hex>:
     7ba:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <_ZN12OrangutanLCD8printHexEj>
     7be:	08 95       	ret

000007c0 <print_hex_byte>:
     7c0:	0e 94 c7 03 	call	0x78e	; 0x78e <_ZN12OrangutanLCD8printHexEh>
     7c4:	08 95       	ret

000007c6 <_ZN12OrangutanLCD5printEm>:
     7c6:	6f 92       	push	r6
     7c8:	7f 92       	push	r7
     7ca:	8f 92       	push	r8
     7cc:	9f 92       	push	r9
     7ce:	af 92       	push	r10
     7d0:	bf 92       	push	r11
     7d2:	cf 92       	push	r12
     7d4:	df 92       	push	r13
     7d6:	ff 92       	push	r15
     7d8:	0f 93       	push	r16
     7da:	df 93       	push	r29
     7dc:	cf 93       	push	r28
     7de:	cd b7       	in	r28, 0x3d	; 61
     7e0:	de b7       	in	r29, 0x3e	; 62
     7e2:	2a 97       	sbiw	r28, 0x0a	; 10
     7e4:	0f b6       	in	r0, 0x3f	; 63
     7e6:	f8 94       	cli
     7e8:	de bf       	out	0x3e, r29	; 62
     7ea:	0f be       	out	0x3f, r0	; 63
     7ec:	cd bf       	out	0x3d, r28	; 61
     7ee:	5b 01       	movw	r10, r22
     7f0:	6c 01       	movw	r12, r24
     7f2:	0a e0       	ldi	r16, 0x0A	; 10
     7f4:	3e 01       	movw	r6, r28
     7f6:	08 94       	sec
     7f8:	61 1c       	adc	r6, r1
     7fa:	71 1c       	adc	r7, r1
     7fc:	fa 2c       	mov	r15, r10
     7fe:	c6 01       	movw	r24, r12
     800:	b5 01       	movw	r22, r10
     802:	2a e0       	ldi	r18, 0x0A	; 10
     804:	30 e0       	ldi	r19, 0x00	; 0
     806:	40 e0       	ldi	r20, 0x00	; 0
     808:	50 e0       	ldi	r21, 0x00	; 0
     80a:	0e 94 19 07 	call	0xe32	; 0xe32 <__udivmodsi4>
     80e:	c9 01       	movw	r24, r18
     810:	da 01       	movw	r26, r20
     812:	5c 01       	movw	r10, r24
     814:	6d 01       	movw	r12, r26
     816:	01 50       	subi	r16, 0x01	; 1
     818:	43 01       	movw	r8, r6
     81a:	80 0e       	add	r8, r16
     81c:	91 1c       	adc	r9, r1
     81e:	80 e3       	ldi	r24, 0x30	; 48
     820:	f8 0e       	add	r15, r24
     822:	c6 01       	movw	r24, r12
     824:	b5 01       	movw	r22, r10
     826:	2a e0       	ldi	r18, 0x0A	; 10
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	40 e0       	ldi	r20, 0x00	; 0
     82c:	50 e0       	ldi	r21, 0x00	; 0
     82e:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsi3>
     832:	f6 1a       	sub	r15, r22
     834:	f4 01       	movw	r30, r8
     836:	f0 82       	st	Z, r15
     838:	a1 14       	cp	r10, r1
     83a:	b1 04       	cpc	r11, r1
     83c:	c1 04       	cpc	r12, r1
     83e:	d1 04       	cpc	r13, r1
     840:	e9 f6       	brne	.-70     	; 0x7fc <_ZN12OrangutanLCD5printEm+0x36>
     842:	08 c0       	rjmp	.+16     	; 0x854 <_ZN12OrangutanLCD5printEm+0x8e>
     844:	f6 01       	movw	r30, r12
     846:	e0 0f       	add	r30, r16
     848:	f1 1d       	adc	r31, r1
     84a:	80 81       	ld	r24, Z
     84c:	0e 94 9a 03 	call	0x734	; 0x734 <_ZN12OrangutanLCD9send_dataEh>
     850:	0f 5f       	subi	r16, 0xFF	; 255
     852:	04 c0       	rjmp	.+8      	; 0x85c <_ZN12OrangutanLCD5printEm+0x96>
     854:	6e 01       	movw	r12, r28
     856:	08 94       	sec
     858:	c1 1c       	adc	r12, r1
     85a:	d1 1c       	adc	r13, r1
     85c:	0a 30       	cpi	r16, 0x0A	; 10
     85e:	90 f3       	brcs	.-28     	; 0x844 <_ZN12OrangutanLCD5printEm+0x7e>
     860:	2a 96       	adiw	r28, 0x0a	; 10
     862:	0f b6       	in	r0, 0x3f	; 63
     864:	f8 94       	cli
     866:	de bf       	out	0x3e, r29	; 62
     868:	0f be       	out	0x3f, r0	; 63
     86a:	cd bf       	out	0x3d, r28	; 61
     86c:	cf 91       	pop	r28
     86e:	df 91       	pop	r29
     870:	0f 91       	pop	r16
     872:	ff 90       	pop	r15
     874:	df 90       	pop	r13
     876:	cf 90       	pop	r12
     878:	bf 90       	pop	r11
     87a:	af 90       	pop	r10
     87c:	9f 90       	pop	r9
     87e:	8f 90       	pop	r8
     880:	7f 90       	pop	r7
     882:	6f 90       	pop	r6
     884:	08 95       	ret

00000886 <print_unsigned_long>:
     886:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <_ZN12OrangutanLCD5printEm>
     88a:	08 95       	ret

0000088c <_ZN12OrangutanLCD5printEl>:
     88c:	ef 92       	push	r14
     88e:	ff 92       	push	r15
     890:	0f 93       	push	r16
     892:	1f 93       	push	r17
     894:	7b 01       	movw	r14, r22
     896:	8c 01       	movw	r16, r24
     898:	97 ff       	sbrs	r25, 7
     89a:	0b c0       	rjmp	.+22     	; 0x8b2 <_ZN12OrangutanLCD5printEl+0x26>
     89c:	10 95       	com	r17
     89e:	00 95       	com	r16
     8a0:	f0 94       	com	r15
     8a2:	e0 94       	com	r14
     8a4:	e1 1c       	adc	r14, r1
     8a6:	f1 1c       	adc	r15, r1
     8a8:	01 1d       	adc	r16, r1
     8aa:	11 1d       	adc	r17, r1
     8ac:	8d e2       	ldi	r24, 0x2D	; 45
     8ae:	0e 94 9a 03 	call	0x734	; 0x734 <_ZN12OrangutanLCD9send_dataEh>
     8b2:	c8 01       	movw	r24, r16
     8b4:	b7 01       	movw	r22, r14
     8b6:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <_ZN12OrangutanLCD5printEm>
     8ba:	1f 91       	pop	r17
     8bc:	0f 91       	pop	r16
     8be:	ff 90       	pop	r15
     8c0:	ef 90       	pop	r14
     8c2:	08 95       	ret

000008c4 <print_long>:
     8c4:	0e 94 46 04 	call	0x88c	; 0x88c <_ZN12OrangutanLCD5printEl>
     8c8:	08 95       	ret

000008ca <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>:
     8ca:	cf 93       	push	r28
     8cc:	df 93       	push	r29
     8ce:	ec 01       	movw	r28, r24
     8d0:	03 c0       	rjmp	.+6      	; 0x8d8 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0xe>
     8d2:	0e 94 9a 03 	call	0x734	; 0x734 <_ZN12OrangutanLCD9send_dataEh>
     8d6:	21 96       	adiw	r28, 0x01	; 1
     8d8:	fe 01       	movw	r30, r28
     8da:	84 91       	lpm	r24, Z+
     8dc:	88 23       	and	r24, r24
     8de:	c9 f7       	brne	.-14     	; 0x8d2 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0x8>
     8e0:	df 91       	pop	r29
     8e2:	cf 91       	pop	r28
     8e4:	08 95       	ret

000008e6 <print_from_program_space>:
     8e6:	0e 94 65 04 	call	0x8ca	; 0x8ca <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>
     8ea:	08 95       	ret

000008ec <_ZN12OrangutanLCD5printEPKc>:
     8ec:	cf 93       	push	r28
     8ee:	df 93       	push	r29
     8f0:	ec 01       	movw	r28, r24
     8f2:	03 c0       	rjmp	.+6      	; 0x8fa <_ZN12OrangutanLCD5printEPKc+0xe>
     8f4:	21 96       	adiw	r28, 0x01	; 1
     8f6:	0e 94 9a 03 	call	0x734	; 0x734 <_ZN12OrangutanLCD9send_dataEh>
     8fa:	88 81       	ld	r24, Y
     8fc:	88 23       	and	r24, r24
     8fe:	d1 f7       	brne	.-12     	; 0x8f4 <_ZN12OrangutanLCD5printEPKc+0x8>
     900:	df 91       	pop	r29
     902:	cf 91       	pop	r28
     904:	08 95       	ret

00000906 <print>:
     906:	0e 94 76 04 	call	0x8ec	; 0x8ec <_ZN12OrangutanLCD5printEPKc>
     90a:	08 95       	ret

0000090c <_ZN12OrangutanLCD5printEc>:
     90c:	0e 94 9a 03 	call	0x734	; 0x734 <_ZN12OrangutanLCD9send_dataEh>
     910:	08 95       	ret

00000912 <print_character>:
     912:	0e 94 9a 03 	call	0x734	; 0x734 <_ZN12OrangutanLCD9send_dataEh>
     916:	08 95       	ret

00000918 <lcd_putchar>:
     918:	a0 e0       	ldi	r26, 0x00	; 0
     91a:	b0 e0       	ldi	r27, 0x00	; 0
     91c:	e2 e9       	ldi	r30, 0x92	; 146
     91e:	f4 e0       	ldi	r31, 0x04	; 4
     920:	0c 94 45 07 	jmp	0xe8a	; 0xe8a <__prologue_saves__+0x14>
     924:	e8 2e       	mov	r14, r24
     926:	80 91 1a 01 	lds	r24, 0x011A
     92a:	90 91 1b 01 	lds	r25, 0x011B
     92e:	89 2b       	or	r24, r25
     930:	09 f4       	brne	.+2      	; 0x934 <lcd_putchar+0x1c>
     932:	05 c1       	rjmp	.+522    	; 0xb3e <lcd_putchar+0x226>
     934:	2a e0       	ldi	r18, 0x0A	; 10
     936:	e2 16       	cp	r14, r18
     938:	09 f4       	brne	.+2      	; 0x93c <lcd_putchar+0x24>
     93a:	46 c0       	rjmp	.+140    	; 0x9c8 <lcd_putchar+0xb0>
     93c:	38 e0       	ldi	r19, 0x08	; 8
     93e:	e3 16       	cp	r14, r19
     940:	c9 f4       	brne	.+50     	; 0x974 <lcd_putchar+0x5c>
     942:	80 91 1d 01 	lds	r24, 0x011D
     946:	81 50       	subi	r24, 0x01	; 1
     948:	80 93 1d 01 	sts	0x011D, r24
     94c:	8f 3f       	cpi	r24, 0xFF	; 255
     94e:	51 f4       	brne	.+20     	; 0x964 <lcd_putchar+0x4c>
     950:	80 91 1c 01 	lds	r24, 0x011C
     954:	81 50       	subi	r24, 0x01	; 1
     956:	80 93 1c 01 	sts	0x011C, r24
     95a:	80 91 12 01 	lds	r24, 0x0112
     95e:	81 50       	subi	r24, 0x01	; 1
     960:	80 93 1d 01 	sts	0x011D, r24
     964:	80 91 1c 01 	lds	r24, 0x011C
     968:	8f 3f       	cpi	r24, 0xFF	; 255
     96a:	09 f0       	breq	.+2      	; 0x96e <lcd_putchar+0x56>
     96c:	e2 c0       	rjmp	.+452    	; 0xb32 <lcd_putchar+0x21a>
     96e:	10 92 1c 01 	sts	0x011C, r1
     972:	dd c0       	rjmp	.+442    	; 0xb2e <lcd_putchar+0x216>
     974:	8e 2d       	mov	r24, r14
     976:	0e 94 9a 03 	call	0x734	; 0x734 <_ZN12OrangutanLCD9send_dataEh>
     97a:	20 91 1c 01 	lds	r18, 0x011C
     97e:	22 23       	and	r18, r18
     980:	c9 f0       	breq	.+50     	; 0x9b4 <lcd_putchar+0x9c>
     982:	30 e0       	ldi	r19, 0x00	; 0
     984:	21 50       	subi	r18, 0x01	; 1
     986:	30 40       	sbci	r19, 0x00	; 0
     988:	80 91 12 01 	lds	r24, 0x0112
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	ac 01       	movw	r20, r24
     990:	24 9f       	mul	r18, r20
     992:	c0 01       	movw	r24, r0
     994:	25 9f       	mul	r18, r21
     996:	90 0d       	add	r25, r0
     998:	34 9f       	mul	r19, r20
     99a:	90 0d       	add	r25, r0
     99c:	11 24       	eor	r1, r1
     99e:	20 91 1d 01 	lds	r18, 0x011D
     9a2:	e0 91 1a 01 	lds	r30, 0x011A
     9a6:	f0 91 1b 01 	lds	r31, 0x011B
     9aa:	e8 0f       	add	r30, r24
     9ac:	f9 1f       	adc	r31, r25
     9ae:	e2 0f       	add	r30, r18
     9b0:	f1 1d       	adc	r31, r1
     9b2:	e0 82       	st	Z, r14
     9b4:	80 91 1d 01 	lds	r24, 0x011D
     9b8:	8f 5f       	subi	r24, 0xFF	; 255
     9ba:	80 93 1d 01 	sts	0x011D, r24
     9be:	90 91 12 01 	lds	r25, 0x0112
     9c2:	89 17       	cp	r24, r25
     9c4:	09 f0       	breq	.+2      	; 0x9c8 <lcd_putchar+0xb0>
     9c6:	bb c0       	rjmp	.+374    	; 0xb3e <lcd_putchar+0x226>
     9c8:	40 91 1c 01 	lds	r20, 0x011C
     9cc:	24 2f       	mov	r18, r20
     9ce:	30 e0       	ldi	r19, 0x00	; 0
     9d0:	80 91 11 01 	lds	r24, 0x0111
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	01 97       	sbiw	r24, 0x01	; 1
     9d8:	28 17       	cp	r18, r24
     9da:	39 07       	cpc	r19, r25
     9dc:	09 f0       	breq	.+2      	; 0x9e0 <lcd_putchar+0xc8>
     9de:	a4 c0       	rjmp	.+328    	; 0xb28 <lcd_putchar+0x210>
     9e0:	c0 e0       	ldi	r28, 0x00	; 0
     9e2:	d0 e0       	ldi	r29, 0x00	; 0
     9e4:	44 c0       	rjmp	.+136    	; 0xa6e <lcd_putchar+0x156>
     9e6:	80 e0       	ldi	r24, 0x00	; 0
     9e8:	6c 2f       	mov	r22, r28
     9ea:	0e 94 48 03 	call	0x690	; 0x690 <_ZN12OrangutanLCD6gotoXYEhh>
     9ee:	ff 24       	eor	r15, r15
     9f0:	6e 01       	movw	r12, r28
     9f2:	08 94       	sec
     9f4:	c1 1c       	adc	r12, r1
     9f6:	d1 1c       	adc	r13, r1
     9f8:	35 c0       	rjmp	.+106    	; 0xa64 <lcd_putchar+0x14c>
     9fa:	0f 2d       	mov	r16, r15
     9fc:	10 e0       	ldi	r17, 0x00	; 0
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	9c 01       	movw	r18, r24
     a02:	c2 9f       	mul	r28, r18
     a04:	c0 01       	movw	r24, r0
     a06:	c3 9f       	mul	r28, r19
     a08:	90 0d       	add	r25, r0
     a0a:	d2 9f       	mul	r29, r18
     a0c:	90 0d       	add	r25, r0
     a0e:	11 24       	eor	r1, r1
     a10:	e0 91 1a 01 	lds	r30, 0x011A
     a14:	f0 91 1b 01 	lds	r31, 0x011B
     a18:	e0 0f       	add	r30, r16
     a1a:	f1 1f       	adc	r31, r17
     a1c:	e8 0f       	add	r30, r24
     a1e:	f9 1f       	adc	r31, r25
     a20:	80 81       	ld	r24, Z
     a22:	0e 94 9a 03 	call	0x734	; 0x734 <_ZN12OrangutanLCD9send_dataEh>
     a26:	e0 91 1a 01 	lds	r30, 0x011A
     a2a:	f0 91 1b 01 	lds	r31, 0x011B
     a2e:	80 91 12 01 	lds	r24, 0x0112
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	c8 9f       	mul	r28, r24
     a36:	d0 01       	movw	r26, r0
     a38:	c9 9f       	mul	r28, r25
     a3a:	b0 0d       	add	r27, r0
     a3c:	d8 9f       	mul	r29, r24
     a3e:	b0 0d       	add	r27, r0
     a40:	11 24       	eor	r1, r1
     a42:	e0 0f       	add	r30, r16
     a44:	f1 1f       	adc	r31, r17
     a46:	ae 0f       	add	r26, r30
     a48:	bf 1f       	adc	r27, r31
     a4a:	ac 01       	movw	r20, r24
     a4c:	c4 9e       	mul	r12, r20
     a4e:	c0 01       	movw	r24, r0
     a50:	c5 9e       	mul	r12, r21
     a52:	90 0d       	add	r25, r0
     a54:	d4 9e       	mul	r13, r20
     a56:	90 0d       	add	r25, r0
     a58:	11 24       	eor	r1, r1
     a5a:	e8 0f       	add	r30, r24
     a5c:	f9 1f       	adc	r31, r25
     a5e:	80 81       	ld	r24, Z
     a60:	8c 93       	st	X, r24
     a62:	f3 94       	inc	r15
     a64:	80 91 12 01 	lds	r24, 0x0112
     a68:	f8 16       	cp	r15, r24
     a6a:	38 f2       	brcs	.-114    	; 0x9fa <lcd_putchar+0xe2>
     a6c:	e6 01       	movw	r28, r12
     a6e:	60 91 11 01 	lds	r22, 0x0111
     a72:	86 2f       	mov	r24, r22
     a74:	90 e0       	ldi	r25, 0x00	; 0
     a76:	02 97       	sbiw	r24, 0x02	; 2
     a78:	c8 17       	cp	r28, r24
     a7a:	d9 07       	cpc	r29, r25
     a7c:	0c f4       	brge	.+2      	; 0xa80 <lcd_putchar+0x168>
     a7e:	b3 cf       	rjmp	.-154    	; 0x9e6 <lcd_putchar+0xce>
     a80:	62 30       	cpi	r22, 0x02	; 2
     a82:	08 f4       	brcc	.+2      	; 0xa86 <lcd_putchar+0x16e>
     a84:	40 c0       	rjmp	.+128    	; 0xb06 <lcd_putchar+0x1ee>
     a86:	62 50       	subi	r22, 0x02	; 2
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	0e 94 48 03 	call	0x690	; 0x690 <_ZN12OrangutanLCD6gotoXYEhh>
     a8e:	ff 24       	eor	r15, r15
     a90:	40 e2       	ldi	r20, 0x20	; 32
     a92:	d4 2e       	mov	r13, r20
     a94:	34 c0       	rjmp	.+104    	; 0xafe <lcd_putchar+0x1e6>
     a96:	0f 2d       	mov	r16, r15
     a98:	10 e0       	ldi	r17, 0x00	; 0
     a9a:	80 91 11 01 	lds	r24, 0x0111
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	02 97       	sbiw	r24, 0x02	; 2
     aa2:	30 e0       	ldi	r19, 0x00	; 0
     aa4:	ac 01       	movw	r20, r24
     aa6:	42 9f       	mul	r20, r18
     aa8:	c0 01       	movw	r24, r0
     aaa:	43 9f       	mul	r20, r19
     aac:	90 0d       	add	r25, r0
     aae:	52 9f       	mul	r21, r18
     ab0:	90 0d       	add	r25, r0
     ab2:	11 24       	eor	r1, r1
     ab4:	e0 91 1a 01 	lds	r30, 0x011A
     ab8:	f0 91 1b 01 	lds	r31, 0x011B
     abc:	e0 0f       	add	r30, r16
     abe:	f1 1f       	adc	r31, r17
     ac0:	e8 0f       	add	r30, r24
     ac2:	f9 1f       	adc	r31, r25
     ac4:	80 81       	ld	r24, Z
     ac6:	0e 94 9a 03 	call	0x734	; 0x734 <_ZN12OrangutanLCD9send_dataEh>
     aca:	20 91 11 01 	lds	r18, 0x0111
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	22 50       	subi	r18, 0x02	; 2
     ad2:	30 40       	sbci	r19, 0x00	; 0
     ad4:	80 91 12 01 	lds	r24, 0x0112
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	ac 01       	movw	r20, r24
     adc:	24 9f       	mul	r18, r20
     ade:	c0 01       	movw	r24, r0
     ae0:	25 9f       	mul	r18, r21
     ae2:	90 0d       	add	r25, r0
     ae4:	34 9f       	mul	r19, r20
     ae6:	90 0d       	add	r25, r0
     ae8:	11 24       	eor	r1, r1
     aea:	e0 91 1a 01 	lds	r30, 0x011A
     aee:	f0 91 1b 01 	lds	r31, 0x011B
     af2:	e0 0f       	add	r30, r16
     af4:	f1 1f       	adc	r31, r17
     af6:	e8 0f       	add	r30, r24
     af8:	f9 1f       	adc	r31, r25
     afa:	d0 82       	st	Z, r13
     afc:	f3 94       	inc	r15
     afe:	20 91 12 01 	lds	r18, 0x0112
     b02:	f2 16       	cp	r15, r18
     b04:	40 f2       	brcs	.-112    	; 0xa96 <lcd_putchar+0x17e>
     b06:	60 91 11 01 	lds	r22, 0x0111
     b0a:	61 50       	subi	r22, 0x01	; 1
     b0c:	80 e0       	ldi	r24, 0x00	; 0
     b0e:	0e 94 48 03 	call	0x690	; 0x690 <_ZN12OrangutanLCD6gotoXYEhh>
     b12:	00 e0       	ldi	r16, 0x00	; 0
     b14:	04 c0       	rjmp	.+8      	; 0xb1e <lcd_putchar+0x206>
     b16:	80 e2       	ldi	r24, 0x20	; 32
     b18:	0e 94 9a 03 	call	0x734	; 0x734 <_ZN12OrangutanLCD9send_dataEh>
     b1c:	0f 5f       	subi	r16, 0xFF	; 255
     b1e:	80 91 12 01 	lds	r24, 0x0112
     b22:	08 17       	cp	r16, r24
     b24:	c0 f3       	brcs	.-16     	; 0xb16 <lcd_putchar+0x1fe>
     b26:	03 c0       	rjmp	.+6      	; 0xb2e <lcd_putchar+0x216>
     b28:	4f 5f       	subi	r20, 0xFF	; 255
     b2a:	40 93 1c 01 	sts	0x011C, r20
     b2e:	10 92 1d 01 	sts	0x011D, r1
     b32:	80 91 1d 01 	lds	r24, 0x011D
     b36:	60 91 1c 01 	lds	r22, 0x011C
     b3a:	0e 94 48 03 	call	0x690	; 0x690 <_ZN12OrangutanLCD6gotoXYEhh>
     b3e:	2e 2d       	mov	r18, r14
     b40:	33 27       	eor	r19, r19
     b42:	27 fd       	sbrc	r18, 7
     b44:	30 95       	com	r19
     b46:	c9 01       	movw	r24, r18
     b48:	cd b7       	in	r28, 0x3d	; 61
     b4a:	de b7       	in	r29, 0x3e	; 62
     b4c:	e8 e0       	ldi	r30, 0x08	; 8
     b4e:	0c 94 61 07 	jmp	0xec2	; 0xec2 <__epilogue_restores__+0x14>

00000b52 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
     b52:	ef 92       	push	r14
     b54:	ff 92       	push	r15
     b56:	0f 93       	push	r16
     b58:	1f 93       	push	r17
     b5a:	cf 93       	push	r28
     b5c:	df 93       	push	r29
     b5e:	7c 01       	movw	r14, r24
     b60:	06 2f       	mov	r16, r22
     b62:	10 e0       	ldi	r17, 0x00	; 0
     b64:	53 e0       	ldi	r21, 0x03	; 3
     b66:	00 0f       	add	r16, r16
     b68:	11 1f       	adc	r17, r17
     b6a:	5a 95       	dec	r21
     b6c:	e1 f7       	brne	.-8      	; 0xb66 <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x14>
     b6e:	c0 e0       	ldi	r28, 0x00	; 0
     b70:	d0 e0       	ldi	r29, 0x00	; 0
     b72:	9e 01       	movw	r18, r28
     b74:	20 0f       	add	r18, r16
     b76:	82 2f       	mov	r24, r18
     b78:	80 64       	ori	r24, 0x40	; 64
     b7a:	0e 94 1c 03 	call	0x638	; 0x638 <_ZN12OrangutanLCD8send_cmdEh>
     b7e:	f7 01       	movw	r30, r14
     b80:	ec 0f       	add	r30, r28
     b82:	fd 1f       	adc	r31, r29
     b84:	e4 91       	lpm	r30, Z+
     b86:	8e 2f       	mov	r24, r30
     b88:	0e 94 9a 03 	call	0x734	; 0x734 <_ZN12OrangutanLCD9send_dataEh>
     b8c:	21 96       	adiw	r28, 0x01	; 1
     b8e:	c8 30       	cpi	r28, 0x08	; 8
     b90:	d1 05       	cpc	r29, r1
     b92:	79 f7       	brne	.-34     	; 0xb72 <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x20>
     b94:	cd b7       	in	r28, 0x3d	; 61
     b96:	de b7       	in	r29, 0x3e	; 62
     b98:	e6 e0       	ldi	r30, 0x06	; 6
     b9a:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__epilogue_restores__+0x18>

00000b9e <lcd_load_custom_character>:
     b9e:	0e 94 a9 05 	call	0xb52	; 0xb52 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
     ba2:	08 95       	ret

00000ba4 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     ba4:	60 e0       	ldi	r22, 0x00	; 0
     ba6:	41 e0       	ldi	r20, 0x01	; 1
     ba8:	0e 94 c8 02 	call	0x590	; 0x590 <_ZN12OrangutanLCD4sendEhhh>
     bac:	08 95       	ret

00000bae <_ZN12OrangutanLCD6scrollEhhj>:
     bae:	0f 93       	push	r16
     bb0:	1f 93       	push	r17
     bb2:	cf 93       	push	r28
     bb4:	df 93       	push	r29
     bb6:	08 2f       	mov	r16, r24
     bb8:	16 2f       	mov	r17, r22
     bba:	ea 01       	movw	r28, r20
     bbc:	0b c0       	rjmp	.+22     	; 0xbd4 <_ZN12OrangutanLCD6scrollEhhj+0x26>
     bbe:	00 23       	and	r16, r16
     bc0:	11 f4       	brne	.+4      	; 0xbc6 <_ZN12OrangutanLCD6scrollEhhj+0x18>
     bc2:	88 e1       	ldi	r24, 0x18	; 24
     bc4:	01 c0       	rjmp	.+2      	; 0xbc8 <_ZN12OrangutanLCD6scrollEhhj+0x1a>
     bc6:	8c e1       	ldi	r24, 0x1C	; 28
     bc8:	0e 94 1c 03 	call	0x638	; 0x638 <_ZN12OrangutanLCD8send_cmdEh>
     bcc:	ce 01       	movw	r24, r28
     bce:	0e 94 5f 06 	call	0xcbe	; 0xcbe <_ZN13OrangutanTime17delayMillisecondsEj>
     bd2:	11 50       	subi	r17, 0x01	; 1
     bd4:	11 23       	and	r17, r17
     bd6:	99 f7       	brne	.-26     	; 0xbbe <_ZN12OrangutanLCD6scrollEhhj+0x10>
     bd8:	df 91       	pop	r29
     bda:	cf 91       	pop	r28
     bdc:	1f 91       	pop	r17
     bde:	0f 91       	pop	r16
     be0:	08 95       	ret

00000be2 <lcd_scroll>:
     be2:	0e 94 d7 05 	call	0xbae	; 0xbae <_ZN12OrangutanLCD6scrollEhhj>
     be6:	08 95       	ret

00000be8 <__vector_11>:
     be8:	2f 92       	push	r2
     bea:	8f 93       	push	r24
     bec:	9f 93       	push	r25
     bee:	2f b6       	in	r2, 0x3f	; 63
     bf0:	80 91 24 01 	lds	r24, 0x0124
     bf4:	90 91 25 01 	lds	r25, 0x0125
     bf8:	01 96       	adiw	r24, 0x01	; 1
     bfa:	80 93 24 01 	sts	0x0124, r24
     bfe:	90 93 25 01 	sts	0x0125, r25
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	80 91 26 01 	lds	r24, 0x0126
     c08:	89 1f       	adc	r24, r25
     c0a:	80 93 26 01 	sts	0x0126, r24
     c0e:	90 91 2c 01 	lds	r25, 0x012C
     c12:	9c 5f       	subi	r25, 0xFC	; 252
     c14:	90 93 2c 01 	sts	0x012C, r25
     c18:	80 91 2b 01 	lds	r24, 0x012B
     c1c:	80 51       	subi	r24, 0x10	; 16
     c1e:	97 42       	sbci	r25, 0x27	; 39
     c20:	c0 f0       	brcs	.+48     	; 0xc52 <end>
     c22:	90 93 2c 01 	sts	0x012C, r25
     c26:	80 93 2b 01 	sts	0x012B, r24
     c2a:	80 91 27 01 	lds	r24, 0x0127
     c2e:	90 91 28 01 	lds	r25, 0x0128
     c32:	01 96       	adiw	r24, 0x01	; 1
     c34:	80 93 27 01 	sts	0x0127, r24
     c38:	90 93 28 01 	sts	0x0128, r25
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	80 91 29 01 	lds	r24, 0x0129
     c42:	89 1f       	adc	r24, r25
     c44:	80 93 29 01 	sts	0x0129, r24
     c48:	80 91 2a 01 	lds	r24, 0x012A
     c4c:	89 1f       	adc	r24, r25
     c4e:	80 93 2a 01 	sts	0x012A, r24

00000c52 <end>:
     c52:	2f be       	out	0x3f, r2	; 63
     c54:	9f 91       	pop	r25
     c56:	8f 91       	pop	r24
     c58:	2f 90       	pop	r2
     c5a:	18 95       	reti

00000c5c <ticks_to_microseconds>:
     c5c:	6f 5f       	subi	r22, 0xFF	; 255
     c5e:	7f 4f       	sbci	r23, 0xFF	; 255
     c60:	8f 4f       	sbci	r24, 0xFF	; 255
     c62:	9f 4f       	sbci	r25, 0xFF	; 255
     c64:	66 0f       	add	r22, r22
     c66:	77 1f       	adc	r23, r23
     c68:	88 1f       	adc	r24, r24
     c6a:	99 1f       	adc	r25, r25
     c6c:	25 e0       	ldi	r18, 0x05	; 5
     c6e:	30 e0       	ldi	r19, 0x00	; 0
     c70:	40 e0       	ldi	r20, 0x00	; 0
     c72:	50 e0       	ldi	r21, 0x00	; 0
     c74:	0e 94 19 07 	call	0xe32	; 0xe32 <__udivmodsi4>
     c78:	ca 01       	movw	r24, r20
     c7a:	b9 01       	movw	r22, r18
     c7c:	08 95       	ret

00000c7e <delay_ms>:
     c7e:	28 ee       	ldi	r18, 0xE8	; 232
     c80:	33 e0       	ldi	r19, 0x03	; 3
     c82:	09 c0       	rjmp	.+18     	; 0xc96 <delay_ms+0x18>
     c84:	f9 01       	movw	r30, r18
     c86:	6f 93       	push	r22
     c88:	64 e0       	ldi	r22, 0x04	; 4
     c8a:	6a 95       	dec	r22
     c8c:	f1 f7       	brne	.-4      	; 0xc8a <delay_ms+0xc>
     c8e:	6f 91       	pop	r22
     c90:	31 97       	sbiw	r30, 0x01	; 1
     c92:	c9 f7       	brne	.-14     	; 0xc86 <delay_ms+0x8>
     c94:	01 97       	sbiw	r24, 0x01	; 1
     c96:	00 97       	sbiw	r24, 0x00	; 0
     c98:	a9 f7       	brne	.-22     	; 0xc84 <delay_ms+0x6>
     c9a:	08 95       	ret

00000c9c <_ZN13OrangutanTime19ticksToMicrosecondsEm>:
     c9c:	6f 5f       	subi	r22, 0xFF	; 255
     c9e:	7f 4f       	sbci	r23, 0xFF	; 255
     ca0:	8f 4f       	sbci	r24, 0xFF	; 255
     ca2:	9f 4f       	sbci	r25, 0xFF	; 255
     ca4:	66 0f       	add	r22, r22
     ca6:	77 1f       	adc	r23, r23
     ca8:	88 1f       	adc	r24, r24
     caa:	99 1f       	adc	r25, r25
     cac:	25 e0       	ldi	r18, 0x05	; 5
     cae:	30 e0       	ldi	r19, 0x00	; 0
     cb0:	40 e0       	ldi	r20, 0x00	; 0
     cb2:	50 e0       	ldi	r21, 0x00	; 0
     cb4:	0e 94 19 07 	call	0xe32	; 0xe32 <__udivmodsi4>
     cb8:	ca 01       	movw	r24, r20
     cba:	b9 01       	movw	r22, r18
     cbc:	08 95       	ret

00000cbe <_ZN13OrangutanTime17delayMillisecondsEj>:
     cbe:	28 ee       	ldi	r18, 0xE8	; 232
     cc0:	33 e0       	ldi	r19, 0x03	; 3
     cc2:	09 c0       	rjmp	.+18     	; 0xcd6 <_ZN13OrangutanTime17delayMillisecondsEj+0x18>
     cc4:	f9 01       	movw	r30, r18
     cc6:	6f 93       	push	r22
     cc8:	64 e0       	ldi	r22, 0x04	; 4
     cca:	6a 95       	dec	r22
     ccc:	f1 f7       	brne	.-4      	; 0xcca <_ZN13OrangutanTime17delayMillisecondsEj+0xc>
     cce:	6f 91       	pop	r22
     cd0:	31 97       	sbiw	r30, 0x01	; 1
     cd2:	c9 f7       	brne	.-14     	; 0xcc6 <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
     cd4:	01 97       	sbiw	r24, 0x01	; 1
     cd6:	00 97       	sbiw	r24, 0x00	; 0
     cd8:	a9 f7       	brne	.-22     	; 0xcc4 <_ZN13OrangutanTime17delayMillisecondsEj+0x6>
     cda:	08 95       	ret

00000cdc <_ZN13OrangutanTime5init2Ev>:
     cdc:	a0 e7       	ldi	r26, 0x70	; 112
     cde:	b0 e0       	ldi	r27, 0x00	; 0
     ce0:	8c 91       	ld	r24, X
     ce2:	8e 7f       	andi	r24, 0xFE	; 254
     ce4:	8c 93       	st	X, r24
     ce6:	e0 eb       	ldi	r30, 0xB0	; 176
     ce8:	f0 e0       	ldi	r31, 0x00	; 0
     cea:	80 81       	ld	r24, Z
     cec:	83 60       	ori	r24, 0x03	; 3
     cee:	80 83       	st	Z, r24
     cf0:	e1 eb       	ldi	r30, 0xB1	; 177
     cf2:	f0 e0       	ldi	r31, 0x00	; 0
     cf4:	80 81       	ld	r24, Z
     cf6:	80 7f       	andi	r24, 0xF0	; 240
     cf8:	80 83       	st	Z, r24
     cfa:	80 81       	ld	r24, Z
     cfc:	82 60       	ori	r24, 0x02	; 2
     cfe:	80 83       	st	Z, r24
     d00:	b8 9a       	sbi	0x17, 0	; 23
     d02:	8c 91       	ld	r24, X
     d04:	81 60       	ori	r24, 0x01	; 1
     d06:	8c 93       	st	X, r24
     d08:	78 94       	sei
     d0a:	08 95       	ret

00000d0c <_ZN13OrangutanTime4initEv>:
     d0c:	80 91 2d 01 	lds	r24, 0x012D
     d10:	88 23       	and	r24, r24
     d12:	29 f4       	brne	.+10     	; 0xd1e <_ZN13OrangutanTime4initEv+0x12>
     d14:	81 e0       	ldi	r24, 0x01	; 1
     d16:	80 93 2d 01 	sts	0x012D, r24
     d1a:	0e 94 6e 06 	call	0xcdc	; 0xcdc <_ZN13OrangutanTime5init2Ev>
     d1e:	08 95       	ret

00000d20 <_ZN13OrangutanTime2msEv>:
     d20:	0e 94 86 06 	call	0xd0c	; 0xd0c <_ZN13OrangutanTime4initEv>
     d24:	e0 e7       	ldi	r30, 0x70	; 112
     d26:	f0 e0       	ldi	r31, 0x00	; 0
     d28:	80 81       	ld	r24, Z
     d2a:	8e 7f       	andi	r24, 0xFE	; 254
     d2c:	80 83       	st	Z, r24
     d2e:	20 91 27 01 	lds	r18, 0x0127
     d32:	30 91 28 01 	lds	r19, 0x0128
     d36:	40 91 29 01 	lds	r20, 0x0129
     d3a:	50 91 2a 01 	lds	r21, 0x012A
     d3e:	80 81       	ld	r24, Z
     d40:	81 60       	ori	r24, 0x01	; 1
     d42:	80 83       	st	Z, r24
     d44:	b9 01       	movw	r22, r18
     d46:	ca 01       	movw	r24, r20
     d48:	08 95       	ret

00000d4a <get_ms>:
     d4a:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN13OrangutanTime2msEv>
     d4e:	08 95       	ret

00000d50 <_ZN13OrangutanTime5ticksEv>:
     d50:	0e 94 86 06 	call	0xd0c	; 0xd0c <_ZN13OrangutanTime4initEv>
     d54:	80 91 70 00 	lds	r24, 0x0070
     d58:	8e 7f       	andi	r24, 0xFE	; 254
     d5a:	80 93 70 00 	sts	0x0070, r24
     d5e:	60 91 b2 00 	lds	r22, 0x00B2
     d62:	80 91 23 01 	lds	r24, 0x0123
     d66:	90 91 24 01 	lds	r25, 0x0124
     d6a:	a0 91 25 01 	lds	r26, 0x0125
     d6e:	b0 91 26 01 	lds	r27, 0x0126
     d72:	b8 99       	sbic	0x17, 0	; 23
     d74:	05 c0       	rjmp	.+10     	; 0xd80 <_ZN13OrangutanTime5ticksEv+0x30>
     d76:	26 2f       	mov	r18, r22
     d78:	30 e0       	ldi	r19, 0x00	; 0
     d7a:	40 e0       	ldi	r20, 0x00	; 0
     d7c:	50 e0       	ldi	r21, 0x00	; 0
     d7e:	11 c0       	rjmp	.+34     	; 0xda2 <_ZN13OrangutanTime5ticksEv+0x52>
     d80:	80 91 b2 00 	lds	r24, 0x00B2
     d84:	20 91 23 01 	lds	r18, 0x0123
     d88:	30 91 24 01 	lds	r19, 0x0124
     d8c:	40 91 25 01 	lds	r20, 0x0125
     d90:	50 91 26 01 	lds	r21, 0x0126
     d94:	20 50       	subi	r18, 0x00	; 0
     d96:	3f 4f       	sbci	r19, 0xFF	; 255
     d98:	4f 4f       	sbci	r20, 0xFF	; 255
     d9a:	5f 4f       	sbci	r21, 0xFF	; 255
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	a0 e0       	ldi	r26, 0x00	; 0
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	28 2b       	or	r18, r24
     da4:	39 2b       	or	r19, r25
     da6:	4a 2b       	or	r20, r26
     da8:	5b 2b       	or	r21, r27
     daa:	80 91 70 00 	lds	r24, 0x0070
     dae:	81 60       	ori	r24, 0x01	; 1
     db0:	80 93 70 00 	sts	0x0070, r24
     db4:	b9 01       	movw	r22, r18
     db6:	ca 01       	movw	r24, r20
     db8:	08 95       	ret

00000dba <get_ticks>:
     dba:	0e 94 a8 06 	call	0xd50	; 0xd50 <_ZN13OrangutanTime5ticksEv>
     dbe:	08 95       	ret

00000dc0 <_ZN13OrangutanTime5resetEv>:
     dc0:	0e 94 86 06 	call	0xd0c	; 0xd0c <_ZN13OrangutanTime4initEv>
     dc4:	e0 e7       	ldi	r30, 0x70	; 112
     dc6:	f0 e0       	ldi	r31, 0x00	; 0
     dc8:	80 81       	ld	r24, Z
     dca:	8e 7f       	andi	r24, 0xFE	; 254
     dcc:	80 83       	st	Z, r24
     dce:	10 92 27 01 	sts	0x0127, r1
     dd2:	10 92 28 01 	sts	0x0128, r1
     dd6:	10 92 29 01 	sts	0x0129, r1
     dda:	10 92 2a 01 	sts	0x012A, r1
     dde:	10 92 2c 01 	sts	0x012C, r1
     de2:	10 92 2b 01 	sts	0x012B, r1
     de6:	80 81       	ld	r24, Z
     de8:	81 60       	ori	r24, 0x01	; 1
     dea:	80 83       	st	Z, r24
     dec:	08 95       	ret

00000dee <time_reset>:
     dee:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <_ZN13OrangutanTime5resetEv>
     df2:	08 95       	ret

00000df4 <__mulsi3>:
     df4:	62 9f       	mul	r22, r18
     df6:	d0 01       	movw	r26, r0
     df8:	73 9f       	mul	r23, r19
     dfa:	f0 01       	movw	r30, r0
     dfc:	82 9f       	mul	r24, r18
     dfe:	e0 0d       	add	r30, r0
     e00:	f1 1d       	adc	r31, r1
     e02:	64 9f       	mul	r22, r20
     e04:	e0 0d       	add	r30, r0
     e06:	f1 1d       	adc	r31, r1
     e08:	92 9f       	mul	r25, r18
     e0a:	f0 0d       	add	r31, r0
     e0c:	83 9f       	mul	r24, r19
     e0e:	f0 0d       	add	r31, r0
     e10:	74 9f       	mul	r23, r20
     e12:	f0 0d       	add	r31, r0
     e14:	65 9f       	mul	r22, r21
     e16:	f0 0d       	add	r31, r0
     e18:	99 27       	eor	r25, r25
     e1a:	72 9f       	mul	r23, r18
     e1c:	b0 0d       	add	r27, r0
     e1e:	e1 1d       	adc	r30, r1
     e20:	f9 1f       	adc	r31, r25
     e22:	63 9f       	mul	r22, r19
     e24:	b0 0d       	add	r27, r0
     e26:	e1 1d       	adc	r30, r1
     e28:	f9 1f       	adc	r31, r25
     e2a:	bd 01       	movw	r22, r26
     e2c:	cf 01       	movw	r24, r30
     e2e:	11 24       	eor	r1, r1
     e30:	08 95       	ret

00000e32 <__udivmodsi4>:
     e32:	a1 e2       	ldi	r26, 0x21	; 33
     e34:	1a 2e       	mov	r1, r26
     e36:	aa 1b       	sub	r26, r26
     e38:	bb 1b       	sub	r27, r27
     e3a:	fd 01       	movw	r30, r26
     e3c:	0d c0       	rjmp	.+26     	; 0xe58 <__udivmodsi4_ep>

00000e3e <__udivmodsi4_loop>:
     e3e:	aa 1f       	adc	r26, r26
     e40:	bb 1f       	adc	r27, r27
     e42:	ee 1f       	adc	r30, r30
     e44:	ff 1f       	adc	r31, r31
     e46:	a2 17       	cp	r26, r18
     e48:	b3 07       	cpc	r27, r19
     e4a:	e4 07       	cpc	r30, r20
     e4c:	f5 07       	cpc	r31, r21
     e4e:	20 f0       	brcs	.+8      	; 0xe58 <__udivmodsi4_ep>
     e50:	a2 1b       	sub	r26, r18
     e52:	b3 0b       	sbc	r27, r19
     e54:	e4 0b       	sbc	r30, r20
     e56:	f5 0b       	sbc	r31, r21

00000e58 <__udivmodsi4_ep>:
     e58:	66 1f       	adc	r22, r22
     e5a:	77 1f       	adc	r23, r23
     e5c:	88 1f       	adc	r24, r24
     e5e:	99 1f       	adc	r25, r25
     e60:	1a 94       	dec	r1
     e62:	69 f7       	brne	.-38     	; 0xe3e <__udivmodsi4_loop>
     e64:	60 95       	com	r22
     e66:	70 95       	com	r23
     e68:	80 95       	com	r24
     e6a:	90 95       	com	r25
     e6c:	9b 01       	movw	r18, r22
     e6e:	ac 01       	movw	r20, r24
     e70:	bd 01       	movw	r22, r26
     e72:	cf 01       	movw	r24, r30
     e74:	08 95       	ret

00000e76 <__prologue_saves__>:
     e76:	2f 92       	push	r2
     e78:	3f 92       	push	r3
     e7a:	4f 92       	push	r4
     e7c:	5f 92       	push	r5
     e7e:	6f 92       	push	r6
     e80:	7f 92       	push	r7
     e82:	8f 92       	push	r8
     e84:	9f 92       	push	r9
     e86:	af 92       	push	r10
     e88:	bf 92       	push	r11
     e8a:	cf 92       	push	r12
     e8c:	df 92       	push	r13
     e8e:	ef 92       	push	r14
     e90:	ff 92       	push	r15
     e92:	0f 93       	push	r16
     e94:	1f 93       	push	r17
     e96:	cf 93       	push	r28
     e98:	df 93       	push	r29
     e9a:	cd b7       	in	r28, 0x3d	; 61
     e9c:	de b7       	in	r29, 0x3e	; 62
     e9e:	ca 1b       	sub	r28, r26
     ea0:	db 0b       	sbc	r29, r27
     ea2:	0f b6       	in	r0, 0x3f	; 63
     ea4:	f8 94       	cli
     ea6:	de bf       	out	0x3e, r29	; 62
     ea8:	0f be       	out	0x3f, r0	; 63
     eaa:	cd bf       	out	0x3d, r28	; 61
     eac:	09 94       	ijmp

00000eae <__epilogue_restores__>:
     eae:	2a 88       	ldd	r2, Y+18	; 0x12
     eb0:	39 88       	ldd	r3, Y+17	; 0x11
     eb2:	48 88       	ldd	r4, Y+16	; 0x10
     eb4:	5f 84       	ldd	r5, Y+15	; 0x0f
     eb6:	6e 84       	ldd	r6, Y+14	; 0x0e
     eb8:	7d 84       	ldd	r7, Y+13	; 0x0d
     eba:	8c 84       	ldd	r8, Y+12	; 0x0c
     ebc:	9b 84       	ldd	r9, Y+11	; 0x0b
     ebe:	aa 84       	ldd	r10, Y+10	; 0x0a
     ec0:	b9 84       	ldd	r11, Y+9	; 0x09
     ec2:	c8 84       	ldd	r12, Y+8	; 0x08
     ec4:	df 80       	ldd	r13, Y+7	; 0x07
     ec6:	ee 80       	ldd	r14, Y+6	; 0x06
     ec8:	fd 80       	ldd	r15, Y+5	; 0x05
     eca:	0c 81       	ldd	r16, Y+4	; 0x04
     ecc:	1b 81       	ldd	r17, Y+3	; 0x03
     ece:	aa 81       	ldd	r26, Y+2	; 0x02
     ed0:	b9 81       	ldd	r27, Y+1	; 0x01
     ed2:	ce 0f       	add	r28, r30
     ed4:	d1 1d       	adc	r29, r1
     ed6:	0f b6       	in	r0, 0x3f	; 63
     ed8:	f8 94       	cli
     eda:	de bf       	out	0x3e, r29	; 62
     edc:	0f be       	out	0x3f, r0	; 63
     ede:	cd bf       	out	0x3d, r28	; 61
     ee0:	ed 01       	movw	r28, r26
     ee2:	08 95       	ret

00000ee4 <malloc>:
     ee4:	cf 93       	push	r28
     ee6:	df 93       	push	r29
     ee8:	bc 01       	movw	r22, r24
     eea:	82 30       	cpi	r24, 0x02	; 2
     eec:	91 05       	cpc	r25, r1
     eee:	10 f4       	brcc	.+4      	; 0xef4 <malloc+0x10>
     ef0:	62 e0       	ldi	r22, 0x02	; 2
     ef2:	70 e0       	ldi	r23, 0x00	; 0
     ef4:	a0 91 30 01 	lds	r26, 0x0130
     ef8:	b0 91 31 01 	lds	r27, 0x0131
     efc:	ed 01       	movw	r28, r26
     efe:	e0 e0       	ldi	r30, 0x00	; 0
     f00:	f0 e0       	ldi	r31, 0x00	; 0
     f02:	40 e0       	ldi	r20, 0x00	; 0
     f04:	50 e0       	ldi	r21, 0x00	; 0
     f06:	21 c0       	rjmp	.+66     	; 0xf4a <malloc+0x66>
     f08:	88 81       	ld	r24, Y
     f0a:	99 81       	ldd	r25, Y+1	; 0x01
     f0c:	86 17       	cp	r24, r22
     f0e:	97 07       	cpc	r25, r23
     f10:	69 f4       	brne	.+26     	; 0xf2c <malloc+0x48>
     f12:	8a 81       	ldd	r24, Y+2	; 0x02
     f14:	9b 81       	ldd	r25, Y+3	; 0x03
     f16:	30 97       	sbiw	r30, 0x00	; 0
     f18:	19 f0       	breq	.+6      	; 0xf20 <malloc+0x3c>
     f1a:	93 83       	std	Z+3, r25	; 0x03
     f1c:	82 83       	std	Z+2, r24	; 0x02
     f1e:	04 c0       	rjmp	.+8      	; 0xf28 <malloc+0x44>
     f20:	90 93 31 01 	sts	0x0131, r25
     f24:	80 93 30 01 	sts	0x0130, r24
     f28:	fe 01       	movw	r30, r28
     f2a:	34 c0       	rjmp	.+104    	; 0xf94 <malloc+0xb0>
     f2c:	68 17       	cp	r22, r24
     f2e:	79 07       	cpc	r23, r25
     f30:	38 f4       	brcc	.+14     	; 0xf40 <malloc+0x5c>
     f32:	41 15       	cp	r20, r1
     f34:	51 05       	cpc	r21, r1
     f36:	19 f0       	breq	.+6      	; 0xf3e <malloc+0x5a>
     f38:	84 17       	cp	r24, r20
     f3a:	95 07       	cpc	r25, r21
     f3c:	08 f4       	brcc	.+2      	; 0xf40 <malloc+0x5c>
     f3e:	ac 01       	movw	r20, r24
     f40:	fe 01       	movw	r30, r28
     f42:	8a 81       	ldd	r24, Y+2	; 0x02
     f44:	9b 81       	ldd	r25, Y+3	; 0x03
     f46:	9c 01       	movw	r18, r24
     f48:	e9 01       	movw	r28, r18
     f4a:	20 97       	sbiw	r28, 0x00	; 0
     f4c:	e9 f6       	brne	.-70     	; 0xf08 <malloc+0x24>
     f4e:	41 15       	cp	r20, r1
     f50:	51 05       	cpc	r21, r1
     f52:	a9 f1       	breq	.+106    	; 0xfbe <malloc+0xda>
     f54:	ca 01       	movw	r24, r20
     f56:	86 1b       	sub	r24, r22
     f58:	97 0b       	sbc	r25, r23
     f5a:	04 97       	sbiw	r24, 0x04	; 4
     f5c:	08 f4       	brcc	.+2      	; 0xf60 <malloc+0x7c>
     f5e:	ba 01       	movw	r22, r20
     f60:	e0 e0       	ldi	r30, 0x00	; 0
     f62:	f0 e0       	ldi	r31, 0x00	; 0
     f64:	2a c0       	rjmp	.+84     	; 0xfba <malloc+0xd6>
     f66:	8d 91       	ld	r24, X+
     f68:	9c 91       	ld	r25, X
     f6a:	11 97       	sbiw	r26, 0x01	; 1
     f6c:	84 17       	cp	r24, r20
     f6e:	95 07       	cpc	r25, r21
     f70:	f9 f4       	brne	.+62     	; 0xfb0 <malloc+0xcc>
     f72:	64 17       	cp	r22, r20
     f74:	75 07       	cpc	r23, r21
     f76:	81 f4       	brne	.+32     	; 0xf98 <malloc+0xb4>
     f78:	12 96       	adiw	r26, 0x02	; 2
     f7a:	8d 91       	ld	r24, X+
     f7c:	9c 91       	ld	r25, X
     f7e:	13 97       	sbiw	r26, 0x03	; 3
     f80:	30 97       	sbiw	r30, 0x00	; 0
     f82:	19 f0       	breq	.+6      	; 0xf8a <malloc+0xa6>
     f84:	93 83       	std	Z+3, r25	; 0x03
     f86:	82 83       	std	Z+2, r24	; 0x02
     f88:	04 c0       	rjmp	.+8      	; 0xf92 <malloc+0xae>
     f8a:	90 93 31 01 	sts	0x0131, r25
     f8e:	80 93 30 01 	sts	0x0130, r24
     f92:	fd 01       	movw	r30, r26
     f94:	32 96       	adiw	r30, 0x02	; 2
     f96:	4f c0       	rjmp	.+158    	; 0x1036 <malloc+0x152>
     f98:	ca 01       	movw	r24, r20
     f9a:	86 1b       	sub	r24, r22
     f9c:	97 0b       	sbc	r25, r23
     f9e:	fd 01       	movw	r30, r26
     fa0:	e8 0f       	add	r30, r24
     fa2:	f9 1f       	adc	r31, r25
     fa4:	61 93       	st	Z+, r22
     fa6:	71 93       	st	Z+, r23
     fa8:	02 97       	sbiw	r24, 0x02	; 2
     faa:	8d 93       	st	X+, r24
     fac:	9c 93       	st	X, r25
     fae:	43 c0       	rjmp	.+134    	; 0x1036 <malloc+0x152>
     fb0:	fd 01       	movw	r30, r26
     fb2:	82 81       	ldd	r24, Z+2	; 0x02
     fb4:	93 81       	ldd	r25, Z+3	; 0x03
     fb6:	9c 01       	movw	r18, r24
     fb8:	d9 01       	movw	r26, r18
     fba:	10 97       	sbiw	r26, 0x00	; 0
     fbc:	a1 f6       	brne	.-88     	; 0xf66 <malloc+0x82>
     fbe:	80 91 2e 01 	lds	r24, 0x012E
     fc2:	90 91 2f 01 	lds	r25, 0x012F
     fc6:	89 2b       	or	r24, r25
     fc8:	41 f4       	brne	.+16     	; 0xfda <malloc+0xf6>
     fca:	80 91 15 01 	lds	r24, 0x0115
     fce:	90 91 16 01 	lds	r25, 0x0116
     fd2:	90 93 2f 01 	sts	0x012F, r25
     fd6:	80 93 2e 01 	sts	0x012E, r24
     fda:	40 91 17 01 	lds	r20, 0x0117
     fde:	50 91 18 01 	lds	r21, 0x0118
     fe2:	41 15       	cp	r20, r1
     fe4:	51 05       	cpc	r21, r1
     fe6:	41 f4       	brne	.+16     	; 0xff8 <malloc+0x114>
     fe8:	4d b7       	in	r20, 0x3d	; 61
     fea:	5e b7       	in	r21, 0x3e	; 62
     fec:	80 91 13 01 	lds	r24, 0x0113
     ff0:	90 91 14 01 	lds	r25, 0x0114
     ff4:	48 1b       	sub	r20, r24
     ff6:	59 0b       	sbc	r21, r25
     ff8:	20 91 2e 01 	lds	r18, 0x012E
     ffc:	30 91 2f 01 	lds	r19, 0x012F
    1000:	24 17       	cp	r18, r20
    1002:	35 07       	cpc	r19, r21
    1004:	b0 f4       	brcc	.+44     	; 0x1032 <malloc+0x14e>
    1006:	ca 01       	movw	r24, r20
    1008:	82 1b       	sub	r24, r18
    100a:	93 0b       	sbc	r25, r19
    100c:	86 17       	cp	r24, r22
    100e:	97 07       	cpc	r25, r23
    1010:	80 f0       	brcs	.+32     	; 0x1032 <malloc+0x14e>
    1012:	ab 01       	movw	r20, r22
    1014:	4e 5f       	subi	r20, 0xFE	; 254
    1016:	5f 4f       	sbci	r21, 0xFF	; 255
    1018:	84 17       	cp	r24, r20
    101a:	95 07       	cpc	r25, r21
    101c:	50 f0       	brcs	.+20     	; 0x1032 <malloc+0x14e>
    101e:	42 0f       	add	r20, r18
    1020:	53 1f       	adc	r21, r19
    1022:	50 93 2f 01 	sts	0x012F, r21
    1026:	40 93 2e 01 	sts	0x012E, r20
    102a:	f9 01       	movw	r30, r18
    102c:	61 93       	st	Z+, r22
    102e:	71 93       	st	Z+, r23
    1030:	02 c0       	rjmp	.+4      	; 0x1036 <malloc+0x152>
    1032:	e0 e0       	ldi	r30, 0x00	; 0
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	cf 01       	movw	r24, r30
    1038:	df 91       	pop	r29
    103a:	cf 91       	pop	r28
    103c:	08 95       	ret

0000103e <free>:
    103e:	cf 93       	push	r28
    1040:	df 93       	push	r29
    1042:	00 97       	sbiw	r24, 0x00	; 0
    1044:	09 f4       	brne	.+2      	; 0x1048 <free+0xa>
    1046:	50 c0       	rjmp	.+160    	; 0x10e8 <free+0xaa>
    1048:	ec 01       	movw	r28, r24
    104a:	22 97       	sbiw	r28, 0x02	; 2
    104c:	1b 82       	std	Y+3, r1	; 0x03
    104e:	1a 82       	std	Y+2, r1	; 0x02
    1050:	a0 91 30 01 	lds	r26, 0x0130
    1054:	b0 91 31 01 	lds	r27, 0x0131
    1058:	10 97       	sbiw	r26, 0x00	; 0
    105a:	09 f1       	breq	.+66     	; 0x109e <free+0x60>
    105c:	40 e0       	ldi	r20, 0x00	; 0
    105e:	50 e0       	ldi	r21, 0x00	; 0
    1060:	ac 17       	cp	r26, r28
    1062:	bd 07       	cpc	r27, r29
    1064:	08 f1       	brcs	.+66     	; 0x10a8 <free+0x6a>
    1066:	bb 83       	std	Y+3, r27	; 0x03
    1068:	aa 83       	std	Y+2, r26	; 0x02
    106a:	fe 01       	movw	r30, r28
    106c:	21 91       	ld	r18, Z+
    106e:	31 91       	ld	r19, Z+
    1070:	e2 0f       	add	r30, r18
    1072:	f3 1f       	adc	r31, r19
    1074:	ae 17       	cp	r26, r30
    1076:	bf 07       	cpc	r27, r31
    1078:	79 f4       	brne	.+30     	; 0x1098 <free+0x5a>
    107a:	8d 91       	ld	r24, X+
    107c:	9c 91       	ld	r25, X
    107e:	11 97       	sbiw	r26, 0x01	; 1
    1080:	28 0f       	add	r18, r24
    1082:	39 1f       	adc	r19, r25
    1084:	2e 5f       	subi	r18, 0xFE	; 254
    1086:	3f 4f       	sbci	r19, 0xFF	; 255
    1088:	39 83       	std	Y+1, r19	; 0x01
    108a:	28 83       	st	Y, r18
    108c:	12 96       	adiw	r26, 0x02	; 2
    108e:	8d 91       	ld	r24, X+
    1090:	9c 91       	ld	r25, X
    1092:	13 97       	sbiw	r26, 0x03	; 3
    1094:	9b 83       	std	Y+3, r25	; 0x03
    1096:	8a 83       	std	Y+2, r24	; 0x02
    1098:	41 15       	cp	r20, r1
    109a:	51 05       	cpc	r21, r1
    109c:	71 f4       	brne	.+28     	; 0x10ba <free+0x7c>
    109e:	d0 93 31 01 	sts	0x0131, r29
    10a2:	c0 93 30 01 	sts	0x0130, r28
    10a6:	20 c0       	rjmp	.+64     	; 0x10e8 <free+0xaa>
    10a8:	12 96       	adiw	r26, 0x02	; 2
    10aa:	8d 91       	ld	r24, X+
    10ac:	9c 91       	ld	r25, X
    10ae:	13 97       	sbiw	r26, 0x03	; 3
    10b0:	ad 01       	movw	r20, r26
    10b2:	00 97       	sbiw	r24, 0x00	; 0
    10b4:	11 f0       	breq	.+4      	; 0x10ba <free+0x7c>
    10b6:	dc 01       	movw	r26, r24
    10b8:	d3 cf       	rjmp	.-90     	; 0x1060 <free+0x22>
    10ba:	fa 01       	movw	r30, r20
    10bc:	d3 83       	std	Z+3, r29	; 0x03
    10be:	c2 83       	std	Z+2, r28	; 0x02
    10c0:	21 91       	ld	r18, Z+
    10c2:	31 91       	ld	r19, Z+
    10c4:	e2 0f       	add	r30, r18
    10c6:	f3 1f       	adc	r31, r19
    10c8:	ce 17       	cp	r28, r30
    10ca:	df 07       	cpc	r29, r31
    10cc:	69 f4       	brne	.+26     	; 0x10e8 <free+0xaa>
    10ce:	88 81       	ld	r24, Y
    10d0:	99 81       	ldd	r25, Y+1	; 0x01
    10d2:	28 0f       	add	r18, r24
    10d4:	39 1f       	adc	r19, r25
    10d6:	2e 5f       	subi	r18, 0xFE	; 254
    10d8:	3f 4f       	sbci	r19, 0xFF	; 255
    10da:	fa 01       	movw	r30, r20
    10dc:	31 83       	std	Z+1, r19	; 0x01
    10de:	20 83       	st	Z, r18
    10e0:	8a 81       	ldd	r24, Y+2	; 0x02
    10e2:	9b 81       	ldd	r25, Y+3	; 0x03
    10e4:	93 83       	std	Z+3, r25	; 0x03
    10e6:	82 83       	std	Z+2, r24	; 0x02
    10e8:	df 91       	pop	r29
    10ea:	cf 91       	pop	r28
    10ec:	08 95       	ret

000010ee <fdevopen>:
    10ee:	0f 93       	push	r16
    10f0:	1f 93       	push	r17
    10f2:	cf 93       	push	r28
    10f4:	df 93       	push	r29
    10f6:	8c 01       	movw	r16, r24
    10f8:	eb 01       	movw	r28, r22
    10fa:	00 97       	sbiw	r24, 0x00	; 0
    10fc:	31 f4       	brne	.+12     	; 0x110a <fdevopen+0x1c>
    10fe:	61 15       	cp	r22, r1
    1100:	71 05       	cpc	r23, r1
    1102:	19 f4       	brne	.+6      	; 0x110a <fdevopen+0x1c>
    1104:	20 e0       	ldi	r18, 0x00	; 0
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	38 c0       	rjmp	.+112    	; 0x117a <fdevopen+0x8c>
    110a:	81 e0       	ldi	r24, 0x01	; 1
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	6e e0       	ldi	r22, 0x0E	; 14
    1110:	70 e0       	ldi	r23, 0x00	; 0
    1112:	0e 94 c3 08 	call	0x1186	; 0x1186 <calloc>
    1116:	fc 01       	movw	r30, r24
    1118:	9c 01       	movw	r18, r24
    111a:	00 97       	sbiw	r24, 0x00	; 0
    111c:	71 f1       	breq	.+92     	; 0x117a <fdevopen+0x8c>
    111e:	80 e8       	ldi	r24, 0x80	; 128
    1120:	83 83       	std	Z+3, r24	; 0x03
    1122:	20 97       	sbiw	r28, 0x00	; 0
    1124:	71 f0       	breq	.+28     	; 0x1142 <fdevopen+0x54>
    1126:	d3 87       	std	Z+11, r29	; 0x0b
    1128:	c2 87       	std	Z+10, r28	; 0x0a
    112a:	81 e8       	ldi	r24, 0x81	; 129
    112c:	83 83       	std	Z+3, r24	; 0x03
    112e:	80 91 32 01 	lds	r24, 0x0132
    1132:	90 91 33 01 	lds	r25, 0x0133
    1136:	89 2b       	or	r24, r25
    1138:	21 f4       	brne	.+8      	; 0x1142 <fdevopen+0x54>
    113a:	f0 93 33 01 	sts	0x0133, r31
    113e:	e0 93 32 01 	sts	0x0132, r30
    1142:	01 15       	cp	r16, r1
    1144:	11 05       	cpc	r17, r1
    1146:	c9 f0       	breq	.+50     	; 0x117a <fdevopen+0x8c>
    1148:	11 87       	std	Z+9, r17	; 0x09
    114a:	00 87       	std	Z+8, r16	; 0x08
    114c:	83 81       	ldd	r24, Z+3	; 0x03
    114e:	82 60       	ori	r24, 0x02	; 2
    1150:	83 83       	std	Z+3, r24	; 0x03
    1152:	80 91 34 01 	lds	r24, 0x0134
    1156:	90 91 35 01 	lds	r25, 0x0135
    115a:	89 2b       	or	r24, r25
    115c:	71 f4       	brne	.+28     	; 0x117a <fdevopen+0x8c>
    115e:	f0 93 35 01 	sts	0x0135, r31
    1162:	e0 93 34 01 	sts	0x0134, r30
    1166:	80 91 36 01 	lds	r24, 0x0136
    116a:	90 91 37 01 	lds	r25, 0x0137
    116e:	89 2b       	or	r24, r25
    1170:	21 f4       	brne	.+8      	; 0x117a <fdevopen+0x8c>
    1172:	f0 93 37 01 	sts	0x0137, r31
    1176:	e0 93 36 01 	sts	0x0136, r30
    117a:	c9 01       	movw	r24, r18
    117c:	df 91       	pop	r29
    117e:	cf 91       	pop	r28
    1180:	1f 91       	pop	r17
    1182:	0f 91       	pop	r16
    1184:	08 95       	ret

00001186 <calloc>:
    1186:	0f 93       	push	r16
    1188:	1f 93       	push	r17
    118a:	cf 93       	push	r28
    118c:	df 93       	push	r29
    118e:	68 9f       	mul	r22, r24
    1190:	80 01       	movw	r16, r0
    1192:	69 9f       	mul	r22, r25
    1194:	10 0d       	add	r17, r0
    1196:	78 9f       	mul	r23, r24
    1198:	10 0d       	add	r17, r0
    119a:	11 24       	eor	r1, r1
    119c:	c8 01       	movw	r24, r16
    119e:	0e 94 72 07 	call	0xee4	; 0xee4 <malloc>
    11a2:	ec 01       	movw	r28, r24
    11a4:	00 97       	sbiw	r24, 0x00	; 0
    11a6:	29 f0       	breq	.+10     	; 0x11b2 <calloc+0x2c>
    11a8:	60 e0       	ldi	r22, 0x00	; 0
    11aa:	70 e0       	ldi	r23, 0x00	; 0
    11ac:	a8 01       	movw	r20, r16
    11ae:	0e 94 df 08 	call	0x11be	; 0x11be <memset>
    11b2:	ce 01       	movw	r24, r28
    11b4:	df 91       	pop	r29
    11b6:	cf 91       	pop	r28
    11b8:	1f 91       	pop	r17
    11ba:	0f 91       	pop	r16
    11bc:	08 95       	ret

000011be <memset>:
    11be:	dc 01       	movw	r26, r24
    11c0:	01 c0       	rjmp	.+2      	; 0x11c4 <memset+0x6>
    11c2:	6d 93       	st	X+, r22
    11c4:	41 50       	subi	r20, 0x01	; 1
    11c6:	50 40       	sbci	r21, 0x00	; 0
    11c8:	e0 f7       	brcc	.-8      	; 0x11c2 <memset+0x4>
    11ca:	08 95       	ret

000011cc <_exit>:
    11cc:	f8 94       	cli

000011ce <__stop_program>:
    11ce:	ff cf       	rjmp	.-2      	; 0x11ce <__stop_program>
