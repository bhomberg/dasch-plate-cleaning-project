
I2C_Motor_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  000012c8  0000135c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000020  00800138  00800138  00001394  2**0
                  ALLOC
  3 .stab         000027c0  00000000  00000000  00001394  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002591  00000000  00000000  00003b54  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000040  00000000  00000000  000060e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000014a  00000000  00000000  00006125  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000708  00000000  00000000  0000626f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000002db  00000000  00000000  00006977  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000588  00000000  00000000  00006c52  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000120  00000000  00000000  000071dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000429  00000000  00000000  000072fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000020f  00000000  00000000  00007725  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 49 06 	jmp	0xc92	; 0xc92 <__vector_11>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e8 ec       	ldi	r30, 0xC8	; 200
      a0:	f2 e1       	ldi	r31, 0x12	; 18
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a8 33       	cpi	r26, 0x38	; 56
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	11 e0       	ldi	r17, 0x01	; 1
      b4:	a8 e3       	ldi	r26, 0x38	; 56
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a8 35       	cpi	r26, 0x58	; 88
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <main>
      c6:	0c 94 62 09 	jmp	0x12c4	; 0x12c4 <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <__cxa_guard_acquire>:

extern "C" int __cxa_guard_acquire(__guard *); 
extern "C" void __cxa_guard_release (__guard *); 
extern "C" void __cxa_guard_abort (__guard *); 

int __cxa_guard_acquire(__guard *g) {return !*(char *)(g);}; 
      ce:	fc 01       	movw	r30, r24
      d0:	20 e0       	ldi	r18, 0x00	; 0
      d2:	30 e0       	ldi	r19, 0x00	; 0
      d4:	80 81       	ld	r24, Z
      d6:	88 23       	and	r24, r24
      d8:	11 f4       	brne	.+4      	; 0xde <__cxa_guard_acquire+0x10>
      da:	21 e0       	ldi	r18, 0x01	; 1
      dc:	30 e0       	ldi	r19, 0x00	; 0
      de:	c9 01       	movw	r24, r18
      e0:	08 95       	ret

000000e2 <__cxa_guard_release>:
void __cxa_guard_release (__guard *g) {*(char *)g = 1;}; 
      e2:	fc 01       	movw	r30, r24
      e4:	81 e0       	ldi	r24, 0x01	; 1
      e6:	80 83       	st	Z, r24
      e8:	08 95       	ret

000000ea <__cxa_guard_abort>:
void __cxa_guard_abort (__guard *) {}; 
      ea:	08 95       	ret

000000ec <__cxa_pure_virtual>:

extern "C" void __cxa_pure_virtual(void); 
void __cxa_pure_virtual(void) {}; 
      ec:	08 95       	ret

000000ee <_Z3gcfiiiiii>:
	char byte1;
} u_byte1;



int gcf(int in1, int in2, int in3, int in4, int in5, int in6) //int
      ee:	6f 92       	push	r6
      f0:	7f 92       	push	r7
      f2:	8f 92       	push	r8
      f4:	9f 92       	push	r9
      f6:	af 92       	push	r10
      f8:	bf 92       	push	r11
      fa:	cf 92       	push	r12
      fc:	df 92       	push	r13
      fe:	ef 92       	push	r14
     100:	ff 92       	push	r15
     102:	0f 93       	push	r16
     104:	1f 93       	push	r17
     106:	cf 93       	push	r28
     108:	df 93       	push	r29
{
	int gcf = 1;
	for(int i = 2; i <= 100*in1; i ++)
     10a:	e4 e6       	ldi	r30, 0x64	; 100
     10c:	f0 e0       	ldi	r31, 0x00	; 0
     10e:	8e 9f       	mul	r24, r30
     110:	e0 01       	movw	r28, r0
     112:	8f 9f       	mul	r24, r31
     114:	d0 0d       	add	r29, r0
     116:	9e 9f       	mul	r25, r30
     118:	d0 0d       	add	r29, r0
     11a:	11 24       	eor	r1, r1
	{
		if(100*in1 % i == 0)
		{
			if(100*in2 % i == 0)
     11c:	6e 9f       	mul	r22, r30
     11e:	30 01       	movw	r6, r0
     120:	6f 9f       	mul	r22, r31
     122:	70 0c       	add	r7, r0
     124:	7e 9f       	mul	r23, r30
     126:	70 0c       	add	r7, r0
     128:	11 24       	eor	r1, r1
			{
				if(100*in3 % i == 0)
     12a:	4e 9f       	mul	r20, r30
     12c:	40 01       	movw	r8, r0
     12e:	4f 9f       	mul	r20, r31
     130:	90 0c       	add	r9, r0
     132:	5e 9f       	mul	r21, r30
     134:	90 0c       	add	r9, r0
     136:	11 24       	eor	r1, r1
				{
					if(100*in4 % i == 0)
     138:	2e 9f       	mul	r18, r30
     13a:	50 01       	movw	r10, r0
     13c:	2f 9f       	mul	r18, r31
     13e:	b0 0c       	add	r11, r0
     140:	3e 9f       	mul	r19, r30
     142:	b0 0c       	add	r11, r0
     144:	11 24       	eor	r1, r1
					{
						if(100*in5 % i == 0)
     146:	0e 9f       	mul	r16, r30
     148:	60 01       	movw	r12, r0
     14a:	0f 9f       	mul	r16, r31
     14c:	d0 0c       	add	r13, r0
     14e:	1e 9f       	mul	r17, r30
     150:	d0 0c       	add	r13, r0
     152:	11 24       	eor	r1, r1
						{
							if(100*in6 % i == 0)
     154:	ee 9e       	mul	r14, r30
     156:	80 01       	movw	r16, r0
     158:	ef 9e       	mul	r14, r31
     15a:	10 0d       	add	r17, r0
     15c:	fe 9e       	mul	r15, r30
     15e:	10 0d       	add	r17, r0
     160:	11 24       	eor	r1, r1
     162:	e1 e0       	ldi	r30, 0x01	; 1
     164:	f0 e0       	ldi	r31, 0x00	; 0
     166:	22 e0       	ldi	r18, 0x02	; 2
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	27 c0       	rjmp	.+78     	; 0x1ba <_Z3gcfiiiiii+0xcc>
int gcf(int in1, int in2, int in3, int in4, int in5, int in6) //int
{
	int gcf = 1;
	for(int i = 2; i <= 100*in1; i ++)
	{
		if(100*in1 % i == 0)
     16c:	ce 01       	movw	r24, r28
     16e:	b9 01       	movw	r22, r18
     170:	0e 94 6e 07 	call	0xedc	; 0xedc <__divmodhi4>
     174:	89 2b       	or	r24, r25
     176:	f9 f4       	brne	.+62     	; 0x1b6 <_Z3gcfiiiiii+0xc8>
		{
			if(100*in2 % i == 0)
     178:	c3 01       	movw	r24, r6
     17a:	b9 01       	movw	r22, r18
     17c:	0e 94 6e 07 	call	0xedc	; 0xedc <__divmodhi4>
     180:	89 2b       	or	r24, r25
     182:	c9 f4       	brne	.+50     	; 0x1b6 <_Z3gcfiiiiii+0xc8>
			{
				if(100*in3 % i == 0)
     184:	c4 01       	movw	r24, r8
     186:	b9 01       	movw	r22, r18
     188:	0e 94 6e 07 	call	0xedc	; 0xedc <__divmodhi4>
     18c:	89 2b       	or	r24, r25
     18e:	99 f4       	brne	.+38     	; 0x1b6 <_Z3gcfiiiiii+0xc8>
				{
					if(100*in4 % i == 0)
     190:	c5 01       	movw	r24, r10
     192:	b9 01       	movw	r22, r18
     194:	0e 94 6e 07 	call	0xedc	; 0xedc <__divmodhi4>
     198:	89 2b       	or	r24, r25
     19a:	69 f4       	brne	.+26     	; 0x1b6 <_Z3gcfiiiiii+0xc8>
					{
						if(100*in5 % i == 0)
     19c:	c6 01       	movw	r24, r12
     19e:	b9 01       	movw	r22, r18
     1a0:	0e 94 6e 07 	call	0xedc	; 0xedc <__divmodhi4>
     1a4:	89 2b       	or	r24, r25
     1a6:	39 f4       	brne	.+14     	; 0x1b6 <_Z3gcfiiiiii+0xc8>
						{
							if(100*in6 % i == 0)
     1a8:	c8 01       	movw	r24, r16
     1aa:	b9 01       	movw	r22, r18
     1ac:	0e 94 6e 07 	call	0xedc	; 0xedc <__divmodhi4>
     1b0:	89 2b       	or	r24, r25
     1b2:	09 f4       	brne	.+2      	; 0x1b6 <_Z3gcfiiiiii+0xc8>
     1b4:	f9 01       	movw	r30, r18


int gcf(int in1, int in2, int in3, int in4, int in5, int in6) //int
{
	int gcf = 1;
	for(int i = 2; i <= 100*in1; i ++)
     1b6:	2f 5f       	subi	r18, 0xFF	; 255
     1b8:	3f 4f       	sbci	r19, 0xFF	; 255
     1ba:	c2 17       	cp	r28, r18
     1bc:	d3 07       	cpc	r29, r19
     1be:	b4 f6       	brge	.-84     	; 0x16c <_Z3gcfiiiiii+0x7e>
				}
			}
		}
	}
	return gcf;
}
     1c0:	cf 01       	movw	r24, r30
     1c2:	df 91       	pop	r29
     1c4:	cf 91       	pop	r28
     1c6:	1f 91       	pop	r17
     1c8:	0f 91       	pop	r16
     1ca:	ff 90       	pop	r15
     1cc:	ef 90       	pop	r14
     1ce:	df 90       	pop	r13
     1d0:	cf 90       	pop	r12
     1d2:	bf 90       	pop	r11
     1d4:	af 90       	pop	r10
     1d6:	9f 90       	pop	r9
     1d8:	8f 90       	pop	r8
     1da:	7f 90       	pop	r7
     1dc:	6f 90       	pop	r6
     1de:	08 95       	ret

000001e0 <main>:
  
int main()   
     1e0:	1f 93       	push	r17
     1e2:	cf 93       	push	r28
     1e4:	df 93       	push	r29
	//int motorouts [16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	int runtime = 20000, steplength0 = 2, steplength1 = 10000, totallength0 = 5, totallength1 = 20000;
	int totallength2 = 7, totallength3 = 8, totallength4 = 9;
	int delaytime = 1;//gcf(totallength0, totallength1, totallength2, totallength3, totallength4, steplength)/100;
    
	u_byte0.byte0 = 0;  // initialize byte0
     1e6:	10 92 38 01 	sts	0x0138, r1
	u_byte1.byte1 = 0;  // initialize byte1
     1ea:	10 92 39 01 	sts	0x0139, r1
	
	OrangutanLCD::clear();
     1ee:	0e 94 bf 03 	call	0x77e	; 0x77e <_ZN12OrangutanLCD5clearEv>
	OrangutanLCD::print("BEGIN ");
     1f2:	80 e0       	ldi	r24, 0x00	; 0
     1f4:	91 e0       	ldi	r25, 0x01	; 1
     1f6:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD5printEPKc>
// another C++ file.
inline unsigned long get_ms() { return OrangutanTime::ms(); }
inline unsigned long millis() { return OrangutanTime::ms(); }

inline void delay(unsigned int milliseconds) { OrangutanTime::delayMilliseconds(milliseconds); }
inline void delay_ms(unsigned int milliseconds) { OrangutanTime::delayMilliseconds(milliseconds); }
     1fa:	88 ee       	ldi	r24, 0xE8	; 232
     1fc:	93 e0       	ldi	r25, 0x03	; 3
     1fe:	0e 94 b4 06 	call	0xd68	; 0xd68 <_ZN13OrangutanTime17delayMillisecondsEj>
    //DDRB  = 0xff;                              // use all pins on port B for output 
    //PORTB = 0xff;                              // (active low LED's )
	
	delay_ms(1000);

    i2c_init();                                // init I2C interface
     202:	0e 94 6e 01 	call	0x2dc	; 0x2dc <_Z8i2c_initv>
	
    OrangutanLCD::print("INIT ");
     206:	87 e0       	ldi	r24, 0x07	; 7
     208:	91 e0       	ldi	r25, 0x01	; 1
     20a:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD5printEPKc>
	
	/* write 0x75 to eeprom address 0x05 (Byte Write) */
    ret = i2c_start(PCF8575+I2C_WRITE);       // set device address and write mode
     20e:	80 e4       	ldi	r24, 0x40	; 64
     210:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9i2c_starth>
     214:	18 2f       	mov	r17, r24
    
	OrangutanLCD::clear();
     216:	0e 94 bf 03 	call	0x77e	; 0x77e <_ZN12OrangutanLCD5clearEv>
	OrangutanLCD::print("START ");
     21a:	8d e0       	ldi	r24, 0x0D	; 13
     21c:	91 e0       	ldi	r25, 0x01	; 1
     21e:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD5printEPKc>
	
	if ( ret ) {
     222:	11 23       	and	r17, r17
     224:	59 f0       	breq	.+22     	; 0x23c <main+0x5c>
        /* failed to issue start condition, possibly no device found */
        
		OrangutanLCD::print("NACK ");
     226:	84 e1       	ldi	r24, 0x14	; 20
     228:	91 e0       	ldi	r25, 0x01	; 1
     22a:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD5printEPKc>
		i2c_stop();
     22e:	0e 94 c5 01 	call	0x38a	; 0x38a <_Z8i2c_stopv>
        //PORTB=0x00;                            // activate all 8 LED to show error */
		OrangutanLCD::print("STOP ");
     232:	8a e1       	ldi	r24, 0x1A	; 26
     234:	91 e0       	ldi	r25, 0x01	; 1
     236:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD5printEPKc>
     23a:	45 c0       	rjmp	.+138    	; 0x2c6 <main+0xe6>
    }else {
		OrangutanLCD::print("ACK ");
     23c:	80 e2       	ldi	r24, 0x20	; 32
     23e:	91 e0       	ldi	r25, 0x01	; 1
     240:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD5printEPKc>
        /* issuing start condition ok, device accessible */
		OrangutanLCD::print("BINIT ");
     244:	85 e2       	ldi	r24, 0x25	; 37
     246:	91 e0       	ldi	r25, 0x01	; 1
     248:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD5printEPKc>
     24c:	88 ee       	ldi	r24, 0xE8	; 232
     24e:	93 e0       	ldi	r25, 0x03	; 3
     250:	0e 94 b4 06 	call	0xd68	; 0xd68 <_ZN13OrangutanTime17delayMillisecondsEj>
		delay_ms(1000);
		OrangutanLCD::clear();
     254:	0e 94 bf 03 	call	0x77e	; 0x77e <_ZN12OrangutanLCD5clearEv>
     258:	c0 e0       	ldi	r28, 0x00	; 0
     25a:	d0 e0       	ldi	r29, 0x00	; 0
		{

			//OrangutanLCD::print( (int) u_byte0.byte0);
			//OrangutanLCD::print(" ");

			if( (j % (totallength0/delaytime) ) < (steplength0/delaytime) )
     25c:	ce 01       	movw	r24, r28
     25e:	65 e0       	ldi	r22, 0x05	; 5
     260:	70 e0       	ldi	r23, 0x00	; 0
     262:	0e 94 6e 07 	call	0xedc	; 0xedc <__divmodhi4>
     266:	20 91 38 01 	lds	r18, 0x0138
     26a:	02 97       	sbiw	r24, 0x02	; 2
     26c:	14 f4       	brge	.+4      	; 0x272 <main+0x92>
			{
				//motorouts[0] = 1;
				u_byte0.bits_in_byte0.bit_0 = 1; // set bit 0
     26e:	21 60       	ori	r18, 0x01	; 1
     270:	01 c0       	rjmp	.+2      	; 0x274 <main+0x94>
			}
			else
			{
				//motorouts[0] = 0;
				u_byte0.bits_in_byte0.bit_0 = 0; // set bit 0
     272:	2e 7f       	andi	r18, 0xFE	; 254
     274:	20 93 38 01 	sts	0x0138, r18
			}

			if( (j % (totallength1/delaytime) ) < (steplength1/delaytime) )
     278:	ce 01       	movw	r24, r28
     27a:	60 e2       	ldi	r22, 0x20	; 32
     27c:	7e e4       	ldi	r23, 0x4E	; 78
     27e:	0e 94 6e 07 	call	0xedc	; 0xedc <__divmodhi4>
     282:	20 91 38 01 	lds	r18, 0x0138
     286:	80 51       	subi	r24, 0x10	; 16
     288:	97 42       	sbci	r25, 0x27	; 39
     28a:	14 f4       	brge	.+4      	; 0x290 <main+0xb0>
			{
				//motorouts[0] = 1;
				u_byte0.bits_in_byte0.bit_1 = 1; // set bit 0
     28c:	22 60       	ori	r18, 0x02	; 2
     28e:	01 c0       	rjmp	.+2      	; 0x292 <main+0xb2>
			}
			else
			{
				//motorouts[0] = 0;
				u_byte0.bits_in_byte0.bit_1 = 0; // set bit 0
     290:	2d 7f       	andi	r18, 0xFD	; 253
     292:	20 93 38 01 	sts	0x0138, r18
			}

			i2c_write(u_byte0.byte0);                       // write address = 5
     296:	80 91 38 01 	lds	r24, 0x0138
     29a:	0e 94 cd 01 	call	0x39a	; 0x39a <_Z9i2c_writeh>
        	i2c_write(u_byte1.byte1);                       // ret=0 -> Ok, ret=1 -> no ACK 
     29e:	80 91 39 01 	lds	r24, 0x0139
     2a2:	0e 94 cd 01 	call	0x39a	; 0x39a <_Z9i2c_writeh>
        	i2c_stop();                            // set stop conditon = release bus
     2a6:	0e 94 c5 01 	call	0x38a	; 0x38a <_Z8i2c_stopv>
     2aa:	81 e0       	ldi	r24, 0x01	; 1
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	0e 94 b4 06 	call	0xd68	; 0xd68 <_ZN13OrangutanTime17delayMillisecondsEj>
			delay_ms(delaytime); 
			i2c_start(PCF8575+I2C_WRITE);
     2b2:	80 e4       	ldi	r24, 0x40	; 64
     2b4:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9i2c_starth>
		OrangutanLCD::print("ACK ");
        /* issuing start condition ok, device accessible */
		OrangutanLCD::print("BINIT ");
		delay_ms(1000);
		OrangutanLCD::clear();
		for(int j = 0; j < (runtime)/(delaytime); j ++)
     2b8:	21 96       	adiw	r28, 0x01	; 1
     2ba:	8e e4       	ldi	r24, 0x4E	; 78
     2bc:	c0 32       	cpi	r28, 0x20	; 32
     2be:	d8 07       	cpc	r29, r24
     2c0:	69 f6       	brne	.-102    	; 0x25c <main+0x7c>
        	i2c_write(u_byte1.byte1);                       // ret=0 -> Ok, ret=1 -> no ACK 
        	i2c_stop();                            // set stop conditon = release bus
			delay_ms(delaytime); 
			i2c_start(PCF8575+I2C_WRITE);
    	}
		i2c_stop();
     2c2:	0e 94 c5 01 	call	0x38a	; 0x38a <_Z8i2c_stopv>
	}
	OrangutanLCD::print("END");
     2c6:	8c e2       	ldi	r24, 0x2C	; 44
     2c8:	91 e0       	ldi	r25, 0x01	; 1
     2ca:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD5printEPKc>
     2ce:	ff cf       	rjmp	.-2      	; 0x2ce <main+0xee>

000002d0 <_ZdlPv>:
  return malloc(size); 
} 

void operator delete(void * ptr) 
{ 
  free(ptr); 
     2d0:	0e 94 9b 08 	call	0x1136	; 0x1136 <free>
} 
     2d4:	08 95       	ret

000002d6 <_Znwj>:
void * operator new(size_t size); 
void operator delete(void * ptr); 

void * operator new(size_t size) 
{ 
  return malloc(size); 
     2d6:	0e 94 ee 07 	call	0xfdc	; 0xfdc <malloc>
} 
     2da:	08 95       	ret

000002dc <_Z8i2c_initv>:
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR = 0;                         /* no prescaler */
     2dc:	10 92 b9 00 	sts	0x00B9, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     2e0:	8c e0       	ldi	r24, 0x0C	; 12
     2e2:	80 93 b8 00 	sts	0x00B8, r24

}/* i2c_init */
     2e6:	08 95       	ret

000002e8 <_Z9i2c_starth>:

/*************************************************************************	
  Issues a start condition and sends address and transfer direction.
  return 0 = device accessible, 1= failed to access device
*************************************************************************/
unsigned char i2c_start(unsigned char address)
     2e8:	98 2f       	mov	r25, r24
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     2ea:	84 ea       	ldi	r24, 0xA4	; 164
     2ec:	80 93 bc 00 	sts	0x00BC, r24
	//print("B4 ");
	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     2f0:	80 91 bc 00 	lds	r24, 0x00BC
     2f4:	87 ff       	sbrs	r24, 7
     2f6:	fc cf       	rjmp	.-8      	; 0x2f0 <_Z9i2c_starth+0x8>
	//print("SENT ");
	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     2f8:	80 91 b9 00 	lds	r24, 0x00B9
     2fc:	88 7f       	andi	r24, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     2fe:	88 30       	cpi	r24, 0x08	; 8
     300:	21 f0       	breq	.+8      	; 0x30a <_Z9i2c_starth+0x22>
     302:	80 31       	cpi	r24, 0x10	; 16
     304:	11 f0       	breq	.+4      	; 0x30a <_Z9i2c_starth+0x22>
     306:	81 e0       	ldi	r24, 0x01	; 1
     308:	08 95       	ret

	// send device address
	TWDR = address;
     30a:	90 93 bb 00 	sts	0x00BB, r25
	TWCR = (1<<TWINT) | (1<<TWEN);
     30e:	84 e8       	ldi	r24, 0x84	; 132
     310:	80 93 bc 00 	sts	0x00BC, r24
	//print("B5 ");
	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     314:	80 91 bc 00 	lds	r24, 0x00BC
     318:	87 ff       	sbrs	r24, 7
     31a:	fc cf       	rjmp	.-8      	; 0x314 <_Z9i2c_starth+0x2c>
	//print("N/ACK ");
	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     31c:	90 91 b9 00 	lds	r25, 0x00B9
     320:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     322:	98 31       	cpi	r25, 0x18	; 24
     324:	11 f4       	brne	.+4      	; 0x32a <_Z9i2c_starth+0x42>
     326:	80 e0       	ldi	r24, 0x00	; 0
     328:	08 95       	ret
     32a:	80 e0       	ldi	r24, 0x00	; 0
     32c:	90 34       	cpi	r25, 0x40	; 64
     32e:	09 f0       	breq	.+2      	; 0x332 <_Z9i2c_starth+0x4a>
     330:	81 e0       	ldi	r24, 0x01	; 1

	return 0;

}/* i2c_start */
     332:	08 95       	ret

00000334 <_Z14i2c_start_waith>:
 Issues a start condition and sends address and transfer direction.
 If device is busy, use ack polling to wait until device is ready
 
 Input:   address and transfer direction of I2C device
*************************************************************************/
void i2c_start_wait(unsigned char address)
     334:	98 2f       	mov	r25, r24


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     336:	44 ea       	ldi	r20, 0xA4	; 164
    	twst = TW_STATUS & 0xF8;
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
    
    	// send device address
    	TWDR = address;
    	TWCR = (1<<TWINT) | (1<<TWEN);
     338:	34 e8       	ldi	r19, 0x84	; 132
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     33a:	24 e9       	ldi	r18, 0x94	; 148


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     33c:	40 93 bc 00 	sts	0x00BC, r20
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     340:	80 91 bc 00 	lds	r24, 0x00BC
     344:	87 ff       	sbrs	r24, 7
     346:	fc cf       	rjmp	.-8      	; 0x340 <_Z14i2c_start_waith+0xc>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     348:	80 91 b9 00 	lds	r24, 0x00B9
     34c:	88 7f       	andi	r24, 0xF8	; 248
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
     34e:	88 30       	cpi	r24, 0x08	; 8
     350:	11 f0       	breq	.+4      	; 0x356 <_Z14i2c_start_waith+0x22>
     352:	80 31       	cpi	r24, 0x10	; 16
     354:	99 f7       	brne	.-26     	; 0x33c <_Z14i2c_start_waith+0x8>
    
    	// send device address
    	TWDR = address;
     356:	90 93 bb 00 	sts	0x00BB, r25
    	TWCR = (1<<TWINT) | (1<<TWEN);
     35a:	30 93 bc 00 	sts	0x00BC, r19
    
    	// wail until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     35e:	80 91 bc 00 	lds	r24, 0x00BC
     362:	87 ff       	sbrs	r24, 7
     364:	fc cf       	rjmp	.-8      	; 0x35e <_Z14i2c_start_waith+0x2a>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     366:	80 91 b9 00 	lds	r24, 0x00B9
     36a:	88 7f       	andi	r24, 0xF8	; 248
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
     36c:	80 32       	cpi	r24, 0x20	; 32
     36e:	11 f0       	breq	.+4      	; 0x374 <_Z14i2c_start_waith+0x40>
     370:	88 35       	cpi	r24, 0x58	; 88
     372:	39 f4       	brne	.+14     	; 0x382 <_Z14i2c_start_waith+0x4e>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     374:	20 93 bc 00 	sts	0x00BC, r18
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR & (1<<TWSTO));
     378:	80 91 bc 00 	lds	r24, 0x00BC
     37c:	84 fd       	sbrc	r24, 4
     37e:	fc cf       	rjmp	.-8      	; 0x378 <_Z14i2c_start_waith+0x44>
     380:	dd cf       	rjmp	.-70     	; 0x33c <_Z14i2c_start_waith+0x8>
     382:	08 95       	ret

00000384 <_Z13i2c_rep_starth>:
 Return:  0 device accessible
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );
     384:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9i2c_starth>

}/* i2c_rep_start */
     388:	08 95       	ret

0000038a <_Z8i2c_stopv>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     38a:	84 e9       	ldi	r24, 0x94	; 148
     38c:	80 93 bc 00 	sts	0x00BC, r24
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     390:	80 91 bc 00 	lds	r24, 0x00BC
     394:	84 fd       	sbrc	r24, 4
     396:	fc cf       	rjmp	.-8      	; 0x390 <_Z8i2c_stopv+0x6>

}/* i2c_stop */
     398:	08 95       	ret

0000039a <_Z9i2c_writeh>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     39a:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     39e:	84 e8       	ldi	r24, 0x84	; 132
     3a0:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     3a4:	80 91 bc 00 	lds	r24, 0x00BC
     3a8:	87 ff       	sbrs	r24, 7
     3aa:	fc cf       	rjmp	.-8      	; 0x3a4 <_Z9i2c_writeh+0xa>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     3ac:	80 91 b9 00 	lds	r24, 0x00B9
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	88 7f       	andi	r24, 0xF8	; 248
     3b4:	88 32       	cpi	r24, 0x28	; 40
     3b6:	09 f0       	breq	.+2      	; 0x3ba <_Z9i2c_writeh+0x20>
     3b8:	91 e0       	ldi	r25, 0x01	; 1
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     3ba:	89 2f       	mov	r24, r25
     3bc:	08 95       	ret

000003be <_Z11i2c_readAckv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     3be:	84 ec       	ldi	r24, 0xC4	; 196
     3c0:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));    
     3c4:	80 91 bc 00 	lds	r24, 0x00BC
     3c8:	87 ff       	sbrs	r24, 7
     3ca:	fc cf       	rjmp	.-8      	; 0x3c4 <_Z11i2c_readAckv+0x6>

    return TWDR;
     3cc:	80 91 bb 00 	lds	r24, 0x00BB

}/* i2c_readAck */
     3d0:	08 95       	ret

000003d2 <_Z11i2c_readNakv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     3d2:	84 e8       	ldi	r24, 0x84	; 132
     3d4:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
     3d8:	80 91 bc 00 	lds	r24, 0x00BC
     3dc:	87 ff       	sbrs	r24, 7
     3de:	fc cf       	rjmp	.-8      	; 0x3d8 <_Z11i2c_readNakv+0x6>
	
    return TWDR;
     3e0:	80 91 bb 00 	lds	r24, 0x00BB

}/* i2c_readNak */
     3e4:	08 95       	ret

000003e6 <_ZN12OrangutanLCDC2Ev>:
     3e6:	08 95       	ret

000003e8 <_ZN12OrangutanLCDC1Ev>:
     3e8:	08 95       	ret

000003ea <void_getchar>:
     3ea:	80 e0       	ldi	r24, 0x00	; 0
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	08 95       	ret

000003f0 <_ZN12OrangutanLCD8busyWaitEv>:
     3f0:	ef 92       	push	r14
     3f2:	ff 92       	push	r15
     3f4:	0f 93       	push	r16
     3f6:	1f 93       	push	r17
     3f8:	67 b1       	in	r22, 0x07	; 7
     3fa:	3d 98       	cbi	0x07, 5	; 7
     3fc:	28 98       	cbi	0x05, 0	; 5
     3fe:	29 9a       	sbi	0x05, 1	; 5
     400:	e0 90 3e 01 	lds	r14, 0x013E
     404:	f0 90 3f 01 	lds	r15, 0x013F
     408:	00 91 40 01 	lds	r16, 0x0140
     40c:	10 91 41 01 	lds	r17, 0x0141
     410:	20 e0       	ldi	r18, 0x00	; 0
     412:	30 e0       	ldi	r19, 0x00	; 0
     414:	41 e0       	ldi	r20, 0x01	; 1
     416:	50 e0       	ldi	r21, 0x00	; 0
     418:	ca 01       	movw	r24, r20
     41a:	6f 93       	push	r22
     41c:	64 e0       	ldi	r22, 0x04	; 4
     41e:	6a 95       	dec	r22
     420:	f1 f7       	brne	.-4      	; 0x41e <_ZN12OrangutanLCD8busyWaitEv+0x2e>
     422:	6f 91       	pop	r22
     424:	01 97       	sbiw	r24, 0x01	; 1
     426:	c9 f7       	brne	.-14     	; 0x41a <_ZN12OrangutanLCD8busyWaitEv+0x2a>
     428:	2a 9a       	sbi	0x05, 2	; 5
     42a:	ca 01       	movw	r24, r20
     42c:	6f 93       	push	r22
     42e:	64 e0       	ldi	r22, 0x04	; 4
     430:	6a 95       	dec	r22
     432:	f1 f7       	brne	.-4      	; 0x430 <_ZN12OrangutanLCD8busyWaitEv+0x40>
     434:	6f 91       	pop	r22
     436:	01 97       	sbiw	r24, 0x01	; 1
     438:	c9 f7       	brne	.-14     	; 0x42c <_ZN12OrangutanLCD8busyWaitEv+0x3c>
     43a:	86 b1       	in	r24, 0x06	; 6
     43c:	2a 98       	cbi	0x05, 2	; 5
     43e:	fa 01       	movw	r30, r20
     440:	6f 93       	push	r22
     442:	64 e0       	ldi	r22, 0x04	; 4
     444:	6a 95       	dec	r22
     446:	f1 f7       	brne	.-4      	; 0x444 <_ZN12OrangutanLCD8busyWaitEv+0x54>
     448:	6f 91       	pop	r22
     44a:	31 97       	sbiw	r30, 0x01	; 1
     44c:	c9 f7       	brne	.-14     	; 0x440 <_ZN12OrangutanLCD8busyWaitEv+0x50>
     44e:	2a 9a       	sbi	0x05, 2	; 5
     450:	fa 01       	movw	r30, r20
     452:	6f 93       	push	r22
     454:	64 e0       	ldi	r22, 0x04	; 4
     456:	6a 95       	dec	r22
     458:	f1 f7       	brne	.-4      	; 0x456 <_ZN12OrangutanLCD8busyWaitEv+0x66>
     45a:	6f 91       	pop	r22
     45c:	31 97       	sbiw	r30, 0x01	; 1
     45e:	c9 f7       	brne	.-14     	; 0x452 <_ZN12OrangutanLCD8busyWaitEv+0x62>
     460:	2a 98       	cbi	0x05, 2	; 5
     462:	2c 5f       	subi	r18, 0xFC	; 252
     464:	3f 4f       	sbci	r19, 0xFF	; 255
     466:	85 ff       	sbrs	r24, 5
     468:	09 c0       	rjmp	.+18     	; 0x47c <_ZN12OrangutanLCD8busyWaitEv+0x8c>
     46a:	c9 01       	movw	r24, r18
     46c:	a0 e0       	ldi	r26, 0x00	; 0
     46e:	b0 e0       	ldi	r27, 0x00	; 0
     470:	8e 15       	cp	r24, r14
     472:	9f 05       	cpc	r25, r15
     474:	a0 07       	cpc	r26, r16
     476:	b1 07       	cpc	r27, r17
     478:	08 f4       	brcc	.+2      	; 0x47c <_ZN12OrangutanLCD8busyWaitEv+0x8c>
     47a:	ce cf       	rjmp	.-100    	; 0x418 <_ZN12OrangutanLCD8busyWaitEv+0x28>
     47c:	c9 01       	movw	r24, r18
     47e:	a0 e0       	ldi	r26, 0x00	; 0
     480:	b0 e0       	ldi	r27, 0x00	; 0
     482:	8e 15       	cp	r24, r14
     484:	9f 05       	cpc	r25, r15
     486:	a0 07       	cpc	r26, r16
     488:	b1 07       	cpc	r27, r17
     48a:	28 f0       	brcs	.+10     	; 0x496 <_ZN12OrangutanLCD8busyWaitEv+0xa6>
     48c:	82 e3       	ldi	r24, 0x32	; 50
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	a0 e0       	ldi	r26, 0x00	; 0
     492:	b0 e0       	ldi	r27, 0x00	; 0
     494:	04 c0       	rjmp	.+8      	; 0x49e <_ZN12OrangutanLCD8busyWaitEv+0xae>
     496:	80 e3       	ldi	r24, 0x30	; 48
     498:	95 e7       	ldi	r25, 0x75	; 117
     49a:	a0 e0       	ldi	r26, 0x00	; 0
     49c:	b0 e0       	ldi	r27, 0x00	; 0
     49e:	80 93 3e 01 	sts	0x013E, r24
     4a2:	90 93 3f 01 	sts	0x013F, r25
     4a6:	a0 93 40 01 	sts	0x0140, r26
     4aa:	b0 93 41 01 	sts	0x0141, r27
     4ae:	67 b9       	out	0x07, r22	; 7
     4b0:	1f 91       	pop	r17
     4b2:	0f 91       	pop	r16
     4b4:	ff 90       	pop	r15
     4b6:	ef 90       	pop	r14
     4b8:	08 95       	ret

000004ba <_ZN12OrangutanLCD8sendDataEh>:
     4ba:	28 b1       	in	r18, 0x08	; 8
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	8f 70       	andi	r24, 0x0F	; 15
     4c0:	90 70       	andi	r25, 0x00	; 0
     4c2:	88 0f       	add	r24, r24
     4c4:	99 1f       	adc	r25, r25
     4c6:	88 0f       	add	r24, r24
     4c8:	99 1f       	adc	r25, r25
     4ca:	23 7c       	andi	r18, 0xC3	; 195
     4cc:	28 2b       	or	r18, r24
     4ce:	28 b9       	out	0x08, r18	; 8
     4d0:	2a 9a       	sbi	0x05, 2	; 5
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	fc 01       	movw	r30, r24
     4d8:	6f 93       	push	r22
     4da:	64 e0       	ldi	r22, 0x04	; 4
     4dc:	6a 95       	dec	r22
     4de:	f1 f7       	brne	.-4      	; 0x4dc <_ZN12OrangutanLCD8sendDataEh+0x22>
     4e0:	6f 91       	pop	r22
     4e2:	31 97       	sbiw	r30, 0x01	; 1
     4e4:	c9 f7       	brne	.-14     	; 0x4d8 <_ZN12OrangutanLCD8sendDataEh+0x1e>
     4e6:	2a 98       	cbi	0x05, 2	; 5
     4e8:	6f 93       	push	r22
     4ea:	64 e0       	ldi	r22, 0x04	; 4
     4ec:	6a 95       	dec	r22
     4ee:	f1 f7       	brne	.-4      	; 0x4ec <_ZN12OrangutanLCD8sendDataEh+0x32>
     4f0:	6f 91       	pop	r22
     4f2:	01 97       	sbiw	r24, 0x01	; 1
     4f4:	c9 f7       	brne	.-14     	; 0x4e8 <_ZN12OrangutanLCD8sendDataEh+0x2e>
     4f6:	08 95       	ret

000004f8 <_ZN12OrangutanLCD10initPrintfEv>:
     4f8:	80 91 3a 01 	lds	r24, 0x013A
     4fc:	90 91 3b 01 	lds	r25, 0x013B
     500:	00 97       	sbiw	r24, 0x00	; 0
     502:	11 f0       	breq	.+4      	; 0x508 <_ZN12OrangutanLCD10initPrintfEv+0x10>
     504:	0e 94 9b 08 	call	0x1136	; 0x1136 <free>
     508:	80 91 30 01 	lds	r24, 0x0130
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	01 97       	sbiw	r24, 0x01	; 1
     510:	20 91 31 01 	lds	r18, 0x0131
     514:	30 e0       	ldi	r19, 0x00	; 0
     516:	ac 01       	movw	r20, r24
     518:	42 9f       	mul	r20, r18
     51a:	c0 01       	movw	r24, r0
     51c:	43 9f       	mul	r20, r19
     51e:	90 0d       	add	r25, r0
     520:	52 9f       	mul	r21, r18
     522:	90 0d       	add	r25, r0
     524:	11 24       	eor	r1, r1
     526:	0e 94 ee 07 	call	0xfdc	; 0xfdc <malloc>
     52a:	90 93 3b 01 	sts	0x013B, r25
     52e:	80 93 3a 01 	sts	0x013A, r24
     532:	00 97       	sbiw	r24, 0x00	; 0
     534:	29 f1       	breq	.+74     	; 0x580 <_ZN12OrangutanLCD10initPrintfEv+0x88>
     536:	60 e0       	ldi	r22, 0x00	; 0
     538:	70 e2       	ldi	r23, 0x20	; 32
     53a:	08 c0       	rjmp	.+16     	; 0x54c <_ZN12OrangutanLCD10initPrintfEv+0x54>
     53c:	e0 91 3a 01 	lds	r30, 0x013A
     540:	f0 91 3b 01 	lds	r31, 0x013B
     544:	e4 0f       	add	r30, r20
     546:	f5 1f       	adc	r31, r21
     548:	70 83       	st	Z, r23
     54a:	6f 5f       	subi	r22, 0xFF	; 255
     54c:	46 2f       	mov	r20, r22
     54e:	50 e0       	ldi	r21, 0x00	; 0
     550:	80 91 30 01 	lds	r24, 0x0130
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	01 97       	sbiw	r24, 0x01	; 1
     558:	20 91 31 01 	lds	r18, 0x0131
     55c:	30 e0       	ldi	r19, 0x00	; 0
     55e:	fc 01       	movw	r30, r24
     560:	e2 9f       	mul	r30, r18
     562:	c0 01       	movw	r24, r0
     564:	e3 9f       	mul	r30, r19
     566:	90 0d       	add	r25, r0
     568:	f2 9f       	mul	r31, r18
     56a:	90 0d       	add	r25, r0
     56c:	11 24       	eor	r1, r1
     56e:	48 17       	cp	r20, r24
     570:	59 07       	cpc	r21, r25
     572:	24 f3       	brlt	.-56     	; 0x53c <_ZN12OrangutanLCD10initPrintfEv+0x44>
     574:	81 ee       	ldi	r24, 0xE1	; 225
     576:	94 e0       	ldi	r25, 0x04	; 4
     578:	65 ef       	ldi	r22, 0xF5	; 245
     57a:	71 e0       	ldi	r23, 0x01	; 1
     57c:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <fdevopen>
     580:	08 95       	ret

00000582 <_ZN12OrangutanLCD10initPrintfEhh>:
     582:	80 93 31 01 	sts	0x0131, r24
     586:	60 93 30 01 	sts	0x0130, r22
     58a:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_ZN12OrangutanLCD10initPrintfEv>
     58e:	08 95       	ret

00000590 <lcd_init_printf_with_dimensions>:
     590:	80 93 31 01 	sts	0x0131, r24
     594:	60 93 30 01 	sts	0x0130, r22
     598:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_ZN12OrangutanLCD10initPrintfEv>
     59c:	08 95       	ret

0000059e <lcd_init_printf>:
     59e:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_ZN12OrangutanLCD10initPrintfEv>
     5a2:	08 95       	ret

000005a4 <_ZN12OrangutanLCD5init2Ev>:
     5a4:	3d 98       	cbi	0x07, 5	; 7
     5a6:	45 9a       	sbi	0x08, 5	; 8
     5a8:	80 e3       	ldi	r24, 0x30	; 48
     5aa:	95 e7       	ldi	r25, 0x75	; 117
     5ac:	a0 e0       	ldi	r26, 0x00	; 0
     5ae:	b0 e0       	ldi	r27, 0x00	; 0
     5b0:	80 93 3e 01 	sts	0x013E, r24
     5b4:	90 93 3f 01 	sts	0x013F, r25
     5b8:	a0 93 40 01 	sts	0x0140, r26
     5bc:	b0 93 41 01 	sts	0x0141, r27
     5c0:	20 9a       	sbi	0x04, 0	; 4
     5c2:	21 9a       	sbi	0x04, 1	; 4
     5c4:	22 9a       	sbi	0x04, 2	; 4
     5c6:	8e e1       	ldi	r24, 0x1E	; 30
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	0e 94 b4 06 	call	0xd68	; 0xd68 <_ZN13OrangutanTime17delayMillisecondsEj>
     5ce:	83 e0       	ldi	r24, 0x03	; 3
     5d0:	0e 94 27 06 	call	0xc4e	; 0xc4e <_ZN12OrangutanLCD13send_4bit_cmdEh>
     5d4:	86 e0       	ldi	r24, 0x06	; 6
     5d6:	90 e0       	ldi	r25, 0x00	; 0
     5d8:	0e 94 b4 06 	call	0xd68	; 0xd68 <_ZN13OrangutanTime17delayMillisecondsEj>
     5dc:	83 e0       	ldi	r24, 0x03	; 3
     5de:	0e 94 27 06 	call	0xc4e	; 0xc4e <_ZN12OrangutanLCD13send_4bit_cmdEh>
     5e2:	82 e0       	ldi	r24, 0x02	; 2
     5e4:	90 e0       	ldi	r25, 0x00	; 0
     5e6:	0e 94 b4 06 	call	0xd68	; 0xd68 <_ZN13OrangutanTime17delayMillisecondsEj>
     5ea:	83 e0       	ldi	r24, 0x03	; 3
     5ec:	0e 94 27 06 	call	0xc4e	; 0xc4e <_ZN12OrangutanLCD13send_4bit_cmdEh>
     5f0:	82 e0       	ldi	r24, 0x02	; 2
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	0e 94 b4 06 	call	0xd68	; 0xd68 <_ZN13OrangutanTime17delayMillisecondsEj>
     5f8:	82 e0       	ldi	r24, 0x02	; 2
     5fa:	0e 94 27 06 	call	0xc4e	; 0xc4e <_ZN12OrangutanLCD13send_4bit_cmdEh>
     5fe:	82 e0       	ldi	r24, 0x02	; 2
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	0e 94 b4 06 	call	0xd68	; 0xd68 <_ZN13OrangutanTime17delayMillisecondsEj>
     606:	88 e2       	ldi	r24, 0x28	; 40
     608:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN12OrangutanLCD8send_cmdEh>
     60c:	88 e0       	ldi	r24, 0x08	; 8
     60e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN12OrangutanLCD8send_cmdEh>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN12OrangutanLCD8send_cmdEh>
     618:	86 e0       	ldi	r24, 0x06	; 6
     61a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN12OrangutanLCD8send_cmdEh>
     61e:	8c e0       	ldi	r24, 0x0C	; 12
     620:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN12OrangutanLCD8send_cmdEh>
     624:	08 95       	ret

00000626 <_ZN12OrangutanLCD4initEv>:
     626:	80 91 42 01 	lds	r24, 0x0142
     62a:	88 23       	and	r24, r24
     62c:	29 f4       	brne	.+10     	; 0x638 <_ZN12OrangutanLCD4initEv+0x12>
     62e:	81 e0       	ldi	r24, 0x01	; 1
     630:	80 93 42 01 	sts	0x0142, r24
     634:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <_ZN12OrangutanLCD5init2Ev>
     638:	08 95       	ret

0000063a <_ZN12OrangutanLCD4sendEhhh>:
     63a:	ff 92       	push	r15
     63c:	0f 93       	push	r16
     63e:	1f 93       	push	r17
     640:	08 2f       	mov	r16, r24
     642:	16 2f       	mov	r17, r22
     644:	f4 2e       	mov	r15, r20
     646:	0e 94 13 03 	call	0x626	; 0x626 <_ZN12OrangutanLCD4initEv>
     64a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_ZN12OrangutanLCD8busyWaitEv>
     64e:	37 b1       	in	r19, 0x07	; 7
     650:	28 b1       	in	r18, 0x08	; 8
     652:	29 98       	cbi	0x05, 1	; 5
     654:	11 23       	and	r17, r17
     656:	11 f0       	breq	.+4      	; 0x65c <_ZN12OrangutanLCD4sendEhhh+0x22>
     658:	28 9a       	sbi	0x05, 0	; 5
     65a:	01 c0       	rjmp	.+2      	; 0x65e <_ZN12OrangutanLCD4sendEhhh+0x24>
     65c:	28 98       	cbi	0x05, 0	; 5
     65e:	87 b1       	in	r24, 0x07	; 7
     660:	8c 63       	ori	r24, 0x3C	; 60
     662:	87 b9       	out	0x07, r24	; 7
     664:	81 e0       	ldi	r24, 0x01	; 1
     666:	f8 16       	cp	r15, r24
     668:	e1 f0       	breq	.+56     	; 0x6a2 <_ZN12OrangutanLCD4sendEhhh+0x68>
     66a:	88 b1       	in	r24, 0x08	; 8
     66c:	90 2f       	mov	r25, r16
     66e:	92 95       	swap	r25
     670:	9f 70       	andi	r25, 0x0F	; 15
     672:	99 0f       	add	r25, r25
     674:	99 0f       	add	r25, r25
     676:	83 7c       	andi	r24, 0xC3	; 195
     678:	98 2b       	or	r25, r24
     67a:	98 b9       	out	0x08, r25	; 8
     67c:	2a 9a       	sbi	0x05, 2	; 5
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	fc 01       	movw	r30, r24
     684:	6f 93       	push	r22
     686:	64 e0       	ldi	r22, 0x04	; 4
     688:	6a 95       	dec	r22
     68a:	f1 f7       	brne	.-4      	; 0x688 <_ZN12OrangutanLCD4sendEhhh+0x4e>
     68c:	6f 91       	pop	r22
     68e:	31 97       	sbiw	r30, 0x01	; 1
     690:	c9 f7       	brne	.-14     	; 0x684 <_ZN12OrangutanLCD4sendEhhh+0x4a>
     692:	2a 98       	cbi	0x05, 2	; 5
     694:	6f 93       	push	r22
     696:	64 e0       	ldi	r22, 0x04	; 4
     698:	6a 95       	dec	r22
     69a:	f1 f7       	brne	.-4      	; 0x698 <_ZN12OrangutanLCD4sendEhhh+0x5e>
     69c:	6f 91       	pop	r22
     69e:	01 97       	sbiw	r24, 0x01	; 1
     6a0:	c9 f7       	brne	.-14     	; 0x694 <_ZN12OrangutanLCD4sendEhhh+0x5a>
     6a2:	88 b1       	in	r24, 0x08	; 8
     6a4:	0f 70       	andi	r16, 0x0F	; 15
     6a6:	00 0f       	add	r16, r16
     6a8:	00 0f       	add	r16, r16
     6aa:	83 7c       	andi	r24, 0xC3	; 195
     6ac:	80 2b       	or	r24, r16
     6ae:	88 b9       	out	0x08, r24	; 8
     6b0:	2a 9a       	sbi	0x05, 2	; 5
     6b2:	81 e0       	ldi	r24, 0x01	; 1
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	fc 01       	movw	r30, r24
     6b8:	6f 93       	push	r22
     6ba:	64 e0       	ldi	r22, 0x04	; 4
     6bc:	6a 95       	dec	r22
     6be:	f1 f7       	brne	.-4      	; 0x6bc <_ZN12OrangutanLCD4sendEhhh+0x82>
     6c0:	6f 91       	pop	r22
     6c2:	31 97       	sbiw	r30, 0x01	; 1
     6c4:	c9 f7       	brne	.-14     	; 0x6b8 <_ZN12OrangutanLCD4sendEhhh+0x7e>
     6c6:	2a 98       	cbi	0x05, 2	; 5
     6c8:	6f 93       	push	r22
     6ca:	64 e0       	ldi	r22, 0x04	; 4
     6cc:	6a 95       	dec	r22
     6ce:	f1 f7       	brne	.-4      	; 0x6cc <_ZN12OrangutanLCD4sendEhhh+0x92>
     6d0:	6f 91       	pop	r22
     6d2:	01 97       	sbiw	r24, 0x01	; 1
     6d4:	c9 f7       	brne	.-14     	; 0x6c8 <_ZN12OrangutanLCD4sendEhhh+0x8e>
     6d6:	37 b9       	out	0x07, r19	; 7
     6d8:	28 b9       	out	0x08, r18	; 8
     6da:	1f 91       	pop	r17
     6dc:	0f 91       	pop	r16
     6de:	ff 90       	pop	r15
     6e0:	08 95       	ret

000006e2 <_ZN12OrangutanLCD8send_cmdEh>:
     6e2:	60 e0       	ldi	r22, 0x00	; 0
     6e4:	42 e0       	ldi	r20, 0x02	; 2
     6e6:	0e 94 1d 03 	call	0x63a	; 0x63a <_ZN12OrangutanLCD4sendEhhh>
     6ea:	08 95       	ret

000006ec <_ZN12OrangutanLCD10moveCursorEhh>:
     6ec:	0f 93       	push	r16
     6ee:	1f 93       	push	r17
     6f0:	08 2f       	mov	r16, r24
     6f2:	16 2f       	mov	r17, r22
     6f4:	08 c0       	rjmp	.+16     	; 0x706 <_ZN12OrangutanLCD10moveCursorEhh+0x1a>
     6f6:	00 23       	and	r16, r16
     6f8:	11 f4       	brne	.+4      	; 0x6fe <_ZN12OrangutanLCD10moveCursorEhh+0x12>
     6fa:	80 e1       	ldi	r24, 0x10	; 16
     6fc:	01 c0       	rjmp	.+2      	; 0x700 <_ZN12OrangutanLCD10moveCursorEhh+0x14>
     6fe:	84 e1       	ldi	r24, 0x14	; 20
     700:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN12OrangutanLCD8send_cmdEh>
     704:	11 50       	subi	r17, 0x01	; 1
     706:	11 23       	and	r17, r17
     708:	b1 f7       	brne	.-20     	; 0x6f6 <_ZN12OrangutanLCD10moveCursorEhh+0xa>
     70a:	1f 91       	pop	r17
     70c:	0f 91       	pop	r16
     70e:	08 95       	ret

00000710 <lcd_move_cursor>:
     710:	0e 94 76 03 	call	0x6ec	; 0x6ec <_ZN12OrangutanLCD10moveCursorEhh>
     714:	08 95       	ret

00000716 <_ZN12OrangutanLCD10hideCursorEv>:
     716:	8c e0       	ldi	r24, 0x0C	; 12
     718:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN12OrangutanLCD8send_cmdEh>
     71c:	08 95       	ret

0000071e <lcd_hide_cursor>:
     71e:	0e 94 8b 03 	call	0x716	; 0x716 <_ZN12OrangutanLCD10hideCursorEv>
     722:	08 95       	ret

00000724 <_ZN12OrangutanLCD10showCursorEh>:
     724:	81 30       	cpi	r24, 0x01	; 1
     726:	11 f4       	brne	.+4      	; 0x72c <_ZN12OrangutanLCD10showCursorEh+0x8>
     728:	8f e0       	ldi	r24, 0x0F	; 15
     72a:	01 c0       	rjmp	.+2      	; 0x72e <_ZN12OrangutanLCD10showCursorEh+0xa>
     72c:	8e e0       	ldi	r24, 0x0E	; 14
     72e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN12OrangutanLCD8send_cmdEh>
     732:	08 95       	ret

00000734 <lcd_show_cursor>:
     734:	0e 94 92 03 	call	0x724	; 0x724 <_ZN12OrangutanLCD10showCursorEh>
     738:	08 95       	ret

0000073a <_ZN12OrangutanLCD6gotoXYEhh>:
     73a:	a4 e0       	ldi	r26, 0x04	; 4
     73c:	b0 e0       	ldi	r27, 0x00	; 0
     73e:	e3 ea       	ldi	r30, 0xA3	; 163
     740:	f3 e0       	ldi	r31, 0x03	; 3
     742:	0c 94 b1 07 	jmp	0xf62	; 0xf62 <__prologue_saves__+0x1c>
     746:	18 2f       	mov	r17, r24
     748:	06 2f       	mov	r16, r22
     74a:	80 e8       	ldi	r24, 0x80	; 128
     74c:	89 83       	std	Y+1, r24	; 0x01
     74e:	80 ec       	ldi	r24, 0xC0	; 192
     750:	8a 83       	std	Y+2, r24	; 0x02
     752:	84 e9       	ldi	r24, 0x94	; 148
     754:	8b 83       	std	Y+3, r24	; 0x03
     756:	84 ed       	ldi	r24, 0xD4	; 212
     758:	8c 83       	std	Y+4, r24	; 0x04
     75a:	fe 01       	movw	r30, r28
     75c:	e6 0f       	add	r30, r22
     75e:	f1 1d       	adc	r31, r1
     760:	81 81       	ldd	r24, Z+1	; 0x01
     762:	81 0f       	add	r24, r17
     764:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN12OrangutanLCD8send_cmdEh>
     768:	10 93 3d 01 	sts	0x013D, r17
     76c:	00 93 3c 01 	sts	0x013C, r16
     770:	24 96       	adiw	r28, 0x04	; 4
     772:	e4 e0       	ldi	r30, 0x04	; 4
     774:	0c 94 cd 07 	jmp	0xf9a	; 0xf9a <__epilogue_restores__+0x1c>

00000778 <lcd_goto_xy>:
     778:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN12OrangutanLCD6gotoXYEhh>
     77c:	08 95       	ret

0000077e <_ZN12OrangutanLCD5clearEv>:
     77e:	81 e0       	ldi	r24, 0x01	; 1
     780:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN12OrangutanLCD8send_cmdEh>
     784:	80 91 3a 01 	lds	r24, 0x013A
     788:	90 91 3b 01 	lds	r25, 0x013B
     78c:	89 2b       	or	r24, r25
     78e:	19 f1       	breq	.+70     	; 0x7d6 <_ZN12OrangutanLCD5clearEv+0x58>
     790:	60 e0       	ldi	r22, 0x00	; 0
     792:	70 e2       	ldi	r23, 0x20	; 32
     794:	08 c0       	rjmp	.+16     	; 0x7a6 <_ZN12OrangutanLCD5clearEv+0x28>
     796:	e0 91 3a 01 	lds	r30, 0x013A
     79a:	f0 91 3b 01 	lds	r31, 0x013B
     79e:	e4 0f       	add	r30, r20
     7a0:	f5 1f       	adc	r31, r21
     7a2:	70 83       	st	Z, r23
     7a4:	6f 5f       	subi	r22, 0xFF	; 255
     7a6:	46 2f       	mov	r20, r22
     7a8:	50 e0       	ldi	r21, 0x00	; 0
     7aa:	80 91 30 01 	lds	r24, 0x0130
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	01 97       	sbiw	r24, 0x01	; 1
     7b2:	20 91 31 01 	lds	r18, 0x0131
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	fc 01       	movw	r30, r24
     7ba:	e2 9f       	mul	r30, r18
     7bc:	c0 01       	movw	r24, r0
     7be:	e3 9f       	mul	r30, r19
     7c0:	90 0d       	add	r25, r0
     7c2:	f2 9f       	mul	r31, r18
     7c4:	90 0d       	add	r25, r0
     7c6:	11 24       	eor	r1, r1
     7c8:	48 17       	cp	r20, r24
     7ca:	59 07       	cpc	r21, r25
     7cc:	24 f3       	brlt	.-56     	; 0x796 <_ZN12OrangutanLCD5clearEv+0x18>
     7ce:	10 92 3d 01 	sts	0x013D, r1
     7d2:	10 92 3c 01 	sts	0x013C, r1
     7d6:	08 95       	ret

000007d8 <clear>:
     7d8:	0e 94 bf 03 	call	0x77e	; 0x77e <_ZN12OrangutanLCD5clearEv>
     7dc:	08 95       	ret

000007de <_ZN12OrangutanLCD9send_dataEh>:
     7de:	61 e0       	ldi	r22, 0x01	; 1
     7e0:	42 e0       	ldi	r20, 0x02	; 2
     7e2:	0e 94 1d 03 	call	0x63a	; 0x63a <_ZN12OrangutanLCD4sendEhhh>
     7e6:	08 95       	ret

000007e8 <_ZN12OrangutanLCD11printBinaryEh>:
     7e8:	0f 93       	push	r16
     7ea:	1f 93       	push	r17
     7ec:	cf 93       	push	r28
     7ee:	df 93       	push	r29
     7f0:	00 e0       	ldi	r16, 0x00	; 0
     7f2:	10 e8       	ldi	r17, 0x80	; 128
     7f4:	c8 2f       	mov	r28, r24
     7f6:	d0 e0       	ldi	r29, 0x00	; 0
     7f8:	81 2f       	mov	r24, r17
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	8c 23       	and	r24, r28
     7fe:	9d 23       	and	r25, r29
     800:	89 2b       	or	r24, r25
     802:	11 f0       	breq	.+4      	; 0x808 <_ZN12OrangutanLCD11printBinaryEh+0x20>
     804:	81 e3       	ldi	r24, 0x31	; 49
     806:	01 c0       	rjmp	.+2      	; 0x80a <_ZN12OrangutanLCD11printBinaryEh+0x22>
     808:	80 e3       	ldi	r24, 0x30	; 48
     80a:	0e 94 ef 03 	call	0x7de	; 0x7de <_ZN12OrangutanLCD9send_dataEh>
     80e:	0f 5f       	subi	r16, 0xFF	; 255
     810:	08 30       	cpi	r16, 0x08	; 8
     812:	11 f0       	breq	.+4      	; 0x818 <_ZN12OrangutanLCD11printBinaryEh+0x30>
     814:	16 95       	lsr	r17
     816:	f0 cf       	rjmp	.-32     	; 0x7f8 <_ZN12OrangutanLCD11printBinaryEh+0x10>
     818:	df 91       	pop	r29
     81a:	cf 91       	pop	r28
     81c:	1f 91       	pop	r17
     81e:	0f 91       	pop	r16
     820:	08 95       	ret

00000822 <print_binary>:
     822:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <_ZN12OrangutanLCD11printBinaryEh>
     826:	08 95       	ret

00000828 <_ZN12OrangutanLCD14printHexNibbleEh>:
     828:	8a 30       	cpi	r24, 0x0A	; 10
     82a:	10 f4       	brcc	.+4      	; 0x830 <_ZN12OrangutanLCD14printHexNibbleEh+0x8>
     82c:	80 5d       	subi	r24, 0xD0	; 208
     82e:	01 c0       	rjmp	.+2      	; 0x832 <_ZN12OrangutanLCD14printHexNibbleEh+0xa>
     830:	89 5c       	subi	r24, 0xC9	; 201
     832:	0e 94 ef 03 	call	0x7de	; 0x7de <_ZN12OrangutanLCD9send_dataEh>
     836:	08 95       	ret

00000838 <_ZN12OrangutanLCD8printHexEh>:
     838:	1f 93       	push	r17
     83a:	18 2f       	mov	r17, r24
     83c:	82 95       	swap	r24
     83e:	8f 70       	andi	r24, 0x0F	; 15
     840:	0e 94 14 04 	call	0x828	; 0x828 <_ZN12OrangutanLCD14printHexNibbleEh>
     844:	81 2f       	mov	r24, r17
     846:	8f 70       	andi	r24, 0x0F	; 15
     848:	0e 94 14 04 	call	0x828	; 0x828 <_ZN12OrangutanLCD14printHexNibbleEh>
     84c:	1f 91       	pop	r17
     84e:	08 95       	ret

00000850 <_ZN12OrangutanLCD8printHexEj>:
     850:	1f 93       	push	r17
     852:	18 2f       	mov	r17, r24
     854:	89 2f       	mov	r24, r25
     856:	0e 94 1c 04 	call	0x838	; 0x838 <_ZN12OrangutanLCD8printHexEh>
     85a:	81 2f       	mov	r24, r17
     85c:	0e 94 1c 04 	call	0x838	; 0x838 <_ZN12OrangutanLCD8printHexEh>
     860:	1f 91       	pop	r17
     862:	08 95       	ret

00000864 <print_hex>:
     864:	0e 94 28 04 	call	0x850	; 0x850 <_ZN12OrangutanLCD8printHexEj>
     868:	08 95       	ret

0000086a <print_hex_byte>:
     86a:	0e 94 1c 04 	call	0x838	; 0x838 <_ZN12OrangutanLCD8printHexEh>
     86e:	08 95       	ret

00000870 <_ZN12OrangutanLCD5printEm>:
     870:	6f 92       	push	r6
     872:	7f 92       	push	r7
     874:	8f 92       	push	r8
     876:	9f 92       	push	r9
     878:	af 92       	push	r10
     87a:	bf 92       	push	r11
     87c:	cf 92       	push	r12
     87e:	df 92       	push	r13
     880:	ff 92       	push	r15
     882:	0f 93       	push	r16
     884:	df 93       	push	r29
     886:	cf 93       	push	r28
     888:	cd b7       	in	r28, 0x3d	; 61
     88a:	de b7       	in	r29, 0x3e	; 62
     88c:	2a 97       	sbiw	r28, 0x0a	; 10
     88e:	0f b6       	in	r0, 0x3f	; 63
     890:	f8 94       	cli
     892:	de bf       	out	0x3e, r29	; 62
     894:	0f be       	out	0x3f, r0	; 63
     896:	cd bf       	out	0x3d, r28	; 61
     898:	5b 01       	movw	r10, r22
     89a:	6c 01       	movw	r12, r24
     89c:	0a e0       	ldi	r16, 0x0A	; 10
     89e:	3e 01       	movw	r6, r28
     8a0:	08 94       	sec
     8a2:	61 1c       	adc	r6, r1
     8a4:	71 1c       	adc	r7, r1
     8a6:	fa 2c       	mov	r15, r10
     8a8:	c6 01       	movw	r24, r12
     8aa:	b5 01       	movw	r22, r10
     8ac:	2a e0       	ldi	r18, 0x0A	; 10
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	40 e0       	ldi	r20, 0x00	; 0
     8b2:	50 e0       	ldi	r21, 0x00	; 0
     8b4:	0e 94 81 07 	call	0xf02	; 0xf02 <__udivmodsi4>
     8b8:	c9 01       	movw	r24, r18
     8ba:	da 01       	movw	r26, r20
     8bc:	5c 01       	movw	r10, r24
     8be:	6d 01       	movw	r12, r26
     8c0:	01 50       	subi	r16, 0x01	; 1
     8c2:	43 01       	movw	r8, r6
     8c4:	80 0e       	add	r8, r16
     8c6:	91 1c       	adc	r9, r1
     8c8:	80 e3       	ldi	r24, 0x30	; 48
     8ca:	f8 0e       	add	r15, r24
     8cc:	c6 01       	movw	r24, r12
     8ce:	b5 01       	movw	r22, r10
     8d0:	2a e0       	ldi	r18, 0x0A	; 10
     8d2:	30 e0       	ldi	r19, 0x00	; 0
     8d4:	40 e0       	ldi	r20, 0x00	; 0
     8d6:	50 e0       	ldi	r21, 0x00	; 0
     8d8:	0e 94 4f 07 	call	0xe9e	; 0xe9e <__mulsi3>
     8dc:	f6 1a       	sub	r15, r22
     8de:	f4 01       	movw	r30, r8
     8e0:	f0 82       	st	Z, r15
     8e2:	a1 14       	cp	r10, r1
     8e4:	b1 04       	cpc	r11, r1
     8e6:	c1 04       	cpc	r12, r1
     8e8:	d1 04       	cpc	r13, r1
     8ea:	e9 f6       	brne	.-70     	; 0x8a6 <_ZN12OrangutanLCD5printEm+0x36>
     8ec:	08 c0       	rjmp	.+16     	; 0x8fe <_ZN12OrangutanLCD5printEm+0x8e>
     8ee:	f6 01       	movw	r30, r12
     8f0:	e0 0f       	add	r30, r16
     8f2:	f1 1d       	adc	r31, r1
     8f4:	80 81       	ld	r24, Z
     8f6:	0e 94 ef 03 	call	0x7de	; 0x7de <_ZN12OrangutanLCD9send_dataEh>
     8fa:	0f 5f       	subi	r16, 0xFF	; 255
     8fc:	04 c0       	rjmp	.+8      	; 0x906 <_ZN12OrangutanLCD5printEm+0x96>
     8fe:	6e 01       	movw	r12, r28
     900:	08 94       	sec
     902:	c1 1c       	adc	r12, r1
     904:	d1 1c       	adc	r13, r1
     906:	0a 30       	cpi	r16, 0x0A	; 10
     908:	90 f3       	brcs	.-28     	; 0x8ee <_ZN12OrangutanLCD5printEm+0x7e>
     90a:	2a 96       	adiw	r28, 0x0a	; 10
     90c:	0f b6       	in	r0, 0x3f	; 63
     90e:	f8 94       	cli
     910:	de bf       	out	0x3e, r29	; 62
     912:	0f be       	out	0x3f, r0	; 63
     914:	cd bf       	out	0x3d, r28	; 61
     916:	cf 91       	pop	r28
     918:	df 91       	pop	r29
     91a:	0f 91       	pop	r16
     91c:	ff 90       	pop	r15
     91e:	df 90       	pop	r13
     920:	cf 90       	pop	r12
     922:	bf 90       	pop	r11
     924:	af 90       	pop	r10
     926:	9f 90       	pop	r9
     928:	8f 90       	pop	r8
     92a:	7f 90       	pop	r7
     92c:	6f 90       	pop	r6
     92e:	08 95       	ret

00000930 <print_unsigned_long>:
     930:	0e 94 38 04 	call	0x870	; 0x870 <_ZN12OrangutanLCD5printEm>
     934:	08 95       	ret

00000936 <_ZN12OrangutanLCD5printEl>:
     936:	ef 92       	push	r14
     938:	ff 92       	push	r15
     93a:	0f 93       	push	r16
     93c:	1f 93       	push	r17
     93e:	7b 01       	movw	r14, r22
     940:	8c 01       	movw	r16, r24
     942:	97 ff       	sbrs	r25, 7
     944:	0b c0       	rjmp	.+22     	; 0x95c <_ZN12OrangutanLCD5printEl+0x26>
     946:	10 95       	com	r17
     948:	00 95       	com	r16
     94a:	f0 94       	com	r15
     94c:	e0 94       	com	r14
     94e:	e1 1c       	adc	r14, r1
     950:	f1 1c       	adc	r15, r1
     952:	01 1d       	adc	r16, r1
     954:	11 1d       	adc	r17, r1
     956:	8d e2       	ldi	r24, 0x2D	; 45
     958:	0e 94 ef 03 	call	0x7de	; 0x7de <_ZN12OrangutanLCD9send_dataEh>
     95c:	c8 01       	movw	r24, r16
     95e:	b7 01       	movw	r22, r14
     960:	0e 94 38 04 	call	0x870	; 0x870 <_ZN12OrangutanLCD5printEm>
     964:	1f 91       	pop	r17
     966:	0f 91       	pop	r16
     968:	ff 90       	pop	r15
     96a:	ef 90       	pop	r14
     96c:	08 95       	ret

0000096e <print_long>:
     96e:	0e 94 9b 04 	call	0x936	; 0x936 <_ZN12OrangutanLCD5printEl>
     972:	08 95       	ret

00000974 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>:
     974:	cf 93       	push	r28
     976:	df 93       	push	r29
     978:	ec 01       	movw	r28, r24
     97a:	03 c0       	rjmp	.+6      	; 0x982 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0xe>
     97c:	0e 94 ef 03 	call	0x7de	; 0x7de <_ZN12OrangutanLCD9send_dataEh>
     980:	21 96       	adiw	r28, 0x01	; 1
     982:	fe 01       	movw	r30, r28
     984:	84 91       	lpm	r24, Z+
     986:	88 23       	and	r24, r24
     988:	c9 f7       	brne	.-14     	; 0x97c <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0x8>
     98a:	df 91       	pop	r29
     98c:	cf 91       	pop	r28
     98e:	08 95       	ret

00000990 <print_from_program_space>:
     990:	0e 94 ba 04 	call	0x974	; 0x974 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>
     994:	08 95       	ret

00000996 <_ZN12OrangutanLCD5printEPKc>:
     996:	cf 93       	push	r28
     998:	df 93       	push	r29
     99a:	ec 01       	movw	r28, r24
     99c:	03 c0       	rjmp	.+6      	; 0x9a4 <_ZN12OrangutanLCD5printEPKc+0xe>
     99e:	21 96       	adiw	r28, 0x01	; 1
     9a0:	0e 94 ef 03 	call	0x7de	; 0x7de <_ZN12OrangutanLCD9send_dataEh>
     9a4:	88 81       	ld	r24, Y
     9a6:	88 23       	and	r24, r24
     9a8:	d1 f7       	brne	.-12     	; 0x99e <_ZN12OrangutanLCD5printEPKc+0x8>
     9aa:	df 91       	pop	r29
     9ac:	cf 91       	pop	r28
     9ae:	08 95       	ret

000009b0 <print>:
     9b0:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD5printEPKc>
     9b4:	08 95       	ret

000009b6 <_ZN12OrangutanLCD5printEc>:
     9b6:	0e 94 ef 03 	call	0x7de	; 0x7de <_ZN12OrangutanLCD9send_dataEh>
     9ba:	08 95       	ret

000009bc <print_character>:
     9bc:	0e 94 ef 03 	call	0x7de	; 0x7de <_ZN12OrangutanLCD9send_dataEh>
     9c0:	08 95       	ret

000009c2 <lcd_putchar>:
     9c2:	a0 e0       	ldi	r26, 0x00	; 0
     9c4:	b0 e0       	ldi	r27, 0x00	; 0
     9c6:	e7 ee       	ldi	r30, 0xE7	; 231
     9c8:	f4 e0       	ldi	r31, 0x04	; 4
     9ca:	0c 94 ad 07 	jmp	0xf5a	; 0xf5a <__prologue_saves__+0x14>
     9ce:	e8 2e       	mov	r14, r24
     9d0:	80 91 3a 01 	lds	r24, 0x013A
     9d4:	90 91 3b 01 	lds	r25, 0x013B
     9d8:	89 2b       	or	r24, r25
     9da:	09 f4       	brne	.+2      	; 0x9de <lcd_putchar+0x1c>
     9dc:	05 c1       	rjmp	.+522    	; 0xbe8 <lcd_putchar+0x226>
     9de:	2a e0       	ldi	r18, 0x0A	; 10
     9e0:	e2 16       	cp	r14, r18
     9e2:	09 f4       	brne	.+2      	; 0x9e6 <lcd_putchar+0x24>
     9e4:	46 c0       	rjmp	.+140    	; 0xa72 <lcd_putchar+0xb0>
     9e6:	38 e0       	ldi	r19, 0x08	; 8
     9e8:	e3 16       	cp	r14, r19
     9ea:	c9 f4       	brne	.+50     	; 0xa1e <lcd_putchar+0x5c>
     9ec:	80 91 3d 01 	lds	r24, 0x013D
     9f0:	81 50       	subi	r24, 0x01	; 1
     9f2:	80 93 3d 01 	sts	0x013D, r24
     9f6:	8f 3f       	cpi	r24, 0xFF	; 255
     9f8:	51 f4       	brne	.+20     	; 0xa0e <lcd_putchar+0x4c>
     9fa:	80 91 3c 01 	lds	r24, 0x013C
     9fe:	81 50       	subi	r24, 0x01	; 1
     a00:	80 93 3c 01 	sts	0x013C, r24
     a04:	80 91 31 01 	lds	r24, 0x0131
     a08:	81 50       	subi	r24, 0x01	; 1
     a0a:	80 93 3d 01 	sts	0x013D, r24
     a0e:	80 91 3c 01 	lds	r24, 0x013C
     a12:	8f 3f       	cpi	r24, 0xFF	; 255
     a14:	09 f0       	breq	.+2      	; 0xa18 <lcd_putchar+0x56>
     a16:	e2 c0       	rjmp	.+452    	; 0xbdc <lcd_putchar+0x21a>
     a18:	10 92 3c 01 	sts	0x013C, r1
     a1c:	dd c0       	rjmp	.+442    	; 0xbd8 <lcd_putchar+0x216>
     a1e:	8e 2d       	mov	r24, r14
     a20:	0e 94 ef 03 	call	0x7de	; 0x7de <_ZN12OrangutanLCD9send_dataEh>
     a24:	20 91 3c 01 	lds	r18, 0x013C
     a28:	22 23       	and	r18, r18
     a2a:	c9 f0       	breq	.+50     	; 0xa5e <lcd_putchar+0x9c>
     a2c:	30 e0       	ldi	r19, 0x00	; 0
     a2e:	21 50       	subi	r18, 0x01	; 1
     a30:	30 40       	sbci	r19, 0x00	; 0
     a32:	80 91 31 01 	lds	r24, 0x0131
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	ac 01       	movw	r20, r24
     a3a:	24 9f       	mul	r18, r20
     a3c:	c0 01       	movw	r24, r0
     a3e:	25 9f       	mul	r18, r21
     a40:	90 0d       	add	r25, r0
     a42:	34 9f       	mul	r19, r20
     a44:	90 0d       	add	r25, r0
     a46:	11 24       	eor	r1, r1
     a48:	20 91 3d 01 	lds	r18, 0x013D
     a4c:	e0 91 3a 01 	lds	r30, 0x013A
     a50:	f0 91 3b 01 	lds	r31, 0x013B
     a54:	e8 0f       	add	r30, r24
     a56:	f9 1f       	adc	r31, r25
     a58:	e2 0f       	add	r30, r18
     a5a:	f1 1d       	adc	r31, r1
     a5c:	e0 82       	st	Z, r14
     a5e:	80 91 3d 01 	lds	r24, 0x013D
     a62:	8f 5f       	subi	r24, 0xFF	; 255
     a64:	80 93 3d 01 	sts	0x013D, r24
     a68:	90 91 31 01 	lds	r25, 0x0131
     a6c:	89 17       	cp	r24, r25
     a6e:	09 f0       	breq	.+2      	; 0xa72 <lcd_putchar+0xb0>
     a70:	bb c0       	rjmp	.+374    	; 0xbe8 <lcd_putchar+0x226>
     a72:	40 91 3c 01 	lds	r20, 0x013C
     a76:	24 2f       	mov	r18, r20
     a78:	30 e0       	ldi	r19, 0x00	; 0
     a7a:	80 91 30 01 	lds	r24, 0x0130
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	01 97       	sbiw	r24, 0x01	; 1
     a82:	28 17       	cp	r18, r24
     a84:	39 07       	cpc	r19, r25
     a86:	09 f0       	breq	.+2      	; 0xa8a <lcd_putchar+0xc8>
     a88:	a4 c0       	rjmp	.+328    	; 0xbd2 <lcd_putchar+0x210>
     a8a:	c0 e0       	ldi	r28, 0x00	; 0
     a8c:	d0 e0       	ldi	r29, 0x00	; 0
     a8e:	44 c0       	rjmp	.+136    	; 0xb18 <lcd_putchar+0x156>
     a90:	80 e0       	ldi	r24, 0x00	; 0
     a92:	6c 2f       	mov	r22, r28
     a94:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN12OrangutanLCD6gotoXYEhh>
     a98:	ff 24       	eor	r15, r15
     a9a:	6e 01       	movw	r12, r28
     a9c:	08 94       	sec
     a9e:	c1 1c       	adc	r12, r1
     aa0:	d1 1c       	adc	r13, r1
     aa2:	35 c0       	rjmp	.+106    	; 0xb0e <lcd_putchar+0x14c>
     aa4:	0f 2d       	mov	r16, r15
     aa6:	10 e0       	ldi	r17, 0x00	; 0
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	9c 01       	movw	r18, r24
     aac:	c2 9f       	mul	r28, r18
     aae:	c0 01       	movw	r24, r0
     ab0:	c3 9f       	mul	r28, r19
     ab2:	90 0d       	add	r25, r0
     ab4:	d2 9f       	mul	r29, r18
     ab6:	90 0d       	add	r25, r0
     ab8:	11 24       	eor	r1, r1
     aba:	e0 91 3a 01 	lds	r30, 0x013A
     abe:	f0 91 3b 01 	lds	r31, 0x013B
     ac2:	e0 0f       	add	r30, r16
     ac4:	f1 1f       	adc	r31, r17
     ac6:	e8 0f       	add	r30, r24
     ac8:	f9 1f       	adc	r31, r25
     aca:	80 81       	ld	r24, Z
     acc:	0e 94 ef 03 	call	0x7de	; 0x7de <_ZN12OrangutanLCD9send_dataEh>
     ad0:	e0 91 3a 01 	lds	r30, 0x013A
     ad4:	f0 91 3b 01 	lds	r31, 0x013B
     ad8:	80 91 31 01 	lds	r24, 0x0131
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	c8 9f       	mul	r28, r24
     ae0:	d0 01       	movw	r26, r0
     ae2:	c9 9f       	mul	r28, r25
     ae4:	b0 0d       	add	r27, r0
     ae6:	d8 9f       	mul	r29, r24
     ae8:	b0 0d       	add	r27, r0
     aea:	11 24       	eor	r1, r1
     aec:	e0 0f       	add	r30, r16
     aee:	f1 1f       	adc	r31, r17
     af0:	ae 0f       	add	r26, r30
     af2:	bf 1f       	adc	r27, r31
     af4:	ac 01       	movw	r20, r24
     af6:	c4 9e       	mul	r12, r20
     af8:	c0 01       	movw	r24, r0
     afa:	c5 9e       	mul	r12, r21
     afc:	90 0d       	add	r25, r0
     afe:	d4 9e       	mul	r13, r20
     b00:	90 0d       	add	r25, r0
     b02:	11 24       	eor	r1, r1
     b04:	e8 0f       	add	r30, r24
     b06:	f9 1f       	adc	r31, r25
     b08:	80 81       	ld	r24, Z
     b0a:	8c 93       	st	X, r24
     b0c:	f3 94       	inc	r15
     b0e:	80 91 31 01 	lds	r24, 0x0131
     b12:	f8 16       	cp	r15, r24
     b14:	38 f2       	brcs	.-114    	; 0xaa4 <lcd_putchar+0xe2>
     b16:	e6 01       	movw	r28, r12
     b18:	60 91 30 01 	lds	r22, 0x0130
     b1c:	86 2f       	mov	r24, r22
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	02 97       	sbiw	r24, 0x02	; 2
     b22:	c8 17       	cp	r28, r24
     b24:	d9 07       	cpc	r29, r25
     b26:	0c f4       	brge	.+2      	; 0xb2a <lcd_putchar+0x168>
     b28:	b3 cf       	rjmp	.-154    	; 0xa90 <lcd_putchar+0xce>
     b2a:	62 30       	cpi	r22, 0x02	; 2
     b2c:	08 f4       	brcc	.+2      	; 0xb30 <lcd_putchar+0x16e>
     b2e:	40 c0       	rjmp	.+128    	; 0xbb0 <lcd_putchar+0x1ee>
     b30:	62 50       	subi	r22, 0x02	; 2
     b32:	80 e0       	ldi	r24, 0x00	; 0
     b34:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN12OrangutanLCD6gotoXYEhh>
     b38:	ff 24       	eor	r15, r15
     b3a:	40 e2       	ldi	r20, 0x20	; 32
     b3c:	d4 2e       	mov	r13, r20
     b3e:	34 c0       	rjmp	.+104    	; 0xba8 <lcd_putchar+0x1e6>
     b40:	0f 2d       	mov	r16, r15
     b42:	10 e0       	ldi	r17, 0x00	; 0
     b44:	80 91 30 01 	lds	r24, 0x0130
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	02 97       	sbiw	r24, 0x02	; 2
     b4c:	30 e0       	ldi	r19, 0x00	; 0
     b4e:	ac 01       	movw	r20, r24
     b50:	42 9f       	mul	r20, r18
     b52:	c0 01       	movw	r24, r0
     b54:	43 9f       	mul	r20, r19
     b56:	90 0d       	add	r25, r0
     b58:	52 9f       	mul	r21, r18
     b5a:	90 0d       	add	r25, r0
     b5c:	11 24       	eor	r1, r1
     b5e:	e0 91 3a 01 	lds	r30, 0x013A
     b62:	f0 91 3b 01 	lds	r31, 0x013B
     b66:	e0 0f       	add	r30, r16
     b68:	f1 1f       	adc	r31, r17
     b6a:	e8 0f       	add	r30, r24
     b6c:	f9 1f       	adc	r31, r25
     b6e:	80 81       	ld	r24, Z
     b70:	0e 94 ef 03 	call	0x7de	; 0x7de <_ZN12OrangutanLCD9send_dataEh>
     b74:	20 91 30 01 	lds	r18, 0x0130
     b78:	30 e0       	ldi	r19, 0x00	; 0
     b7a:	22 50       	subi	r18, 0x02	; 2
     b7c:	30 40       	sbci	r19, 0x00	; 0
     b7e:	80 91 31 01 	lds	r24, 0x0131
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	ac 01       	movw	r20, r24
     b86:	24 9f       	mul	r18, r20
     b88:	c0 01       	movw	r24, r0
     b8a:	25 9f       	mul	r18, r21
     b8c:	90 0d       	add	r25, r0
     b8e:	34 9f       	mul	r19, r20
     b90:	90 0d       	add	r25, r0
     b92:	11 24       	eor	r1, r1
     b94:	e0 91 3a 01 	lds	r30, 0x013A
     b98:	f0 91 3b 01 	lds	r31, 0x013B
     b9c:	e0 0f       	add	r30, r16
     b9e:	f1 1f       	adc	r31, r17
     ba0:	e8 0f       	add	r30, r24
     ba2:	f9 1f       	adc	r31, r25
     ba4:	d0 82       	st	Z, r13
     ba6:	f3 94       	inc	r15
     ba8:	20 91 31 01 	lds	r18, 0x0131
     bac:	f2 16       	cp	r15, r18
     bae:	40 f2       	brcs	.-112    	; 0xb40 <lcd_putchar+0x17e>
     bb0:	60 91 30 01 	lds	r22, 0x0130
     bb4:	61 50       	subi	r22, 0x01	; 1
     bb6:	80 e0       	ldi	r24, 0x00	; 0
     bb8:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN12OrangutanLCD6gotoXYEhh>
     bbc:	00 e0       	ldi	r16, 0x00	; 0
     bbe:	04 c0       	rjmp	.+8      	; 0xbc8 <lcd_putchar+0x206>
     bc0:	80 e2       	ldi	r24, 0x20	; 32
     bc2:	0e 94 ef 03 	call	0x7de	; 0x7de <_ZN12OrangutanLCD9send_dataEh>
     bc6:	0f 5f       	subi	r16, 0xFF	; 255
     bc8:	80 91 31 01 	lds	r24, 0x0131
     bcc:	08 17       	cp	r16, r24
     bce:	c0 f3       	brcs	.-16     	; 0xbc0 <lcd_putchar+0x1fe>
     bd0:	03 c0       	rjmp	.+6      	; 0xbd8 <lcd_putchar+0x216>
     bd2:	4f 5f       	subi	r20, 0xFF	; 255
     bd4:	40 93 3c 01 	sts	0x013C, r20
     bd8:	10 92 3d 01 	sts	0x013D, r1
     bdc:	80 91 3d 01 	lds	r24, 0x013D
     be0:	60 91 3c 01 	lds	r22, 0x013C
     be4:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN12OrangutanLCD6gotoXYEhh>
     be8:	2e 2d       	mov	r18, r14
     bea:	33 27       	eor	r19, r19
     bec:	27 fd       	sbrc	r18, 7
     bee:	30 95       	com	r19
     bf0:	c9 01       	movw	r24, r18
     bf2:	cd b7       	in	r28, 0x3d	; 61
     bf4:	de b7       	in	r29, 0x3e	; 62
     bf6:	e8 e0       	ldi	r30, 0x08	; 8
     bf8:	0c 94 c9 07 	jmp	0xf92	; 0xf92 <__epilogue_restores__+0x14>

00000bfc <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
     bfc:	ef 92       	push	r14
     bfe:	ff 92       	push	r15
     c00:	0f 93       	push	r16
     c02:	1f 93       	push	r17
     c04:	cf 93       	push	r28
     c06:	df 93       	push	r29
     c08:	7c 01       	movw	r14, r24
     c0a:	06 2f       	mov	r16, r22
     c0c:	10 e0       	ldi	r17, 0x00	; 0
     c0e:	53 e0       	ldi	r21, 0x03	; 3
     c10:	00 0f       	add	r16, r16
     c12:	11 1f       	adc	r17, r17
     c14:	5a 95       	dec	r21
     c16:	e1 f7       	brne	.-8      	; 0xc10 <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x14>
     c18:	c0 e0       	ldi	r28, 0x00	; 0
     c1a:	d0 e0       	ldi	r29, 0x00	; 0
     c1c:	9e 01       	movw	r18, r28
     c1e:	20 0f       	add	r18, r16
     c20:	82 2f       	mov	r24, r18
     c22:	80 64       	ori	r24, 0x40	; 64
     c24:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN12OrangutanLCD8send_cmdEh>
     c28:	f7 01       	movw	r30, r14
     c2a:	ec 0f       	add	r30, r28
     c2c:	fd 1f       	adc	r31, r29
     c2e:	e4 91       	lpm	r30, Z+
     c30:	8e 2f       	mov	r24, r30
     c32:	0e 94 ef 03 	call	0x7de	; 0x7de <_ZN12OrangutanLCD9send_dataEh>
     c36:	21 96       	adiw	r28, 0x01	; 1
     c38:	c8 30       	cpi	r28, 0x08	; 8
     c3a:	d1 05       	cpc	r29, r1
     c3c:	79 f7       	brne	.-34     	; 0xc1c <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x20>
     c3e:	cd b7       	in	r28, 0x3d	; 61
     c40:	de b7       	in	r29, 0x3e	; 62
     c42:	e6 e0       	ldi	r30, 0x06	; 6
     c44:	0c 94 cb 07 	jmp	0xf96	; 0xf96 <__epilogue_restores__+0x18>

00000c48 <lcd_load_custom_character>:
     c48:	0e 94 fe 05 	call	0xbfc	; 0xbfc <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
     c4c:	08 95       	ret

00000c4e <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     c4e:	60 e0       	ldi	r22, 0x00	; 0
     c50:	41 e0       	ldi	r20, 0x01	; 1
     c52:	0e 94 1d 03 	call	0x63a	; 0x63a <_ZN12OrangutanLCD4sendEhhh>
     c56:	08 95       	ret

00000c58 <_ZN12OrangutanLCD6scrollEhhj>:
     c58:	0f 93       	push	r16
     c5a:	1f 93       	push	r17
     c5c:	cf 93       	push	r28
     c5e:	df 93       	push	r29
     c60:	08 2f       	mov	r16, r24
     c62:	16 2f       	mov	r17, r22
     c64:	ea 01       	movw	r28, r20
     c66:	0b c0       	rjmp	.+22     	; 0xc7e <_ZN12OrangutanLCD6scrollEhhj+0x26>
     c68:	00 23       	and	r16, r16
     c6a:	11 f4       	brne	.+4      	; 0xc70 <_ZN12OrangutanLCD6scrollEhhj+0x18>
     c6c:	88 e1       	ldi	r24, 0x18	; 24
     c6e:	01 c0       	rjmp	.+2      	; 0xc72 <_ZN12OrangutanLCD6scrollEhhj+0x1a>
     c70:	8c e1       	ldi	r24, 0x1C	; 28
     c72:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN12OrangutanLCD8send_cmdEh>
     c76:	ce 01       	movw	r24, r28
     c78:	0e 94 b4 06 	call	0xd68	; 0xd68 <_ZN13OrangutanTime17delayMillisecondsEj>
     c7c:	11 50       	subi	r17, 0x01	; 1
     c7e:	11 23       	and	r17, r17
     c80:	99 f7       	brne	.-26     	; 0xc68 <_ZN12OrangutanLCD6scrollEhhj+0x10>
     c82:	df 91       	pop	r29
     c84:	cf 91       	pop	r28
     c86:	1f 91       	pop	r17
     c88:	0f 91       	pop	r16
     c8a:	08 95       	ret

00000c8c <lcd_scroll>:
     c8c:	0e 94 2c 06 	call	0xc58	; 0xc58 <_ZN12OrangutanLCD6scrollEhhj>
     c90:	08 95       	ret

00000c92 <__vector_11>:
     c92:	2f 92       	push	r2
     c94:	8f 93       	push	r24
     c96:	9f 93       	push	r25
     c98:	2f b6       	in	r2, 0x3f	; 63
     c9a:	80 91 44 01 	lds	r24, 0x0144
     c9e:	90 91 45 01 	lds	r25, 0x0145
     ca2:	01 96       	adiw	r24, 0x01	; 1
     ca4:	80 93 44 01 	sts	0x0144, r24
     ca8:	90 93 45 01 	sts	0x0145, r25
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	80 91 46 01 	lds	r24, 0x0146
     cb2:	89 1f       	adc	r24, r25
     cb4:	80 93 46 01 	sts	0x0146, r24
     cb8:	90 91 4c 01 	lds	r25, 0x014C
     cbc:	9c 5f       	subi	r25, 0xFC	; 252
     cbe:	90 93 4c 01 	sts	0x014C, r25
     cc2:	80 91 4b 01 	lds	r24, 0x014B
     cc6:	80 51       	subi	r24, 0x10	; 16
     cc8:	97 42       	sbci	r25, 0x27	; 39
     cca:	c0 f0       	brcs	.+48     	; 0xcfc <end>
     ccc:	90 93 4c 01 	sts	0x014C, r25
     cd0:	80 93 4b 01 	sts	0x014B, r24
     cd4:	80 91 47 01 	lds	r24, 0x0147
     cd8:	90 91 48 01 	lds	r25, 0x0148
     cdc:	01 96       	adiw	r24, 0x01	; 1
     cde:	80 93 47 01 	sts	0x0147, r24
     ce2:	90 93 48 01 	sts	0x0148, r25
     ce6:	90 e0       	ldi	r25, 0x00	; 0
     ce8:	80 91 49 01 	lds	r24, 0x0149
     cec:	89 1f       	adc	r24, r25
     cee:	80 93 49 01 	sts	0x0149, r24
     cf2:	80 91 4a 01 	lds	r24, 0x014A
     cf6:	89 1f       	adc	r24, r25
     cf8:	80 93 4a 01 	sts	0x014A, r24

00000cfc <end>:
     cfc:	2f be       	out	0x3f, r2	; 63
     cfe:	9f 91       	pop	r25
     d00:	8f 91       	pop	r24
     d02:	2f 90       	pop	r2
     d04:	18 95       	reti

00000d06 <ticks_to_microseconds>:
     d06:	6f 5f       	subi	r22, 0xFF	; 255
     d08:	7f 4f       	sbci	r23, 0xFF	; 255
     d0a:	8f 4f       	sbci	r24, 0xFF	; 255
     d0c:	9f 4f       	sbci	r25, 0xFF	; 255
     d0e:	66 0f       	add	r22, r22
     d10:	77 1f       	adc	r23, r23
     d12:	88 1f       	adc	r24, r24
     d14:	99 1f       	adc	r25, r25
     d16:	25 e0       	ldi	r18, 0x05	; 5
     d18:	30 e0       	ldi	r19, 0x00	; 0
     d1a:	40 e0       	ldi	r20, 0x00	; 0
     d1c:	50 e0       	ldi	r21, 0x00	; 0
     d1e:	0e 94 81 07 	call	0xf02	; 0xf02 <__udivmodsi4>
     d22:	ca 01       	movw	r24, r20
     d24:	b9 01       	movw	r22, r18
     d26:	08 95       	ret

00000d28 <delay_ms>:
     d28:	28 ee       	ldi	r18, 0xE8	; 232
     d2a:	33 e0       	ldi	r19, 0x03	; 3
     d2c:	09 c0       	rjmp	.+18     	; 0xd40 <delay_ms+0x18>
     d2e:	f9 01       	movw	r30, r18
     d30:	6f 93       	push	r22
     d32:	64 e0       	ldi	r22, 0x04	; 4
     d34:	6a 95       	dec	r22
     d36:	f1 f7       	brne	.-4      	; 0xd34 <delay_ms+0xc>
     d38:	6f 91       	pop	r22
     d3a:	31 97       	sbiw	r30, 0x01	; 1
     d3c:	c9 f7       	brne	.-14     	; 0xd30 <delay_ms+0x8>
     d3e:	01 97       	sbiw	r24, 0x01	; 1
     d40:	00 97       	sbiw	r24, 0x00	; 0
     d42:	a9 f7       	brne	.-22     	; 0xd2e <delay_ms+0x6>
     d44:	08 95       	ret

00000d46 <_ZN13OrangutanTime19ticksToMicrosecondsEm>:
     d46:	6f 5f       	subi	r22, 0xFF	; 255
     d48:	7f 4f       	sbci	r23, 0xFF	; 255
     d4a:	8f 4f       	sbci	r24, 0xFF	; 255
     d4c:	9f 4f       	sbci	r25, 0xFF	; 255
     d4e:	66 0f       	add	r22, r22
     d50:	77 1f       	adc	r23, r23
     d52:	88 1f       	adc	r24, r24
     d54:	99 1f       	adc	r25, r25
     d56:	25 e0       	ldi	r18, 0x05	; 5
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	40 e0       	ldi	r20, 0x00	; 0
     d5c:	50 e0       	ldi	r21, 0x00	; 0
     d5e:	0e 94 81 07 	call	0xf02	; 0xf02 <__udivmodsi4>
     d62:	ca 01       	movw	r24, r20
     d64:	b9 01       	movw	r22, r18
     d66:	08 95       	ret

00000d68 <_ZN13OrangutanTime17delayMillisecondsEj>:
     d68:	28 ee       	ldi	r18, 0xE8	; 232
     d6a:	33 e0       	ldi	r19, 0x03	; 3
     d6c:	09 c0       	rjmp	.+18     	; 0xd80 <_ZN13OrangutanTime17delayMillisecondsEj+0x18>
     d6e:	f9 01       	movw	r30, r18
     d70:	6f 93       	push	r22
     d72:	64 e0       	ldi	r22, 0x04	; 4
     d74:	6a 95       	dec	r22
     d76:	f1 f7       	brne	.-4      	; 0xd74 <_ZN13OrangutanTime17delayMillisecondsEj+0xc>
     d78:	6f 91       	pop	r22
     d7a:	31 97       	sbiw	r30, 0x01	; 1
     d7c:	c9 f7       	brne	.-14     	; 0xd70 <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
     d7e:	01 97       	sbiw	r24, 0x01	; 1
     d80:	00 97       	sbiw	r24, 0x00	; 0
     d82:	a9 f7       	brne	.-22     	; 0xd6e <_ZN13OrangutanTime17delayMillisecondsEj+0x6>
     d84:	08 95       	ret

00000d86 <_ZN13OrangutanTime5init2Ev>:
     d86:	a0 e7       	ldi	r26, 0x70	; 112
     d88:	b0 e0       	ldi	r27, 0x00	; 0
     d8a:	8c 91       	ld	r24, X
     d8c:	8e 7f       	andi	r24, 0xFE	; 254
     d8e:	8c 93       	st	X, r24
     d90:	e0 eb       	ldi	r30, 0xB0	; 176
     d92:	f0 e0       	ldi	r31, 0x00	; 0
     d94:	80 81       	ld	r24, Z
     d96:	83 60       	ori	r24, 0x03	; 3
     d98:	80 83       	st	Z, r24
     d9a:	e1 eb       	ldi	r30, 0xB1	; 177
     d9c:	f0 e0       	ldi	r31, 0x00	; 0
     d9e:	80 81       	ld	r24, Z
     da0:	80 7f       	andi	r24, 0xF0	; 240
     da2:	80 83       	st	Z, r24
     da4:	80 81       	ld	r24, Z
     da6:	82 60       	ori	r24, 0x02	; 2
     da8:	80 83       	st	Z, r24
     daa:	b8 9a       	sbi	0x17, 0	; 23
     dac:	8c 91       	ld	r24, X
     dae:	81 60       	ori	r24, 0x01	; 1
     db0:	8c 93       	st	X, r24
     db2:	78 94       	sei
     db4:	08 95       	ret

00000db6 <_ZN13OrangutanTime4initEv>:
     db6:	80 91 4d 01 	lds	r24, 0x014D
     dba:	88 23       	and	r24, r24
     dbc:	29 f4       	brne	.+10     	; 0xdc8 <_ZN13OrangutanTime4initEv+0x12>
     dbe:	81 e0       	ldi	r24, 0x01	; 1
     dc0:	80 93 4d 01 	sts	0x014D, r24
     dc4:	0e 94 c3 06 	call	0xd86	; 0xd86 <_ZN13OrangutanTime5init2Ev>
     dc8:	08 95       	ret

00000dca <_ZN13OrangutanTime2msEv>:
     dca:	0e 94 db 06 	call	0xdb6	; 0xdb6 <_ZN13OrangutanTime4initEv>
     dce:	e0 e7       	ldi	r30, 0x70	; 112
     dd0:	f0 e0       	ldi	r31, 0x00	; 0
     dd2:	80 81       	ld	r24, Z
     dd4:	8e 7f       	andi	r24, 0xFE	; 254
     dd6:	80 83       	st	Z, r24
     dd8:	20 91 47 01 	lds	r18, 0x0147
     ddc:	30 91 48 01 	lds	r19, 0x0148
     de0:	40 91 49 01 	lds	r20, 0x0149
     de4:	50 91 4a 01 	lds	r21, 0x014A
     de8:	80 81       	ld	r24, Z
     dea:	81 60       	ori	r24, 0x01	; 1
     dec:	80 83       	st	Z, r24
     dee:	b9 01       	movw	r22, r18
     df0:	ca 01       	movw	r24, r20
     df2:	08 95       	ret

00000df4 <get_ms>:
     df4:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN13OrangutanTime2msEv>
     df8:	08 95       	ret

00000dfa <_ZN13OrangutanTime5ticksEv>:
     dfa:	0e 94 db 06 	call	0xdb6	; 0xdb6 <_ZN13OrangutanTime4initEv>
     dfe:	80 91 70 00 	lds	r24, 0x0070
     e02:	8e 7f       	andi	r24, 0xFE	; 254
     e04:	80 93 70 00 	sts	0x0070, r24
     e08:	60 91 b2 00 	lds	r22, 0x00B2
     e0c:	80 91 43 01 	lds	r24, 0x0143
     e10:	90 91 44 01 	lds	r25, 0x0144
     e14:	a0 91 45 01 	lds	r26, 0x0145
     e18:	b0 91 46 01 	lds	r27, 0x0146
     e1c:	b8 99       	sbic	0x17, 0	; 23
     e1e:	05 c0       	rjmp	.+10     	; 0xe2a <_ZN13OrangutanTime5ticksEv+0x30>
     e20:	26 2f       	mov	r18, r22
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	40 e0       	ldi	r20, 0x00	; 0
     e26:	50 e0       	ldi	r21, 0x00	; 0
     e28:	11 c0       	rjmp	.+34     	; 0xe4c <_ZN13OrangutanTime5ticksEv+0x52>
     e2a:	80 91 b2 00 	lds	r24, 0x00B2
     e2e:	20 91 43 01 	lds	r18, 0x0143
     e32:	30 91 44 01 	lds	r19, 0x0144
     e36:	40 91 45 01 	lds	r20, 0x0145
     e3a:	50 91 46 01 	lds	r21, 0x0146
     e3e:	20 50       	subi	r18, 0x00	; 0
     e40:	3f 4f       	sbci	r19, 0xFF	; 255
     e42:	4f 4f       	sbci	r20, 0xFF	; 255
     e44:	5f 4f       	sbci	r21, 0xFF	; 255
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	a0 e0       	ldi	r26, 0x00	; 0
     e4a:	b0 e0       	ldi	r27, 0x00	; 0
     e4c:	28 2b       	or	r18, r24
     e4e:	39 2b       	or	r19, r25
     e50:	4a 2b       	or	r20, r26
     e52:	5b 2b       	or	r21, r27
     e54:	80 91 70 00 	lds	r24, 0x0070
     e58:	81 60       	ori	r24, 0x01	; 1
     e5a:	80 93 70 00 	sts	0x0070, r24
     e5e:	b9 01       	movw	r22, r18
     e60:	ca 01       	movw	r24, r20
     e62:	08 95       	ret

00000e64 <get_ticks>:
     e64:	0e 94 fd 06 	call	0xdfa	; 0xdfa <_ZN13OrangutanTime5ticksEv>
     e68:	08 95       	ret

00000e6a <_ZN13OrangutanTime5resetEv>:
     e6a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <_ZN13OrangutanTime4initEv>
     e6e:	e0 e7       	ldi	r30, 0x70	; 112
     e70:	f0 e0       	ldi	r31, 0x00	; 0
     e72:	80 81       	ld	r24, Z
     e74:	8e 7f       	andi	r24, 0xFE	; 254
     e76:	80 83       	st	Z, r24
     e78:	10 92 47 01 	sts	0x0147, r1
     e7c:	10 92 48 01 	sts	0x0148, r1
     e80:	10 92 49 01 	sts	0x0149, r1
     e84:	10 92 4a 01 	sts	0x014A, r1
     e88:	10 92 4c 01 	sts	0x014C, r1
     e8c:	10 92 4b 01 	sts	0x014B, r1
     e90:	80 81       	ld	r24, Z
     e92:	81 60       	ori	r24, 0x01	; 1
     e94:	80 83       	st	Z, r24
     e96:	08 95       	ret

00000e98 <time_reset>:
     e98:	0e 94 35 07 	call	0xe6a	; 0xe6a <_ZN13OrangutanTime5resetEv>
     e9c:	08 95       	ret

00000e9e <__mulsi3>:
     e9e:	62 9f       	mul	r22, r18
     ea0:	d0 01       	movw	r26, r0
     ea2:	73 9f       	mul	r23, r19
     ea4:	f0 01       	movw	r30, r0
     ea6:	82 9f       	mul	r24, r18
     ea8:	e0 0d       	add	r30, r0
     eaa:	f1 1d       	adc	r31, r1
     eac:	64 9f       	mul	r22, r20
     eae:	e0 0d       	add	r30, r0
     eb0:	f1 1d       	adc	r31, r1
     eb2:	92 9f       	mul	r25, r18
     eb4:	f0 0d       	add	r31, r0
     eb6:	83 9f       	mul	r24, r19
     eb8:	f0 0d       	add	r31, r0
     eba:	74 9f       	mul	r23, r20
     ebc:	f0 0d       	add	r31, r0
     ebe:	65 9f       	mul	r22, r21
     ec0:	f0 0d       	add	r31, r0
     ec2:	99 27       	eor	r25, r25
     ec4:	72 9f       	mul	r23, r18
     ec6:	b0 0d       	add	r27, r0
     ec8:	e1 1d       	adc	r30, r1
     eca:	f9 1f       	adc	r31, r25
     ecc:	63 9f       	mul	r22, r19
     ece:	b0 0d       	add	r27, r0
     ed0:	e1 1d       	adc	r30, r1
     ed2:	f9 1f       	adc	r31, r25
     ed4:	bd 01       	movw	r22, r26
     ed6:	cf 01       	movw	r24, r30
     ed8:	11 24       	eor	r1, r1
     eda:	08 95       	ret

00000edc <__divmodhi4>:
     edc:	97 fb       	bst	r25, 7
     ede:	09 2e       	mov	r0, r25
     ee0:	07 26       	eor	r0, r23
     ee2:	0a d0       	rcall	.+20     	; 0xef8 <__divmodhi4_neg1>
     ee4:	77 fd       	sbrc	r23, 7
     ee6:	04 d0       	rcall	.+8      	; 0xef0 <__divmodhi4_neg2>
     ee8:	65 d0       	rcall	.+202    	; 0xfb4 <__udivmodhi4>
     eea:	06 d0       	rcall	.+12     	; 0xef8 <__divmodhi4_neg1>
     eec:	00 20       	and	r0, r0
     eee:	1a f4       	brpl	.+6      	; 0xef6 <__divmodhi4_exit>

00000ef0 <__divmodhi4_neg2>:
     ef0:	70 95       	com	r23
     ef2:	61 95       	neg	r22
     ef4:	7f 4f       	sbci	r23, 0xFF	; 255

00000ef6 <__divmodhi4_exit>:
     ef6:	08 95       	ret

00000ef8 <__divmodhi4_neg1>:
     ef8:	f6 f7       	brtc	.-4      	; 0xef6 <__divmodhi4_exit>
     efa:	90 95       	com	r25
     efc:	81 95       	neg	r24
     efe:	9f 4f       	sbci	r25, 0xFF	; 255
     f00:	08 95       	ret

00000f02 <__udivmodsi4>:
     f02:	a1 e2       	ldi	r26, 0x21	; 33
     f04:	1a 2e       	mov	r1, r26
     f06:	aa 1b       	sub	r26, r26
     f08:	bb 1b       	sub	r27, r27
     f0a:	fd 01       	movw	r30, r26
     f0c:	0d c0       	rjmp	.+26     	; 0xf28 <__udivmodsi4_ep>

00000f0e <__udivmodsi4_loop>:
     f0e:	aa 1f       	adc	r26, r26
     f10:	bb 1f       	adc	r27, r27
     f12:	ee 1f       	adc	r30, r30
     f14:	ff 1f       	adc	r31, r31
     f16:	a2 17       	cp	r26, r18
     f18:	b3 07       	cpc	r27, r19
     f1a:	e4 07       	cpc	r30, r20
     f1c:	f5 07       	cpc	r31, r21
     f1e:	20 f0       	brcs	.+8      	; 0xf28 <__udivmodsi4_ep>
     f20:	a2 1b       	sub	r26, r18
     f22:	b3 0b       	sbc	r27, r19
     f24:	e4 0b       	sbc	r30, r20
     f26:	f5 0b       	sbc	r31, r21

00000f28 <__udivmodsi4_ep>:
     f28:	66 1f       	adc	r22, r22
     f2a:	77 1f       	adc	r23, r23
     f2c:	88 1f       	adc	r24, r24
     f2e:	99 1f       	adc	r25, r25
     f30:	1a 94       	dec	r1
     f32:	69 f7       	brne	.-38     	; 0xf0e <__udivmodsi4_loop>
     f34:	60 95       	com	r22
     f36:	70 95       	com	r23
     f38:	80 95       	com	r24
     f3a:	90 95       	com	r25
     f3c:	9b 01       	movw	r18, r22
     f3e:	ac 01       	movw	r20, r24
     f40:	bd 01       	movw	r22, r26
     f42:	cf 01       	movw	r24, r30
     f44:	08 95       	ret

00000f46 <__prologue_saves__>:
     f46:	2f 92       	push	r2
     f48:	3f 92       	push	r3
     f4a:	4f 92       	push	r4
     f4c:	5f 92       	push	r5
     f4e:	6f 92       	push	r6
     f50:	7f 92       	push	r7
     f52:	8f 92       	push	r8
     f54:	9f 92       	push	r9
     f56:	af 92       	push	r10
     f58:	bf 92       	push	r11
     f5a:	cf 92       	push	r12
     f5c:	df 92       	push	r13
     f5e:	ef 92       	push	r14
     f60:	ff 92       	push	r15
     f62:	0f 93       	push	r16
     f64:	1f 93       	push	r17
     f66:	cf 93       	push	r28
     f68:	df 93       	push	r29
     f6a:	cd b7       	in	r28, 0x3d	; 61
     f6c:	de b7       	in	r29, 0x3e	; 62
     f6e:	ca 1b       	sub	r28, r26
     f70:	db 0b       	sbc	r29, r27
     f72:	0f b6       	in	r0, 0x3f	; 63
     f74:	f8 94       	cli
     f76:	de bf       	out	0x3e, r29	; 62
     f78:	0f be       	out	0x3f, r0	; 63
     f7a:	cd bf       	out	0x3d, r28	; 61
     f7c:	09 94       	ijmp

00000f7e <__epilogue_restores__>:
     f7e:	2a 88       	ldd	r2, Y+18	; 0x12
     f80:	39 88       	ldd	r3, Y+17	; 0x11
     f82:	48 88       	ldd	r4, Y+16	; 0x10
     f84:	5f 84       	ldd	r5, Y+15	; 0x0f
     f86:	6e 84       	ldd	r6, Y+14	; 0x0e
     f88:	7d 84       	ldd	r7, Y+13	; 0x0d
     f8a:	8c 84       	ldd	r8, Y+12	; 0x0c
     f8c:	9b 84       	ldd	r9, Y+11	; 0x0b
     f8e:	aa 84       	ldd	r10, Y+10	; 0x0a
     f90:	b9 84       	ldd	r11, Y+9	; 0x09
     f92:	c8 84       	ldd	r12, Y+8	; 0x08
     f94:	df 80       	ldd	r13, Y+7	; 0x07
     f96:	ee 80       	ldd	r14, Y+6	; 0x06
     f98:	fd 80       	ldd	r15, Y+5	; 0x05
     f9a:	0c 81       	ldd	r16, Y+4	; 0x04
     f9c:	1b 81       	ldd	r17, Y+3	; 0x03
     f9e:	aa 81       	ldd	r26, Y+2	; 0x02
     fa0:	b9 81       	ldd	r27, Y+1	; 0x01
     fa2:	ce 0f       	add	r28, r30
     fa4:	d1 1d       	adc	r29, r1
     fa6:	0f b6       	in	r0, 0x3f	; 63
     fa8:	f8 94       	cli
     faa:	de bf       	out	0x3e, r29	; 62
     fac:	0f be       	out	0x3f, r0	; 63
     fae:	cd bf       	out	0x3d, r28	; 61
     fb0:	ed 01       	movw	r28, r26
     fb2:	08 95       	ret

00000fb4 <__udivmodhi4>:
     fb4:	aa 1b       	sub	r26, r26
     fb6:	bb 1b       	sub	r27, r27
     fb8:	51 e1       	ldi	r21, 0x11	; 17
     fba:	07 c0       	rjmp	.+14     	; 0xfca <__udivmodhi4_ep>

00000fbc <__udivmodhi4_loop>:
     fbc:	aa 1f       	adc	r26, r26
     fbe:	bb 1f       	adc	r27, r27
     fc0:	a6 17       	cp	r26, r22
     fc2:	b7 07       	cpc	r27, r23
     fc4:	10 f0       	brcs	.+4      	; 0xfca <__udivmodhi4_ep>
     fc6:	a6 1b       	sub	r26, r22
     fc8:	b7 0b       	sbc	r27, r23

00000fca <__udivmodhi4_ep>:
     fca:	88 1f       	adc	r24, r24
     fcc:	99 1f       	adc	r25, r25
     fce:	5a 95       	dec	r21
     fd0:	a9 f7       	brne	.-22     	; 0xfbc <__udivmodhi4_loop>
     fd2:	80 95       	com	r24
     fd4:	90 95       	com	r25
     fd6:	bc 01       	movw	r22, r24
     fd8:	cd 01       	movw	r24, r26
     fda:	08 95       	ret

00000fdc <malloc>:
     fdc:	cf 93       	push	r28
     fde:	df 93       	push	r29
     fe0:	bc 01       	movw	r22, r24
     fe2:	82 30       	cpi	r24, 0x02	; 2
     fe4:	91 05       	cpc	r25, r1
     fe6:	10 f4       	brcc	.+4      	; 0xfec <malloc+0x10>
     fe8:	62 e0       	ldi	r22, 0x02	; 2
     fea:	70 e0       	ldi	r23, 0x00	; 0
     fec:	a0 91 50 01 	lds	r26, 0x0150
     ff0:	b0 91 51 01 	lds	r27, 0x0151
     ff4:	ed 01       	movw	r28, r26
     ff6:	e0 e0       	ldi	r30, 0x00	; 0
     ff8:	f0 e0       	ldi	r31, 0x00	; 0
     ffa:	40 e0       	ldi	r20, 0x00	; 0
     ffc:	50 e0       	ldi	r21, 0x00	; 0
     ffe:	21 c0       	rjmp	.+66     	; 0x1042 <malloc+0x66>
    1000:	88 81       	ld	r24, Y
    1002:	99 81       	ldd	r25, Y+1	; 0x01
    1004:	86 17       	cp	r24, r22
    1006:	97 07       	cpc	r25, r23
    1008:	69 f4       	brne	.+26     	; 0x1024 <malloc+0x48>
    100a:	8a 81       	ldd	r24, Y+2	; 0x02
    100c:	9b 81       	ldd	r25, Y+3	; 0x03
    100e:	30 97       	sbiw	r30, 0x00	; 0
    1010:	19 f0       	breq	.+6      	; 0x1018 <malloc+0x3c>
    1012:	93 83       	std	Z+3, r25	; 0x03
    1014:	82 83       	std	Z+2, r24	; 0x02
    1016:	04 c0       	rjmp	.+8      	; 0x1020 <malloc+0x44>
    1018:	90 93 51 01 	sts	0x0151, r25
    101c:	80 93 50 01 	sts	0x0150, r24
    1020:	fe 01       	movw	r30, r28
    1022:	34 c0       	rjmp	.+104    	; 0x108c <malloc+0xb0>
    1024:	68 17       	cp	r22, r24
    1026:	79 07       	cpc	r23, r25
    1028:	38 f4       	brcc	.+14     	; 0x1038 <malloc+0x5c>
    102a:	41 15       	cp	r20, r1
    102c:	51 05       	cpc	r21, r1
    102e:	19 f0       	breq	.+6      	; 0x1036 <malloc+0x5a>
    1030:	84 17       	cp	r24, r20
    1032:	95 07       	cpc	r25, r21
    1034:	08 f4       	brcc	.+2      	; 0x1038 <malloc+0x5c>
    1036:	ac 01       	movw	r20, r24
    1038:	fe 01       	movw	r30, r28
    103a:	8a 81       	ldd	r24, Y+2	; 0x02
    103c:	9b 81       	ldd	r25, Y+3	; 0x03
    103e:	9c 01       	movw	r18, r24
    1040:	e9 01       	movw	r28, r18
    1042:	20 97       	sbiw	r28, 0x00	; 0
    1044:	e9 f6       	brne	.-70     	; 0x1000 <malloc+0x24>
    1046:	41 15       	cp	r20, r1
    1048:	51 05       	cpc	r21, r1
    104a:	a9 f1       	breq	.+106    	; 0x10b6 <malloc+0xda>
    104c:	ca 01       	movw	r24, r20
    104e:	86 1b       	sub	r24, r22
    1050:	97 0b       	sbc	r25, r23
    1052:	04 97       	sbiw	r24, 0x04	; 4
    1054:	08 f4       	brcc	.+2      	; 0x1058 <malloc+0x7c>
    1056:	ba 01       	movw	r22, r20
    1058:	e0 e0       	ldi	r30, 0x00	; 0
    105a:	f0 e0       	ldi	r31, 0x00	; 0
    105c:	2a c0       	rjmp	.+84     	; 0x10b2 <malloc+0xd6>
    105e:	8d 91       	ld	r24, X+
    1060:	9c 91       	ld	r25, X
    1062:	11 97       	sbiw	r26, 0x01	; 1
    1064:	84 17       	cp	r24, r20
    1066:	95 07       	cpc	r25, r21
    1068:	f9 f4       	brne	.+62     	; 0x10a8 <malloc+0xcc>
    106a:	64 17       	cp	r22, r20
    106c:	75 07       	cpc	r23, r21
    106e:	81 f4       	brne	.+32     	; 0x1090 <malloc+0xb4>
    1070:	12 96       	adiw	r26, 0x02	; 2
    1072:	8d 91       	ld	r24, X+
    1074:	9c 91       	ld	r25, X
    1076:	13 97       	sbiw	r26, 0x03	; 3
    1078:	30 97       	sbiw	r30, 0x00	; 0
    107a:	19 f0       	breq	.+6      	; 0x1082 <malloc+0xa6>
    107c:	93 83       	std	Z+3, r25	; 0x03
    107e:	82 83       	std	Z+2, r24	; 0x02
    1080:	04 c0       	rjmp	.+8      	; 0x108a <malloc+0xae>
    1082:	90 93 51 01 	sts	0x0151, r25
    1086:	80 93 50 01 	sts	0x0150, r24
    108a:	fd 01       	movw	r30, r26
    108c:	32 96       	adiw	r30, 0x02	; 2
    108e:	4f c0       	rjmp	.+158    	; 0x112e <malloc+0x152>
    1090:	ca 01       	movw	r24, r20
    1092:	86 1b       	sub	r24, r22
    1094:	97 0b       	sbc	r25, r23
    1096:	fd 01       	movw	r30, r26
    1098:	e8 0f       	add	r30, r24
    109a:	f9 1f       	adc	r31, r25
    109c:	61 93       	st	Z+, r22
    109e:	71 93       	st	Z+, r23
    10a0:	02 97       	sbiw	r24, 0x02	; 2
    10a2:	8d 93       	st	X+, r24
    10a4:	9c 93       	st	X, r25
    10a6:	43 c0       	rjmp	.+134    	; 0x112e <malloc+0x152>
    10a8:	fd 01       	movw	r30, r26
    10aa:	82 81       	ldd	r24, Z+2	; 0x02
    10ac:	93 81       	ldd	r25, Z+3	; 0x03
    10ae:	9c 01       	movw	r18, r24
    10b0:	d9 01       	movw	r26, r18
    10b2:	10 97       	sbiw	r26, 0x00	; 0
    10b4:	a1 f6       	brne	.-88     	; 0x105e <malloc+0x82>
    10b6:	80 91 4e 01 	lds	r24, 0x014E
    10ba:	90 91 4f 01 	lds	r25, 0x014F
    10be:	89 2b       	or	r24, r25
    10c0:	41 f4       	brne	.+16     	; 0x10d2 <malloc+0xf6>
    10c2:	80 91 34 01 	lds	r24, 0x0134
    10c6:	90 91 35 01 	lds	r25, 0x0135
    10ca:	90 93 4f 01 	sts	0x014F, r25
    10ce:	80 93 4e 01 	sts	0x014E, r24
    10d2:	40 91 36 01 	lds	r20, 0x0136
    10d6:	50 91 37 01 	lds	r21, 0x0137
    10da:	41 15       	cp	r20, r1
    10dc:	51 05       	cpc	r21, r1
    10de:	41 f4       	brne	.+16     	; 0x10f0 <malloc+0x114>
    10e0:	4d b7       	in	r20, 0x3d	; 61
    10e2:	5e b7       	in	r21, 0x3e	; 62
    10e4:	80 91 32 01 	lds	r24, 0x0132
    10e8:	90 91 33 01 	lds	r25, 0x0133
    10ec:	48 1b       	sub	r20, r24
    10ee:	59 0b       	sbc	r21, r25
    10f0:	20 91 4e 01 	lds	r18, 0x014E
    10f4:	30 91 4f 01 	lds	r19, 0x014F
    10f8:	24 17       	cp	r18, r20
    10fa:	35 07       	cpc	r19, r21
    10fc:	b0 f4       	brcc	.+44     	; 0x112a <malloc+0x14e>
    10fe:	ca 01       	movw	r24, r20
    1100:	82 1b       	sub	r24, r18
    1102:	93 0b       	sbc	r25, r19
    1104:	86 17       	cp	r24, r22
    1106:	97 07       	cpc	r25, r23
    1108:	80 f0       	brcs	.+32     	; 0x112a <malloc+0x14e>
    110a:	ab 01       	movw	r20, r22
    110c:	4e 5f       	subi	r20, 0xFE	; 254
    110e:	5f 4f       	sbci	r21, 0xFF	; 255
    1110:	84 17       	cp	r24, r20
    1112:	95 07       	cpc	r25, r21
    1114:	50 f0       	brcs	.+20     	; 0x112a <malloc+0x14e>
    1116:	42 0f       	add	r20, r18
    1118:	53 1f       	adc	r21, r19
    111a:	50 93 4f 01 	sts	0x014F, r21
    111e:	40 93 4e 01 	sts	0x014E, r20
    1122:	f9 01       	movw	r30, r18
    1124:	61 93       	st	Z+, r22
    1126:	71 93       	st	Z+, r23
    1128:	02 c0       	rjmp	.+4      	; 0x112e <malloc+0x152>
    112a:	e0 e0       	ldi	r30, 0x00	; 0
    112c:	f0 e0       	ldi	r31, 0x00	; 0
    112e:	cf 01       	movw	r24, r30
    1130:	df 91       	pop	r29
    1132:	cf 91       	pop	r28
    1134:	08 95       	ret

00001136 <free>:
    1136:	cf 93       	push	r28
    1138:	df 93       	push	r29
    113a:	00 97       	sbiw	r24, 0x00	; 0
    113c:	09 f4       	brne	.+2      	; 0x1140 <free+0xa>
    113e:	50 c0       	rjmp	.+160    	; 0x11e0 <free+0xaa>
    1140:	ec 01       	movw	r28, r24
    1142:	22 97       	sbiw	r28, 0x02	; 2
    1144:	1b 82       	std	Y+3, r1	; 0x03
    1146:	1a 82       	std	Y+2, r1	; 0x02
    1148:	a0 91 50 01 	lds	r26, 0x0150
    114c:	b0 91 51 01 	lds	r27, 0x0151
    1150:	10 97       	sbiw	r26, 0x00	; 0
    1152:	09 f1       	breq	.+66     	; 0x1196 <free+0x60>
    1154:	40 e0       	ldi	r20, 0x00	; 0
    1156:	50 e0       	ldi	r21, 0x00	; 0
    1158:	ac 17       	cp	r26, r28
    115a:	bd 07       	cpc	r27, r29
    115c:	08 f1       	brcs	.+66     	; 0x11a0 <free+0x6a>
    115e:	bb 83       	std	Y+3, r27	; 0x03
    1160:	aa 83       	std	Y+2, r26	; 0x02
    1162:	fe 01       	movw	r30, r28
    1164:	21 91       	ld	r18, Z+
    1166:	31 91       	ld	r19, Z+
    1168:	e2 0f       	add	r30, r18
    116a:	f3 1f       	adc	r31, r19
    116c:	ae 17       	cp	r26, r30
    116e:	bf 07       	cpc	r27, r31
    1170:	79 f4       	brne	.+30     	; 0x1190 <free+0x5a>
    1172:	8d 91       	ld	r24, X+
    1174:	9c 91       	ld	r25, X
    1176:	11 97       	sbiw	r26, 0x01	; 1
    1178:	28 0f       	add	r18, r24
    117a:	39 1f       	adc	r19, r25
    117c:	2e 5f       	subi	r18, 0xFE	; 254
    117e:	3f 4f       	sbci	r19, 0xFF	; 255
    1180:	39 83       	std	Y+1, r19	; 0x01
    1182:	28 83       	st	Y, r18
    1184:	12 96       	adiw	r26, 0x02	; 2
    1186:	8d 91       	ld	r24, X+
    1188:	9c 91       	ld	r25, X
    118a:	13 97       	sbiw	r26, 0x03	; 3
    118c:	9b 83       	std	Y+3, r25	; 0x03
    118e:	8a 83       	std	Y+2, r24	; 0x02
    1190:	41 15       	cp	r20, r1
    1192:	51 05       	cpc	r21, r1
    1194:	71 f4       	brne	.+28     	; 0x11b2 <free+0x7c>
    1196:	d0 93 51 01 	sts	0x0151, r29
    119a:	c0 93 50 01 	sts	0x0150, r28
    119e:	20 c0       	rjmp	.+64     	; 0x11e0 <free+0xaa>
    11a0:	12 96       	adiw	r26, 0x02	; 2
    11a2:	8d 91       	ld	r24, X+
    11a4:	9c 91       	ld	r25, X
    11a6:	13 97       	sbiw	r26, 0x03	; 3
    11a8:	ad 01       	movw	r20, r26
    11aa:	00 97       	sbiw	r24, 0x00	; 0
    11ac:	11 f0       	breq	.+4      	; 0x11b2 <free+0x7c>
    11ae:	dc 01       	movw	r26, r24
    11b0:	d3 cf       	rjmp	.-90     	; 0x1158 <free+0x22>
    11b2:	fa 01       	movw	r30, r20
    11b4:	d3 83       	std	Z+3, r29	; 0x03
    11b6:	c2 83       	std	Z+2, r28	; 0x02
    11b8:	21 91       	ld	r18, Z+
    11ba:	31 91       	ld	r19, Z+
    11bc:	e2 0f       	add	r30, r18
    11be:	f3 1f       	adc	r31, r19
    11c0:	ce 17       	cp	r28, r30
    11c2:	df 07       	cpc	r29, r31
    11c4:	69 f4       	brne	.+26     	; 0x11e0 <free+0xaa>
    11c6:	88 81       	ld	r24, Y
    11c8:	99 81       	ldd	r25, Y+1	; 0x01
    11ca:	28 0f       	add	r18, r24
    11cc:	39 1f       	adc	r19, r25
    11ce:	2e 5f       	subi	r18, 0xFE	; 254
    11d0:	3f 4f       	sbci	r19, 0xFF	; 255
    11d2:	fa 01       	movw	r30, r20
    11d4:	31 83       	std	Z+1, r19	; 0x01
    11d6:	20 83       	st	Z, r18
    11d8:	8a 81       	ldd	r24, Y+2	; 0x02
    11da:	9b 81       	ldd	r25, Y+3	; 0x03
    11dc:	93 83       	std	Z+3, r25	; 0x03
    11de:	82 83       	std	Z+2, r24	; 0x02
    11e0:	df 91       	pop	r29
    11e2:	cf 91       	pop	r28
    11e4:	08 95       	ret

000011e6 <fdevopen>:
    11e6:	0f 93       	push	r16
    11e8:	1f 93       	push	r17
    11ea:	cf 93       	push	r28
    11ec:	df 93       	push	r29
    11ee:	8c 01       	movw	r16, r24
    11f0:	eb 01       	movw	r28, r22
    11f2:	00 97       	sbiw	r24, 0x00	; 0
    11f4:	31 f4       	brne	.+12     	; 0x1202 <fdevopen+0x1c>
    11f6:	61 15       	cp	r22, r1
    11f8:	71 05       	cpc	r23, r1
    11fa:	19 f4       	brne	.+6      	; 0x1202 <fdevopen+0x1c>
    11fc:	20 e0       	ldi	r18, 0x00	; 0
    11fe:	30 e0       	ldi	r19, 0x00	; 0
    1200:	38 c0       	rjmp	.+112    	; 0x1272 <fdevopen+0x8c>
    1202:	81 e0       	ldi	r24, 0x01	; 1
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	6e e0       	ldi	r22, 0x0E	; 14
    1208:	70 e0       	ldi	r23, 0x00	; 0
    120a:	0e 94 3f 09 	call	0x127e	; 0x127e <calloc>
    120e:	fc 01       	movw	r30, r24
    1210:	9c 01       	movw	r18, r24
    1212:	00 97       	sbiw	r24, 0x00	; 0
    1214:	71 f1       	breq	.+92     	; 0x1272 <fdevopen+0x8c>
    1216:	80 e8       	ldi	r24, 0x80	; 128
    1218:	83 83       	std	Z+3, r24	; 0x03
    121a:	20 97       	sbiw	r28, 0x00	; 0
    121c:	71 f0       	breq	.+28     	; 0x123a <fdevopen+0x54>
    121e:	d3 87       	std	Z+11, r29	; 0x0b
    1220:	c2 87       	std	Z+10, r28	; 0x0a
    1222:	81 e8       	ldi	r24, 0x81	; 129
    1224:	83 83       	std	Z+3, r24	; 0x03
    1226:	80 91 52 01 	lds	r24, 0x0152
    122a:	90 91 53 01 	lds	r25, 0x0153
    122e:	89 2b       	or	r24, r25
    1230:	21 f4       	brne	.+8      	; 0x123a <fdevopen+0x54>
    1232:	f0 93 53 01 	sts	0x0153, r31
    1236:	e0 93 52 01 	sts	0x0152, r30
    123a:	01 15       	cp	r16, r1
    123c:	11 05       	cpc	r17, r1
    123e:	c9 f0       	breq	.+50     	; 0x1272 <fdevopen+0x8c>
    1240:	11 87       	std	Z+9, r17	; 0x09
    1242:	00 87       	std	Z+8, r16	; 0x08
    1244:	83 81       	ldd	r24, Z+3	; 0x03
    1246:	82 60       	ori	r24, 0x02	; 2
    1248:	83 83       	std	Z+3, r24	; 0x03
    124a:	80 91 54 01 	lds	r24, 0x0154
    124e:	90 91 55 01 	lds	r25, 0x0155
    1252:	89 2b       	or	r24, r25
    1254:	71 f4       	brne	.+28     	; 0x1272 <fdevopen+0x8c>
    1256:	f0 93 55 01 	sts	0x0155, r31
    125a:	e0 93 54 01 	sts	0x0154, r30
    125e:	80 91 56 01 	lds	r24, 0x0156
    1262:	90 91 57 01 	lds	r25, 0x0157
    1266:	89 2b       	or	r24, r25
    1268:	21 f4       	brne	.+8      	; 0x1272 <fdevopen+0x8c>
    126a:	f0 93 57 01 	sts	0x0157, r31
    126e:	e0 93 56 01 	sts	0x0156, r30
    1272:	c9 01       	movw	r24, r18
    1274:	df 91       	pop	r29
    1276:	cf 91       	pop	r28
    1278:	1f 91       	pop	r17
    127a:	0f 91       	pop	r16
    127c:	08 95       	ret

0000127e <calloc>:
    127e:	0f 93       	push	r16
    1280:	1f 93       	push	r17
    1282:	cf 93       	push	r28
    1284:	df 93       	push	r29
    1286:	68 9f       	mul	r22, r24
    1288:	80 01       	movw	r16, r0
    128a:	69 9f       	mul	r22, r25
    128c:	10 0d       	add	r17, r0
    128e:	78 9f       	mul	r23, r24
    1290:	10 0d       	add	r17, r0
    1292:	11 24       	eor	r1, r1
    1294:	c8 01       	movw	r24, r16
    1296:	0e 94 ee 07 	call	0xfdc	; 0xfdc <malloc>
    129a:	ec 01       	movw	r28, r24
    129c:	00 97       	sbiw	r24, 0x00	; 0
    129e:	29 f0       	breq	.+10     	; 0x12aa <calloc+0x2c>
    12a0:	60 e0       	ldi	r22, 0x00	; 0
    12a2:	70 e0       	ldi	r23, 0x00	; 0
    12a4:	a8 01       	movw	r20, r16
    12a6:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <memset>
    12aa:	ce 01       	movw	r24, r28
    12ac:	df 91       	pop	r29
    12ae:	cf 91       	pop	r28
    12b0:	1f 91       	pop	r17
    12b2:	0f 91       	pop	r16
    12b4:	08 95       	ret

000012b6 <memset>:
    12b6:	dc 01       	movw	r26, r24
    12b8:	01 c0       	rjmp	.+2      	; 0x12bc <memset+0x6>
    12ba:	6d 93       	st	X+, r22
    12bc:	41 50       	subi	r20, 0x01	; 1
    12be:	50 40       	sbci	r21, 0x00	; 0
    12c0:	e0 f7       	brcc	.-8      	; 0x12ba <memset+0x4>
    12c2:	08 95       	ret

000012c4 <_exit>:
    12c4:	f8 94       	cli

000012c6 <__stop_program>:
    12c6:	ff cf       	rjmp	.-2      	; 0x12c6 <__stop_program>
