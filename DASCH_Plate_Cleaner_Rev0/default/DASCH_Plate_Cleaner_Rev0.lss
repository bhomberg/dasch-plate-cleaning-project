
DASCH_Plate_Cleaner_Rev0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800100  00001d72  00001e06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d72  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  00800174  00800174  00001e7a  2**0
                  ALLOC
  3 .stab         000027c0  00000000  00000000  00001e7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002591  00000000  00000000  0000463c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000040  00000000  00000000  00006bcd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000192  00000000  00000000  00006c0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000b38  00000000  00000000  00006d9f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000002c1  00000000  00000000  000078d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000bb4  00000000  00000000  00007b98  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000110  00000000  00000000  0000874c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000776  00000000  00000000  0000885c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000001d8  00000000  00000000  00008fd2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 9e 0b 	jmp	0x173c	; 0x173c <__vector_11>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e2 e7       	ldi	r30, 0x72	; 114
      a0:	fd e1       	ldi	r31, 0x1D	; 29
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a4 37       	cpi	r26, 0x74	; 116
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	11 e0       	ldi	r17, 0x01	; 1
      b4:	a4 e7       	ldi	r26, 0x74	; 116
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a8 39       	cpi	r26, 0x98	; 152
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 77 00 	call	0xee	; 0xee <main>
      c6:	0c 94 b7 0e 	jmp	0x1d6e	; 0x1d6e <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <__cxa_guard_acquire>:

extern "C" int __cxa_guard_acquire(__guard *); 
extern "C" void __cxa_guard_release (__guard *); 
extern "C" void __cxa_guard_abort (__guard *); 

int __cxa_guard_acquire(__guard *g) {return !*(char *)(g);}; 
      ce:	fc 01       	movw	r30, r24
      d0:	20 e0       	ldi	r18, 0x00	; 0
      d2:	30 e0       	ldi	r19, 0x00	; 0
      d4:	80 81       	ld	r24, Z
      d6:	88 23       	and	r24, r24
      d8:	11 f4       	brne	.+4      	; 0xde <__cxa_guard_acquire+0x10>
      da:	21 e0       	ldi	r18, 0x01	; 1
      dc:	30 e0       	ldi	r19, 0x00	; 0
      de:	c9 01       	movw	r24, r18
      e0:	08 95       	ret

000000e2 <__cxa_guard_release>:
void __cxa_guard_release (__guard *g) {*(char *)g = 1;}; 
      e2:	fc 01       	movw	r30, r24
      e4:	81 e0       	ldi	r24, 0x01	; 1
      e6:	80 83       	st	Z, r24
      e8:	08 95       	ret

000000ea <__cxa_guard_abort>:
void __cxa_guard_abort (__guard *) {}; 
      ea:	08 95       	ret

000000ec <__cxa_pure_virtual>:

extern "C" void __cxa_pure_virtual(void); 
void __cxa_pure_virtual(void) {}; 
      ec:	08 95       	ret

000000ee <main>:
		unsigned int iNull17 : 1;
	} bits_in_inputByte1;
	char inputByte1;
} u_inputByte1;
  
int main()   
      ee:	2f 92       	push	r2
      f0:	3f 92       	push	r3
      f2:	4f 92       	push	r4
      f4:	5f 92       	push	r5
      f6:	6f 92       	push	r6
      f8:	7f 92       	push	r7
      fa:	8f 92       	push	r8
      fc:	9f 92       	push	r9
      fe:	af 92       	push	r10
     100:	bf 92       	push	r11
     102:	cf 92       	push	r12
     104:	df 92       	push	r13
     106:	ef 92       	push	r14
     108:	ff 92       	push	r15
     10a:	0f 93       	push	r16
     10c:	1f 93       	push	r17
     10e:	df 93       	push	r29
     110:	cf 93       	push	r28
     112:	cd b7       	in	r28, 0x3d	; 61
     114:	de b7       	in	r29, 0x3e	; 62
     116:	2e 97       	sbiw	r28, 0x0e	; 14
     118:	0f b6       	in	r0, 0x3f	; 63
     11a:	f8 94       	cli
     11c:	de bf       	out	0x3e, r29	; 62
     11e:	0f be       	out	0x3f, r0	; 63
     120:	cd bf       	out	0x3d, r28	; 61
	int totallength3 = 2, totallength4 = 2, totallength5 = 2;
	int m2HalfPlate = 2000, m2WholePlate = 2000, m1LoadPlate = 2000, m2HomeFix = 2000;
	int m2Brush1Step = 2000, m2Brush2Step = 2000, m2Dry1Step = 2000, m2Dry2Step = 2000;
	int m2LoadBack = 2000;
    
	u_motorByte0.motorByte0 = 0;  // initialize motorByte0
     122:	10 92 74 01 	sts	0x0174, r1
	u_motorByte1.motorByte1 = 0;  // initialize motorByte1
     126:	10 92 75 01 	sts	0x0175, r1
	u_outputByte0.outputByte0 = 255;  // initialize outputByte0
     12a:	8f ef       	ldi	r24, 0xFF	; 255
     12c:	80 93 76 01 	sts	0x0176, r24
	u_outputByte1.outputByte1 = 255;  // initialize outputByte1
     130:	80 93 77 01 	sts	0x0177, r24
	u_inputByte0.inputByte0 = 0;  // initialize inputByte0
     134:	10 92 78 01 	sts	0x0178, r1
	u_inputByte1.inputByte1 = 0;  // initialize inputByte1
     138:	10 92 79 01 	sts	0x0179, r1
	
	OrangutanLCD::clear();
     13c:	0e 94 14 09 	call	0x1228	; 0x1228 <_ZN12OrangutanLCD5clearEv>
	OrangutanLCD::print("BEGIN ");
     140:	80 e0       	ldi	r24, 0x00	; 0
     142:	91 e0       	ldi	r25, 0x01	; 1
     144:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
// another C++ file.
inline unsigned long get_ms() { return OrangutanTime::ms(); }
inline unsigned long millis() { return OrangutanTime::ms(); }

inline void delay(unsigned int milliseconds) { OrangutanTime::delayMilliseconds(milliseconds); }
inline void delay_ms(unsigned int milliseconds) { OrangutanTime::delayMilliseconds(milliseconds); }
     148:	88 ee       	ldi	r24, 0xE8	; 232
     14a:	93 e0       	ldi	r25, 0x03	; 3
     14c:	0e 94 09 0c 	call	0x1812	; 0x1812 <_ZN13OrangutanTime17delayMillisecondsEj>
	
	delay_ms(1000);

    i2c_init();                                // init I2C interface
     150:	0e 94 c3 06 	call	0xd86	; 0xd86 <_Z8i2c_initv>
	
    OrangutanLCD::print("INIT ");
     154:	87 e0       	ldi	r24, 0x07	; 7
     156:	91 e0       	ldi	r25, 0x01	; 1
     158:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
	
    ret1 = i2c_start(I2C1+I2C_WRITE);       // set device address and write mode
     15c:	80 e4       	ldi	r24, 0x40	; 64
     15e:	0e 94 c9 06 	call	0xd92	; 0xd92 <_Z9i2c_starth>
     162:	c8 2e       	mov	r12, r24
	i2c_stop();
     164:	0e 94 1a 07 	call	0xe34	; 0xe34 <_Z8i2c_stopv>
	ret2 = i2c_start(I2C2+I2C_WRITE);
     168:	82 e4       	ldi	r24, 0x42	; 66
     16a:	0e 94 c9 06 	call	0xd92	; 0xd92 <_Z9i2c_starth>
     16e:	08 2f       	mov	r16, r24
	i2c_stop();
     170:	0e 94 1a 07 	call	0xe34	; 0xe34 <_Z8i2c_stopv>
	ret3 = i2c_start(I2C3+I2C_WRITE);
     174:	84 e4       	ldi	r24, 0x44	; 68
     176:	0e 94 c9 06 	call	0xd92	; 0xd92 <_Z9i2c_starth>
     17a:	e8 2e       	mov	r14, r24
	i2c_stop();
     17c:	0e 94 1a 07 	call	0xe34	; 0xe34 <_Z8i2c_stopv>
    
	OrangutanLCD::clear();
     180:	0e 94 14 09 	call	0x1228	; 0x1228 <_ZN12OrangutanLCD5clearEv>
	OrangutanLCD::print("START ");
     184:	8d e0       	ldi	r24, 0x0D	; 13
     186:	91 e0       	ldi	r25, 0x01	; 1
     188:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
	
	if ( ret1 | ret2 | ret3 ) {
     18c:	10 e0       	ldi	r17, 0x00	; 0
     18e:	dd 24       	eor	r13, r13
     190:	0c 29       	or	r16, r12
     192:	1d 29       	or	r17, r13
     194:	ff 24       	eor	r15, r15
     196:	0e 29       	or	r16, r14
     198:	1f 29       	or	r17, r15
     19a:	01 2b       	or	r16, r17
     19c:	59 f0       	breq	.+22     	; 0x1b4 <main+0xc6>
        /* failed to issue start condition, possibly no device found */
        
		OrangutanLCD::print("NAK ");
     19e:	84 e1       	ldi	r24, 0x14	; 20
     1a0:	91 e0       	ldi	r25, 0x01	; 1
     1a2:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
		i2c_stop();
     1a6:	0e 94 1a 07 	call	0xe34	; 0xe34 <_Z8i2c_stopv>
		OrangutanLCD::print("STOP ");
     1aa:	89 e1       	ldi	r24, 0x19	; 25
     1ac:	91 e0       	ldi	r25, 0x01	; 1
     1ae:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
     1b2:	cd c5       	rjmp	.+2970   	; 0xd4e <main+0xc60>
    }
	else {
		OrangutanLCD::print("ACK ");
     1b4:	8f e1       	ldi	r24, 0x1F	; 31
     1b6:	91 e0       	ldi	r25, 0x01	; 1
     1b8:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
        /* issuing start condition ok, device accessible */
		OrangutanLCD::print("BINIT ");
     1bc:	84 e2       	ldi	r24, 0x24	; 36
     1be:	91 e0       	ldi	r25, 0x01	; 1
     1c0:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
		i2c_start(I2C1+I2C_WRITE);
     1c4:	80 e4       	ldi	r24, 0x40	; 64
     1c6:	0e 94 c9 06 	call	0xd92	; 0xd92 <_Z9i2c_starth>
		i2c_write(0x6);
     1ca:	86 e0       	ldi	r24, 0x06	; 6
     1cc:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
		i2c_write(0x0);
     1d0:	80 e0       	ldi	r24, 0x00	; 0
     1d2:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
		i2c_write(0x0);
     1d6:	80 e0       	ldi	r24, 0x00	; 0
     1d8:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
		i2c_stop();
     1dc:	0e 94 1a 07 	call	0xe34	; 0xe34 <_Z8i2c_stopv>
		
		i2c_start(I2C2+I2C_WRITE);
     1e0:	82 e4       	ldi	r24, 0x42	; 66
     1e2:	0e 94 c9 06 	call	0xd92	; 0xd92 <_Z9i2c_starth>
		i2c_write(0x6);
     1e6:	86 e0       	ldi	r24, 0x06	; 6
     1e8:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
		i2c_write(0x0);
     1ec:	80 e0       	ldi	r24, 0x00	; 0
     1ee:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
		i2c_write(0x0);
     1f2:	80 e0       	ldi	r24, 0x00	; 0
     1f4:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
		i2c_stop();
     1f8:	0e 94 1a 07 	call	0xe34	; 0xe34 <_Z8i2c_stopv>

		//u_motorByte0.bits_in_motorByte0.m1Drop = 1;
		u_motorByte0.bits_in_motorByte0.m2Drop = 1;
     1fc:	80 91 74 01 	lds	r24, 0x0174
     200:	80 62       	ori	r24, 0x20	; 32
     202:	80 93 74 01 	sts	0x0174, r24
     206:	88 ee       	ldi	r24, 0xE8	; 232
     208:	93 e0       	ldi	r25, 0x03	; 3
     20a:	0e 94 09 0c 	call	0x1812	; 0x1812 <_ZN13OrangutanTime17delayMillisecondsEj>
		/*u_motorByte1.bits_in_motorByte1.m3Drop = 1;
		u_motorByte1.bits_in_motorByte1.m4Drop = 1;
		u_motorByte1.bits_in_motorByte1.m5Drop = 1;*/

		delay_ms(1000);
		OrangutanLCD::clear();
     20e:	0e 94 14 09 	call	0x1228	; 0x1228 <_ZN12OrangutanLCD5clearEv>
     212:	aa 24       	eor	r10, r10
     214:	bb 24       	eor	r11, r11
     216:	cc 24       	eor	r12, r12
     218:	dd 24       	eor	r13, r13
     21a:	66 24       	eor	r6, r6
     21c:	77 24       	eor	r7, r7
     21e:	88 24       	eor	r8, r8
     220:	99 24       	eor	r9, r9
     222:	22 24       	eor	r2, r2
     224:	33 24       	eor	r3, r3
     226:	1e 86       	std	Y+14, r1	; 0x0e
     228:	1d 86       	std	Y+13, r1	; 0x0d
     22a:	00 e0       	ldi	r16, 0x00	; 0
     22c:	10 e0       	ldi	r17, 0x00	; 0
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	9c 87       	std	Y+12, r25	; 0x0c
     234:	8b 87       	std	Y+11, r24	; 0x0b
     236:	9a 87       	std	Y+10, r25	; 0x0a
     238:	89 87       	std	Y+9, r24	; 0x09
     23a:	98 87       	std	Y+8, r25	; 0x08
     23c:	8f 83       	std	Y+7, r24	; 0x07
     23e:	9e 83       	std	Y+6, r25	; 0x06
     240:	8d 83       	std	Y+5, r24	; 0x05
     242:	9c 83       	std	Y+4, r25	; 0x04
     244:	8b 83       	std	Y+3, r24	; 0x03
     246:	9a 83       	std	Y+2, r25	; 0x02
     248:	89 83       	std	Y+1, r24	; 0x01
     24a:	ee 24       	eor	r14, r14
     24c:	ff 24       	eor	r15, r15
     24e:	44 24       	eor	r4, r4
     250:	55 24       	eor	r5, r5
     252:	5d c5       	rjmp	.+2746   	; 0xd0e <main+0xc20>
		int counterRef = 0, counterRef14 = 0, counterRef26 = 0, counterRefFive = 0, counterRef30 = 0;
		int pWait = 100, mWait = 100, kWait = 100;

		while(state != -1)
		{
			i2c_start(I2C3+I2C_WRITE);						// first start condition (write)
     254:	84 e4       	ldi	r24, 0x44	; 68
     256:	0e 94 c9 06 	call	0xd92	; 0xd92 <_Z9i2c_starth>
			i2c_write(0x0);								// write command byte
     25a:	80 e0       	ldi	r24, 0x00	; 0
     25c:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
			i2c_start(I2C3+I2C_READ);						// second start condition (read)
     260:	85 e4       	ldi	r24, 0x45	; 69
     262:	0e 94 c9 06 	call	0xd92	; 0xd92 <_Z9i2c_starth>
			u_inputByte0.inputByte0 = i2c_readAck();				// read first byte and send Ack, requesting more
     266:	0e 94 34 07 	call	0xe68	; 0xe68 <_Z11i2c_readAckv>
     26a:	80 93 78 01 	sts	0x0178, r24
        	u_inputByte1.inputByte1 = i2c_readNak();				// read second byte and send stop condition
     26e:	0e 94 3e 07 	call	0xe7c	; 0xe7c <_Z11i2c_readNakv>
     272:	80 93 79 01 	sts	0x0179, r24
        	i2c_stop();								// set stop conditon = release bus 
     276:	0e 94 1a 07 	call	0xe34	; 0xe34 <_Z8i2c_stopv>

			//state conversions

			if(state == 0 && counter > 10000/*&&  button pressed */){
     27a:	ed 85       	ldd	r30, Y+13	; 0x0d
     27c:	fe 85       	ldd	r31, Y+14	; 0x0e
     27e:	ef 2b       	or	r30, r31
     280:	39 f4       	brne	.+14     	; 0x290 <main+0x1a2>
     282:	f7 e2       	ldi	r31, 0x27	; 39
     284:	01 31       	cpi	r16, 0x11	; 17
     286:	1f 07       	cpc	r17, r31
     288:	0c f4       	brge	.+2      	; 0x28c <main+0x19e>
     28a:	43 c0       	rjmp	.+134    	; 0x312 <main+0x224>
     28c:	78 01       	movw	r14, r16
     28e:	04 c0       	rjmp	.+8      	; 0x298 <main+0x1aa>
				state = 1;
				counterRef = counter;
			}
			if(state == 1 && counter - counterRef > totallength1*m1LoadPlate/*&& u_inputByte0.bits_in_inputByte0.plate == 0*/){
     290:	8d 85       	ldd	r24, Y+13	; 0x0d
     292:	9e 85       	ldd	r25, Y+14	; 0x0e
     294:	01 97       	sbiw	r24, 0x01	; 1
     296:	49 f4       	brne	.+18     	; 0x2aa <main+0x1bc>
     298:	c8 01       	movw	r24, r16
     29a:	8e 19       	sub	r24, r14
     29c:	9f 09       	sbc	r25, r15
     29e:	81 5a       	subi	r24, 0xA1	; 161
     2a0:	9f 40       	sbci	r25, 0x0F	; 15
     2a2:	0c f4       	brge	.+2      	; 0x2a6 <main+0x1b8>
     2a4:	43 c0       	rjmp	.+134    	; 0x32c <main+0x23e>
     2a6:	78 01       	movw	r14, r16
     2a8:	04 c0       	rjmp	.+8      	; 0x2b2 <main+0x1c4>
				state = 2;
				counterRef = counter;
			}
			if(state == 2 && counter - counterRef > pWait){
     2aa:	8d 85       	ldd	r24, Y+13	; 0x0d
     2ac:	9e 85       	ldd	r25, Y+14	; 0x0e
     2ae:	02 97       	sbiw	r24, 0x02	; 2
     2b0:	49 f4       	brne	.+18     	; 0x2c4 <main+0x1d6>
     2b2:	c8 01       	movw	r24, r16
     2b4:	8e 19       	sub	r24, r14
     2b6:	9f 09       	sbc	r25, r15
     2b8:	85 36       	cpi	r24, 0x65	; 101
     2ba:	91 05       	cpc	r25, r1
     2bc:	0c f4       	brge	.+2      	; 0x2c0 <main+0x1d2>
     2be:	47 c0       	rjmp	.+142    	; 0x34e <main+0x260>
     2c0:	78 01       	movw	r14, r16
     2c2:	04 c0       	rjmp	.+8      	; 0x2cc <main+0x1de>
				state = 3;
				counterRef = counter;
			}
			if(state == 3 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
     2c4:	ed 85       	ldd	r30, Y+13	; 0x0d
     2c6:	fe 85       	ldd	r31, Y+14	; 0x0e
     2c8:	33 97       	sbiw	r30, 0x03	; 3
     2ca:	49 f4       	brne	.+18     	; 0x2de <main+0x1f0>
     2cc:	c8 01       	movw	r24, r16
     2ce:	8e 19       	sub	r24, r14
     2d0:	9f 09       	sbc	r25, r15
     2d2:	81 5a       	subi	r24, 0xA1	; 161
     2d4:	9f 40       	sbci	r25, 0x0F	; 15
     2d6:	0c f4       	brge	.+2      	; 0x2da <main+0x1ec>
     2d8:	4b c0       	rjmp	.+150    	; 0x370 <main+0x282>
     2da:	78 01       	movw	r14, r16
     2dc:	04 c0       	rjmp	.+8      	; 0x2e6 <main+0x1f8>
				state = 4;
				counterRef = counter;
			}
			if(state == 4 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
     2de:	8d 85       	ldd	r24, Y+13	; 0x0d
     2e0:	9e 85       	ldd	r25, Y+14	; 0x0e
     2e2:	04 97       	sbiw	r24, 0x04	; 4
     2e4:	49 f4       	brne	.+18     	; 0x2f8 <main+0x20a>
     2e6:	c8 01       	movw	r24, r16
     2e8:	8e 19       	sub	r24, r14
     2ea:	9f 09       	sbc	r25, r15
     2ec:	89 5e       	subi	r24, 0xE9	; 233
     2ee:	93 40       	sbci	r25, 0x03	; 3
     2f0:	0c f4       	brge	.+2      	; 0x2f4 <main+0x206>
     2f2:	4f c0       	rjmp	.+158    	; 0x392 <main+0x2a4>
     2f4:	78 01       	movw	r14, r16
     2f6:	04 c0       	rjmp	.+8      	; 0x300 <main+0x212>
				state = 5;
				counterRef = counter;
			}
			if(state == 5 && counter - counterRef > pWait){
     2f8:	8d 85       	ldd	r24, Y+13	; 0x0d
     2fa:	9e 85       	ldd	r25, Y+14	; 0x0e
     2fc:	05 97       	sbiw	r24, 0x05	; 5
     2fe:	49 f4       	brne	.+18     	; 0x312 <main+0x224>
     300:	c8 01       	movw	r24, r16
     302:	8e 19       	sub	r24, r14
     304:	9f 09       	sbc	r25, r15
     306:	85 36       	cpi	r24, 0x65	; 101
     308:	91 05       	cpc	r25, r1
     30a:	0c f4       	brge	.+2      	; 0x30e <main+0x220>
     30c:	51 c0       	rjmp	.+162    	; 0x3b0 <main+0x2c2>
     30e:	78 01       	movw	r14, r16
     310:	04 c0       	rjmp	.+8      	; 0x31a <main+0x22c>
				state = 6;
				counterRef = counter;
			}
			if(state == 6 && counter - counterRef > totallength2*m2Brush1Step /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush1 == 0*/){
     312:	ed 85       	ldd	r30, Y+13	; 0x0d
     314:	fe 85       	ldd	r31, Y+14	; 0x0e
     316:	36 97       	sbiw	r30, 0x06	; 6
     318:	69 f4       	brne	.+26     	; 0x334 <main+0x246>
     31a:	c8 01       	movw	r24, r16
     31c:	8e 19       	sub	r24, r14
     31e:	9f 09       	sbc	r25, r15
     320:	81 5a       	subi	r24, 0xA1	; 161
     322:	9f 40       	sbci	r25, 0x0F	; 15
     324:	0c f4       	brge	.+2      	; 0x328 <main+0x23a>
     326:	55 c0       	rjmp	.+170    	; 0x3d2 <main+0x2e4>
     328:	78 01       	movw	r14, r16
     32a:	08 c0       	rjmp	.+16     	; 0x33c <main+0x24e>
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	9e 87       	std	Y+14, r25	; 0x0e
     332:	8d 87       	std	Y+13, r24	; 0x0d
				state = 7;
				counterRef = counter;
			}
			if(state == 7 && counter - counterRef > mWait){
     334:	ed 85       	ldd	r30, Y+13	; 0x0d
     336:	fe 85       	ldd	r31, Y+14	; 0x0e
     338:	37 97       	sbiw	r30, 0x07	; 7
     33a:	69 f4       	brne	.+26     	; 0x356 <main+0x268>
     33c:	c8 01       	movw	r24, r16
     33e:	8e 19       	sub	r24, r14
     340:	9f 09       	sbc	r25, r15
     342:	85 36       	cpi	r24, 0x65	; 101
     344:	91 05       	cpc	r25, r1
     346:	0c f4       	brge	.+2      	; 0x34a <main+0x25c>
     348:	55 c0       	rjmp	.+170    	; 0x3f4 <main+0x306>
     34a:	78 01       	movw	r14, r16
     34c:	08 c0       	rjmp	.+16     	; 0x35e <main+0x270>
     34e:	82 e0       	ldi	r24, 0x02	; 2
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	9e 87       	std	Y+14, r25	; 0x0e
     354:	8d 87       	std	Y+13, r24	; 0x0d
				state = 8;
				counterRef = counter;
			}
			if(state == 8 && counter - counterRef > pWait){
     356:	ed 85       	ldd	r30, Y+13	; 0x0d
     358:	fe 85       	ldd	r31, Y+14	; 0x0e
     35a:	38 97       	sbiw	r30, 0x08	; 8
     35c:	69 f4       	brne	.+26     	; 0x378 <main+0x28a>
     35e:	c8 01       	movw	r24, r16
     360:	8e 19       	sub	r24, r14
     362:	9f 09       	sbc	r25, r15
     364:	85 36       	cpi	r24, 0x65	; 101
     366:	91 05       	cpc	r25, r1
     368:	0c f4       	brge	.+2      	; 0x36c <main+0x27e>
     36a:	53 c0       	rjmp	.+166    	; 0x412 <main+0x324>
     36c:	78 01       	movw	r14, r16
     36e:	08 c0       	rjmp	.+16     	; 0x380 <main+0x292>
     370:	83 e0       	ldi	r24, 0x03	; 3
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	9e 87       	std	Y+14, r25	; 0x0e
     376:	8d 87       	std	Y+13, r24	; 0x0d
				state = 9;
				counterRef = counter;
			}
			if(state == 9 && counter - counterRef > totallength2*m2HalfPlate){
     378:	ed 85       	ldd	r30, Y+13	; 0x0d
     37a:	fe 85       	ldd	r31, Y+14	; 0x0e
     37c:	39 97       	sbiw	r30, 0x09	; 9
     37e:	69 f4       	brne	.+26     	; 0x39a <main+0x2ac>
     380:	c8 01       	movw	r24, r16
     382:	8e 19       	sub	r24, r14
     384:	9f 09       	sbc	r25, r15
     386:	81 5a       	subi	r24, 0xA1	; 161
     388:	9f 40       	sbci	r25, 0x0F	; 15
     38a:	0c f4       	brge	.+2      	; 0x38e <main+0x2a0>
     38c:	53 c0       	rjmp	.+166    	; 0x434 <main+0x346>
     38e:	78 01       	movw	r14, r16
     390:	08 c0       	rjmp	.+16     	; 0x3a2 <main+0x2b4>
     392:	84 e0       	ldi	r24, 0x04	; 4
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	9e 87       	std	Y+14, r25	; 0x0e
     398:	8d 87       	std	Y+13, r24	; 0x0d
				state = 10;
				counterRef = counter;
			}
			if(state == 10 && counter - counterRef > pWait){
     39a:	ed 85       	ldd	r30, Y+13	; 0x0d
     39c:	fe 85       	ldd	r31, Y+14	; 0x0e
     39e:	3a 97       	sbiw	r30, 0x0a	; 10
     3a0:	59 f4       	brne	.+22     	; 0x3b8 <main+0x2ca>
     3a2:	c8 01       	movw	r24, r16
     3a4:	8e 19       	sub	r24, r14
     3a6:	9f 09       	sbc	r25, r15
     3a8:	85 36       	cpi	r24, 0x65	; 101
     3aa:	91 05       	cpc	r25, r1
     3ac:	4c f4       	brge	.+18     	; 0x3c0 <main+0x2d2>
     3ae:	53 c0       	rjmp	.+166    	; 0x456 <main+0x368>
     3b0:	85 e0       	ldi	r24, 0x05	; 5
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	9e 87       	std	Y+14, r25	; 0x0e
     3b6:	8d 87       	std	Y+13, r24	; 0x0d
				state = 11;
			}
			if(state == 11 && counter - counterRef > totallength2*m2HalfPlate /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush1 == 0*/){
     3b8:	ed 85       	ldd	r30, Y+13	; 0x0d
     3ba:	fe 85       	ldd	r31, Y+14	; 0x0e
     3bc:	3b 97       	sbiw	r30, 0x0b	; 11
     3be:	69 f4       	brne	.+26     	; 0x3da <main+0x2ec>
     3c0:	c8 01       	movw	r24, r16
     3c2:	8e 19       	sub	r24, r14
     3c4:	9f 09       	sbc	r25, r15
     3c6:	81 5a       	subi	r24, 0xA1	; 161
     3c8:	9f 40       	sbci	r25, 0x0F	; 15
     3ca:	0c f4       	brge	.+2      	; 0x3ce <main+0x2e0>
     3cc:	55 c0       	rjmp	.+170    	; 0x478 <main+0x38a>
     3ce:	78 01       	movw	r14, r16
     3d0:	08 c0       	rjmp	.+16     	; 0x3e2 <main+0x2f4>
     3d2:	86 e0       	ldi	r24, 0x06	; 6
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	9e 87       	std	Y+14, r25	; 0x0e
     3d8:	8d 87       	std	Y+13, r24	; 0x0d
				state = 12;
				counterRef = counter;
			}
			if(state == 12 && counter - counterRef > pWait){
     3da:	ed 85       	ldd	r30, Y+13	; 0x0d
     3dc:	fe 85       	ldd	r31, Y+14	; 0x0e
     3de:	3c 97       	sbiw	r30, 0x0c	; 12
     3e0:	69 f4       	brne	.+26     	; 0x3fc <main+0x30e>
     3e2:	c8 01       	movw	r24, r16
     3e4:	8e 19       	sub	r24, r14
     3e6:	9f 09       	sbc	r25, r15
     3e8:	85 36       	cpi	r24, 0x65	; 101
     3ea:	91 05       	cpc	r25, r1
     3ec:	0c f4       	brge	.+2      	; 0x3f0 <main+0x302>
     3ee:	55 c0       	rjmp	.+170    	; 0x49a <main+0x3ac>
     3f0:	78 01       	movw	r14, r16
     3f2:	08 c0       	rjmp	.+16     	; 0x404 <main+0x316>
     3f4:	87 e0       	ldi	r24, 0x07	; 7
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	9e 87       	std	Y+14, r25	; 0x0e
     3fa:	8d 87       	std	Y+13, r24	; 0x0d
				state = 13;
				counterRef = counter;
			}
			if(state == 13 && counter - counterRef > totallength2*m2HalfPlate){
     3fc:	ed 85       	ldd	r30, Y+13	; 0x0d
     3fe:	fe 85       	ldd	r31, Y+14	; 0x0e
     400:	3d 97       	sbiw	r30, 0x0d	; 13
     402:	59 f4       	brne	.+22     	; 0x41a <main+0x32c>
     404:	c8 01       	movw	r24, r16
     406:	8e 19       	sub	r24, r14
     408:	9f 09       	sbc	r25, r15
     40a:	81 5a       	subi	r24, 0xA1	; 161
     40c:	9f 40       	sbci	r25, 0x0F	; 15
     40e:	4c f4       	brge	.+18     	; 0x422 <main+0x334>
     410:	55 c0       	rjmp	.+170    	; 0x4bc <main+0x3ce>
     412:	88 e0       	ldi	r24, 0x08	; 8
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	9e 87       	std	Y+14, r25	; 0x0e
     418:	8d 87       	std	Y+13, r24	; 0x0d
				state = 14;
				counterRef14 = counter;
			}
			if(state == 14 && counter - counterRef > totallength2*m2Brush2Step /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush2*/){
     41a:	ed 85       	ldd	r30, Y+13	; 0x0d
     41c:	fe 85       	ldd	r31, Y+14	; 0x0e
     41e:	3e 97       	sbiw	r30, 0x0e	; 14
     420:	69 f4       	brne	.+26     	; 0x43c <main+0x34e>
     422:	c8 01       	movw	r24, r16
     424:	8e 19       	sub	r24, r14
     426:	9f 09       	sbc	r25, r15
     428:	81 5a       	subi	r24, 0xA1	; 161
     42a:	9f 40       	sbci	r25, 0x0F	; 15
     42c:	0c f4       	brge	.+2      	; 0x430 <main+0x342>
     42e:	57 c0       	rjmp	.+174    	; 0x4de <main+0x3f0>
     430:	78 01       	movw	r14, r16
     432:	08 c0       	rjmp	.+16     	; 0x444 <main+0x356>
     434:	89 e0       	ldi	r24, 0x09	; 9
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	9e 87       	std	Y+14, r25	; 0x0e
     43a:	8d 87       	std	Y+13, r24	; 0x0d
				state = 15;
				counterRef = counter;
			}
			if(state == 15 && counter - counterRef > mWait){
     43c:	ed 85       	ldd	r30, Y+13	; 0x0d
     43e:	fe 85       	ldd	r31, Y+14	; 0x0e
     440:	3f 97       	sbiw	r30, 0x0f	; 15
     442:	69 f4       	brne	.+26     	; 0x45e <main+0x370>
     444:	c8 01       	movw	r24, r16
     446:	8e 19       	sub	r24, r14
     448:	9f 09       	sbc	r25, r15
     44a:	85 36       	cpi	r24, 0x65	; 101
     44c:	91 05       	cpc	r25, r1
     44e:	0c f4       	brge	.+2      	; 0x452 <main+0x364>
     450:	57 c0       	rjmp	.+174    	; 0x500 <main+0x412>
     452:	78 01       	movw	r14, r16
     454:	08 c0       	rjmp	.+16     	; 0x466 <main+0x378>
     456:	8a e0       	ldi	r24, 0x0A	; 10
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	9e 87       	std	Y+14, r25	; 0x0e
     45c:	8d 87       	std	Y+13, r24	; 0x0d
				state = 16;
				counterRef = counter;
			}
			if(state == 16 && counter - counterRef > pWait){
     45e:	ed 85       	ldd	r30, Y+13	; 0x0d
     460:	fe 85       	ldd	r31, Y+14	; 0x0e
     462:	70 97       	sbiw	r30, 0x10	; 16
     464:	69 f4       	brne	.+26     	; 0x480 <main+0x392>
     466:	c8 01       	movw	r24, r16
     468:	8e 19       	sub	r24, r14
     46a:	9f 09       	sbc	r25, r15
     46c:	85 36       	cpi	r24, 0x65	; 101
     46e:	91 05       	cpc	r25, r1
     470:	0c f4       	brge	.+2      	; 0x474 <main+0x386>
     472:	57 c0       	rjmp	.+174    	; 0x522 <main+0x434>
     474:	78 01       	movw	r14, r16
     476:	08 c0       	rjmp	.+16     	; 0x488 <main+0x39a>
     478:	8b e0       	ldi	r24, 0x0B	; 11
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	9e 87       	std	Y+14, r25	; 0x0e
     47e:	8d 87       	std	Y+13, r24	; 0x0d
				state = 17;
				counterRef = counter;
			}
			if(state == 17 && counter - counterRef > totallength2*m2HalfPlate){
     480:	ed 85       	ldd	r30, Y+13	; 0x0d
     482:	fe 85       	ldd	r31, Y+14	; 0x0e
     484:	71 97       	sbiw	r30, 0x11	; 17
     486:	69 f4       	brne	.+26     	; 0x4a2 <main+0x3b4>
     488:	c8 01       	movw	r24, r16
     48a:	8e 19       	sub	r24, r14
     48c:	9f 09       	sbc	r25, r15
     48e:	81 5a       	subi	r24, 0xA1	; 161
     490:	9f 40       	sbci	r25, 0x0F	; 15
     492:	0c f4       	brge	.+2      	; 0x496 <main+0x3a8>
     494:	57 c0       	rjmp	.+174    	; 0x544 <main+0x456>
     496:	78 01       	movw	r14, r16
     498:	08 c0       	rjmp	.+16     	; 0x4aa <main+0x3bc>
     49a:	8c e0       	ldi	r24, 0x0C	; 12
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	9e 87       	std	Y+14, r25	; 0x0e
     4a0:	8d 87       	std	Y+13, r24	; 0x0d
				state = 18;
				counterRef = counter;
			}
			if(state == 18 && counter - counterRef > pWait){
     4a2:	ed 85       	ldd	r30, Y+13	; 0x0d
     4a4:	fe 85       	ldd	r31, Y+14	; 0x0e
     4a6:	72 97       	sbiw	r30, 0x12	; 18
     4a8:	69 f4       	brne	.+26     	; 0x4c4 <main+0x3d6>
     4aa:	c8 01       	movw	r24, r16
     4ac:	8e 19       	sub	r24, r14
     4ae:	9f 09       	sbc	r25, r15
     4b0:	85 36       	cpi	r24, 0x65	; 101
     4b2:	91 05       	cpc	r25, r1
     4b4:	0c f4       	brge	.+2      	; 0x4b8 <main+0x3ca>
     4b6:	57 c0       	rjmp	.+174    	; 0x566 <main+0x478>
     4b8:	78 01       	movw	r14, r16
     4ba:	08 c0       	rjmp	.+16     	; 0x4cc <main+0x3de>
     4bc:	8d e0       	ldi	r24, 0x0D	; 13
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	9e 87       	std	Y+14, r25	; 0x0e
     4c2:	8d 87       	std	Y+13, r24	; 0x0d
				state = 19;
				counterRef = counter;
			}
			if(state == 19 && counter - counterRef > totallength2*m2HalfPlate /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush2 == 0*/){
     4c4:	ed 85       	ldd	r30, Y+13	; 0x0d
     4c6:	fe 85       	ldd	r31, Y+14	; 0x0e
     4c8:	73 97       	sbiw	r30, 0x13	; 19
     4ca:	69 f4       	brne	.+26     	; 0x4e6 <main+0x3f8>
     4cc:	c8 01       	movw	r24, r16
     4ce:	8e 19       	sub	r24, r14
     4d0:	9f 09       	sbc	r25, r15
     4d2:	81 5a       	subi	r24, 0xA1	; 161
     4d4:	9f 40       	sbci	r25, 0x0F	; 15
     4d6:	0c f4       	brge	.+2      	; 0x4da <main+0x3ec>
     4d8:	57 c0       	rjmp	.+174    	; 0x588 <main+0x49a>
     4da:	78 01       	movw	r14, r16
     4dc:	08 c0       	rjmp	.+16     	; 0x4ee <main+0x400>
     4de:	8e e0       	ldi	r24, 0x0E	; 14
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	9e 87       	std	Y+14, r25	; 0x0e
     4e4:	8d 87       	std	Y+13, r24	; 0x0d
				state = 20;
				counterRef = counter;
			}
			if(state == 20 && counter - counterRef > pWait){
     4e6:	ed 85       	ldd	r30, Y+13	; 0x0d
     4e8:	fe 85       	ldd	r31, Y+14	; 0x0e
     4ea:	74 97       	sbiw	r30, 0x14	; 20
     4ec:	69 f4       	brne	.+26     	; 0x508 <main+0x41a>
     4ee:	c8 01       	movw	r24, r16
     4f0:	8e 19       	sub	r24, r14
     4f2:	9f 09       	sbc	r25, r15
     4f4:	85 36       	cpi	r24, 0x65	; 101
     4f6:	91 05       	cpc	r25, r1
     4f8:	0c f4       	brge	.+2      	; 0x4fc <main+0x40e>
     4fa:	55 c0       	rjmp	.+170    	; 0x5a6 <main+0x4b8>
     4fc:	78 01       	movw	r14, r16
     4fe:	08 c0       	rjmp	.+16     	; 0x510 <main+0x422>
     500:	8f e0       	ldi	r24, 0x0F	; 15
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	9e 87       	std	Y+14, r25	; 0x0e
     506:	8d 87       	std	Y+13, r24	; 0x0d
				state = 21;
				counterRef = counter;
			}
			if(state == 21 && counter - counterRef > totallength2*m2HalfPlate){
     508:	ed 85       	ldd	r30, Y+13	; 0x0d
     50a:	fe 85       	ldd	r31, Y+14	; 0x0e
     50c:	75 97       	sbiw	r30, 0x15	; 21
     50e:	69 f4       	brne	.+26     	; 0x52a <main+0x43c>
     510:	c8 01       	movw	r24, r16
     512:	8e 19       	sub	r24, r14
     514:	9f 09       	sbc	r25, r15
     516:	81 5a       	subi	r24, 0xA1	; 161
     518:	9f 40       	sbci	r25, 0x0F	; 15
     51a:	0c f4       	brge	.+2      	; 0x51e <main+0x430>
     51c:	55 c0       	rjmp	.+170    	; 0x5c8 <main+0x4da>
     51e:	78 01       	movw	r14, r16
     520:	08 c0       	rjmp	.+16     	; 0x532 <main+0x444>
     522:	80 e1       	ldi	r24, 0x10	; 16
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	9e 87       	std	Y+14, r25	; 0x0e
     528:	8d 87       	std	Y+13, r24	; 0x0d
				state = 22;
				counterRef = counter;
			}
			if(state == 22 && counter - counterRef > pWait){
     52a:	ed 85       	ldd	r30, Y+13	; 0x0d
     52c:	fe 85       	ldd	r31, Y+14	; 0x0e
     52e:	76 97       	sbiw	r30, 0x16	; 22
     530:	69 f4       	brne	.+26     	; 0x54c <main+0x45e>
     532:	c8 01       	movw	r24, r16
     534:	8e 19       	sub	r24, r14
     536:	9f 09       	sbc	r25, r15
     538:	85 36       	cpi	r24, 0x65	; 101
     53a:	91 05       	cpc	r25, r1
     53c:	0c f4       	brge	.+2      	; 0x540 <main+0x452>
     53e:	55 c0       	rjmp	.+170    	; 0x5ea <main+0x4fc>
     540:	78 01       	movw	r14, r16
     542:	08 c0       	rjmp	.+16     	; 0x554 <main+0x466>
     544:	81 e1       	ldi	r24, 0x11	; 17
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	9e 87       	std	Y+14, r25	; 0x0e
     54a:	8d 87       	std	Y+13, r24	; 0x0d
				state = 23;
				counterRef = counter;
			}
			if(state == 23 && counter - counterRef > totallength2*m2Dry1Step /*&& u_inputByte0.bits_in_inputByte0.fixtureDry1 == 0*/){
     54c:	ed 85       	ldd	r30, Y+13	; 0x0d
     54e:	fe 85       	ldd	r31, Y+14	; 0x0e
     550:	77 97       	sbiw	r30, 0x17	; 23
     552:	69 f4       	brne	.+26     	; 0x56e <main+0x480>
     554:	c8 01       	movw	r24, r16
     556:	8e 19       	sub	r24, r14
     558:	9f 09       	sbc	r25, r15
     55a:	81 5a       	subi	r24, 0xA1	; 161
     55c:	9f 40       	sbci	r25, 0x0F	; 15
     55e:	0c f4       	brge	.+2      	; 0x562 <main+0x474>
     560:	55 c0       	rjmp	.+170    	; 0x60c <main+0x51e>
     562:	78 01       	movw	r14, r16
     564:	08 c0       	rjmp	.+16     	; 0x576 <main+0x488>
     566:	82 e1       	ldi	r24, 0x12	; 18
     568:	90 e0       	ldi	r25, 0x00	; 0
     56a:	9e 87       	std	Y+14, r25	; 0x0e
     56c:	8d 87       	std	Y+13, r24	; 0x0d
				state = 24;
				counterRef = counter;
			}
			if(state == 24 && counter - counterRef > kWait){
     56e:	ed 85       	ldd	r30, Y+13	; 0x0d
     570:	fe 85       	ldd	r31, Y+14	; 0x0e
     572:	78 97       	sbiw	r30, 0x18	; 24
     574:	69 f4       	brne	.+26     	; 0x590 <main+0x4a2>
     576:	c8 01       	movw	r24, r16
     578:	8e 19       	sub	r24, r14
     57a:	9f 09       	sbc	r25, r15
     57c:	85 36       	cpi	r24, 0x65	; 101
     57e:	91 05       	cpc	r25, r1
     580:	0c f4       	brge	.+2      	; 0x584 <main+0x496>
     582:	53 c0       	rjmp	.+166    	; 0x62a <main+0x53c>
     584:	78 01       	movw	r14, r16
     586:	08 c0       	rjmp	.+16     	; 0x598 <main+0x4aa>
     588:	83 e1       	ldi	r24, 0x13	; 19
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	9e 87       	std	Y+14, r25	; 0x0e
     58e:	8d 87       	std	Y+13, r24	; 0x0d
				state = 25;
				counterRef = counter;
			}
			if(state == 25 && counter - counterRef > totallength2*m2WholePlate){
     590:	ed 85       	ldd	r30, Y+13	; 0x0d
     592:	fe 85       	ldd	r31, Y+14	; 0x0e
     594:	79 97       	sbiw	r30, 0x19	; 25
     596:	59 f4       	brne	.+22     	; 0x5ae <main+0x4c0>
     598:	c8 01       	movw	r24, r16
     59a:	8e 19       	sub	r24, r14
     59c:	9f 09       	sbc	r25, r15
     59e:	81 5a       	subi	r24, 0xA1	; 161
     5a0:	9f 40       	sbci	r25, 0x0F	; 15
     5a2:	4c f4       	brge	.+18     	; 0x5b6 <main+0x4c8>
     5a4:	53 c0       	rjmp	.+166    	; 0x64c <main+0x55e>
     5a6:	84 e1       	ldi	r24, 0x14	; 20
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	9e 87       	std	Y+14, r25	; 0x0e
     5ac:	8d 87       	std	Y+13, r24	; 0x0d
				state = 26;
				counterRef26 = counter;
			}
			if(state == 26 && counter - counterRef > totallength2*m2Dry2Step /*&& u_inputByte0.bits_in_inputByte0.fixtureDry2 == 0*/){
     5ae:	ed 85       	ldd	r30, Y+13	; 0x0d
     5b0:	fe 85       	ldd	r31, Y+14	; 0x0e
     5b2:	7a 97       	sbiw	r30, 0x1a	; 26
     5b4:	69 f4       	brne	.+26     	; 0x5d0 <main+0x4e2>
     5b6:	c8 01       	movw	r24, r16
     5b8:	8e 19       	sub	r24, r14
     5ba:	9f 09       	sbc	r25, r15
     5bc:	81 5a       	subi	r24, 0xA1	; 161
     5be:	9f 40       	sbci	r25, 0x0F	; 15
     5c0:	0c f4       	brge	.+2      	; 0x5c4 <main+0x4d6>
     5c2:	55 c0       	rjmp	.+170    	; 0x66e <main+0x580>
     5c4:	28 01       	movw	r4, r16
     5c6:	08 c0       	rjmp	.+16     	; 0x5d8 <main+0x4ea>
     5c8:	85 e1       	ldi	r24, 0x15	; 21
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	9e 87       	std	Y+14, r25	; 0x0e
     5ce:	8d 87       	std	Y+13, r24	; 0x0d
				state = 27;
				counterRefFive = counter;
			}
			if(state == 27 && counter - counterRefFive > mWait){
     5d0:	ed 85       	ldd	r30, Y+13	; 0x0d
     5d2:	fe 85       	ldd	r31, Y+14	; 0x0e
     5d4:	7b 97       	sbiw	r30, 0x1b	; 27
     5d6:	69 f4       	brne	.+26     	; 0x5f2 <main+0x504>
     5d8:	c8 01       	movw	r24, r16
     5da:	84 19       	sub	r24, r4
     5dc:	95 09       	sbc	r25, r5
     5de:	85 36       	cpi	r24, 0x65	; 101
     5e0:	91 05       	cpc	r25, r1
     5e2:	0c f4       	brge	.+2      	; 0x5e6 <main+0x4f8>
     5e4:	55 c0       	rjmp	.+170    	; 0x690 <main+0x5a2>
     5e6:	78 01       	movw	r14, r16
     5e8:	08 c0       	rjmp	.+16     	; 0x5fa <main+0x50c>
     5ea:	86 e1       	ldi	r24, 0x16	; 22
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	9e 87       	std	Y+14, r25	; 0x0e
     5f0:	8d 87       	std	Y+13, r24	; 0x0d
				state = 28;
				counterRef = counter;
			}
			if(state == 28 && counter - counterRef > pWait){
     5f2:	ed 85       	ldd	r30, Y+13	; 0x0d
     5f4:	fe 85       	ldd	r31, Y+14	; 0x0e
     5f6:	7c 97       	sbiw	r30, 0x1c	; 28
     5f8:	69 f4       	brne	.+26     	; 0x614 <main+0x526>
     5fa:	c8 01       	movw	r24, r16
     5fc:	8e 19       	sub	r24, r14
     5fe:	9f 09       	sbc	r25, r15
     600:	85 36       	cpi	r24, 0x65	; 101
     602:	91 05       	cpc	r25, r1
     604:	0c f4       	brge	.+2      	; 0x608 <main+0x51a>
     606:	55 c0       	rjmp	.+170    	; 0x6b2 <main+0x5c4>
     608:	78 01       	movw	r14, r16
     60a:	08 c0       	rjmp	.+16     	; 0x61c <main+0x52e>
     60c:	87 e1       	ldi	r24, 0x17	; 23
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	9e 87       	std	Y+14, r25	; 0x0e
     612:	8d 87       	std	Y+13, r24	; 0x0d
				state = 29;
				counterRef = counter;
			}
			if(state == 29 && counter - counterRef > totallength2*m2WholePlate){
     614:	ed 85       	ldd	r30, Y+13	; 0x0d
     616:	fe 85       	ldd	r31, Y+14	; 0x0e
     618:	7d 97       	sbiw	r30, 0x1d	; 29
     61a:	59 f4       	brne	.+22     	; 0x632 <main+0x544>
     61c:	c8 01       	movw	r24, r16
     61e:	8e 19       	sub	r24, r14
     620:	9f 09       	sbc	r25, r15
     622:	81 5a       	subi	r24, 0xA1	; 161
     624:	9f 40       	sbci	r25, 0x0F	; 15
     626:	4c f4       	brge	.+18     	; 0x63a <main+0x54c>
     628:	55 c0       	rjmp	.+170    	; 0x6d4 <main+0x5e6>
     62a:	88 e1       	ldi	r24, 0x18	; 24
     62c:	90 e0       	ldi	r25, 0x00	; 0
     62e:	9e 87       	std	Y+14, r25	; 0x0e
     630:	8d 87       	std	Y+13, r24	; 0x0d
				state = 30;
				counterRef30 = counter;
			}
			if(state == 30 && counter - counterRef > totallength2*m2LoadBack /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
     632:	ed 85       	ldd	r30, Y+13	; 0x0d
     634:	fe 85       	ldd	r31, Y+14	; 0x0e
     636:	7e 97       	sbiw	r30, 0x1e	; 30
     638:	69 f4       	brne	.+26     	; 0x654 <main+0x566>
     63a:	c8 01       	movw	r24, r16
     63c:	8e 19       	sub	r24, r14
     63e:	9f 09       	sbc	r25, r15
     640:	81 5a       	subi	r24, 0xA1	; 161
     642:	9f 40       	sbci	r25, 0x0F	; 15
     644:	0c f4       	brge	.+2      	; 0x648 <main+0x55a>
     646:	57 c0       	rjmp	.+174    	; 0x6f6 <main+0x608>
     648:	78 01       	movw	r14, r16
     64a:	08 c0       	rjmp	.+16     	; 0x65c <main+0x56e>
     64c:	89 e1       	ldi	r24, 0x19	; 25
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	9e 87       	std	Y+14, r25	; 0x0e
     652:	8d 87       	std	Y+13, r24	; 0x0d
				state = 31;
				counterRef = counter;
			}
			if(state == 31 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
     654:	ed 85       	ldd	r30, Y+13	; 0x0d
     656:	fe 85       	ldd	r31, Y+14	; 0x0e
     658:	7f 97       	sbiw	r30, 0x1f	; 31
     65a:	69 f4       	brne	.+26     	; 0x676 <main+0x588>
     65c:	c8 01       	movw	r24, r16
     65e:	8e 19       	sub	r24, r14
     660:	9f 09       	sbc	r25, r15
     662:	89 5e       	subi	r24, 0xE9	; 233
     664:	93 40       	sbci	r25, 0x03	; 3
     666:	0c f4       	brge	.+2      	; 0x66a <main+0x57c>
     668:	74 c0       	rjmp	.+232    	; 0x752 <main+0x664>
     66a:	78 01       	movw	r14, r16
     66c:	08 c0       	rjmp	.+16     	; 0x67e <main+0x590>
     66e:	8a e1       	ldi	r24, 0x1A	; 26
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	9e 87       	std	Y+14, r25	; 0x0e
     674:	8d 87       	std	Y+13, r24	; 0x0d
				state = 32;
				counterRef = counter;
			}
			if(state == 32 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureHome == 0*/){
     676:	ed 85       	ldd	r30, Y+13	; 0x0d
     678:	fe 85       	ldd	r31, Y+14	; 0x0e
     67a:	b0 97       	sbiw	r30, 0x20	; 32
     67c:	69 f4       	brne	.+26     	; 0x698 <main+0x5aa>
     67e:	c8 01       	movw	r24, r16
     680:	8e 19       	sub	r24, r14
     682:	9f 09       	sbc	r25, r15
     684:	81 5a       	subi	r24, 0xA1	; 161
     686:	9f 40       	sbci	r25, 0x0F	; 15
     688:	0c f4       	brge	.+2      	; 0x68c <main+0x59e>
     68a:	8e c0       	rjmp	.+284    	; 0x7a8 <main+0x6ba>
     68c:	78 01       	movw	r14, r16
     68e:	08 c0       	rjmp	.+16     	; 0x6a0 <main+0x5b2>
     690:	8b e1       	ldi	r24, 0x1B	; 27
     692:	90 e0       	ldi	r25, 0x00	; 0
     694:	9e 87       	std	Y+14, r25	; 0x0e
     696:	8d 87       	std	Y+13, r24	; 0x0d
				state = 33;
				counterRef = counter;
			}
			if(state == 33 && counter - counterRef > pWait){
     698:	ed 85       	ldd	r30, Y+13	; 0x0d
     69a:	fe 85       	ldd	r31, Y+14	; 0x0e
     69c:	b1 97       	sbiw	r30, 0x21	; 33
     69e:	69 f4       	brne	.+26     	; 0x6ba <main+0x5cc>
     6a0:	c8 01       	movw	r24, r16
     6a2:	8e 19       	sub	r24, r14
     6a4:	9f 09       	sbc	r25, r15
     6a6:	85 36       	cpi	r24, 0x65	; 101
     6a8:	91 05       	cpc	r25, r1
     6aa:	0c f4       	brge	.+2      	; 0x6ae <main+0x5c0>
     6ac:	94 c0       	rjmp	.+296    	; 0x7d6 <main+0x6e8>
     6ae:	78 01       	movw	r14, r16
     6b0:	08 c0       	rjmp	.+16     	; 0x6c2 <main+0x5d4>
     6b2:	8c e1       	ldi	r24, 0x1C	; 28
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	9e 87       	std	Y+14, r25	; 0x0e
     6b8:	8d 87       	std	Y+13, r24	; 0x0d
				state = 34;
				counterRef = counter;
			}
			if(state == 34 && counter - counterRef > totallength1*m1LoadPlate){
     6ba:	ed 85       	ldd	r30, Y+13	; 0x0d
     6bc:	fe 85       	ldd	r31, Y+14	; 0x0e
     6be:	b2 97       	sbiw	r30, 0x22	; 34
     6c0:	69 f4       	brne	.+26     	; 0x6dc <main+0x5ee>
     6c2:	c8 01       	movw	r24, r16
     6c4:	8e 19       	sub	r24, r14
     6c6:	9f 09       	sbc	r25, r15
     6c8:	81 5a       	subi	r24, 0xA1	; 161
     6ca:	9f 40       	sbci	r25, 0x0F	; 15
     6cc:	0c f4       	brge	.+2      	; 0x6d0 <main+0x5e2>
     6ce:	94 c0       	rjmp	.+296    	; 0x7f8 <main+0x70a>
     6d0:	78 01       	movw	r14, r16
     6d2:	08 c0       	rjmp	.+16     	; 0x6e4 <main+0x5f6>
     6d4:	8d e1       	ldi	r24, 0x1D	; 29
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	9e 87       	std	Y+14, r25	; 0x0e
     6da:	8d 87       	std	Y+13, r24	; 0x0d
				state = 35;
				counterRef = counter;
			}
			if(state == 35 && counter - counterRef > 10){
     6dc:	ed 85       	ldd	r30, Y+13	; 0x0d
     6de:	fe 85       	ldd	r31, Y+14	; 0x0e
     6e0:	b3 97       	sbiw	r30, 0x23	; 35
     6e2:	71 f4       	brne	.+28     	; 0x700 <main+0x612>
     6e4:	c8 01       	movw	r24, r16
     6e6:	8e 19       	sub	r24, r14
     6e8:	9f 09       	sbc	r25, r15
     6ea:	0b 97       	sbiw	r24, 0x0b	; 11
     6ec:	0c f4       	brge	.+2      	; 0x6f0 <main+0x602>
     6ee:	34 c3       	rjmp	.+1640   	; 0xd58 <main+0xc6a>
     6f0:	8f ef       	ldi	r24, 0xFF	; 255
     6f2:	9f ef       	ldi	r25, 0xFF	; 255
     6f4:	30 c0       	rjmp	.+96     	; 0x756 <main+0x668>
     6f6:	ee e1       	ldi	r30, 0x1E	; 30
     6f8:	f0 e0       	ldi	r31, 0x00	; 0
     6fa:	fe 87       	std	Y+14, r31	; 0x0e
     6fc:	ed 87       	std	Y+13, r30	; 0x0d
     6fe:	2d c0       	rjmp	.+90     	; 0x75a <main+0x66c>
			}


			//state actions
						
			if(state == 0){
     700:	8d 85       	ldd	r24, Y+13	; 0x0d
     702:	9e 85       	ldd	r25, Y+14	; 0x0e
     704:	89 2b       	or	r24, r25
     706:	49 f5       	brne	.+82     	; 0x75a <main+0x66c>
				if(u_inputByte0.bits_in_inputByte0.fixtureHome == 1){
     708:	80 91 78 01 	lds	r24, 0x0178
     70c:	20 91 74 01 	lds	r18, 0x0174
     710:	90 91 76 01 	lds	r25, 0x0176
     714:	82 ff       	sbrs	r24, 2
     716:	0a c0       	rjmp	.+20     	; 0x72c <main+0x63e>
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  //********* 0 is used as fixture backward ?cc?, 1 as forward ?c? **********
     718:	2f 7e       	andi	r18, 0xEF	; 239
     71a:	20 93 74 01 	sts	0x0174, r18
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
     71e:	97 7f       	andi	r25, 0xF7	; 247
     720:	90 93 76 01 	sts	0x0176, r25
     724:	61 e0       	ldi	r22, 0x01	; 1
     726:	c6 2e       	mov	r12, r22
     728:	d1 2c       	mov	r13, r1
     72a:	6a c0       	rjmp	.+212    	; 0x800 <main+0x712>
					m2 = 1;
				}
				else{
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
     72c:	2f 7d       	andi	r18, 0xDF	; 223
     72e:	20 93 74 01 	sts	0x0174, r18
					m2 = 0;
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
     732:	9f 7e       	andi	r25, 0xEF	; 239
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
     734:	98 60       	ori	r25, 0x08	; 8
     736:	90 93 76 01 	sts	0x0176, r25
					if(print0 == 1){
     73a:	eb 85       	ldd	r30, Y+11	; 0x0b
     73c:	fc 85       	ldd	r31, Y+12	; 0x0c
     73e:	31 97       	sbiw	r30, 0x01	; 1
     740:	09 f0       	breq	.+2      	; 0x744 <main+0x656>
     742:	0d c3       	rjmp	.+1562   	; 0xd5e <main+0xc70>
						OrangutanLCD::clear();
     744:	0e 94 14 09 	call	0x1228	; 0x1228 <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("PUSH TO START");
     748:	8b e2       	ldi	r24, 0x2B	; 43
     74a:	91 e0       	ldi	r25, 0x01	; 1
     74c:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
     750:	06 c3       	rjmp	.+1548   	; 0xd5e <main+0xc70>
     752:	8f e1       	ldi	r24, 0x1F	; 31
     754:	90 e0       	ldi	r25, 0x00	; 0
     756:	9e 87       	std	Y+14, r25	; 0x0e
     758:	8d 87       	std	Y+13, r24	; 0x0d
						print0 = 0;
					}
				}
			}
			if(state == 1){
     75a:	ed 85       	ldd	r30, Y+13	; 0x0d
     75c:	fe 85       	ldd	r31, Y+14	; 0x0e
     75e:	31 97       	sbiw	r30, 0x01	; 1
     760:	39 f5       	brne	.+78     	; 0x7b0 <main+0x6c2>
				OrangutanLCD::clear();
     762:	0e 94 14 09 	call	0x1228	; 0x1228 <_ZN12OrangutanLCD5clearEv>
				u_outputByte0.bits_in_outputByte0.ACPower = 0;
     766:	20 91 76 01 	lds	r18, 0x0176
     76a:	32 2f       	mov	r19, r18
     76c:	3e 7f       	andi	r19, 0xFE	; 254
				if((counter % 200) < 100){
     76e:	c8 01       	movw	r24, r16
     770:	68 ec       	ldi	r22, 0xC8	; 200
     772:	70 e0       	ldi	r23, 0x00	; 0
     774:	0e 94 c3 0c 	call	0x1986	; 0x1986 <__divmodhi4>
     778:	84 36       	cpi	r24, 0x64	; 100
     77a:	91 05       	cpc	r25, r1
     77c:	24 f4       	brge	.+8      	; 0x786 <main+0x698>
					u_outputByte0.bits_in_outputByte0.blowerPulse = 0;
     77e:	2c 7f       	andi	r18, 0xFC	; 252
     780:	20 93 76 01 	sts	0x0176, r18
     784:	03 c0       	rjmp	.+6      	; 0x78c <main+0x69e>
				}
				else{
					u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
     786:	32 60       	ori	r19, 0x02	; 2
     788:	30 93 76 01 	sts	0x0176, r19
				}
				m1 = 1;
				u_motorByte0.bits_in_motorByte0.m1Dir = 1;  //****** dir1 ******
     78c:	80 91 74 01 	lds	r24, 0x0174
				u_motorByte0.bits_in_motorByte0.m1Drop = 1;
     790:	86 60       	ori	r24, 0x06	; 6
     792:	80 93 74 01 	sts	0x0174, r24
				u_outputByte0.bits_in_outputByte0.plateStop = 0;
     796:	80 91 76 01 	lds	r24, 0x0176
     79a:	8b 7f       	andi	r24, 0xFB	; 251
     79c:	80 93 76 01 	sts	0x0176, r24
     7a0:	51 e0       	ldi	r21, 0x01	; 1
     7a2:	a5 2e       	mov	r10, r21
     7a4:	b1 2c       	mov	r11, r1
     7a6:	2c c0       	rjmp	.+88     	; 0x800 <main+0x712>
     7a8:	80 e2       	ldi	r24, 0x20	; 32
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	9e 87       	std	Y+14, r25	; 0x0e
     7ae:	8d 87       	std	Y+13, r24	; 0x0d
			}
			if(state == 2){
     7b0:	ed 85       	ldd	r30, Y+13	; 0x0d
     7b2:	fe 85       	ldd	r31, Y+14	; 0x0e
     7b4:	32 97       	sbiw	r30, 0x02	; 2
     7b6:	99 f4       	brne	.+38     	; 0x7de <main+0x6f0>
				u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
     7b8:	80 91 76 01 	lds	r24, 0x0176
				u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
				u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
     7bc:	81 7e       	andi	r24, 0xE1	; 225
				u_outputByte0.bits_in_outputByte0.plateStop = 1;
     7be:	86 61       	ori	r24, 0x16	; 22
     7c0:	80 93 76 01 	sts	0x0176, r24
				m1 = 0;
				u_motorByte0.bits_in_motorByte0.m2Drop = 1;
     7c4:	80 91 74 01 	lds	r24, 0x0174
     7c8:	80 62       	ori	r24, 0x20	; 32
				u_motorByte0.bits_in_motorByte0.m1Drop = 0;
     7ca:	8b 7f       	andi	r24, 0xFB	; 251
     7cc:	80 93 74 01 	sts	0x0174, r24
     7d0:	aa 24       	eor	r10, r10
     7d2:	bb 24       	eor	r11, r11
     7d4:	42 c0       	rjmp	.+132    	; 0x85a <main+0x76c>
     7d6:	81 e2       	ldi	r24, 0x21	; 33
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	9e 87       	std	Y+14, r25	; 0x0e
     7dc:	8d 87       	std	Y+13, r24	; 0x0d
			}
			if(state == 3){
     7de:	ed 85       	ldd	r30, Y+13	; 0x0d
     7e0:	fe 85       	ldd	r31, Y+14	; 0x0e
     7e2:	33 97       	sbiw	r30, 0x03	; 3
     7e4:	69 f4       	brne	.+26     	; 0x800 <main+0x712>
				u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ****** dir2 *******
     7e6:	80 91 74 01 	lds	r24, 0x0174
     7ea:	80 61       	ori	r24, 0x10	; 16
     7ec:	80 93 74 01 	sts	0x0174, r24
     7f0:	41 e0       	ldi	r20, 0x01	; 1
     7f2:	c4 2e       	mov	r12, r20
     7f4:	d1 2c       	mov	r13, r1
     7f6:	4d c0       	rjmp	.+154    	; 0x892 <main+0x7a4>
     7f8:	82 e2       	ldi	r24, 0x22	; 34
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	9e 87       	std	Y+14, r25	; 0x0e
     7fe:	8d 87       	std	Y+13, r24	; 0x0d
				m2 = 1;
			}
			if(state == 4){
     800:	ed 85       	ldd	r30, Y+13	; 0x0d
     802:	fe 85       	ldd	r31, Y+14	; 0x0e
     804:	34 97       	sbiw	r30, 0x04	; 4
     806:	69 f4       	brne	.+26     	; 0x822 <main+0x734>
				m2 = 0;
				u_motorByte0.bits_in_motorByte0.m2Drop = 0;
     808:	80 91 74 01 	lds	r24, 0x0174
     80c:	8f 7d       	andi	r24, 0xDF	; 223
     80e:	80 93 74 01 	sts	0x0174, r24
				u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
     812:	80 91 76 01 	lds	r24, 0x0176
     816:	88 60       	ori	r24, 0x08	; 8
     818:	80 93 76 01 	sts	0x0176, r24
     81c:	cc 24       	eor	r12, r12
     81e:	dd 24       	eor	r13, r13
     820:	46 c0       	rjmp	.+140    	; 0x8ae <main+0x7c0>
			}
			if(state == 5){
     822:	8d 85       	ldd	r24, Y+13	; 0x0d
     824:	9e 85       	ldd	r25, Y+14	; 0x0e
     826:	05 97       	sbiw	r24, 0x05	; 5
     828:	59 f4       	brne	.+22     	; 0x840 <main+0x752>
				u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
     82a:	80 91 76 01 	lds	r24, 0x0176
     82e:	8f 7e       	andi	r24, 0xEF	; 239
     830:	80 93 76 01 	sts	0x0176, r24
				u_motorByte0.bits_in_motorByte0.m2Drop = 1;
     834:	80 91 74 01 	lds	r24, 0x0174
     838:	80 62       	ori	r24, 0x20	; 32
     83a:	80 93 74 01 	sts	0x0174, r24
     83e:	44 c0       	rjmp	.+136    	; 0x8c8 <main+0x7da>
			}
			//*********************************************
			if(state == 6){
     840:	ed 85       	ldd	r30, Y+13	; 0x0d
     842:	fe 85       	ldd	r31, Y+14	; 0x0e
     844:	36 97       	sbiw	r30, 0x06	; 6
     846:	49 f4       	brne	.+18     	; 0x85a <main+0x76c>
				u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
     848:	80 91 74 01 	lds	r24, 0x0174
     84c:	80 61       	ori	r24, 0x10	; 16
     84e:	80 93 74 01 	sts	0x0174, r24
     852:	31 e0       	ldi	r19, 0x01	; 1
     854:	c3 2e       	mov	r12, r19
     856:	d1 2c       	mov	r13, r1
     858:	46 c0       	rjmp	.+140    	; 0x8e6 <main+0x7f8>
				m2 = 1;
			}
			if(state == 7){
     85a:	8d 85       	ldd	r24, Y+13	; 0x0d
     85c:	9e 85       	ldd	r25, Y+14	; 0x0e
     85e:	07 97       	sbiw	r24, 0x07	; 7
     860:	c1 f4       	brne	.+48     	; 0x892 <main+0x7a4>
				m2 = 0;
				u_motorByte1.bits_in_motorByte1.m3Drop = 1;
     862:	80 91 75 01 	lds	r24, 0x0175
     866:	81 60       	ori	r24, 0x01	; 1
     868:	80 93 75 01 	sts	0x0175, r24
				u_motorByte0.bits_in_motorByte0.m3Dir = 0;  // ******* dir3 *******
     86c:	80 91 74 01 	lds	r24, 0x0174
     870:	8f 77       	andi	r24, 0x7F	; 127
     872:	80 93 74 01 	sts	0x0174, r24
				if(print6 == 1){
     876:	e9 85       	ldd	r30, Y+9	; 0x09
     878:	fa 85       	ldd	r31, Y+10	; 0x0a
     87a:	31 97       	sbiw	r30, 0x01	; 1
     87c:	09 f0       	breq	.+2      	; 0x880 <main+0x792>
     87e:	74 c2       	rjmp	.+1256   	; 0xd68 <main+0xc7a>
					OrangutanLCD::clear();
     880:	0e 94 14 09 	call	0x1228	; 0x1228 <_ZN12OrangutanLCD5clearEv>
					OrangutanLCD::print("Clean 1");
     884:	89 e3       	ldi	r24, 0x39	; 57
     886:	91 e0       	ldi	r25, 0x01	; 1
     888:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
     88c:	1a 86       	std	Y+10, r1	; 0x0a
     88e:	19 86       	std	Y+9, r1	; 0x09
     890:	6b c2       	rjmp	.+1238   	; 0xd68 <main+0xc7a>
					print6 = 0;
				}
			}
			if(state == 8){
     892:	8d 85       	ldd	r24, Y+13	; 0x0d
     894:	9e 85       	ldd	r25, Y+14	; 0x0e
     896:	08 97       	sbiw	r24, 0x08	; 8
     898:	51 f4       	brne	.+20     	; 0x8ae <main+0x7c0>
				m3 = 1;
				u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
     89a:	80 91 76 01 	lds	r24, 0x0176
     89e:	80 64       	ori	r24, 0x40	; 64
				u_outputByte0.bits_in_outputByte0.brush1Raise = 0;
     8a0:	8f 7d       	andi	r24, 0xDF	; 223
     8a2:	80 93 76 01 	sts	0x0176, r24
     8a6:	21 e0       	ldi	r18, 0x01	; 1
     8a8:	62 2e       	mov	r6, r18
     8aa:	71 2c       	mov	r7, r1
     8ac:	1c c0       	rjmp	.+56     	; 0x8e6 <main+0x7f8>
			}
			if(state == 9){
     8ae:	ed 85       	ldd	r30, Y+13	; 0x0d
     8b0:	fe 85       	ldd	r31, Y+14	; 0x0e
     8b2:	39 97       	sbiw	r30, 0x09	; 9
     8b4:	49 f4       	brne	.+18     	; 0x8c8 <main+0x7da>
				m2 = 1;
				u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
     8b6:	80 91 74 01 	lds	r24, 0x0174
     8ba:	8f 7e       	andi	r24, 0xEF	; 239
     8bc:	80 93 74 01 	sts	0x0174, r24
     8c0:	91 e0       	ldi	r25, 0x01	; 1
     8c2:	c9 2e       	mov	r12, r25
     8c4:	d1 2c       	mov	r13, r1
     8c6:	36 c0       	rjmp	.+108    	; 0x934 <main+0x846>
			}
			if(state == 10){
     8c8:	8d 85       	ldd	r24, Y+13	; 0x0d
     8ca:	9e 85       	ldd	r25, Y+14	; 0x0e
     8cc:	0a 97       	sbiw	r24, 0x0a	; 10
     8ce:	59 f4       	brne	.+22     	; 0x8e6 <main+0x7f8>
				m2 = 0;
				m3 = 0;
				u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
     8d0:	80 91 76 01 	lds	r24, 0x0176
     8d4:	8f 7b       	andi	r24, 0xBF	; 191
				u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
     8d6:	80 62       	ori	r24, 0x20	; 32
     8d8:	80 93 76 01 	sts	0x0176, r24
     8dc:	66 24       	eor	r6, r6
     8de:	77 24       	eor	r7, r7
     8e0:	cc 24       	eor	r12, r12
     8e2:	dd 24       	eor	r13, r13
     8e4:	39 c0       	rjmp	.+114    	; 0x958 <main+0x86a>
			}
			if(state == 11){
     8e6:	ed 85       	ldd	r30, Y+13	; 0x0d
     8e8:	fe 85       	ldd	r31, Y+14	; 0x0e
     8ea:	3b 97       	sbiw	r30, 0x0b	; 11
     8ec:	49 f4       	brne	.+18     	; 0x900 <main+0x812>
				u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
     8ee:	80 91 74 01 	lds	r24, 0x0174
     8f2:	80 61       	ori	r24, 0x10	; 16
     8f4:	80 93 74 01 	sts	0x0174, r24
     8f8:	81 e0       	ldi	r24, 0x01	; 1
     8fa:	c8 2e       	mov	r12, r24
     8fc:	d1 2c       	mov	r13, r1
     8fe:	44 c0       	rjmp	.+136    	; 0x988 <main+0x89a>
				m2 = 1;
			}
			if(state == 12){
     900:	8d 85       	ldd	r24, Y+13	; 0x0d
     902:	9e 85       	ldd	r25, Y+14	; 0x0e
     904:	0c 97       	sbiw	r24, 0x0c	; 12
     906:	89 f4       	brne	.+34     	; 0x92a <main+0x83c>
				m2 = 0;
				u_motorByte0.bits_in_motorByte0.m3Dir = 0;  // ******* dir3 *******
     908:	80 91 74 01 	lds	r24, 0x0174
     90c:	8f 77       	andi	r24, 0x7F	; 127
     90e:	80 93 74 01 	sts	0x0174, r24
				m3 = 1;
				u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
     912:	80 91 76 01 	lds	r24, 0x0176
     916:	80 64       	ori	r24, 0x40	; 64
				u_outputByte0.bits_in_outputByte0.brush1Raise = 0;
     918:	8f 7d       	andi	r24, 0xDF	; 223
     91a:	80 93 76 01 	sts	0x0176, r24
     91e:	cc 24       	eor	r12, r12
     920:	dd 24       	eor	r13, r13
     922:	b1 e0       	ldi	r27, 0x01	; 1
     924:	6b 2e       	mov	r6, r27
     926:	71 2c       	mov	r7, r1
     928:	41 c0       	rjmp	.+130    	; 0x9ac <main+0x8be>
			}
			if(state == 13){
     92a:	ed 85       	ldd	r30, Y+13	; 0x0d
     92c:	fe 85       	ldd	r31, Y+14	; 0x0e
     92e:	3d 97       	sbiw	r30, 0x0d	; 13
     930:	09 f4       	brne	.+2      	; 0x934 <main+0x846>
     932:	49 c0       	rjmp	.+146    	; 0x9c6 <main+0x8d8>
				m2 = 1;
			}
			if(state == 14){
     934:	8d 85       	ldd	r24, Y+13	; 0x0d
     936:	9e 85       	ldd	r25, Y+14	; 0x0e
     938:	0e 97       	sbiw	r24, 0x0e	; 14
     93a:	71 f4       	brne	.+28     	; 0x958 <main+0x86a>
				m3 = 0;
				u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
     93c:	80 91 76 01 	lds	r24, 0x0176
     940:	8f 7b       	andi	r24, 0xBF	; 191
				u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
     942:	80 62       	ori	r24, 0x20	; 32
     944:	80 93 76 01 	sts	0x0176, r24
				u_motorByte1.bits_in_motorByte1.m3Drop = 0;
     948:	80 91 75 01 	lds	r24, 0x0175
     94c:	8e 7f       	andi	r24, 0xFE	; 254
     94e:	80 93 75 01 	sts	0x0175, r24
     952:	66 24       	eor	r6, r6
     954:	77 24       	eor	r7, r7
     956:	4d c0       	rjmp	.+154    	; 0x9f2 <main+0x904>
			}
			//*************************** may need to reverse order depending on dry station 1 positioning ***************************
			if(state == 15){
     958:	ed 85       	ldd	r30, Y+13	; 0x0d
     95a:	fe 85       	ldd	r31, Y+14	; 0x0e
     95c:	3f 97       	sbiw	r30, 0x0f	; 15
     95e:	a1 f4       	brne	.+40     	; 0x988 <main+0x89a>
				m2 = 0;
				u_motorByte1.bits_in_motorByte1.m4Drop = 1;
     960:	80 91 75 01 	lds	r24, 0x0175
     964:	88 60       	ori	r24, 0x08	; 8
				u_motorByte1.bits_in_motorByte1.m4Dir = 0;  // ******* dir4 *******
     966:	8b 7f       	andi	r24, 0xFB	; 251
     968:	80 93 75 01 	sts	0x0175, r24
				if(print15 == 1){
     96c:	8f 81       	ldd	r24, Y+7	; 0x07
     96e:	98 85       	ldd	r25, Y+8	; 0x08
     970:	01 97       	sbiw	r24, 0x01	; 1
     972:	09 f0       	breq	.+2      	; 0x976 <main+0x888>
     974:	fc c1       	rjmp	.+1016   	; 0xd6e <main+0xc80>
					OrangutanLCD::clear();
     976:	0e 94 14 09 	call	0x1228	; 0x1228 <_ZN12OrangutanLCD5clearEv>
					OrangutanLCD::print("Clean 2");
     97a:	81 e4       	ldi	r24, 0x41	; 65
     97c:	91 e0       	ldi	r25, 0x01	; 1
     97e:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
     982:	18 86       	std	Y+8, r1	; 0x08
     984:	1f 82       	std	Y+7, r1	; 0x07
     986:	f3 c1       	rjmp	.+998    	; 0xd6e <main+0xc80>
					print15 = 0;
				}
			}
			if(state == 16){
     988:	ed 85       	ldd	r30, Y+13	; 0x0d
     98a:	fe 85       	ldd	r31, Y+14	; 0x0e
     98c:	70 97       	sbiw	r30, 0x10	; 16
     98e:	71 f4       	brne	.+28     	; 0x9ac <main+0x8be>
				m4 = 1;
				u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
     990:	80 91 77 01 	lds	r24, 0x0177
     994:	81 60       	ori	r24, 0x01	; 1
     996:	80 93 77 01 	sts	0x0177, r24
				u_outputByte0.bits_in_outputByte0.brush2Raise = 0;
     99a:	80 91 76 01 	lds	r24, 0x0176
     99e:	8f 77       	andi	r24, 0x7F	; 127
     9a0:	80 93 76 01 	sts	0x0176, r24
     9a4:	a1 e0       	ldi	r26, 0x01	; 1
     9a6:	8a 2e       	mov	r8, r26
     9a8:	91 2c       	mov	r9, r1
     9aa:	23 c0       	rjmp	.+70     	; 0x9f2 <main+0x904>
			}
			if(state == 17){
     9ac:	8d 85       	ldd	r24, Y+13	; 0x0d
     9ae:	9e 85       	ldd	r25, Y+14	; 0x0e
     9b0:	41 97       	sbiw	r24, 0x11	; 17
     9b2:	61 f4       	brne	.+24     	; 0x9cc <main+0x8de>
				m2 = 1;
				u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
     9b4:	80 91 74 01 	lds	r24, 0x0174
     9b8:	8f 7e       	andi	r24, 0xEF	; 239
     9ba:	80 93 74 01 	sts	0x0174, r24
     9be:	f1 e0       	ldi	r31, 0x01	; 1
     9c0:	cf 2e       	mov	r12, r31
     9c2:	d1 2c       	mov	r13, r1
     9c4:	41 c0       	rjmp	.+130    	; 0xa48 <main+0x95a>
     9c6:	e1 e0       	ldi	r30, 0x01	; 1
     9c8:	ce 2e       	mov	r12, r30
     9ca:	d1 2c       	mov	r13, r1
			}
			if(state == 18){
     9cc:	ed 85       	ldd	r30, Y+13	; 0x0d
     9ce:	fe 85       	ldd	r31, Y+14	; 0x0e
     9d0:	72 97       	sbiw	r30, 0x12	; 18
     9d2:	79 f4       	brne	.+30     	; 0x9f2 <main+0x904>
				m2 = 0;
				m4 = 0;
				u_outputByte1.bits_in_outputByte1.brush2Lower = 0;
     9d4:	80 91 77 01 	lds	r24, 0x0177
     9d8:	8e 7f       	andi	r24, 0xFE	; 254
     9da:	80 93 77 01 	sts	0x0177, r24
				u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
     9de:	80 91 76 01 	lds	r24, 0x0176
     9e2:	80 68       	ori	r24, 0x80	; 128
     9e4:	80 93 76 01 	sts	0x0176, r24
     9e8:	cc 24       	eor	r12, r12
     9ea:	dd 24       	eor	r13, r13
     9ec:	88 24       	eor	r8, r8
     9ee:	99 24       	eor	r9, r9
     9f0:	43 c0       	rjmp	.+134    	; 0xa78 <main+0x98a>
			}
			if(state == 19){
     9f2:	8d 85       	ldd	r24, Y+13	; 0x0d
     9f4:	9e 85       	ldd	r25, Y+14	; 0x0e
     9f6:	43 97       	sbiw	r24, 0x13	; 19
     9f8:	49 f4       	brne	.+18     	; 0xa0c <main+0x91e>
				u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
     9fa:	80 91 74 01 	lds	r24, 0x0174
     9fe:	80 61       	ori	r24, 0x10	; 16
     a00:	80 93 74 01 	sts	0x0174, r24
     a04:	71 e0       	ldi	r23, 0x01	; 1
     a06:	c7 2e       	mov	r12, r23
     a08:	d1 2c       	mov	r13, r1
     a0a:	3e c0       	rjmp	.+124    	; 0xa88 <main+0x99a>
				m2 = 1;
			}
			if(state == 20){
     a0c:	ed 85       	ldd	r30, Y+13	; 0x0d
     a0e:	fe 85       	ldd	r31, Y+14	; 0x0e
     a10:	74 97       	sbiw	r30, 0x14	; 20
     a12:	a9 f4       	brne	.+42     	; 0xa3e <main+0x950>
				m2 = 0;
				u_motorByte1.bits_in_motorByte1.m4Dir = 0;  // ******* dir4 *******
     a14:	80 91 75 01 	lds	r24, 0x0175
     a18:	8b 7f       	andi	r24, 0xFB	; 251
     a1a:	80 93 75 01 	sts	0x0175, r24
				m4 = 1;
				u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
     a1e:	80 91 77 01 	lds	r24, 0x0177
     a22:	81 60       	ori	r24, 0x01	; 1
     a24:	80 93 77 01 	sts	0x0177, r24
				u_outputByte0.bits_in_outputByte0.brush2Raise = 0;
     a28:	80 91 76 01 	lds	r24, 0x0176
     a2c:	8f 77       	andi	r24, 0x7F	; 127
     a2e:	80 93 76 01 	sts	0x0176, r24
     a32:	cc 24       	eor	r12, r12
     a34:	dd 24       	eor	r13, r13
     a36:	61 e0       	ldi	r22, 0x01	; 1
     a38:	86 2e       	mov	r8, r22
     a3a:	91 2c       	mov	r9, r1
     a3c:	3c c0       	rjmp	.+120    	; 0xab6 <main+0x9c8>
			}
			if(state == 21){
     a3e:	8d 85       	ldd	r24, Y+13	; 0x0d
     a40:	9e 85       	ldd	r25, Y+14	; 0x0e
     a42:	45 97       	sbiw	r24, 0x15	; 21
     a44:	09 f4       	brne	.+2      	; 0xa48 <main+0x95a>
     a46:	44 c0       	rjmp	.+136    	; 0xad0 <main+0x9e2>
				m2 = 1;
			}
			if(state == 22){
     a48:	ed 85       	ldd	r30, Y+13	; 0x0d
     a4a:	fe 85       	ldd	r31, Y+14	; 0x0e
     a4c:	76 97       	sbiw	r30, 0x16	; 22
     a4e:	a1 f4       	brne	.+40     	; 0xa78 <main+0x98a>
				m4 = 0;
				m2 = 0;
				u_outputByte1.bits_in_outputByte1.brush2Lower = 0;
     a50:	80 91 77 01 	lds	r24, 0x0177
     a54:	8e 7f       	andi	r24, 0xFE	; 254
     a56:	80 93 77 01 	sts	0x0177, r24
				u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
     a5a:	80 91 76 01 	lds	r24, 0x0176
     a5e:	80 68       	ori	r24, 0x80	; 128
     a60:	80 93 76 01 	sts	0x0176, r24
				u_motorByte1.bits_in_motorByte1.m4Drop = 0;
     a64:	80 91 75 01 	lds	r24, 0x0175
     a68:	87 7f       	andi	r24, 0xF7	; 247
     a6a:	80 93 75 01 	sts	0x0175, r24
     a6e:	cc 24       	eor	r12, r12
     a70:	dd 24       	eor	r13, r13
     a72:	88 24       	eor	r8, r8
     a74:	99 24       	eor	r9, r9
     a76:	39 c0       	rjmp	.+114    	; 0xaea <main+0x9fc>
			}
			//*************************************************
			if(state == 23){
     a78:	8d 85       	ldd	r24, Y+13	; 0x0d
     a7a:	9e 85       	ldd	r25, Y+14	; 0x0e
     a7c:	47 97       	sbiw	r24, 0x17	; 23
     a7e:	21 f4       	brne	.+8      	; 0xa88 <main+0x99a>
				u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
     a80:	80 91 74 01 	lds	r24, 0x0174
     a84:	80 61       	ori	r24, 0x10	; 16
     a86:	1e c0       	rjmp	.+60     	; 0xac4 <main+0x9d6>
				m2 = 1;
			}
			if(state == 24){
     a88:	ed 85       	ldd	r30, Y+13	; 0x0d
     a8a:	fe 85       	ldd	r31, Y+14	; 0x0e
     a8c:	78 97       	sbiw	r30, 0x18	; 24
     a8e:	99 f4       	brne	.+38     	; 0xab6 <main+0x9c8>
				m2 = 0;
				u_outputByte1.bits_in_outputByte1.airKnife = 0;
     a90:	80 91 77 01 	lds	r24, 0x0177
     a94:	87 7f       	andi	r24, 0xF7	; 247
     a96:	80 93 77 01 	sts	0x0177, r24
				if(print24 == 1){
     a9a:	8d 81       	ldd	r24, Y+5	; 0x05
     a9c:	9e 81       	ldd	r25, Y+6	; 0x06
     a9e:	01 97       	sbiw	r24, 0x01	; 1
     aa0:	09 f0       	breq	.+2      	; 0xaa4 <main+0x9b6>
     aa2:	68 c1       	rjmp	.+720    	; 0xd74 <main+0xc86>
					OrangutanLCD::clear();
     aa4:	0e 94 14 09 	call	0x1228	; 0x1228 <_ZN12OrangutanLCD5clearEv>
					OrangutanLCD::print("DRY AIR");
     aa8:	89 e4       	ldi	r24, 0x49	; 73
     aaa:	91 e0       	ldi	r25, 0x01	; 1
     aac:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
     ab0:	1e 82       	std	Y+6, r1	; 0x06
     ab2:	1d 82       	std	Y+5, r1	; 0x05
     ab4:	5f c1       	rjmp	.+702    	; 0xd74 <main+0xc86>
					print24 = 0;
				}
			}
			if(state == 25){
     ab6:	ed 85       	ldd	r30, Y+13	; 0x0d
     ab8:	fe 85       	ldd	r31, Y+14	; 0x0e
     aba:	79 97       	sbiw	r30, 0x19	; 25
     abc:	61 f4       	brne	.+24     	; 0xad6 <main+0x9e8>
				u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
     abe:	80 91 74 01 	lds	r24, 0x0174
     ac2:	8f 7e       	andi	r24, 0xEF	; 239
     ac4:	80 93 74 01 	sts	0x0174, r24
     ac8:	51 e0       	ldi	r21, 0x01	; 1
     aca:	c5 2e       	mov	r12, r21
     acc:	d1 2c       	mov	r13, r1
     ace:	1d c0       	rjmp	.+58     	; 0xb0a <main+0xa1c>
     ad0:	41 e0       	ldi	r20, 0x01	; 1
     ad2:	c4 2e       	mov	r12, r20
     ad4:	d1 2c       	mov	r13, r1
				m2 = 1;
			}
			if(state == 26){
     ad6:	8d 85       	ldd	r24, Y+13	; 0x0d
     ad8:	9e 85       	ldd	r25, Y+14	; 0x0e
     ada:	4a 97       	sbiw	r24, 0x1a	; 26
     adc:	31 f4       	brne	.+12     	; 0xaea <main+0x9fc>
				u_outputByte1.bits_in_outputByte1.airKnife = 1;
     ade:	80 91 77 01 	lds	r24, 0x0177
     ae2:	88 60       	ori	r24, 0x08	; 8
     ae4:	80 93 77 01 	sts	0x0177, r24
     ae8:	3b c0       	rjmp	.+118    	; 0xb60 <main+0xa72>
			}
			if(state == 27){
     aea:	ed 85       	ldd	r30, Y+13	; 0x0d
     aec:	fe 85       	ldd	r31, Y+14	; 0x0e
     aee:	7b 97       	sbiw	r30, 0x1b	; 27
     af0:	61 f4       	brne	.+24     	; 0xb0a <main+0xa1c>
				m2 = 0;
				u_motorByte1.bits_in_motorByte1.m5Drop = 1;
     af2:	80 91 75 01 	lds	r24, 0x0175
     af6:	80 64       	ori	r24, 0x40	; 64
				u_motorByte1.bits_in_motorByte1.m5Dir = 0;
     af8:	8f 7d       	andi	r24, 0xDF	; 223
     afa:	80 93 75 01 	sts	0x0175, r24
     afe:	cc 24       	eor	r12, r12
     b00:	dd 24       	eor	r13, r13
     b02:	31 e0       	ldi	r19, 0x01	; 1
     b04:	23 2e       	mov	r2, r19
     b06:	31 2c       	mov	r3, r1
     b08:	34 c0       	rjmp	.+104    	; 0xb72 <main+0xa84>
				m5 = 1;
			}
			if(state == 28){
     b0a:	8d 85       	ldd	r24, Y+13	; 0x0d
     b0c:	9e 85       	ldd	r25, Y+14	; 0x0e
     b0e:	4c 97       	sbiw	r24, 0x1c	; 28
     b10:	91 f4       	brne	.+36     	; 0xb36 <main+0xa48>
				if(print28 == 1){
     b12:	eb 81       	ldd	r30, Y+3	; 0x03
     b14:	fc 81       	ldd	r31, Y+4	; 0x04
     b16:	31 97       	sbiw	r30, 0x01	; 1
     b18:	41 f4       	brne	.+16     	; 0xb2a <main+0xa3c>
					OrangutanLCD::clear();
     b1a:	0e 94 14 09 	call	0x1228	; 0x1228 <_ZN12OrangutanLCD5clearEv>
					OrangutanLCD::print("FINAL DRY");
     b1e:	81 e5       	ldi	r24, 0x51	; 81
     b20:	91 e0       	ldi	r25, 0x01	; 1
     b22:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
     b26:	1c 82       	std	Y+4, r1	; 0x04
     b28:	1b 82       	std	Y+3, r1	; 0x03
					print28 = 0;
				}
				u_outputByte1.bits_in_outputByte1.ptRaise = 0;
     b2a:	80 91 77 01 	lds	r24, 0x0177
     b2e:	8d 7f       	andi	r24, 0xFD	; 253
     b30:	80 93 77 01 	sts	0x0177, r24
     b34:	2b c0       	rjmp	.+86     	; 0xb8c <main+0xa9e>
			}
			if(state == 29){
     b36:	8d 85       	ldd	r24, Y+13	; 0x0d
     b38:	9e 85       	ldd	r25, Y+14	; 0x0e
     b3a:	8d 31       	cpi	r24, 0x1D	; 29
     b3c:	91 05       	cpc	r25, r1
     b3e:	c9 f1       	breq	.+114    	; 0xbb2 <main+0xac4>
				m2 = 1;
			}
			if(state == 30){
     b40:	4e 97       	sbiw	r24, 0x1e	; 30
     b42:	71 f4       	brne	.+28     	; 0xb60 <main+0xa72>
				m5 = 0;
				u_motorByte1.bits_in_motorByte1.m5Drop = 0;
     b44:	80 91 75 01 	lds	r24, 0x0175
     b48:	8f 7b       	andi	r24, 0xBF	; 191
     b4a:	80 93 75 01 	sts	0x0175, r24
				u_outputByte1.bits_in_outputByte1.ptRaise = 1;
     b4e:	80 91 77 01 	lds	r24, 0x0177
     b52:	82 60       	ori	r24, 0x02	; 2
				u_outputByte1.bits_in_outputByte1.ptLower = 0;
     b54:	8b 7f       	andi	r24, 0xFB	; 251
     b56:	80 93 77 01 	sts	0x0177, r24
     b5a:	22 24       	eor	r2, r2
     b5c:	33 24       	eor	r3, r3
     b5e:	39 c0       	rjmp	.+114    	; 0xbd2 <main+0xae4>
			}
			if(state == 31){
     b60:	ed 85       	ldd	r30, Y+13	; 0x0d
     b62:	fe 85       	ldd	r31, Y+14	; 0x0e
     b64:	7f 97       	sbiw	r30, 0x1f	; 31
     b66:	29 f4       	brne	.+10     	; 0xb72 <main+0xa84>
				m2 = 0;
				u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
     b68:	80 91 76 01 	lds	r24, 0x0176
     b6c:	87 7f       	andi	r24, 0xF7	; 247
				u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
     b6e:	80 61       	ori	r24, 0x10	; 16
     b70:	1b c0       	rjmp	.+54     	; 0xba8 <main+0xaba>
			}
			if(state == 32){
     b72:	8d 85       	ldd	r24, Y+13	; 0x0d
     b74:	9e 85       	ldd	r25, Y+14	; 0x0e
     b76:	80 97       	sbiw	r24, 0x20	; 32
     b78:	49 f4       	brne	.+18     	; 0xb8c <main+0xa9e>
				u_motorByte0.bits_in_motorByte0.m2Dir = 0;
     b7a:	80 91 74 01 	lds	r24, 0x0174
     b7e:	8f 7e       	andi	r24, 0xEF	; 239
     b80:	80 93 74 01 	sts	0x0174, r24
     b84:	21 e0       	ldi	r18, 0x01	; 1
     b86:	c2 2e       	mov	r12, r18
     b88:	d1 2c       	mov	r13, r1
     b8a:	3d c0       	rjmp	.+122    	; 0xc06 <main+0xb18>
				m2 = 1;
			}
			if(state == 33){
     b8c:	ed 85       	ldd	r30, Y+13	; 0x0d
     b8e:	fe 85       	ldd	r31, Y+14	; 0x0e
     b90:	b1 97       	sbiw	r30, 0x21	; 33
     b92:	91 f4       	brne	.+36     	; 0xbb8 <main+0xaca>
				m2 = 0;
				u_motorByte0.bits_in_motorByte0.m2Drop = 0;
     b94:	80 91 74 01 	lds	r24, 0x0174
     b98:	8f 7d       	andi	r24, 0xDF	; 223
				u_motorByte0.bits_in_motorByte0.m1Drop = 1;
     b9a:	84 60       	ori	r24, 0x04	; 4
     b9c:	80 93 74 01 	sts	0x0174, r24
				u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
     ba0:	80 91 76 01 	lds	r24, 0x0176
     ba4:	88 60       	ori	r24, 0x08	; 8
				u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
     ba6:	8f 7e       	andi	r24, 0xEF	; 239
     ba8:	80 93 76 01 	sts	0x0176, r24
     bac:	cc 24       	eor	r12, r12
     bae:	dd 24       	eor	r13, r13
     bb0:	2a c0       	rjmp	.+84     	; 0xc06 <main+0xb18>
     bb2:	91 e0       	ldi	r25, 0x01	; 1
     bb4:	c9 2e       	mov	r12, r25
     bb6:	d1 2c       	mov	r13, r1
			}
			if(state == 34){
     bb8:	8d 85       	ldd	r24, Y+13	; 0x0d
     bba:	9e 85       	ldd	r25, Y+14	; 0x0e
     bbc:	82 97       	sbiw	r24, 0x22	; 34
     bbe:	49 f4       	brne	.+18     	; 0xbd2 <main+0xae4>
				u_motorByte0.bits_in_motorByte0.m1Dir = 0;
     bc0:	80 91 74 01 	lds	r24, 0x0174
     bc4:	8d 7f       	andi	r24, 0xFD	; 253
     bc6:	80 93 74 01 	sts	0x0174, r24
     bca:	81 e0       	ldi	r24, 0x01	; 1
     bcc:	a8 2e       	mov	r10, r24
     bce:	b1 2c       	mov	r11, r1
     bd0:	1a c0       	rjmp	.+52     	; 0xc06 <main+0xb18>
				m1 = 1;
			}
			if(state == 35){
     bd2:	ed 85       	ldd	r30, Y+13	; 0x0d
     bd4:	fe 85       	ldd	r31, Y+14	; 0x0e
     bd6:	b3 97       	sbiw	r30, 0x23	; 35
     bd8:	b1 f4       	brne	.+44     	; 0xc06 <main+0xb18>
				m1 = 0;
				u_motorByte0.bits_in_motorByte0.m1Drop = 0;
     bda:	80 91 74 01 	lds	r24, 0x0174
     bde:	8b 7f       	andi	r24, 0xFB	; 251
     be0:	80 93 74 01 	sts	0x0174, r24
				if(print35 == 1){
     be4:	89 81       	ldd	r24, Y+1	; 0x01
     be6:	9a 81       	ldd	r25, Y+2	; 0x02
     be8:	01 97       	sbiw	r24, 0x01	; 1
     bea:	19 f0       	breq	.+6      	; 0xbf2 <main+0xb04>
     bec:	aa 24       	eor	r10, r10
     bee:	bb 24       	eor	r11, r11
     bf0:	0a c0       	rjmp	.+20     	; 0xc06 <main+0xb18>
					OrangutanLCD::clear();
     bf2:	0e 94 14 09 	call	0x1228	; 0x1228 <_ZN12OrangutanLCD5clearEv>
					OrangutanLCD::print("END OF CYCLE");
     bf6:	8b e5       	ldi	r24, 0x5B	; 91
     bf8:	91 e0       	ldi	r25, 0x01	; 1
     bfa:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
     bfe:	aa 24       	eor	r10, r10
     c00:	bb 24       	eor	r11, r11
     c02:	1a 82       	std	Y+2, r1	; 0x02
     c04:	19 82       	std	Y+1, r1	; 0x01





			if( ((counter - counterRef) % (totallength1) ) < (steplength1) && m1)  //check if it is in the right period of the loop to send high
     c06:	c8 01       	movw	r24, r16
     c08:	8e 19       	sub	r24, r14
     c0a:	9f 09       	sbc	r25, r15
     c0c:	62 e0       	ldi	r22, 0x02	; 2
     c0e:	70 e0       	ldi	r23, 0x00	; 0
     c10:	0e 94 c3 0c 	call	0x1986	; 0x1986 <__divmodhi4>
     c14:	9c 01       	movw	r18, r24
     c16:	18 16       	cp	r1, r24
     c18:	19 06       	cpc	r1, r25
     c1a:	4c f0       	brlt	.+18     	; 0xc2e <main+0xb40>
     c1c:	a1 14       	cp	r10, r1
     c1e:	b1 04       	cpc	r11, r1
     c20:	31 f0       	breq	.+12     	; 0xc2e <main+0xb40>
			{
				u_motorByte0.bits_in_motorByte0.m1Step = 1; // set bit 0
     c22:	80 91 74 01 	lds	r24, 0x0174
     c26:	81 60       	ori	r24, 0x01	; 1
     c28:	80 93 74 01 	sts	0x0174, r24
     c2c:	08 c0       	rjmp	.+16     	; 0xc3e <main+0xb50>
			}
			else
			{
				u_motorByte0.bits_in_motorByte0.m1Step = 0; // set bit 0
     c2e:	80 91 74 01 	lds	r24, 0x0174
     c32:	8e 7f       	andi	r24, 0xFE	; 254
     c34:	80 93 74 01 	sts	0x0174, r24
			}

			if( ((counter - counterRef) % (totallength2) ) < (steplength2) && m2)
     c38:	12 16       	cp	r1, r18
     c3a:	13 06       	cpc	r1, r19
     c3c:	4c f0       	brlt	.+18     	; 0xc50 <main+0xb62>
     c3e:	c1 14       	cp	r12, r1
     c40:	d1 04       	cpc	r13, r1
     c42:	31 f0       	breq	.+12     	; 0xc50 <main+0xb62>
			{
				u_motorByte0.bits_in_motorByte0.m2Step = 1; // set bit 1
     c44:	80 91 74 01 	lds	r24, 0x0174
     c48:	88 60       	ori	r24, 0x08	; 8
     c4a:	80 93 74 01 	sts	0x0174, r24
     c4e:	08 c0       	rjmp	.+16     	; 0xc60 <main+0xb72>
			}
			else
			{
				u_motorByte0.bits_in_motorByte0.m2Step = 0; // set bit 1
     c50:	80 91 74 01 	lds	r24, 0x0174
     c54:	87 7f       	andi	r24, 0xF7	; 247
     c56:	80 93 74 01 	sts	0x0174, r24
			}

			if( ((counter - counterRef) % (totallength3) ) < (steplength3) && m3)
     c5a:	12 16       	cp	r1, r18
     c5c:	13 06       	cpc	r1, r19
     c5e:	4c f0       	brlt	.+18     	; 0xc72 <main+0xb84>
     c60:	61 14       	cp	r6, r1
     c62:	71 04       	cpc	r7, r1
     c64:	31 f0       	breq	.+12     	; 0xc72 <main+0xb84>
			{
				u_motorByte0.bits_in_motorByte0.m3Step = 1; // set bit 1
     c66:	80 91 74 01 	lds	r24, 0x0174
     c6a:	80 64       	ori	r24, 0x40	; 64
     c6c:	80 93 74 01 	sts	0x0174, r24
     c70:	08 c0       	rjmp	.+16     	; 0xc82 <main+0xb94>
			}
			else
			{
				u_motorByte0.bits_in_motorByte0.m3Step = 0; // set bit 1
     c72:	80 91 74 01 	lds	r24, 0x0174
     c76:	8f 7b       	andi	r24, 0xBF	; 191
     c78:	80 93 74 01 	sts	0x0174, r24
			}

			if( ((counter - counterRef) % (totallength4) ) < (steplength4) && m4)
     c7c:	12 16       	cp	r1, r18
     c7e:	13 06       	cpc	r1, r19
     c80:	3c f0       	brlt	.+14     	; 0xc90 <main+0xba2>
     c82:	81 14       	cp	r8, r1
     c84:	91 04       	cpc	r9, r1
     c86:	21 f0       	breq	.+8      	; 0xc90 <main+0xba2>
			{
				u_motorByte1.bits_in_motorByte1.m4Step = 1; // set bit 1
     c88:	80 91 75 01 	lds	r24, 0x0175
     c8c:	82 60       	ori	r24, 0x02	; 2
     c8e:	03 c0       	rjmp	.+6      	; 0xc96 <main+0xba8>
			}
			else
			{
				u_motorByte1.bits_in_motorByte1.m4Step = 0; // set bit 1
     c90:	80 91 75 01 	lds	r24, 0x0175
     c94:	8d 7f       	andi	r24, 0xFD	; 253
     c96:	80 93 75 01 	sts	0x0175, r24
			}

			if( ((counter - counterRefFive) % (totallength5) ) < (steplength5) && m5)
     c9a:	c8 01       	movw	r24, r16
     c9c:	84 19       	sub	r24, r4
     c9e:	95 09       	sbc	r25, r5
     ca0:	62 e0       	ldi	r22, 0x02	; 2
     ca2:	70 e0       	ldi	r23, 0x00	; 0
     ca4:	0e 94 c3 0c 	call	0x1986	; 0x1986 <__divmodhi4>
     ca8:	18 16       	cp	r1, r24
     caa:	19 06       	cpc	r1, r25
     cac:	3c f0       	brlt	.+14     	; 0xcbc <main+0xbce>
     cae:	21 14       	cp	r2, r1
     cb0:	31 04       	cpc	r3, r1
     cb2:	21 f0       	breq	.+8      	; 0xcbc <main+0xbce>
			{
				u_motorByte1.bits_in_motorByte1.m5Step = 1; // set bit 1
     cb4:	80 91 75 01 	lds	r24, 0x0175
     cb8:	80 61       	ori	r24, 0x10	; 16
     cba:	03 c0       	rjmp	.+6      	; 0xcc2 <main+0xbd4>
			}
			else
			{
				u_motorByte1.bits_in_motorByte1.m5Step = 0; // set bit 1
     cbc:	80 91 75 01 	lds	r24, 0x0175
     cc0:	8f 7e       	andi	r24, 0xEF	; 239
     cc2:	80 93 75 01 	sts	0x0175, r24
			}

			i2c_start(I2C1+I2C_WRITE);
     cc6:	80 e4       	ldi	r24, 0x40	; 64
     cc8:	0e 94 c9 06 	call	0xd92	; 0xd92 <_Z9i2c_starth>
			i2c_write(0x2);									// write command byte
     ccc:	82 e0       	ldi	r24, 0x02	; 2
     cce:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
			i2c_write(u_motorByte0.motorByte0);                       // write first byte of output
     cd2:	80 91 74 01 	lds	r24, 0x0174
     cd6:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
        	i2c_write(u_motorByte1.motorByte1);                       // write second byte of output
     cda:	80 91 75 01 	lds	r24, 0x0175
     cde:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
        	i2c_stop();                            // set stop conditon = release bus
     ce2:	0e 94 1a 07 	call	0xe34	; 0xe34 <_Z8i2c_stopv>
			
			i2c_start(I2C2+I2C_WRITE);
     ce6:	82 e4       	ldi	r24, 0x42	; 66
     ce8:	0e 94 c9 06 	call	0xd92	; 0xd92 <_Z9i2c_starth>
			i2c_write(0x2);
     cec:	82 e0       	ldi	r24, 0x02	; 2
     cee:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
			i2c_write(u_outputByte0.outputByte0);
     cf2:	80 91 76 01 	lds	r24, 0x0176
     cf6:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
			i2c_write(u_outputByte1.outputByte1);
     cfa:	80 91 77 01 	lds	r24, 0x0177
     cfe:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>

			counter ++;
     d02:	0f 5f       	subi	r16, 0xFF	; 255
     d04:	1f 4f       	sbci	r17, 0xFF	; 255
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	0e 94 09 0c 	call	0x1812	; 0x1812 <_ZN13OrangutanTime17delayMillisecondsEj>
		int counter = 0;
		int print0 = 1, print6 = 1, print15 = 1, print24 = 1, print28 = 1, print35 = 1;
		int counterRef = 0, counterRef14 = 0, counterRef26 = 0, counterRefFive = 0, counterRef30 = 0;
		int pWait = 100, mWait = 100, kWait = 100;

		while(state != -1)
     d0e:	ed 85       	ldd	r30, Y+13	; 0x0d
     d10:	fe 85       	ldd	r31, Y+14	; 0x0e
     d12:	ef 5f       	subi	r30, 0xFF	; 255
     d14:	ff 4f       	sbci	r31, 0xFF	; 255
     d16:	09 f0       	breq	.+2      	; 0xd1a <main+0xc2c>
     d18:	9d ca       	rjmp	.-2758   	; 0x254 <main+0x166>
			i2c_write(u_outputByte1.outputByte1);

			counter ++;
			delay_ms(1);
    	}
		u_motorByte0.bits_in_motorByte0.m1Drop = 0;
     d1a:	80 91 74 01 	lds	r24, 0x0174
		u_motorByte0.bits_in_motorByte0.m2Drop = 0;
     d1e:	8b 7d       	andi	r24, 0xDB	; 219
     d20:	80 93 74 01 	sts	0x0174, r24
		u_motorByte1.bits_in_motorByte1.m3Drop = 0;
     d24:	80 91 75 01 	lds	r24, 0x0175
		u_motorByte1.bits_in_motorByte1.m4Drop = 0;
		u_motorByte1.bits_in_motorByte1.m5Drop = 0;
     d28:	86 7b       	andi	r24, 0xB6	; 182
     d2a:	80 93 75 01 	sts	0x0175, r24
		
		i2c_start(I2C1+I2C_WRITE);
     d2e:	80 e4       	ldi	r24, 0x40	; 64
     d30:	0e 94 c9 06 	call	0xd92	; 0xd92 <_Z9i2c_starth>
		i2c_write(0x2);
     d34:	82 e0       	ldi	r24, 0x02	; 2
     d36:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
		i2c_write(u_motorByte0.motorByte0);
     d3a:	80 91 74 01 	lds	r24, 0x0174
     d3e:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
		i2c_write(u_motorByte1.motorByte1);
     d42:	80 91 75 01 	lds	r24, 0x0175
     d46:	0e 94 22 07 	call	0xe44	; 0xe44 <_Z9i2c_writeh>
		i2c_stop();
     d4a:	0e 94 1a 07 	call	0xe34	; 0xe34 <_Z8i2c_stopv>
	}
	OrangutanLCD::print("END");
     d4e:	88 e6       	ldi	r24, 0x68	; 104
     d50:	91 e0       	ldi	r25, 0x01	; 1
     d52:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
     d56:	ff cf       	rjmp	.-2      	; 0xd56 <main+0xc68>
     d58:	83 e2       	ldi	r24, 0x23	; 35
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	fc cc       	rjmp	.-1544   	; 0x756 <main+0x668>
     d5e:	cc 24       	eor	r12, r12
     d60:	dd 24       	eor	r13, r13
     d62:	1c 86       	std	Y+12, r1	; 0x0c
     d64:	1b 86       	std	Y+11, r1	; 0x0b
     d66:	4c cd       	rjmp	.-1384   	; 0x800 <main+0x712>
     d68:	cc 24       	eor	r12, r12
     d6a:	dd 24       	eor	r13, r13
     d6c:	bc cd       	rjmp	.-1160   	; 0x8e6 <main+0x7f8>
     d6e:	cc 24       	eor	r12, r12
     d70:	dd 24       	eor	r13, r13
     d72:	3f ce       	rjmp	.-898    	; 0x9f2 <main+0x904>
     d74:	cc 24       	eor	r12, r12
     d76:	dd 24       	eor	r13, r13
     d78:	c8 ce       	rjmp	.-624    	; 0xb0a <main+0xa1c>

00000d7a <_ZdlPv>:
  return malloc(size); 
} 

void operator delete(void * ptr) 
{ 
  free(ptr); 
     d7a:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <free>
} 
     d7e:	08 95       	ret

00000d80 <_Znwj>:
void * operator new(size_t size); 
void operator delete(void * ptr); 

void * operator new(size_t size) 
{ 
  return malloc(size); 
     d80:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <malloc>
} 
     d84:	08 95       	ret

00000d86 <_Z8i2c_initv>:
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR = 0;                         /* no prescaler */
     d86:	10 92 b9 00 	sts	0x00B9, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     d8a:	8c e0       	ldi	r24, 0x0C	; 12
     d8c:	80 93 b8 00 	sts	0x00B8, r24

}/* i2c_init */
     d90:	08 95       	ret

00000d92 <_Z9i2c_starth>:

/*************************************************************************	
  Issues a start condition and sends address and transfer direction.
  return 0 = device accessible, 1= failed to access device
*************************************************************************/
unsigned char i2c_start(unsigned char address)
     d92:	98 2f       	mov	r25, r24
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     d94:	84 ea       	ldi	r24, 0xA4	; 164
     d96:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     d9a:	80 91 bc 00 	lds	r24, 0x00BC
     d9e:	87 ff       	sbrs	r24, 7
     da0:	fc cf       	rjmp	.-8      	; 0xd9a <_Z9i2c_starth+0x8>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     da2:	80 91 b9 00 	lds	r24, 0x00B9
     da6:	88 7f       	andi	r24, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     da8:	88 30       	cpi	r24, 0x08	; 8
     daa:	21 f0       	breq	.+8      	; 0xdb4 <_Z9i2c_starth+0x22>
     dac:	80 31       	cpi	r24, 0x10	; 16
     dae:	11 f0       	breq	.+4      	; 0xdb4 <_Z9i2c_starth+0x22>
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	08 95       	ret

	// send device address
	TWDR = address;
     db4:	90 93 bb 00 	sts	0x00BB, r25
	TWCR = (1<<TWINT) | (1<<TWEN);
     db8:	84 e8       	ldi	r24, 0x84	; 132
     dba:	80 93 bc 00 	sts	0x00BC, r24

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     dbe:	80 91 bc 00 	lds	r24, 0x00BC
     dc2:	87 ff       	sbrs	r24, 7
     dc4:	fc cf       	rjmp	.-8      	; 0xdbe <_Z9i2c_starth+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     dc6:	90 91 b9 00 	lds	r25, 0x00B9
     dca:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     dcc:	98 31       	cpi	r25, 0x18	; 24
     dce:	11 f4       	brne	.+4      	; 0xdd4 <_Z9i2c_starth+0x42>
     dd0:	80 e0       	ldi	r24, 0x00	; 0
     dd2:	08 95       	ret
     dd4:	80 e0       	ldi	r24, 0x00	; 0
     dd6:	90 34       	cpi	r25, 0x40	; 64
     dd8:	09 f0       	breq	.+2      	; 0xddc <_Z9i2c_starth+0x4a>
     dda:	81 e0       	ldi	r24, 0x01	; 1

	return 0;

}/* i2c_start */
     ddc:	08 95       	ret

00000dde <_Z14i2c_start_waith>:
 Issues a start condition and sends address and transfer direction.
 If device is busy, use ack polling to wait until device is ready
 
 Input:   address and transfer direction of I2C device
*************************************************************************/
void i2c_start_wait(unsigned char address)
     dde:	98 2f       	mov	r25, r24


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     de0:	44 ea       	ldi	r20, 0xA4	; 164
    	twst = TW_STATUS & 0xF8;
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
    
    	// send device address
    	TWDR = address;
    	TWCR = (1<<TWINT) | (1<<TWEN);
     de2:	34 e8       	ldi	r19, 0x84	; 132
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     de4:	24 e9       	ldi	r18, 0x94	; 148


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     de6:	40 93 bc 00 	sts	0x00BC, r20
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     dea:	80 91 bc 00 	lds	r24, 0x00BC
     dee:	87 ff       	sbrs	r24, 7
     df0:	fc cf       	rjmp	.-8      	; 0xdea <_Z14i2c_start_waith+0xc>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     df2:	80 91 b9 00 	lds	r24, 0x00B9
     df6:	88 7f       	andi	r24, 0xF8	; 248
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
     df8:	88 30       	cpi	r24, 0x08	; 8
     dfa:	11 f0       	breq	.+4      	; 0xe00 <_Z14i2c_start_waith+0x22>
     dfc:	80 31       	cpi	r24, 0x10	; 16
     dfe:	99 f7       	brne	.-26     	; 0xde6 <_Z14i2c_start_waith+0x8>
    
    	// send device address
    	TWDR = address;
     e00:	90 93 bb 00 	sts	0x00BB, r25
    	TWCR = (1<<TWINT) | (1<<TWEN);
     e04:	30 93 bc 00 	sts	0x00BC, r19
    
    	// wail until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     e08:	80 91 bc 00 	lds	r24, 0x00BC
     e0c:	87 ff       	sbrs	r24, 7
     e0e:	fc cf       	rjmp	.-8      	; 0xe08 <_Z14i2c_start_waith+0x2a>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     e10:	80 91 b9 00 	lds	r24, 0x00B9
     e14:	88 7f       	andi	r24, 0xF8	; 248
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
     e16:	80 32       	cpi	r24, 0x20	; 32
     e18:	11 f0       	breq	.+4      	; 0xe1e <_Z14i2c_start_waith+0x40>
     e1a:	88 35       	cpi	r24, 0x58	; 88
     e1c:	39 f4       	brne	.+14     	; 0xe2c <_Z14i2c_start_waith+0x4e>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     e1e:	20 93 bc 00 	sts	0x00BC, r18
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR & (1<<TWSTO));
     e22:	80 91 bc 00 	lds	r24, 0x00BC
     e26:	84 fd       	sbrc	r24, 4
     e28:	fc cf       	rjmp	.-8      	; 0xe22 <_Z14i2c_start_waith+0x44>
     e2a:	dd cf       	rjmp	.-70     	; 0xde6 <_Z14i2c_start_waith+0x8>
     e2c:	08 95       	ret

00000e2e <_Z13i2c_rep_starth>:
 Return:  0 device accessible
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );
     e2e:	0e 94 c9 06 	call	0xd92	; 0xd92 <_Z9i2c_starth>

}/* i2c_rep_start */
     e32:	08 95       	ret

00000e34 <_Z8i2c_stopv>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     e34:	84 e9       	ldi	r24, 0x94	; 148
     e36:	80 93 bc 00 	sts	0x00BC, r24
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     e3a:	80 91 bc 00 	lds	r24, 0x00BC
     e3e:	84 fd       	sbrc	r24, 4
     e40:	fc cf       	rjmp	.-8      	; 0xe3a <_Z8i2c_stopv+0x6>

}/* i2c_stop */
     e42:	08 95       	ret

00000e44 <_Z9i2c_writeh>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     e44:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     e48:	84 e8       	ldi	r24, 0x84	; 132
     e4a:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     e4e:	80 91 bc 00 	lds	r24, 0x00BC
     e52:	87 ff       	sbrs	r24, 7
     e54:	fc cf       	rjmp	.-8      	; 0xe4e <_Z9i2c_writeh+0xa>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     e56:	80 91 b9 00 	lds	r24, 0x00B9
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	88 7f       	andi	r24, 0xF8	; 248
     e5e:	88 32       	cpi	r24, 0x28	; 40
     e60:	09 f0       	breq	.+2      	; 0xe64 <_Z9i2c_writeh+0x20>
     e62:	91 e0       	ldi	r25, 0x01	; 1
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     e64:	89 2f       	mov	r24, r25
     e66:	08 95       	ret

00000e68 <_Z11i2c_readAckv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     e68:	84 ec       	ldi	r24, 0xC4	; 196
     e6a:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));    
     e6e:	80 91 bc 00 	lds	r24, 0x00BC
     e72:	87 ff       	sbrs	r24, 7
     e74:	fc cf       	rjmp	.-8      	; 0xe6e <_Z11i2c_readAckv+0x6>

    return TWDR;
     e76:	80 91 bb 00 	lds	r24, 0x00BB

}/* i2c_readAck */
     e7a:	08 95       	ret

00000e7c <_Z11i2c_readNakv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     e7c:	84 e8       	ldi	r24, 0x84	; 132
     e7e:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
     e82:	80 91 bc 00 	lds	r24, 0x00BC
     e86:	87 ff       	sbrs	r24, 7
     e88:	fc cf       	rjmp	.-8      	; 0xe82 <_Z11i2c_readNakv+0x6>
	
    return TWDR;
     e8a:	80 91 bb 00 	lds	r24, 0x00BB

}/* i2c_readNak */
     e8e:	08 95       	ret

00000e90 <_ZN12OrangutanLCDC2Ev>:
     e90:	08 95       	ret

00000e92 <_ZN12OrangutanLCDC1Ev>:
     e92:	08 95       	ret

00000e94 <void_getchar>:
     e94:	80 e0       	ldi	r24, 0x00	; 0
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	08 95       	ret

00000e9a <_ZN12OrangutanLCD8busyWaitEv>:
     e9a:	ef 92       	push	r14
     e9c:	ff 92       	push	r15
     e9e:	0f 93       	push	r16
     ea0:	1f 93       	push	r17
     ea2:	67 b1       	in	r22, 0x07	; 7
     ea4:	3d 98       	cbi	0x07, 5	; 7
     ea6:	28 98       	cbi	0x05, 0	; 5
     ea8:	29 9a       	sbi	0x05, 1	; 5
     eaa:	e0 90 7e 01 	lds	r14, 0x017E
     eae:	f0 90 7f 01 	lds	r15, 0x017F
     eb2:	00 91 80 01 	lds	r16, 0x0180
     eb6:	10 91 81 01 	lds	r17, 0x0181
     eba:	20 e0       	ldi	r18, 0x00	; 0
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	41 e0       	ldi	r20, 0x01	; 1
     ec0:	50 e0       	ldi	r21, 0x00	; 0
     ec2:	ca 01       	movw	r24, r20
     ec4:	6f 93       	push	r22
     ec6:	64 e0       	ldi	r22, 0x04	; 4
     ec8:	6a 95       	dec	r22
     eca:	f1 f7       	brne	.-4      	; 0xec8 <_ZN12OrangutanLCD8busyWaitEv+0x2e>
     ecc:	6f 91       	pop	r22
     ece:	01 97       	sbiw	r24, 0x01	; 1
     ed0:	c9 f7       	brne	.-14     	; 0xec4 <_ZN12OrangutanLCD8busyWaitEv+0x2a>
     ed2:	2a 9a       	sbi	0x05, 2	; 5
     ed4:	ca 01       	movw	r24, r20
     ed6:	6f 93       	push	r22
     ed8:	64 e0       	ldi	r22, 0x04	; 4
     eda:	6a 95       	dec	r22
     edc:	f1 f7       	brne	.-4      	; 0xeda <_ZN12OrangutanLCD8busyWaitEv+0x40>
     ede:	6f 91       	pop	r22
     ee0:	01 97       	sbiw	r24, 0x01	; 1
     ee2:	c9 f7       	brne	.-14     	; 0xed6 <_ZN12OrangutanLCD8busyWaitEv+0x3c>
     ee4:	86 b1       	in	r24, 0x06	; 6
     ee6:	2a 98       	cbi	0x05, 2	; 5
     ee8:	fa 01       	movw	r30, r20
     eea:	6f 93       	push	r22
     eec:	64 e0       	ldi	r22, 0x04	; 4
     eee:	6a 95       	dec	r22
     ef0:	f1 f7       	brne	.-4      	; 0xeee <_ZN12OrangutanLCD8busyWaitEv+0x54>
     ef2:	6f 91       	pop	r22
     ef4:	31 97       	sbiw	r30, 0x01	; 1
     ef6:	c9 f7       	brne	.-14     	; 0xeea <_ZN12OrangutanLCD8busyWaitEv+0x50>
     ef8:	2a 9a       	sbi	0x05, 2	; 5
     efa:	fa 01       	movw	r30, r20
     efc:	6f 93       	push	r22
     efe:	64 e0       	ldi	r22, 0x04	; 4
     f00:	6a 95       	dec	r22
     f02:	f1 f7       	brne	.-4      	; 0xf00 <_ZN12OrangutanLCD8busyWaitEv+0x66>
     f04:	6f 91       	pop	r22
     f06:	31 97       	sbiw	r30, 0x01	; 1
     f08:	c9 f7       	brne	.-14     	; 0xefc <_ZN12OrangutanLCD8busyWaitEv+0x62>
     f0a:	2a 98       	cbi	0x05, 2	; 5
     f0c:	2c 5f       	subi	r18, 0xFC	; 252
     f0e:	3f 4f       	sbci	r19, 0xFF	; 255
     f10:	85 ff       	sbrs	r24, 5
     f12:	09 c0       	rjmp	.+18     	; 0xf26 <_ZN12OrangutanLCD8busyWaitEv+0x8c>
     f14:	c9 01       	movw	r24, r18
     f16:	a0 e0       	ldi	r26, 0x00	; 0
     f18:	b0 e0       	ldi	r27, 0x00	; 0
     f1a:	8e 15       	cp	r24, r14
     f1c:	9f 05       	cpc	r25, r15
     f1e:	a0 07       	cpc	r26, r16
     f20:	b1 07       	cpc	r27, r17
     f22:	08 f4       	brcc	.+2      	; 0xf26 <_ZN12OrangutanLCD8busyWaitEv+0x8c>
     f24:	ce cf       	rjmp	.-100    	; 0xec2 <_ZN12OrangutanLCD8busyWaitEv+0x28>
     f26:	c9 01       	movw	r24, r18
     f28:	a0 e0       	ldi	r26, 0x00	; 0
     f2a:	b0 e0       	ldi	r27, 0x00	; 0
     f2c:	8e 15       	cp	r24, r14
     f2e:	9f 05       	cpc	r25, r15
     f30:	a0 07       	cpc	r26, r16
     f32:	b1 07       	cpc	r27, r17
     f34:	28 f0       	brcs	.+10     	; 0xf40 <_ZN12OrangutanLCD8busyWaitEv+0xa6>
     f36:	82 e3       	ldi	r24, 0x32	; 50
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	a0 e0       	ldi	r26, 0x00	; 0
     f3c:	b0 e0       	ldi	r27, 0x00	; 0
     f3e:	04 c0       	rjmp	.+8      	; 0xf48 <_ZN12OrangutanLCD8busyWaitEv+0xae>
     f40:	80 e3       	ldi	r24, 0x30	; 48
     f42:	95 e7       	ldi	r25, 0x75	; 117
     f44:	a0 e0       	ldi	r26, 0x00	; 0
     f46:	b0 e0       	ldi	r27, 0x00	; 0
     f48:	80 93 7e 01 	sts	0x017E, r24
     f4c:	90 93 7f 01 	sts	0x017F, r25
     f50:	a0 93 80 01 	sts	0x0180, r26
     f54:	b0 93 81 01 	sts	0x0181, r27
     f58:	67 b9       	out	0x07, r22	; 7
     f5a:	1f 91       	pop	r17
     f5c:	0f 91       	pop	r16
     f5e:	ff 90       	pop	r15
     f60:	ef 90       	pop	r14
     f62:	08 95       	ret

00000f64 <_ZN12OrangutanLCD8sendDataEh>:
     f64:	28 b1       	in	r18, 0x08	; 8
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	8f 70       	andi	r24, 0x0F	; 15
     f6a:	90 70       	andi	r25, 0x00	; 0
     f6c:	88 0f       	add	r24, r24
     f6e:	99 1f       	adc	r25, r25
     f70:	88 0f       	add	r24, r24
     f72:	99 1f       	adc	r25, r25
     f74:	23 7c       	andi	r18, 0xC3	; 195
     f76:	28 2b       	or	r18, r24
     f78:	28 b9       	out	0x08, r18	; 8
     f7a:	2a 9a       	sbi	0x05, 2	; 5
     f7c:	81 e0       	ldi	r24, 0x01	; 1
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	fc 01       	movw	r30, r24
     f82:	6f 93       	push	r22
     f84:	64 e0       	ldi	r22, 0x04	; 4
     f86:	6a 95       	dec	r22
     f88:	f1 f7       	brne	.-4      	; 0xf86 <_ZN12OrangutanLCD8sendDataEh+0x22>
     f8a:	6f 91       	pop	r22
     f8c:	31 97       	sbiw	r30, 0x01	; 1
     f8e:	c9 f7       	brne	.-14     	; 0xf82 <_ZN12OrangutanLCD8sendDataEh+0x1e>
     f90:	2a 98       	cbi	0x05, 2	; 5
     f92:	6f 93       	push	r22
     f94:	64 e0       	ldi	r22, 0x04	; 4
     f96:	6a 95       	dec	r22
     f98:	f1 f7       	brne	.-4      	; 0xf96 <_ZN12OrangutanLCD8sendDataEh+0x32>
     f9a:	6f 91       	pop	r22
     f9c:	01 97       	sbiw	r24, 0x01	; 1
     f9e:	c9 f7       	brne	.-14     	; 0xf92 <_ZN12OrangutanLCD8sendDataEh+0x2e>
     fa0:	08 95       	ret

00000fa2 <_ZN12OrangutanLCD10initPrintfEv>:
     fa2:	80 91 7a 01 	lds	r24, 0x017A
     fa6:	90 91 7b 01 	lds	r25, 0x017B
     faa:	00 97       	sbiw	r24, 0x00	; 0
     fac:	11 f0       	breq	.+4      	; 0xfb2 <_ZN12OrangutanLCD10initPrintfEv+0x10>
     fae:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <free>
     fb2:	80 91 6c 01 	lds	r24, 0x016C
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	01 97       	sbiw	r24, 0x01	; 1
     fba:	20 91 6d 01 	lds	r18, 0x016D
     fbe:	30 e0       	ldi	r19, 0x00	; 0
     fc0:	ac 01       	movw	r20, r24
     fc2:	42 9f       	mul	r20, r18
     fc4:	c0 01       	movw	r24, r0
     fc6:	43 9f       	mul	r20, r19
     fc8:	90 0d       	add	r25, r0
     fca:	52 9f       	mul	r21, r18
     fcc:	90 0d       	add	r25, r0
     fce:	11 24       	eor	r1, r1
     fd0:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <malloc>
     fd4:	90 93 7b 01 	sts	0x017B, r25
     fd8:	80 93 7a 01 	sts	0x017A, r24
     fdc:	00 97       	sbiw	r24, 0x00	; 0
     fde:	29 f1       	breq	.+74     	; 0x102a <_ZN12OrangutanLCD10initPrintfEv+0x88>
     fe0:	60 e0       	ldi	r22, 0x00	; 0
     fe2:	70 e2       	ldi	r23, 0x20	; 32
     fe4:	08 c0       	rjmp	.+16     	; 0xff6 <_ZN12OrangutanLCD10initPrintfEv+0x54>
     fe6:	e0 91 7a 01 	lds	r30, 0x017A
     fea:	f0 91 7b 01 	lds	r31, 0x017B
     fee:	e4 0f       	add	r30, r20
     ff0:	f5 1f       	adc	r31, r21
     ff2:	70 83       	st	Z, r23
     ff4:	6f 5f       	subi	r22, 0xFF	; 255
     ff6:	46 2f       	mov	r20, r22
     ff8:	50 e0       	ldi	r21, 0x00	; 0
     ffa:	80 91 6c 01 	lds	r24, 0x016C
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	01 97       	sbiw	r24, 0x01	; 1
    1002:	20 91 6d 01 	lds	r18, 0x016D
    1006:	30 e0       	ldi	r19, 0x00	; 0
    1008:	fc 01       	movw	r30, r24
    100a:	e2 9f       	mul	r30, r18
    100c:	c0 01       	movw	r24, r0
    100e:	e3 9f       	mul	r30, r19
    1010:	90 0d       	add	r25, r0
    1012:	f2 9f       	mul	r31, r18
    1014:	90 0d       	add	r25, r0
    1016:	11 24       	eor	r1, r1
    1018:	48 17       	cp	r20, r24
    101a:	59 07       	cpc	r21, r25
    101c:	24 f3       	brlt	.-56     	; 0xfe6 <_ZN12OrangutanLCD10initPrintfEv+0x44>
    101e:	86 e3       	ldi	r24, 0x36	; 54
    1020:	9a e0       	ldi	r25, 0x0A	; 10
    1022:	6a e4       	ldi	r22, 0x4A	; 74
    1024:	77 e0       	ldi	r23, 0x07	; 7
    1026:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <fdevopen>
    102a:	08 95       	ret

0000102c <_ZN12OrangutanLCD10initPrintfEhh>:
    102c:	80 93 6d 01 	sts	0x016D, r24
    1030:	60 93 6c 01 	sts	0x016C, r22
    1034:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <_ZN12OrangutanLCD10initPrintfEv>
    1038:	08 95       	ret

0000103a <lcd_init_printf_with_dimensions>:
    103a:	80 93 6d 01 	sts	0x016D, r24
    103e:	60 93 6c 01 	sts	0x016C, r22
    1042:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <_ZN12OrangutanLCD10initPrintfEv>
    1046:	08 95       	ret

00001048 <lcd_init_printf>:
    1048:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <_ZN12OrangutanLCD10initPrintfEv>
    104c:	08 95       	ret

0000104e <_ZN12OrangutanLCD5init2Ev>:
    104e:	3d 98       	cbi	0x07, 5	; 7
    1050:	45 9a       	sbi	0x08, 5	; 8
    1052:	80 e3       	ldi	r24, 0x30	; 48
    1054:	95 e7       	ldi	r25, 0x75	; 117
    1056:	a0 e0       	ldi	r26, 0x00	; 0
    1058:	b0 e0       	ldi	r27, 0x00	; 0
    105a:	80 93 7e 01 	sts	0x017E, r24
    105e:	90 93 7f 01 	sts	0x017F, r25
    1062:	a0 93 80 01 	sts	0x0180, r26
    1066:	b0 93 81 01 	sts	0x0181, r27
    106a:	20 9a       	sbi	0x04, 0	; 4
    106c:	21 9a       	sbi	0x04, 1	; 4
    106e:	22 9a       	sbi	0x04, 2	; 4
    1070:	8e e1       	ldi	r24, 0x1E	; 30
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	0e 94 09 0c 	call	0x1812	; 0x1812 <_ZN13OrangutanTime17delayMillisecondsEj>
    1078:	83 e0       	ldi	r24, 0x03	; 3
    107a:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    107e:	86 e0       	ldi	r24, 0x06	; 6
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	0e 94 09 0c 	call	0x1812	; 0x1812 <_ZN13OrangutanTime17delayMillisecondsEj>
    1086:	83 e0       	ldi	r24, 0x03	; 3
    1088:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    108c:	82 e0       	ldi	r24, 0x02	; 2
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	0e 94 09 0c 	call	0x1812	; 0x1812 <_ZN13OrangutanTime17delayMillisecondsEj>
    1094:	83 e0       	ldi	r24, 0x03	; 3
    1096:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    109a:	82 e0       	ldi	r24, 0x02	; 2
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	0e 94 09 0c 	call	0x1812	; 0x1812 <_ZN13OrangutanTime17delayMillisecondsEj>
    10a2:	82 e0       	ldi	r24, 0x02	; 2
    10a4:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    10a8:	82 e0       	ldi	r24, 0x02	; 2
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	0e 94 09 0c 	call	0x1812	; 0x1812 <_ZN13OrangutanTime17delayMillisecondsEj>
    10b0:	88 e2       	ldi	r24, 0x28	; 40
    10b2:	0e 94 c6 08 	call	0x118c	; 0x118c <_ZN12OrangutanLCD8send_cmdEh>
    10b6:	88 e0       	ldi	r24, 0x08	; 8
    10b8:	0e 94 c6 08 	call	0x118c	; 0x118c <_ZN12OrangutanLCD8send_cmdEh>
    10bc:	81 e0       	ldi	r24, 0x01	; 1
    10be:	0e 94 c6 08 	call	0x118c	; 0x118c <_ZN12OrangutanLCD8send_cmdEh>
    10c2:	86 e0       	ldi	r24, 0x06	; 6
    10c4:	0e 94 c6 08 	call	0x118c	; 0x118c <_ZN12OrangutanLCD8send_cmdEh>
    10c8:	8c e0       	ldi	r24, 0x0C	; 12
    10ca:	0e 94 c6 08 	call	0x118c	; 0x118c <_ZN12OrangutanLCD8send_cmdEh>
    10ce:	08 95       	ret

000010d0 <_ZN12OrangutanLCD4initEv>:
    10d0:	80 91 82 01 	lds	r24, 0x0182
    10d4:	88 23       	and	r24, r24
    10d6:	29 f4       	brne	.+10     	; 0x10e2 <_ZN12OrangutanLCD4initEv+0x12>
    10d8:	81 e0       	ldi	r24, 0x01	; 1
    10da:	80 93 82 01 	sts	0x0182, r24
    10de:	0e 94 27 08 	call	0x104e	; 0x104e <_ZN12OrangutanLCD5init2Ev>
    10e2:	08 95       	ret

000010e4 <_ZN12OrangutanLCD4sendEhhh>:
    10e4:	ff 92       	push	r15
    10e6:	0f 93       	push	r16
    10e8:	1f 93       	push	r17
    10ea:	08 2f       	mov	r16, r24
    10ec:	16 2f       	mov	r17, r22
    10ee:	f4 2e       	mov	r15, r20
    10f0:	0e 94 68 08 	call	0x10d0	; 0x10d0 <_ZN12OrangutanLCD4initEv>
    10f4:	0e 94 4d 07 	call	0xe9a	; 0xe9a <_ZN12OrangutanLCD8busyWaitEv>
    10f8:	37 b1       	in	r19, 0x07	; 7
    10fa:	28 b1       	in	r18, 0x08	; 8
    10fc:	29 98       	cbi	0x05, 1	; 5
    10fe:	11 23       	and	r17, r17
    1100:	11 f0       	breq	.+4      	; 0x1106 <_ZN12OrangutanLCD4sendEhhh+0x22>
    1102:	28 9a       	sbi	0x05, 0	; 5
    1104:	01 c0       	rjmp	.+2      	; 0x1108 <_ZN12OrangutanLCD4sendEhhh+0x24>
    1106:	28 98       	cbi	0x05, 0	; 5
    1108:	87 b1       	in	r24, 0x07	; 7
    110a:	8c 63       	ori	r24, 0x3C	; 60
    110c:	87 b9       	out	0x07, r24	; 7
    110e:	81 e0       	ldi	r24, 0x01	; 1
    1110:	f8 16       	cp	r15, r24
    1112:	e1 f0       	breq	.+56     	; 0x114c <_ZN12OrangutanLCD4sendEhhh+0x68>
    1114:	88 b1       	in	r24, 0x08	; 8
    1116:	90 2f       	mov	r25, r16
    1118:	92 95       	swap	r25
    111a:	9f 70       	andi	r25, 0x0F	; 15
    111c:	99 0f       	add	r25, r25
    111e:	99 0f       	add	r25, r25
    1120:	83 7c       	andi	r24, 0xC3	; 195
    1122:	98 2b       	or	r25, r24
    1124:	98 b9       	out	0x08, r25	; 8
    1126:	2a 9a       	sbi	0x05, 2	; 5
    1128:	81 e0       	ldi	r24, 0x01	; 1
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	fc 01       	movw	r30, r24
    112e:	6f 93       	push	r22
    1130:	64 e0       	ldi	r22, 0x04	; 4
    1132:	6a 95       	dec	r22
    1134:	f1 f7       	brne	.-4      	; 0x1132 <_ZN12OrangutanLCD4sendEhhh+0x4e>
    1136:	6f 91       	pop	r22
    1138:	31 97       	sbiw	r30, 0x01	; 1
    113a:	c9 f7       	brne	.-14     	; 0x112e <_ZN12OrangutanLCD4sendEhhh+0x4a>
    113c:	2a 98       	cbi	0x05, 2	; 5
    113e:	6f 93       	push	r22
    1140:	64 e0       	ldi	r22, 0x04	; 4
    1142:	6a 95       	dec	r22
    1144:	f1 f7       	brne	.-4      	; 0x1142 <_ZN12OrangutanLCD4sendEhhh+0x5e>
    1146:	6f 91       	pop	r22
    1148:	01 97       	sbiw	r24, 0x01	; 1
    114a:	c9 f7       	brne	.-14     	; 0x113e <_ZN12OrangutanLCD4sendEhhh+0x5a>
    114c:	88 b1       	in	r24, 0x08	; 8
    114e:	0f 70       	andi	r16, 0x0F	; 15
    1150:	00 0f       	add	r16, r16
    1152:	00 0f       	add	r16, r16
    1154:	83 7c       	andi	r24, 0xC3	; 195
    1156:	80 2b       	or	r24, r16
    1158:	88 b9       	out	0x08, r24	; 8
    115a:	2a 9a       	sbi	0x05, 2	; 5
    115c:	81 e0       	ldi	r24, 0x01	; 1
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	fc 01       	movw	r30, r24
    1162:	6f 93       	push	r22
    1164:	64 e0       	ldi	r22, 0x04	; 4
    1166:	6a 95       	dec	r22
    1168:	f1 f7       	brne	.-4      	; 0x1166 <_ZN12OrangutanLCD4sendEhhh+0x82>
    116a:	6f 91       	pop	r22
    116c:	31 97       	sbiw	r30, 0x01	; 1
    116e:	c9 f7       	brne	.-14     	; 0x1162 <_ZN12OrangutanLCD4sendEhhh+0x7e>
    1170:	2a 98       	cbi	0x05, 2	; 5
    1172:	6f 93       	push	r22
    1174:	64 e0       	ldi	r22, 0x04	; 4
    1176:	6a 95       	dec	r22
    1178:	f1 f7       	brne	.-4      	; 0x1176 <_ZN12OrangutanLCD4sendEhhh+0x92>
    117a:	6f 91       	pop	r22
    117c:	01 97       	sbiw	r24, 0x01	; 1
    117e:	c9 f7       	brne	.-14     	; 0x1172 <_ZN12OrangutanLCD4sendEhhh+0x8e>
    1180:	37 b9       	out	0x07, r19	; 7
    1182:	28 b9       	out	0x08, r18	; 8
    1184:	1f 91       	pop	r17
    1186:	0f 91       	pop	r16
    1188:	ff 90       	pop	r15
    118a:	08 95       	ret

0000118c <_ZN12OrangutanLCD8send_cmdEh>:
    118c:	60 e0       	ldi	r22, 0x00	; 0
    118e:	42 e0       	ldi	r20, 0x02	; 2
    1190:	0e 94 72 08 	call	0x10e4	; 0x10e4 <_ZN12OrangutanLCD4sendEhhh>
    1194:	08 95       	ret

00001196 <_ZN12OrangutanLCD10moveCursorEhh>:
    1196:	0f 93       	push	r16
    1198:	1f 93       	push	r17
    119a:	08 2f       	mov	r16, r24
    119c:	16 2f       	mov	r17, r22
    119e:	08 c0       	rjmp	.+16     	; 0x11b0 <_ZN12OrangutanLCD10moveCursorEhh+0x1a>
    11a0:	00 23       	and	r16, r16
    11a2:	11 f4       	brne	.+4      	; 0x11a8 <_ZN12OrangutanLCD10moveCursorEhh+0x12>
    11a4:	80 e1       	ldi	r24, 0x10	; 16
    11a6:	01 c0       	rjmp	.+2      	; 0x11aa <_ZN12OrangutanLCD10moveCursorEhh+0x14>
    11a8:	84 e1       	ldi	r24, 0x14	; 20
    11aa:	0e 94 c6 08 	call	0x118c	; 0x118c <_ZN12OrangutanLCD8send_cmdEh>
    11ae:	11 50       	subi	r17, 0x01	; 1
    11b0:	11 23       	and	r17, r17
    11b2:	b1 f7       	brne	.-20     	; 0x11a0 <_ZN12OrangutanLCD10moveCursorEhh+0xa>
    11b4:	1f 91       	pop	r17
    11b6:	0f 91       	pop	r16
    11b8:	08 95       	ret

000011ba <lcd_move_cursor>:
    11ba:	0e 94 cb 08 	call	0x1196	; 0x1196 <_ZN12OrangutanLCD10moveCursorEhh>
    11be:	08 95       	ret

000011c0 <_ZN12OrangutanLCD10hideCursorEv>:
    11c0:	8c e0       	ldi	r24, 0x0C	; 12
    11c2:	0e 94 c6 08 	call	0x118c	; 0x118c <_ZN12OrangutanLCD8send_cmdEh>
    11c6:	08 95       	ret

000011c8 <lcd_hide_cursor>:
    11c8:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <_ZN12OrangutanLCD10hideCursorEv>
    11cc:	08 95       	ret

000011ce <_ZN12OrangutanLCD10showCursorEh>:
    11ce:	81 30       	cpi	r24, 0x01	; 1
    11d0:	11 f4       	brne	.+4      	; 0x11d6 <_ZN12OrangutanLCD10showCursorEh+0x8>
    11d2:	8f e0       	ldi	r24, 0x0F	; 15
    11d4:	01 c0       	rjmp	.+2      	; 0x11d8 <_ZN12OrangutanLCD10showCursorEh+0xa>
    11d6:	8e e0       	ldi	r24, 0x0E	; 14
    11d8:	0e 94 c6 08 	call	0x118c	; 0x118c <_ZN12OrangutanLCD8send_cmdEh>
    11dc:	08 95       	ret

000011de <lcd_show_cursor>:
    11de:	0e 94 e7 08 	call	0x11ce	; 0x11ce <_ZN12OrangutanLCD10showCursorEh>
    11e2:	08 95       	ret

000011e4 <_ZN12OrangutanLCD6gotoXYEhh>:
    11e4:	a4 e0       	ldi	r26, 0x04	; 4
    11e6:	b0 e0       	ldi	r27, 0x00	; 0
    11e8:	e8 ef       	ldi	r30, 0xF8	; 248
    11ea:	f8 e0       	ldi	r31, 0x08	; 8
    11ec:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <__prologue_saves__+0x1c>
    11f0:	18 2f       	mov	r17, r24
    11f2:	06 2f       	mov	r16, r22
    11f4:	80 e8       	ldi	r24, 0x80	; 128
    11f6:	89 83       	std	Y+1, r24	; 0x01
    11f8:	80 ec       	ldi	r24, 0xC0	; 192
    11fa:	8a 83       	std	Y+2, r24	; 0x02
    11fc:	84 e9       	ldi	r24, 0x94	; 148
    11fe:	8b 83       	std	Y+3, r24	; 0x03
    1200:	84 ed       	ldi	r24, 0xD4	; 212
    1202:	8c 83       	std	Y+4, r24	; 0x04
    1204:	fe 01       	movw	r30, r28
    1206:	e6 0f       	add	r30, r22
    1208:	f1 1d       	adc	r31, r1
    120a:	81 81       	ldd	r24, Z+1	; 0x01
    120c:	81 0f       	add	r24, r17
    120e:	0e 94 c6 08 	call	0x118c	; 0x118c <_ZN12OrangutanLCD8send_cmdEh>
    1212:	10 93 7d 01 	sts	0x017D, r17
    1216:	00 93 7c 01 	sts	0x017C, r16
    121a:	24 96       	adiw	r28, 0x04	; 4
    121c:	e4 e0       	ldi	r30, 0x04	; 4
    121e:	0c 94 22 0d 	jmp	0x1a44	; 0x1a44 <__epilogue_restores__+0x1c>

00001222 <lcd_goto_xy>:
    1222:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <_ZN12OrangutanLCD6gotoXYEhh>
    1226:	08 95       	ret

00001228 <_ZN12OrangutanLCD5clearEv>:
    1228:	81 e0       	ldi	r24, 0x01	; 1
    122a:	0e 94 c6 08 	call	0x118c	; 0x118c <_ZN12OrangutanLCD8send_cmdEh>
    122e:	80 91 7a 01 	lds	r24, 0x017A
    1232:	90 91 7b 01 	lds	r25, 0x017B
    1236:	89 2b       	or	r24, r25
    1238:	19 f1       	breq	.+70     	; 0x1280 <_ZN12OrangutanLCD5clearEv+0x58>
    123a:	60 e0       	ldi	r22, 0x00	; 0
    123c:	70 e2       	ldi	r23, 0x20	; 32
    123e:	08 c0       	rjmp	.+16     	; 0x1250 <_ZN12OrangutanLCD5clearEv+0x28>
    1240:	e0 91 7a 01 	lds	r30, 0x017A
    1244:	f0 91 7b 01 	lds	r31, 0x017B
    1248:	e4 0f       	add	r30, r20
    124a:	f5 1f       	adc	r31, r21
    124c:	70 83       	st	Z, r23
    124e:	6f 5f       	subi	r22, 0xFF	; 255
    1250:	46 2f       	mov	r20, r22
    1252:	50 e0       	ldi	r21, 0x00	; 0
    1254:	80 91 6c 01 	lds	r24, 0x016C
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	01 97       	sbiw	r24, 0x01	; 1
    125c:	20 91 6d 01 	lds	r18, 0x016D
    1260:	30 e0       	ldi	r19, 0x00	; 0
    1262:	fc 01       	movw	r30, r24
    1264:	e2 9f       	mul	r30, r18
    1266:	c0 01       	movw	r24, r0
    1268:	e3 9f       	mul	r30, r19
    126a:	90 0d       	add	r25, r0
    126c:	f2 9f       	mul	r31, r18
    126e:	90 0d       	add	r25, r0
    1270:	11 24       	eor	r1, r1
    1272:	48 17       	cp	r20, r24
    1274:	59 07       	cpc	r21, r25
    1276:	24 f3       	brlt	.-56     	; 0x1240 <_ZN12OrangutanLCD5clearEv+0x18>
    1278:	10 92 7d 01 	sts	0x017D, r1
    127c:	10 92 7c 01 	sts	0x017C, r1
    1280:	08 95       	ret

00001282 <clear>:
    1282:	0e 94 14 09 	call	0x1228	; 0x1228 <_ZN12OrangutanLCD5clearEv>
    1286:	08 95       	ret

00001288 <_ZN12OrangutanLCD9send_dataEh>:
    1288:	61 e0       	ldi	r22, 0x01	; 1
    128a:	42 e0       	ldi	r20, 0x02	; 2
    128c:	0e 94 72 08 	call	0x10e4	; 0x10e4 <_ZN12OrangutanLCD4sendEhhh>
    1290:	08 95       	ret

00001292 <_ZN12OrangutanLCD11printBinaryEh>:
    1292:	0f 93       	push	r16
    1294:	1f 93       	push	r17
    1296:	cf 93       	push	r28
    1298:	df 93       	push	r29
    129a:	00 e0       	ldi	r16, 0x00	; 0
    129c:	10 e8       	ldi	r17, 0x80	; 128
    129e:	c8 2f       	mov	r28, r24
    12a0:	d0 e0       	ldi	r29, 0x00	; 0
    12a2:	81 2f       	mov	r24, r17
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	8c 23       	and	r24, r28
    12a8:	9d 23       	and	r25, r29
    12aa:	89 2b       	or	r24, r25
    12ac:	11 f0       	breq	.+4      	; 0x12b2 <_ZN12OrangutanLCD11printBinaryEh+0x20>
    12ae:	81 e3       	ldi	r24, 0x31	; 49
    12b0:	01 c0       	rjmp	.+2      	; 0x12b4 <_ZN12OrangutanLCD11printBinaryEh+0x22>
    12b2:	80 e3       	ldi	r24, 0x30	; 48
    12b4:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN12OrangutanLCD9send_dataEh>
    12b8:	0f 5f       	subi	r16, 0xFF	; 255
    12ba:	08 30       	cpi	r16, 0x08	; 8
    12bc:	11 f0       	breq	.+4      	; 0x12c2 <_ZN12OrangutanLCD11printBinaryEh+0x30>
    12be:	16 95       	lsr	r17
    12c0:	f0 cf       	rjmp	.-32     	; 0x12a2 <_ZN12OrangutanLCD11printBinaryEh+0x10>
    12c2:	df 91       	pop	r29
    12c4:	cf 91       	pop	r28
    12c6:	1f 91       	pop	r17
    12c8:	0f 91       	pop	r16
    12ca:	08 95       	ret

000012cc <print_binary>:
    12cc:	0e 94 49 09 	call	0x1292	; 0x1292 <_ZN12OrangutanLCD11printBinaryEh>
    12d0:	08 95       	ret

000012d2 <_ZN12OrangutanLCD14printHexNibbleEh>:
    12d2:	8a 30       	cpi	r24, 0x0A	; 10
    12d4:	10 f4       	brcc	.+4      	; 0x12da <_ZN12OrangutanLCD14printHexNibbleEh+0x8>
    12d6:	80 5d       	subi	r24, 0xD0	; 208
    12d8:	01 c0       	rjmp	.+2      	; 0x12dc <_ZN12OrangutanLCD14printHexNibbleEh+0xa>
    12da:	89 5c       	subi	r24, 0xC9	; 201
    12dc:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN12OrangutanLCD9send_dataEh>
    12e0:	08 95       	ret

000012e2 <_ZN12OrangutanLCD8printHexEh>:
    12e2:	1f 93       	push	r17
    12e4:	18 2f       	mov	r17, r24
    12e6:	82 95       	swap	r24
    12e8:	8f 70       	andi	r24, 0x0F	; 15
    12ea:	0e 94 69 09 	call	0x12d2	; 0x12d2 <_ZN12OrangutanLCD14printHexNibbleEh>
    12ee:	81 2f       	mov	r24, r17
    12f0:	8f 70       	andi	r24, 0x0F	; 15
    12f2:	0e 94 69 09 	call	0x12d2	; 0x12d2 <_ZN12OrangutanLCD14printHexNibbleEh>
    12f6:	1f 91       	pop	r17
    12f8:	08 95       	ret

000012fa <_ZN12OrangutanLCD8printHexEj>:
    12fa:	1f 93       	push	r17
    12fc:	18 2f       	mov	r17, r24
    12fe:	89 2f       	mov	r24, r25
    1300:	0e 94 71 09 	call	0x12e2	; 0x12e2 <_ZN12OrangutanLCD8printHexEh>
    1304:	81 2f       	mov	r24, r17
    1306:	0e 94 71 09 	call	0x12e2	; 0x12e2 <_ZN12OrangutanLCD8printHexEh>
    130a:	1f 91       	pop	r17
    130c:	08 95       	ret

0000130e <print_hex>:
    130e:	0e 94 7d 09 	call	0x12fa	; 0x12fa <_ZN12OrangutanLCD8printHexEj>
    1312:	08 95       	ret

00001314 <print_hex_byte>:
    1314:	0e 94 71 09 	call	0x12e2	; 0x12e2 <_ZN12OrangutanLCD8printHexEh>
    1318:	08 95       	ret

0000131a <_ZN12OrangutanLCD5printEm>:
    131a:	6f 92       	push	r6
    131c:	7f 92       	push	r7
    131e:	8f 92       	push	r8
    1320:	9f 92       	push	r9
    1322:	af 92       	push	r10
    1324:	bf 92       	push	r11
    1326:	cf 92       	push	r12
    1328:	df 92       	push	r13
    132a:	ff 92       	push	r15
    132c:	0f 93       	push	r16
    132e:	df 93       	push	r29
    1330:	cf 93       	push	r28
    1332:	cd b7       	in	r28, 0x3d	; 61
    1334:	de b7       	in	r29, 0x3e	; 62
    1336:	2a 97       	sbiw	r28, 0x0a	; 10
    1338:	0f b6       	in	r0, 0x3f	; 63
    133a:	f8 94       	cli
    133c:	de bf       	out	0x3e, r29	; 62
    133e:	0f be       	out	0x3f, r0	; 63
    1340:	cd bf       	out	0x3d, r28	; 61
    1342:	5b 01       	movw	r10, r22
    1344:	6c 01       	movw	r12, r24
    1346:	0a e0       	ldi	r16, 0x0A	; 10
    1348:	3e 01       	movw	r6, r28
    134a:	08 94       	sec
    134c:	61 1c       	adc	r6, r1
    134e:	71 1c       	adc	r7, r1
    1350:	fa 2c       	mov	r15, r10
    1352:	c6 01       	movw	r24, r12
    1354:	b5 01       	movw	r22, r10
    1356:	2a e0       	ldi	r18, 0x0A	; 10
    1358:	30 e0       	ldi	r19, 0x00	; 0
    135a:	40 e0       	ldi	r20, 0x00	; 0
    135c:	50 e0       	ldi	r21, 0x00	; 0
    135e:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <__udivmodsi4>
    1362:	c9 01       	movw	r24, r18
    1364:	da 01       	movw	r26, r20
    1366:	5c 01       	movw	r10, r24
    1368:	6d 01       	movw	r12, r26
    136a:	01 50       	subi	r16, 0x01	; 1
    136c:	43 01       	movw	r8, r6
    136e:	80 0e       	add	r8, r16
    1370:	91 1c       	adc	r9, r1
    1372:	80 e3       	ldi	r24, 0x30	; 48
    1374:	f8 0e       	add	r15, r24
    1376:	c6 01       	movw	r24, r12
    1378:	b5 01       	movw	r22, r10
    137a:	2a e0       	ldi	r18, 0x0A	; 10
    137c:	30 e0       	ldi	r19, 0x00	; 0
    137e:	40 e0       	ldi	r20, 0x00	; 0
    1380:	50 e0       	ldi	r21, 0x00	; 0
    1382:	0e 94 a4 0c 	call	0x1948	; 0x1948 <__mulsi3>
    1386:	f6 1a       	sub	r15, r22
    1388:	f4 01       	movw	r30, r8
    138a:	f0 82       	st	Z, r15
    138c:	a1 14       	cp	r10, r1
    138e:	b1 04       	cpc	r11, r1
    1390:	c1 04       	cpc	r12, r1
    1392:	d1 04       	cpc	r13, r1
    1394:	e9 f6       	brne	.-70     	; 0x1350 <_ZN12OrangutanLCD5printEm+0x36>
    1396:	08 c0       	rjmp	.+16     	; 0x13a8 <_ZN12OrangutanLCD5printEm+0x8e>
    1398:	f6 01       	movw	r30, r12
    139a:	e0 0f       	add	r30, r16
    139c:	f1 1d       	adc	r31, r1
    139e:	80 81       	ld	r24, Z
    13a0:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN12OrangutanLCD9send_dataEh>
    13a4:	0f 5f       	subi	r16, 0xFF	; 255
    13a6:	04 c0       	rjmp	.+8      	; 0x13b0 <_ZN12OrangutanLCD5printEm+0x96>
    13a8:	6e 01       	movw	r12, r28
    13aa:	08 94       	sec
    13ac:	c1 1c       	adc	r12, r1
    13ae:	d1 1c       	adc	r13, r1
    13b0:	0a 30       	cpi	r16, 0x0A	; 10
    13b2:	90 f3       	brcs	.-28     	; 0x1398 <_ZN12OrangutanLCD5printEm+0x7e>
    13b4:	2a 96       	adiw	r28, 0x0a	; 10
    13b6:	0f b6       	in	r0, 0x3f	; 63
    13b8:	f8 94       	cli
    13ba:	de bf       	out	0x3e, r29	; 62
    13bc:	0f be       	out	0x3f, r0	; 63
    13be:	cd bf       	out	0x3d, r28	; 61
    13c0:	cf 91       	pop	r28
    13c2:	df 91       	pop	r29
    13c4:	0f 91       	pop	r16
    13c6:	ff 90       	pop	r15
    13c8:	df 90       	pop	r13
    13ca:	cf 90       	pop	r12
    13cc:	bf 90       	pop	r11
    13ce:	af 90       	pop	r10
    13d0:	9f 90       	pop	r9
    13d2:	8f 90       	pop	r8
    13d4:	7f 90       	pop	r7
    13d6:	6f 90       	pop	r6
    13d8:	08 95       	ret

000013da <print_unsigned_long>:
    13da:	0e 94 8d 09 	call	0x131a	; 0x131a <_ZN12OrangutanLCD5printEm>
    13de:	08 95       	ret

000013e0 <_ZN12OrangutanLCD5printEl>:
    13e0:	ef 92       	push	r14
    13e2:	ff 92       	push	r15
    13e4:	0f 93       	push	r16
    13e6:	1f 93       	push	r17
    13e8:	7b 01       	movw	r14, r22
    13ea:	8c 01       	movw	r16, r24
    13ec:	97 ff       	sbrs	r25, 7
    13ee:	0b c0       	rjmp	.+22     	; 0x1406 <_ZN12OrangutanLCD5printEl+0x26>
    13f0:	10 95       	com	r17
    13f2:	00 95       	com	r16
    13f4:	f0 94       	com	r15
    13f6:	e0 94       	com	r14
    13f8:	e1 1c       	adc	r14, r1
    13fa:	f1 1c       	adc	r15, r1
    13fc:	01 1d       	adc	r16, r1
    13fe:	11 1d       	adc	r17, r1
    1400:	8d e2       	ldi	r24, 0x2D	; 45
    1402:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN12OrangutanLCD9send_dataEh>
    1406:	c8 01       	movw	r24, r16
    1408:	b7 01       	movw	r22, r14
    140a:	0e 94 8d 09 	call	0x131a	; 0x131a <_ZN12OrangutanLCD5printEm>
    140e:	1f 91       	pop	r17
    1410:	0f 91       	pop	r16
    1412:	ff 90       	pop	r15
    1414:	ef 90       	pop	r14
    1416:	08 95       	ret

00001418 <print_long>:
    1418:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <_ZN12OrangutanLCD5printEl>
    141c:	08 95       	ret

0000141e <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>:
    141e:	cf 93       	push	r28
    1420:	df 93       	push	r29
    1422:	ec 01       	movw	r28, r24
    1424:	03 c0       	rjmp	.+6      	; 0x142c <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0xe>
    1426:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN12OrangutanLCD9send_dataEh>
    142a:	21 96       	adiw	r28, 0x01	; 1
    142c:	fe 01       	movw	r30, r28
    142e:	84 91       	lpm	r24, Z+
    1430:	88 23       	and	r24, r24
    1432:	c9 f7       	brne	.-14     	; 0x1426 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0x8>
    1434:	df 91       	pop	r29
    1436:	cf 91       	pop	r28
    1438:	08 95       	ret

0000143a <print_from_program_space>:
    143a:	0e 94 0f 0a 	call	0x141e	; 0x141e <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>
    143e:	08 95       	ret

00001440 <_ZN12OrangutanLCD5printEPKc>:
    1440:	cf 93       	push	r28
    1442:	df 93       	push	r29
    1444:	ec 01       	movw	r28, r24
    1446:	03 c0       	rjmp	.+6      	; 0x144e <_ZN12OrangutanLCD5printEPKc+0xe>
    1448:	21 96       	adiw	r28, 0x01	; 1
    144a:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN12OrangutanLCD9send_dataEh>
    144e:	88 81       	ld	r24, Y
    1450:	88 23       	and	r24, r24
    1452:	d1 f7       	brne	.-12     	; 0x1448 <_ZN12OrangutanLCD5printEPKc+0x8>
    1454:	df 91       	pop	r29
    1456:	cf 91       	pop	r28
    1458:	08 95       	ret

0000145a <print>:
    145a:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEPKc>
    145e:	08 95       	ret

00001460 <_ZN12OrangutanLCD5printEc>:
    1460:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN12OrangutanLCD9send_dataEh>
    1464:	08 95       	ret

00001466 <print_character>:
    1466:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN12OrangutanLCD9send_dataEh>
    146a:	08 95       	ret

0000146c <lcd_putchar>:
    146c:	a0 e0       	ldi	r26, 0x00	; 0
    146e:	b0 e0       	ldi	r27, 0x00	; 0
    1470:	ec e3       	ldi	r30, 0x3C	; 60
    1472:	fa e0       	ldi	r31, 0x0A	; 10
    1474:	0c 94 02 0d 	jmp	0x1a04	; 0x1a04 <__prologue_saves__+0x14>
    1478:	e8 2e       	mov	r14, r24
    147a:	80 91 7a 01 	lds	r24, 0x017A
    147e:	90 91 7b 01 	lds	r25, 0x017B
    1482:	89 2b       	or	r24, r25
    1484:	09 f4       	brne	.+2      	; 0x1488 <lcd_putchar+0x1c>
    1486:	05 c1       	rjmp	.+522    	; 0x1692 <lcd_putchar+0x226>
    1488:	2a e0       	ldi	r18, 0x0A	; 10
    148a:	e2 16       	cp	r14, r18
    148c:	09 f4       	brne	.+2      	; 0x1490 <lcd_putchar+0x24>
    148e:	46 c0       	rjmp	.+140    	; 0x151c <lcd_putchar+0xb0>
    1490:	38 e0       	ldi	r19, 0x08	; 8
    1492:	e3 16       	cp	r14, r19
    1494:	c9 f4       	brne	.+50     	; 0x14c8 <lcd_putchar+0x5c>
    1496:	80 91 7d 01 	lds	r24, 0x017D
    149a:	81 50       	subi	r24, 0x01	; 1
    149c:	80 93 7d 01 	sts	0x017D, r24
    14a0:	8f 3f       	cpi	r24, 0xFF	; 255
    14a2:	51 f4       	brne	.+20     	; 0x14b8 <lcd_putchar+0x4c>
    14a4:	80 91 7c 01 	lds	r24, 0x017C
    14a8:	81 50       	subi	r24, 0x01	; 1
    14aa:	80 93 7c 01 	sts	0x017C, r24
    14ae:	80 91 6d 01 	lds	r24, 0x016D
    14b2:	81 50       	subi	r24, 0x01	; 1
    14b4:	80 93 7d 01 	sts	0x017D, r24
    14b8:	80 91 7c 01 	lds	r24, 0x017C
    14bc:	8f 3f       	cpi	r24, 0xFF	; 255
    14be:	09 f0       	breq	.+2      	; 0x14c2 <lcd_putchar+0x56>
    14c0:	e2 c0       	rjmp	.+452    	; 0x1686 <lcd_putchar+0x21a>
    14c2:	10 92 7c 01 	sts	0x017C, r1
    14c6:	dd c0       	rjmp	.+442    	; 0x1682 <lcd_putchar+0x216>
    14c8:	8e 2d       	mov	r24, r14
    14ca:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN12OrangutanLCD9send_dataEh>
    14ce:	20 91 7c 01 	lds	r18, 0x017C
    14d2:	22 23       	and	r18, r18
    14d4:	c9 f0       	breq	.+50     	; 0x1508 <lcd_putchar+0x9c>
    14d6:	30 e0       	ldi	r19, 0x00	; 0
    14d8:	21 50       	subi	r18, 0x01	; 1
    14da:	30 40       	sbci	r19, 0x00	; 0
    14dc:	80 91 6d 01 	lds	r24, 0x016D
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	ac 01       	movw	r20, r24
    14e4:	24 9f       	mul	r18, r20
    14e6:	c0 01       	movw	r24, r0
    14e8:	25 9f       	mul	r18, r21
    14ea:	90 0d       	add	r25, r0
    14ec:	34 9f       	mul	r19, r20
    14ee:	90 0d       	add	r25, r0
    14f0:	11 24       	eor	r1, r1
    14f2:	20 91 7d 01 	lds	r18, 0x017D
    14f6:	e0 91 7a 01 	lds	r30, 0x017A
    14fa:	f0 91 7b 01 	lds	r31, 0x017B
    14fe:	e8 0f       	add	r30, r24
    1500:	f9 1f       	adc	r31, r25
    1502:	e2 0f       	add	r30, r18
    1504:	f1 1d       	adc	r31, r1
    1506:	e0 82       	st	Z, r14
    1508:	80 91 7d 01 	lds	r24, 0x017D
    150c:	8f 5f       	subi	r24, 0xFF	; 255
    150e:	80 93 7d 01 	sts	0x017D, r24
    1512:	90 91 6d 01 	lds	r25, 0x016D
    1516:	89 17       	cp	r24, r25
    1518:	09 f0       	breq	.+2      	; 0x151c <lcd_putchar+0xb0>
    151a:	bb c0       	rjmp	.+374    	; 0x1692 <lcd_putchar+0x226>
    151c:	40 91 7c 01 	lds	r20, 0x017C
    1520:	24 2f       	mov	r18, r20
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	80 91 6c 01 	lds	r24, 0x016C
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	01 97       	sbiw	r24, 0x01	; 1
    152c:	28 17       	cp	r18, r24
    152e:	39 07       	cpc	r19, r25
    1530:	09 f0       	breq	.+2      	; 0x1534 <lcd_putchar+0xc8>
    1532:	a4 c0       	rjmp	.+328    	; 0x167c <lcd_putchar+0x210>
    1534:	c0 e0       	ldi	r28, 0x00	; 0
    1536:	d0 e0       	ldi	r29, 0x00	; 0
    1538:	44 c0       	rjmp	.+136    	; 0x15c2 <lcd_putchar+0x156>
    153a:	80 e0       	ldi	r24, 0x00	; 0
    153c:	6c 2f       	mov	r22, r28
    153e:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <_ZN12OrangutanLCD6gotoXYEhh>
    1542:	ff 24       	eor	r15, r15
    1544:	6e 01       	movw	r12, r28
    1546:	08 94       	sec
    1548:	c1 1c       	adc	r12, r1
    154a:	d1 1c       	adc	r13, r1
    154c:	35 c0       	rjmp	.+106    	; 0x15b8 <lcd_putchar+0x14c>
    154e:	0f 2d       	mov	r16, r15
    1550:	10 e0       	ldi	r17, 0x00	; 0
    1552:	90 e0       	ldi	r25, 0x00	; 0
    1554:	9c 01       	movw	r18, r24
    1556:	c2 9f       	mul	r28, r18
    1558:	c0 01       	movw	r24, r0
    155a:	c3 9f       	mul	r28, r19
    155c:	90 0d       	add	r25, r0
    155e:	d2 9f       	mul	r29, r18
    1560:	90 0d       	add	r25, r0
    1562:	11 24       	eor	r1, r1
    1564:	e0 91 7a 01 	lds	r30, 0x017A
    1568:	f0 91 7b 01 	lds	r31, 0x017B
    156c:	e0 0f       	add	r30, r16
    156e:	f1 1f       	adc	r31, r17
    1570:	e8 0f       	add	r30, r24
    1572:	f9 1f       	adc	r31, r25
    1574:	80 81       	ld	r24, Z
    1576:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN12OrangutanLCD9send_dataEh>
    157a:	e0 91 7a 01 	lds	r30, 0x017A
    157e:	f0 91 7b 01 	lds	r31, 0x017B
    1582:	80 91 6d 01 	lds	r24, 0x016D
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	c8 9f       	mul	r28, r24
    158a:	d0 01       	movw	r26, r0
    158c:	c9 9f       	mul	r28, r25
    158e:	b0 0d       	add	r27, r0
    1590:	d8 9f       	mul	r29, r24
    1592:	b0 0d       	add	r27, r0
    1594:	11 24       	eor	r1, r1
    1596:	e0 0f       	add	r30, r16
    1598:	f1 1f       	adc	r31, r17
    159a:	ae 0f       	add	r26, r30
    159c:	bf 1f       	adc	r27, r31
    159e:	ac 01       	movw	r20, r24
    15a0:	c4 9e       	mul	r12, r20
    15a2:	c0 01       	movw	r24, r0
    15a4:	c5 9e       	mul	r12, r21
    15a6:	90 0d       	add	r25, r0
    15a8:	d4 9e       	mul	r13, r20
    15aa:	90 0d       	add	r25, r0
    15ac:	11 24       	eor	r1, r1
    15ae:	e8 0f       	add	r30, r24
    15b0:	f9 1f       	adc	r31, r25
    15b2:	80 81       	ld	r24, Z
    15b4:	8c 93       	st	X, r24
    15b6:	f3 94       	inc	r15
    15b8:	80 91 6d 01 	lds	r24, 0x016D
    15bc:	f8 16       	cp	r15, r24
    15be:	38 f2       	brcs	.-114    	; 0x154e <lcd_putchar+0xe2>
    15c0:	e6 01       	movw	r28, r12
    15c2:	60 91 6c 01 	lds	r22, 0x016C
    15c6:	86 2f       	mov	r24, r22
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	02 97       	sbiw	r24, 0x02	; 2
    15cc:	c8 17       	cp	r28, r24
    15ce:	d9 07       	cpc	r29, r25
    15d0:	0c f4       	brge	.+2      	; 0x15d4 <lcd_putchar+0x168>
    15d2:	b3 cf       	rjmp	.-154    	; 0x153a <lcd_putchar+0xce>
    15d4:	62 30       	cpi	r22, 0x02	; 2
    15d6:	08 f4       	brcc	.+2      	; 0x15da <lcd_putchar+0x16e>
    15d8:	40 c0       	rjmp	.+128    	; 0x165a <lcd_putchar+0x1ee>
    15da:	62 50       	subi	r22, 0x02	; 2
    15dc:	80 e0       	ldi	r24, 0x00	; 0
    15de:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <_ZN12OrangutanLCD6gotoXYEhh>
    15e2:	ff 24       	eor	r15, r15
    15e4:	40 e2       	ldi	r20, 0x20	; 32
    15e6:	d4 2e       	mov	r13, r20
    15e8:	34 c0       	rjmp	.+104    	; 0x1652 <lcd_putchar+0x1e6>
    15ea:	0f 2d       	mov	r16, r15
    15ec:	10 e0       	ldi	r17, 0x00	; 0
    15ee:	80 91 6c 01 	lds	r24, 0x016C
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	02 97       	sbiw	r24, 0x02	; 2
    15f6:	30 e0       	ldi	r19, 0x00	; 0
    15f8:	ac 01       	movw	r20, r24
    15fa:	42 9f       	mul	r20, r18
    15fc:	c0 01       	movw	r24, r0
    15fe:	43 9f       	mul	r20, r19
    1600:	90 0d       	add	r25, r0
    1602:	52 9f       	mul	r21, r18
    1604:	90 0d       	add	r25, r0
    1606:	11 24       	eor	r1, r1
    1608:	e0 91 7a 01 	lds	r30, 0x017A
    160c:	f0 91 7b 01 	lds	r31, 0x017B
    1610:	e0 0f       	add	r30, r16
    1612:	f1 1f       	adc	r31, r17
    1614:	e8 0f       	add	r30, r24
    1616:	f9 1f       	adc	r31, r25
    1618:	80 81       	ld	r24, Z
    161a:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN12OrangutanLCD9send_dataEh>
    161e:	20 91 6c 01 	lds	r18, 0x016C
    1622:	30 e0       	ldi	r19, 0x00	; 0
    1624:	22 50       	subi	r18, 0x02	; 2
    1626:	30 40       	sbci	r19, 0x00	; 0
    1628:	80 91 6d 01 	lds	r24, 0x016D
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	ac 01       	movw	r20, r24
    1630:	24 9f       	mul	r18, r20
    1632:	c0 01       	movw	r24, r0
    1634:	25 9f       	mul	r18, r21
    1636:	90 0d       	add	r25, r0
    1638:	34 9f       	mul	r19, r20
    163a:	90 0d       	add	r25, r0
    163c:	11 24       	eor	r1, r1
    163e:	e0 91 7a 01 	lds	r30, 0x017A
    1642:	f0 91 7b 01 	lds	r31, 0x017B
    1646:	e0 0f       	add	r30, r16
    1648:	f1 1f       	adc	r31, r17
    164a:	e8 0f       	add	r30, r24
    164c:	f9 1f       	adc	r31, r25
    164e:	d0 82       	st	Z, r13
    1650:	f3 94       	inc	r15
    1652:	20 91 6d 01 	lds	r18, 0x016D
    1656:	f2 16       	cp	r15, r18
    1658:	40 f2       	brcs	.-112    	; 0x15ea <lcd_putchar+0x17e>
    165a:	60 91 6c 01 	lds	r22, 0x016C
    165e:	61 50       	subi	r22, 0x01	; 1
    1660:	80 e0       	ldi	r24, 0x00	; 0
    1662:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <_ZN12OrangutanLCD6gotoXYEhh>
    1666:	00 e0       	ldi	r16, 0x00	; 0
    1668:	04 c0       	rjmp	.+8      	; 0x1672 <lcd_putchar+0x206>
    166a:	80 e2       	ldi	r24, 0x20	; 32
    166c:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN12OrangutanLCD9send_dataEh>
    1670:	0f 5f       	subi	r16, 0xFF	; 255
    1672:	80 91 6d 01 	lds	r24, 0x016D
    1676:	08 17       	cp	r16, r24
    1678:	c0 f3       	brcs	.-16     	; 0x166a <lcd_putchar+0x1fe>
    167a:	03 c0       	rjmp	.+6      	; 0x1682 <lcd_putchar+0x216>
    167c:	4f 5f       	subi	r20, 0xFF	; 255
    167e:	40 93 7c 01 	sts	0x017C, r20
    1682:	10 92 7d 01 	sts	0x017D, r1
    1686:	80 91 7d 01 	lds	r24, 0x017D
    168a:	60 91 7c 01 	lds	r22, 0x017C
    168e:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <_ZN12OrangutanLCD6gotoXYEhh>
    1692:	2e 2d       	mov	r18, r14
    1694:	33 27       	eor	r19, r19
    1696:	27 fd       	sbrc	r18, 7
    1698:	30 95       	com	r19
    169a:	c9 01       	movw	r24, r18
    169c:	cd b7       	in	r28, 0x3d	; 61
    169e:	de b7       	in	r29, 0x3e	; 62
    16a0:	e8 e0       	ldi	r30, 0x08	; 8
    16a2:	0c 94 1e 0d 	jmp	0x1a3c	; 0x1a3c <__epilogue_restores__+0x14>

000016a6 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
    16a6:	ef 92       	push	r14
    16a8:	ff 92       	push	r15
    16aa:	0f 93       	push	r16
    16ac:	1f 93       	push	r17
    16ae:	cf 93       	push	r28
    16b0:	df 93       	push	r29
    16b2:	7c 01       	movw	r14, r24
    16b4:	06 2f       	mov	r16, r22
    16b6:	10 e0       	ldi	r17, 0x00	; 0
    16b8:	53 e0       	ldi	r21, 0x03	; 3
    16ba:	00 0f       	add	r16, r16
    16bc:	11 1f       	adc	r17, r17
    16be:	5a 95       	dec	r21
    16c0:	e1 f7       	brne	.-8      	; 0x16ba <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x14>
    16c2:	c0 e0       	ldi	r28, 0x00	; 0
    16c4:	d0 e0       	ldi	r29, 0x00	; 0
    16c6:	9e 01       	movw	r18, r28
    16c8:	20 0f       	add	r18, r16
    16ca:	82 2f       	mov	r24, r18
    16cc:	80 64       	ori	r24, 0x40	; 64
    16ce:	0e 94 c6 08 	call	0x118c	; 0x118c <_ZN12OrangutanLCD8send_cmdEh>
    16d2:	f7 01       	movw	r30, r14
    16d4:	ec 0f       	add	r30, r28
    16d6:	fd 1f       	adc	r31, r29
    16d8:	e4 91       	lpm	r30, Z+
    16da:	8e 2f       	mov	r24, r30
    16dc:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN12OrangutanLCD9send_dataEh>
    16e0:	21 96       	adiw	r28, 0x01	; 1
    16e2:	c8 30       	cpi	r28, 0x08	; 8
    16e4:	d1 05       	cpc	r29, r1
    16e6:	79 f7       	brne	.-34     	; 0x16c6 <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x20>
    16e8:	cd b7       	in	r28, 0x3d	; 61
    16ea:	de b7       	in	r29, 0x3e	; 62
    16ec:	e6 e0       	ldi	r30, 0x06	; 6
    16ee:	0c 94 20 0d 	jmp	0x1a40	; 0x1a40 <__epilogue_restores__+0x18>

000016f2 <lcd_load_custom_character>:
    16f2:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
    16f6:	08 95       	ret

000016f8 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    16f8:	60 e0       	ldi	r22, 0x00	; 0
    16fa:	41 e0       	ldi	r20, 0x01	; 1
    16fc:	0e 94 72 08 	call	0x10e4	; 0x10e4 <_ZN12OrangutanLCD4sendEhhh>
    1700:	08 95       	ret

00001702 <_ZN12OrangutanLCD6scrollEhhj>:
    1702:	0f 93       	push	r16
    1704:	1f 93       	push	r17
    1706:	cf 93       	push	r28
    1708:	df 93       	push	r29
    170a:	08 2f       	mov	r16, r24
    170c:	16 2f       	mov	r17, r22
    170e:	ea 01       	movw	r28, r20
    1710:	0b c0       	rjmp	.+22     	; 0x1728 <_ZN12OrangutanLCD6scrollEhhj+0x26>
    1712:	00 23       	and	r16, r16
    1714:	11 f4       	brne	.+4      	; 0x171a <_ZN12OrangutanLCD6scrollEhhj+0x18>
    1716:	88 e1       	ldi	r24, 0x18	; 24
    1718:	01 c0       	rjmp	.+2      	; 0x171c <_ZN12OrangutanLCD6scrollEhhj+0x1a>
    171a:	8c e1       	ldi	r24, 0x1C	; 28
    171c:	0e 94 c6 08 	call	0x118c	; 0x118c <_ZN12OrangutanLCD8send_cmdEh>
    1720:	ce 01       	movw	r24, r28
    1722:	0e 94 09 0c 	call	0x1812	; 0x1812 <_ZN13OrangutanTime17delayMillisecondsEj>
    1726:	11 50       	subi	r17, 0x01	; 1
    1728:	11 23       	and	r17, r17
    172a:	99 f7       	brne	.-26     	; 0x1712 <_ZN12OrangutanLCD6scrollEhhj+0x10>
    172c:	df 91       	pop	r29
    172e:	cf 91       	pop	r28
    1730:	1f 91       	pop	r17
    1732:	0f 91       	pop	r16
    1734:	08 95       	ret

00001736 <lcd_scroll>:
    1736:	0e 94 81 0b 	call	0x1702	; 0x1702 <_ZN12OrangutanLCD6scrollEhhj>
    173a:	08 95       	ret

0000173c <__vector_11>:
    173c:	2f 92       	push	r2
    173e:	8f 93       	push	r24
    1740:	9f 93       	push	r25
    1742:	2f b6       	in	r2, 0x3f	; 63
    1744:	80 91 84 01 	lds	r24, 0x0184
    1748:	90 91 85 01 	lds	r25, 0x0185
    174c:	01 96       	adiw	r24, 0x01	; 1
    174e:	80 93 84 01 	sts	0x0184, r24
    1752:	90 93 85 01 	sts	0x0185, r25
    1756:	90 e0       	ldi	r25, 0x00	; 0
    1758:	80 91 86 01 	lds	r24, 0x0186
    175c:	89 1f       	adc	r24, r25
    175e:	80 93 86 01 	sts	0x0186, r24
    1762:	90 91 8c 01 	lds	r25, 0x018C
    1766:	9c 5f       	subi	r25, 0xFC	; 252
    1768:	90 93 8c 01 	sts	0x018C, r25
    176c:	80 91 8b 01 	lds	r24, 0x018B
    1770:	80 51       	subi	r24, 0x10	; 16
    1772:	97 42       	sbci	r25, 0x27	; 39
    1774:	c0 f0       	brcs	.+48     	; 0x17a6 <end>
    1776:	90 93 8c 01 	sts	0x018C, r25
    177a:	80 93 8b 01 	sts	0x018B, r24
    177e:	80 91 87 01 	lds	r24, 0x0187
    1782:	90 91 88 01 	lds	r25, 0x0188
    1786:	01 96       	adiw	r24, 0x01	; 1
    1788:	80 93 87 01 	sts	0x0187, r24
    178c:	90 93 88 01 	sts	0x0188, r25
    1790:	90 e0       	ldi	r25, 0x00	; 0
    1792:	80 91 89 01 	lds	r24, 0x0189
    1796:	89 1f       	adc	r24, r25
    1798:	80 93 89 01 	sts	0x0189, r24
    179c:	80 91 8a 01 	lds	r24, 0x018A
    17a0:	89 1f       	adc	r24, r25
    17a2:	80 93 8a 01 	sts	0x018A, r24

000017a6 <end>:
    17a6:	2f be       	out	0x3f, r2	; 63
    17a8:	9f 91       	pop	r25
    17aa:	8f 91       	pop	r24
    17ac:	2f 90       	pop	r2
    17ae:	18 95       	reti

000017b0 <ticks_to_microseconds>:
    17b0:	6f 5f       	subi	r22, 0xFF	; 255
    17b2:	7f 4f       	sbci	r23, 0xFF	; 255
    17b4:	8f 4f       	sbci	r24, 0xFF	; 255
    17b6:	9f 4f       	sbci	r25, 0xFF	; 255
    17b8:	66 0f       	add	r22, r22
    17ba:	77 1f       	adc	r23, r23
    17bc:	88 1f       	adc	r24, r24
    17be:	99 1f       	adc	r25, r25
    17c0:	25 e0       	ldi	r18, 0x05	; 5
    17c2:	30 e0       	ldi	r19, 0x00	; 0
    17c4:	40 e0       	ldi	r20, 0x00	; 0
    17c6:	50 e0       	ldi	r21, 0x00	; 0
    17c8:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <__udivmodsi4>
    17cc:	ca 01       	movw	r24, r20
    17ce:	b9 01       	movw	r22, r18
    17d0:	08 95       	ret

000017d2 <delay_ms>:
    17d2:	28 ee       	ldi	r18, 0xE8	; 232
    17d4:	33 e0       	ldi	r19, 0x03	; 3
    17d6:	09 c0       	rjmp	.+18     	; 0x17ea <delay_ms+0x18>
    17d8:	f9 01       	movw	r30, r18
    17da:	6f 93       	push	r22
    17dc:	64 e0       	ldi	r22, 0x04	; 4
    17de:	6a 95       	dec	r22
    17e0:	f1 f7       	brne	.-4      	; 0x17de <delay_ms+0xc>
    17e2:	6f 91       	pop	r22
    17e4:	31 97       	sbiw	r30, 0x01	; 1
    17e6:	c9 f7       	brne	.-14     	; 0x17da <delay_ms+0x8>
    17e8:	01 97       	sbiw	r24, 0x01	; 1
    17ea:	00 97       	sbiw	r24, 0x00	; 0
    17ec:	a9 f7       	brne	.-22     	; 0x17d8 <delay_ms+0x6>
    17ee:	08 95       	ret

000017f0 <_ZN13OrangutanTime19ticksToMicrosecondsEm>:
    17f0:	6f 5f       	subi	r22, 0xFF	; 255
    17f2:	7f 4f       	sbci	r23, 0xFF	; 255
    17f4:	8f 4f       	sbci	r24, 0xFF	; 255
    17f6:	9f 4f       	sbci	r25, 0xFF	; 255
    17f8:	66 0f       	add	r22, r22
    17fa:	77 1f       	adc	r23, r23
    17fc:	88 1f       	adc	r24, r24
    17fe:	99 1f       	adc	r25, r25
    1800:	25 e0       	ldi	r18, 0x05	; 5
    1802:	30 e0       	ldi	r19, 0x00	; 0
    1804:	40 e0       	ldi	r20, 0x00	; 0
    1806:	50 e0       	ldi	r21, 0x00	; 0
    1808:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <__udivmodsi4>
    180c:	ca 01       	movw	r24, r20
    180e:	b9 01       	movw	r22, r18
    1810:	08 95       	ret

00001812 <_ZN13OrangutanTime17delayMillisecondsEj>:
    1812:	28 ee       	ldi	r18, 0xE8	; 232
    1814:	33 e0       	ldi	r19, 0x03	; 3
    1816:	09 c0       	rjmp	.+18     	; 0x182a <_ZN13OrangutanTime17delayMillisecondsEj+0x18>
    1818:	f9 01       	movw	r30, r18
    181a:	6f 93       	push	r22
    181c:	64 e0       	ldi	r22, 0x04	; 4
    181e:	6a 95       	dec	r22
    1820:	f1 f7       	brne	.-4      	; 0x181e <_ZN13OrangutanTime17delayMillisecondsEj+0xc>
    1822:	6f 91       	pop	r22
    1824:	31 97       	sbiw	r30, 0x01	; 1
    1826:	c9 f7       	brne	.-14     	; 0x181a <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
    1828:	01 97       	sbiw	r24, 0x01	; 1
    182a:	00 97       	sbiw	r24, 0x00	; 0
    182c:	a9 f7       	brne	.-22     	; 0x1818 <_ZN13OrangutanTime17delayMillisecondsEj+0x6>
    182e:	08 95       	ret

00001830 <_ZN13OrangutanTime5init2Ev>:
    1830:	a0 e7       	ldi	r26, 0x70	; 112
    1832:	b0 e0       	ldi	r27, 0x00	; 0
    1834:	8c 91       	ld	r24, X
    1836:	8e 7f       	andi	r24, 0xFE	; 254
    1838:	8c 93       	st	X, r24
    183a:	e0 eb       	ldi	r30, 0xB0	; 176
    183c:	f0 e0       	ldi	r31, 0x00	; 0
    183e:	80 81       	ld	r24, Z
    1840:	83 60       	ori	r24, 0x03	; 3
    1842:	80 83       	st	Z, r24
    1844:	e1 eb       	ldi	r30, 0xB1	; 177
    1846:	f0 e0       	ldi	r31, 0x00	; 0
    1848:	80 81       	ld	r24, Z
    184a:	80 7f       	andi	r24, 0xF0	; 240
    184c:	80 83       	st	Z, r24
    184e:	80 81       	ld	r24, Z
    1850:	82 60       	ori	r24, 0x02	; 2
    1852:	80 83       	st	Z, r24
    1854:	b8 9a       	sbi	0x17, 0	; 23
    1856:	8c 91       	ld	r24, X
    1858:	81 60       	ori	r24, 0x01	; 1
    185a:	8c 93       	st	X, r24
    185c:	78 94       	sei
    185e:	08 95       	ret

00001860 <_ZN13OrangutanTime4initEv>:
    1860:	80 91 8d 01 	lds	r24, 0x018D
    1864:	88 23       	and	r24, r24
    1866:	29 f4       	brne	.+10     	; 0x1872 <_ZN13OrangutanTime4initEv+0x12>
    1868:	81 e0       	ldi	r24, 0x01	; 1
    186a:	80 93 8d 01 	sts	0x018D, r24
    186e:	0e 94 18 0c 	call	0x1830	; 0x1830 <_ZN13OrangutanTime5init2Ev>
    1872:	08 95       	ret

00001874 <_ZN13OrangutanTime2msEv>:
    1874:	0e 94 30 0c 	call	0x1860	; 0x1860 <_ZN13OrangutanTime4initEv>
    1878:	e0 e7       	ldi	r30, 0x70	; 112
    187a:	f0 e0       	ldi	r31, 0x00	; 0
    187c:	80 81       	ld	r24, Z
    187e:	8e 7f       	andi	r24, 0xFE	; 254
    1880:	80 83       	st	Z, r24
    1882:	20 91 87 01 	lds	r18, 0x0187
    1886:	30 91 88 01 	lds	r19, 0x0188
    188a:	40 91 89 01 	lds	r20, 0x0189
    188e:	50 91 8a 01 	lds	r21, 0x018A
    1892:	80 81       	ld	r24, Z
    1894:	81 60       	ori	r24, 0x01	; 1
    1896:	80 83       	st	Z, r24
    1898:	b9 01       	movw	r22, r18
    189a:	ca 01       	movw	r24, r20
    189c:	08 95       	ret

0000189e <get_ms>:
    189e:	0e 94 3a 0c 	call	0x1874	; 0x1874 <_ZN13OrangutanTime2msEv>
    18a2:	08 95       	ret

000018a4 <_ZN13OrangutanTime5ticksEv>:
    18a4:	0e 94 30 0c 	call	0x1860	; 0x1860 <_ZN13OrangutanTime4initEv>
    18a8:	80 91 70 00 	lds	r24, 0x0070
    18ac:	8e 7f       	andi	r24, 0xFE	; 254
    18ae:	80 93 70 00 	sts	0x0070, r24
    18b2:	60 91 b2 00 	lds	r22, 0x00B2
    18b6:	80 91 83 01 	lds	r24, 0x0183
    18ba:	90 91 84 01 	lds	r25, 0x0184
    18be:	a0 91 85 01 	lds	r26, 0x0185
    18c2:	b0 91 86 01 	lds	r27, 0x0186
    18c6:	b8 99       	sbic	0x17, 0	; 23
    18c8:	05 c0       	rjmp	.+10     	; 0x18d4 <_ZN13OrangutanTime5ticksEv+0x30>
    18ca:	26 2f       	mov	r18, r22
    18cc:	30 e0       	ldi	r19, 0x00	; 0
    18ce:	40 e0       	ldi	r20, 0x00	; 0
    18d0:	50 e0       	ldi	r21, 0x00	; 0
    18d2:	11 c0       	rjmp	.+34     	; 0x18f6 <_ZN13OrangutanTime5ticksEv+0x52>
    18d4:	80 91 b2 00 	lds	r24, 0x00B2
    18d8:	20 91 83 01 	lds	r18, 0x0183
    18dc:	30 91 84 01 	lds	r19, 0x0184
    18e0:	40 91 85 01 	lds	r20, 0x0185
    18e4:	50 91 86 01 	lds	r21, 0x0186
    18e8:	20 50       	subi	r18, 0x00	; 0
    18ea:	3f 4f       	sbci	r19, 0xFF	; 255
    18ec:	4f 4f       	sbci	r20, 0xFF	; 255
    18ee:	5f 4f       	sbci	r21, 0xFF	; 255
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	a0 e0       	ldi	r26, 0x00	; 0
    18f4:	b0 e0       	ldi	r27, 0x00	; 0
    18f6:	28 2b       	or	r18, r24
    18f8:	39 2b       	or	r19, r25
    18fa:	4a 2b       	or	r20, r26
    18fc:	5b 2b       	or	r21, r27
    18fe:	80 91 70 00 	lds	r24, 0x0070
    1902:	81 60       	ori	r24, 0x01	; 1
    1904:	80 93 70 00 	sts	0x0070, r24
    1908:	b9 01       	movw	r22, r18
    190a:	ca 01       	movw	r24, r20
    190c:	08 95       	ret

0000190e <get_ticks>:
    190e:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <_ZN13OrangutanTime5ticksEv>
    1912:	08 95       	ret

00001914 <_ZN13OrangutanTime5resetEv>:
    1914:	0e 94 30 0c 	call	0x1860	; 0x1860 <_ZN13OrangutanTime4initEv>
    1918:	e0 e7       	ldi	r30, 0x70	; 112
    191a:	f0 e0       	ldi	r31, 0x00	; 0
    191c:	80 81       	ld	r24, Z
    191e:	8e 7f       	andi	r24, 0xFE	; 254
    1920:	80 83       	st	Z, r24
    1922:	10 92 87 01 	sts	0x0187, r1
    1926:	10 92 88 01 	sts	0x0188, r1
    192a:	10 92 89 01 	sts	0x0189, r1
    192e:	10 92 8a 01 	sts	0x018A, r1
    1932:	10 92 8c 01 	sts	0x018C, r1
    1936:	10 92 8b 01 	sts	0x018B, r1
    193a:	80 81       	ld	r24, Z
    193c:	81 60       	ori	r24, 0x01	; 1
    193e:	80 83       	st	Z, r24
    1940:	08 95       	ret

00001942 <time_reset>:
    1942:	0e 94 8a 0c 	call	0x1914	; 0x1914 <_ZN13OrangutanTime5resetEv>
    1946:	08 95       	ret

00001948 <__mulsi3>:
    1948:	62 9f       	mul	r22, r18
    194a:	d0 01       	movw	r26, r0
    194c:	73 9f       	mul	r23, r19
    194e:	f0 01       	movw	r30, r0
    1950:	82 9f       	mul	r24, r18
    1952:	e0 0d       	add	r30, r0
    1954:	f1 1d       	adc	r31, r1
    1956:	64 9f       	mul	r22, r20
    1958:	e0 0d       	add	r30, r0
    195a:	f1 1d       	adc	r31, r1
    195c:	92 9f       	mul	r25, r18
    195e:	f0 0d       	add	r31, r0
    1960:	83 9f       	mul	r24, r19
    1962:	f0 0d       	add	r31, r0
    1964:	74 9f       	mul	r23, r20
    1966:	f0 0d       	add	r31, r0
    1968:	65 9f       	mul	r22, r21
    196a:	f0 0d       	add	r31, r0
    196c:	99 27       	eor	r25, r25
    196e:	72 9f       	mul	r23, r18
    1970:	b0 0d       	add	r27, r0
    1972:	e1 1d       	adc	r30, r1
    1974:	f9 1f       	adc	r31, r25
    1976:	63 9f       	mul	r22, r19
    1978:	b0 0d       	add	r27, r0
    197a:	e1 1d       	adc	r30, r1
    197c:	f9 1f       	adc	r31, r25
    197e:	bd 01       	movw	r22, r26
    1980:	cf 01       	movw	r24, r30
    1982:	11 24       	eor	r1, r1
    1984:	08 95       	ret

00001986 <__divmodhi4>:
    1986:	97 fb       	bst	r25, 7
    1988:	09 2e       	mov	r0, r25
    198a:	07 26       	eor	r0, r23
    198c:	0a d0       	rcall	.+20     	; 0x19a2 <__divmodhi4_neg1>
    198e:	77 fd       	sbrc	r23, 7
    1990:	04 d0       	rcall	.+8      	; 0x199a <__divmodhi4_neg2>
    1992:	65 d0       	rcall	.+202    	; 0x1a5e <__udivmodhi4>
    1994:	06 d0       	rcall	.+12     	; 0x19a2 <__divmodhi4_neg1>
    1996:	00 20       	and	r0, r0
    1998:	1a f4       	brpl	.+6      	; 0x19a0 <__divmodhi4_exit>

0000199a <__divmodhi4_neg2>:
    199a:	70 95       	com	r23
    199c:	61 95       	neg	r22
    199e:	7f 4f       	sbci	r23, 0xFF	; 255

000019a0 <__divmodhi4_exit>:
    19a0:	08 95       	ret

000019a2 <__divmodhi4_neg1>:
    19a2:	f6 f7       	brtc	.-4      	; 0x19a0 <__divmodhi4_exit>
    19a4:	90 95       	com	r25
    19a6:	81 95       	neg	r24
    19a8:	9f 4f       	sbci	r25, 0xFF	; 255
    19aa:	08 95       	ret

000019ac <__udivmodsi4>:
    19ac:	a1 e2       	ldi	r26, 0x21	; 33
    19ae:	1a 2e       	mov	r1, r26
    19b0:	aa 1b       	sub	r26, r26
    19b2:	bb 1b       	sub	r27, r27
    19b4:	fd 01       	movw	r30, r26
    19b6:	0d c0       	rjmp	.+26     	; 0x19d2 <__udivmodsi4_ep>

000019b8 <__udivmodsi4_loop>:
    19b8:	aa 1f       	adc	r26, r26
    19ba:	bb 1f       	adc	r27, r27
    19bc:	ee 1f       	adc	r30, r30
    19be:	ff 1f       	adc	r31, r31
    19c0:	a2 17       	cp	r26, r18
    19c2:	b3 07       	cpc	r27, r19
    19c4:	e4 07       	cpc	r30, r20
    19c6:	f5 07       	cpc	r31, r21
    19c8:	20 f0       	brcs	.+8      	; 0x19d2 <__udivmodsi4_ep>
    19ca:	a2 1b       	sub	r26, r18
    19cc:	b3 0b       	sbc	r27, r19
    19ce:	e4 0b       	sbc	r30, r20
    19d0:	f5 0b       	sbc	r31, r21

000019d2 <__udivmodsi4_ep>:
    19d2:	66 1f       	adc	r22, r22
    19d4:	77 1f       	adc	r23, r23
    19d6:	88 1f       	adc	r24, r24
    19d8:	99 1f       	adc	r25, r25
    19da:	1a 94       	dec	r1
    19dc:	69 f7       	brne	.-38     	; 0x19b8 <__udivmodsi4_loop>
    19de:	60 95       	com	r22
    19e0:	70 95       	com	r23
    19e2:	80 95       	com	r24
    19e4:	90 95       	com	r25
    19e6:	9b 01       	movw	r18, r22
    19e8:	ac 01       	movw	r20, r24
    19ea:	bd 01       	movw	r22, r26
    19ec:	cf 01       	movw	r24, r30
    19ee:	08 95       	ret

000019f0 <__prologue_saves__>:
    19f0:	2f 92       	push	r2
    19f2:	3f 92       	push	r3
    19f4:	4f 92       	push	r4
    19f6:	5f 92       	push	r5
    19f8:	6f 92       	push	r6
    19fa:	7f 92       	push	r7
    19fc:	8f 92       	push	r8
    19fe:	9f 92       	push	r9
    1a00:	af 92       	push	r10
    1a02:	bf 92       	push	r11
    1a04:	cf 92       	push	r12
    1a06:	df 92       	push	r13
    1a08:	ef 92       	push	r14
    1a0a:	ff 92       	push	r15
    1a0c:	0f 93       	push	r16
    1a0e:	1f 93       	push	r17
    1a10:	cf 93       	push	r28
    1a12:	df 93       	push	r29
    1a14:	cd b7       	in	r28, 0x3d	; 61
    1a16:	de b7       	in	r29, 0x3e	; 62
    1a18:	ca 1b       	sub	r28, r26
    1a1a:	db 0b       	sbc	r29, r27
    1a1c:	0f b6       	in	r0, 0x3f	; 63
    1a1e:	f8 94       	cli
    1a20:	de bf       	out	0x3e, r29	; 62
    1a22:	0f be       	out	0x3f, r0	; 63
    1a24:	cd bf       	out	0x3d, r28	; 61
    1a26:	09 94       	ijmp

00001a28 <__epilogue_restores__>:
    1a28:	2a 88       	ldd	r2, Y+18	; 0x12
    1a2a:	39 88       	ldd	r3, Y+17	; 0x11
    1a2c:	48 88       	ldd	r4, Y+16	; 0x10
    1a2e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1a30:	6e 84       	ldd	r6, Y+14	; 0x0e
    1a32:	7d 84       	ldd	r7, Y+13	; 0x0d
    1a34:	8c 84       	ldd	r8, Y+12	; 0x0c
    1a36:	9b 84       	ldd	r9, Y+11	; 0x0b
    1a38:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a3a:	b9 84       	ldd	r11, Y+9	; 0x09
    1a3c:	c8 84       	ldd	r12, Y+8	; 0x08
    1a3e:	df 80       	ldd	r13, Y+7	; 0x07
    1a40:	ee 80       	ldd	r14, Y+6	; 0x06
    1a42:	fd 80       	ldd	r15, Y+5	; 0x05
    1a44:	0c 81       	ldd	r16, Y+4	; 0x04
    1a46:	1b 81       	ldd	r17, Y+3	; 0x03
    1a48:	aa 81       	ldd	r26, Y+2	; 0x02
    1a4a:	b9 81       	ldd	r27, Y+1	; 0x01
    1a4c:	ce 0f       	add	r28, r30
    1a4e:	d1 1d       	adc	r29, r1
    1a50:	0f b6       	in	r0, 0x3f	; 63
    1a52:	f8 94       	cli
    1a54:	de bf       	out	0x3e, r29	; 62
    1a56:	0f be       	out	0x3f, r0	; 63
    1a58:	cd bf       	out	0x3d, r28	; 61
    1a5a:	ed 01       	movw	r28, r26
    1a5c:	08 95       	ret

00001a5e <__udivmodhi4>:
    1a5e:	aa 1b       	sub	r26, r26
    1a60:	bb 1b       	sub	r27, r27
    1a62:	51 e1       	ldi	r21, 0x11	; 17
    1a64:	07 c0       	rjmp	.+14     	; 0x1a74 <__udivmodhi4_ep>

00001a66 <__udivmodhi4_loop>:
    1a66:	aa 1f       	adc	r26, r26
    1a68:	bb 1f       	adc	r27, r27
    1a6a:	a6 17       	cp	r26, r22
    1a6c:	b7 07       	cpc	r27, r23
    1a6e:	10 f0       	brcs	.+4      	; 0x1a74 <__udivmodhi4_ep>
    1a70:	a6 1b       	sub	r26, r22
    1a72:	b7 0b       	sbc	r27, r23

00001a74 <__udivmodhi4_ep>:
    1a74:	88 1f       	adc	r24, r24
    1a76:	99 1f       	adc	r25, r25
    1a78:	5a 95       	dec	r21
    1a7a:	a9 f7       	brne	.-22     	; 0x1a66 <__udivmodhi4_loop>
    1a7c:	80 95       	com	r24
    1a7e:	90 95       	com	r25
    1a80:	bc 01       	movw	r22, r24
    1a82:	cd 01       	movw	r24, r26
    1a84:	08 95       	ret

00001a86 <malloc>:
    1a86:	cf 93       	push	r28
    1a88:	df 93       	push	r29
    1a8a:	bc 01       	movw	r22, r24
    1a8c:	82 30       	cpi	r24, 0x02	; 2
    1a8e:	91 05       	cpc	r25, r1
    1a90:	10 f4       	brcc	.+4      	; 0x1a96 <malloc+0x10>
    1a92:	62 e0       	ldi	r22, 0x02	; 2
    1a94:	70 e0       	ldi	r23, 0x00	; 0
    1a96:	a0 91 90 01 	lds	r26, 0x0190
    1a9a:	b0 91 91 01 	lds	r27, 0x0191
    1a9e:	ed 01       	movw	r28, r26
    1aa0:	e0 e0       	ldi	r30, 0x00	; 0
    1aa2:	f0 e0       	ldi	r31, 0x00	; 0
    1aa4:	40 e0       	ldi	r20, 0x00	; 0
    1aa6:	50 e0       	ldi	r21, 0x00	; 0
    1aa8:	21 c0       	rjmp	.+66     	; 0x1aec <malloc+0x66>
    1aaa:	88 81       	ld	r24, Y
    1aac:	99 81       	ldd	r25, Y+1	; 0x01
    1aae:	86 17       	cp	r24, r22
    1ab0:	97 07       	cpc	r25, r23
    1ab2:	69 f4       	brne	.+26     	; 0x1ace <malloc+0x48>
    1ab4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ab6:	9b 81       	ldd	r25, Y+3	; 0x03
    1ab8:	30 97       	sbiw	r30, 0x00	; 0
    1aba:	19 f0       	breq	.+6      	; 0x1ac2 <malloc+0x3c>
    1abc:	93 83       	std	Z+3, r25	; 0x03
    1abe:	82 83       	std	Z+2, r24	; 0x02
    1ac0:	04 c0       	rjmp	.+8      	; 0x1aca <malloc+0x44>
    1ac2:	90 93 91 01 	sts	0x0191, r25
    1ac6:	80 93 90 01 	sts	0x0190, r24
    1aca:	fe 01       	movw	r30, r28
    1acc:	34 c0       	rjmp	.+104    	; 0x1b36 <malloc+0xb0>
    1ace:	68 17       	cp	r22, r24
    1ad0:	79 07       	cpc	r23, r25
    1ad2:	38 f4       	brcc	.+14     	; 0x1ae2 <malloc+0x5c>
    1ad4:	41 15       	cp	r20, r1
    1ad6:	51 05       	cpc	r21, r1
    1ad8:	19 f0       	breq	.+6      	; 0x1ae0 <malloc+0x5a>
    1ada:	84 17       	cp	r24, r20
    1adc:	95 07       	cpc	r25, r21
    1ade:	08 f4       	brcc	.+2      	; 0x1ae2 <malloc+0x5c>
    1ae0:	ac 01       	movw	r20, r24
    1ae2:	fe 01       	movw	r30, r28
    1ae4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ae6:	9b 81       	ldd	r25, Y+3	; 0x03
    1ae8:	9c 01       	movw	r18, r24
    1aea:	e9 01       	movw	r28, r18
    1aec:	20 97       	sbiw	r28, 0x00	; 0
    1aee:	e9 f6       	brne	.-70     	; 0x1aaa <malloc+0x24>
    1af0:	41 15       	cp	r20, r1
    1af2:	51 05       	cpc	r21, r1
    1af4:	a9 f1       	breq	.+106    	; 0x1b60 <malloc+0xda>
    1af6:	ca 01       	movw	r24, r20
    1af8:	86 1b       	sub	r24, r22
    1afa:	97 0b       	sbc	r25, r23
    1afc:	04 97       	sbiw	r24, 0x04	; 4
    1afe:	08 f4       	brcc	.+2      	; 0x1b02 <malloc+0x7c>
    1b00:	ba 01       	movw	r22, r20
    1b02:	e0 e0       	ldi	r30, 0x00	; 0
    1b04:	f0 e0       	ldi	r31, 0x00	; 0
    1b06:	2a c0       	rjmp	.+84     	; 0x1b5c <malloc+0xd6>
    1b08:	8d 91       	ld	r24, X+
    1b0a:	9c 91       	ld	r25, X
    1b0c:	11 97       	sbiw	r26, 0x01	; 1
    1b0e:	84 17       	cp	r24, r20
    1b10:	95 07       	cpc	r25, r21
    1b12:	f9 f4       	brne	.+62     	; 0x1b52 <malloc+0xcc>
    1b14:	64 17       	cp	r22, r20
    1b16:	75 07       	cpc	r23, r21
    1b18:	81 f4       	brne	.+32     	; 0x1b3a <malloc+0xb4>
    1b1a:	12 96       	adiw	r26, 0x02	; 2
    1b1c:	8d 91       	ld	r24, X+
    1b1e:	9c 91       	ld	r25, X
    1b20:	13 97       	sbiw	r26, 0x03	; 3
    1b22:	30 97       	sbiw	r30, 0x00	; 0
    1b24:	19 f0       	breq	.+6      	; 0x1b2c <malloc+0xa6>
    1b26:	93 83       	std	Z+3, r25	; 0x03
    1b28:	82 83       	std	Z+2, r24	; 0x02
    1b2a:	04 c0       	rjmp	.+8      	; 0x1b34 <malloc+0xae>
    1b2c:	90 93 91 01 	sts	0x0191, r25
    1b30:	80 93 90 01 	sts	0x0190, r24
    1b34:	fd 01       	movw	r30, r26
    1b36:	32 96       	adiw	r30, 0x02	; 2
    1b38:	4f c0       	rjmp	.+158    	; 0x1bd8 <malloc+0x152>
    1b3a:	ca 01       	movw	r24, r20
    1b3c:	86 1b       	sub	r24, r22
    1b3e:	97 0b       	sbc	r25, r23
    1b40:	fd 01       	movw	r30, r26
    1b42:	e8 0f       	add	r30, r24
    1b44:	f9 1f       	adc	r31, r25
    1b46:	61 93       	st	Z+, r22
    1b48:	71 93       	st	Z+, r23
    1b4a:	02 97       	sbiw	r24, 0x02	; 2
    1b4c:	8d 93       	st	X+, r24
    1b4e:	9c 93       	st	X, r25
    1b50:	43 c0       	rjmp	.+134    	; 0x1bd8 <malloc+0x152>
    1b52:	fd 01       	movw	r30, r26
    1b54:	82 81       	ldd	r24, Z+2	; 0x02
    1b56:	93 81       	ldd	r25, Z+3	; 0x03
    1b58:	9c 01       	movw	r18, r24
    1b5a:	d9 01       	movw	r26, r18
    1b5c:	10 97       	sbiw	r26, 0x00	; 0
    1b5e:	a1 f6       	brne	.-88     	; 0x1b08 <malloc+0x82>
    1b60:	80 91 8e 01 	lds	r24, 0x018E
    1b64:	90 91 8f 01 	lds	r25, 0x018F
    1b68:	89 2b       	or	r24, r25
    1b6a:	41 f4       	brne	.+16     	; 0x1b7c <malloc+0xf6>
    1b6c:	80 91 70 01 	lds	r24, 0x0170
    1b70:	90 91 71 01 	lds	r25, 0x0171
    1b74:	90 93 8f 01 	sts	0x018F, r25
    1b78:	80 93 8e 01 	sts	0x018E, r24
    1b7c:	40 91 72 01 	lds	r20, 0x0172
    1b80:	50 91 73 01 	lds	r21, 0x0173
    1b84:	41 15       	cp	r20, r1
    1b86:	51 05       	cpc	r21, r1
    1b88:	41 f4       	brne	.+16     	; 0x1b9a <malloc+0x114>
    1b8a:	4d b7       	in	r20, 0x3d	; 61
    1b8c:	5e b7       	in	r21, 0x3e	; 62
    1b8e:	80 91 6e 01 	lds	r24, 0x016E
    1b92:	90 91 6f 01 	lds	r25, 0x016F
    1b96:	48 1b       	sub	r20, r24
    1b98:	59 0b       	sbc	r21, r25
    1b9a:	20 91 8e 01 	lds	r18, 0x018E
    1b9e:	30 91 8f 01 	lds	r19, 0x018F
    1ba2:	24 17       	cp	r18, r20
    1ba4:	35 07       	cpc	r19, r21
    1ba6:	b0 f4       	brcc	.+44     	; 0x1bd4 <malloc+0x14e>
    1ba8:	ca 01       	movw	r24, r20
    1baa:	82 1b       	sub	r24, r18
    1bac:	93 0b       	sbc	r25, r19
    1bae:	86 17       	cp	r24, r22
    1bb0:	97 07       	cpc	r25, r23
    1bb2:	80 f0       	brcs	.+32     	; 0x1bd4 <malloc+0x14e>
    1bb4:	ab 01       	movw	r20, r22
    1bb6:	4e 5f       	subi	r20, 0xFE	; 254
    1bb8:	5f 4f       	sbci	r21, 0xFF	; 255
    1bba:	84 17       	cp	r24, r20
    1bbc:	95 07       	cpc	r25, r21
    1bbe:	50 f0       	brcs	.+20     	; 0x1bd4 <malloc+0x14e>
    1bc0:	42 0f       	add	r20, r18
    1bc2:	53 1f       	adc	r21, r19
    1bc4:	50 93 8f 01 	sts	0x018F, r21
    1bc8:	40 93 8e 01 	sts	0x018E, r20
    1bcc:	f9 01       	movw	r30, r18
    1bce:	61 93       	st	Z+, r22
    1bd0:	71 93       	st	Z+, r23
    1bd2:	02 c0       	rjmp	.+4      	; 0x1bd8 <malloc+0x152>
    1bd4:	e0 e0       	ldi	r30, 0x00	; 0
    1bd6:	f0 e0       	ldi	r31, 0x00	; 0
    1bd8:	cf 01       	movw	r24, r30
    1bda:	df 91       	pop	r29
    1bdc:	cf 91       	pop	r28
    1bde:	08 95       	ret

00001be0 <free>:
    1be0:	cf 93       	push	r28
    1be2:	df 93       	push	r29
    1be4:	00 97       	sbiw	r24, 0x00	; 0
    1be6:	09 f4       	brne	.+2      	; 0x1bea <free+0xa>
    1be8:	50 c0       	rjmp	.+160    	; 0x1c8a <free+0xaa>
    1bea:	ec 01       	movw	r28, r24
    1bec:	22 97       	sbiw	r28, 0x02	; 2
    1bee:	1b 82       	std	Y+3, r1	; 0x03
    1bf0:	1a 82       	std	Y+2, r1	; 0x02
    1bf2:	a0 91 90 01 	lds	r26, 0x0190
    1bf6:	b0 91 91 01 	lds	r27, 0x0191
    1bfa:	10 97       	sbiw	r26, 0x00	; 0
    1bfc:	09 f1       	breq	.+66     	; 0x1c40 <free+0x60>
    1bfe:	40 e0       	ldi	r20, 0x00	; 0
    1c00:	50 e0       	ldi	r21, 0x00	; 0
    1c02:	ac 17       	cp	r26, r28
    1c04:	bd 07       	cpc	r27, r29
    1c06:	08 f1       	brcs	.+66     	; 0x1c4a <free+0x6a>
    1c08:	bb 83       	std	Y+3, r27	; 0x03
    1c0a:	aa 83       	std	Y+2, r26	; 0x02
    1c0c:	fe 01       	movw	r30, r28
    1c0e:	21 91       	ld	r18, Z+
    1c10:	31 91       	ld	r19, Z+
    1c12:	e2 0f       	add	r30, r18
    1c14:	f3 1f       	adc	r31, r19
    1c16:	ae 17       	cp	r26, r30
    1c18:	bf 07       	cpc	r27, r31
    1c1a:	79 f4       	brne	.+30     	; 0x1c3a <free+0x5a>
    1c1c:	8d 91       	ld	r24, X+
    1c1e:	9c 91       	ld	r25, X
    1c20:	11 97       	sbiw	r26, 0x01	; 1
    1c22:	28 0f       	add	r18, r24
    1c24:	39 1f       	adc	r19, r25
    1c26:	2e 5f       	subi	r18, 0xFE	; 254
    1c28:	3f 4f       	sbci	r19, 0xFF	; 255
    1c2a:	39 83       	std	Y+1, r19	; 0x01
    1c2c:	28 83       	st	Y, r18
    1c2e:	12 96       	adiw	r26, 0x02	; 2
    1c30:	8d 91       	ld	r24, X+
    1c32:	9c 91       	ld	r25, X
    1c34:	13 97       	sbiw	r26, 0x03	; 3
    1c36:	9b 83       	std	Y+3, r25	; 0x03
    1c38:	8a 83       	std	Y+2, r24	; 0x02
    1c3a:	41 15       	cp	r20, r1
    1c3c:	51 05       	cpc	r21, r1
    1c3e:	71 f4       	brne	.+28     	; 0x1c5c <free+0x7c>
    1c40:	d0 93 91 01 	sts	0x0191, r29
    1c44:	c0 93 90 01 	sts	0x0190, r28
    1c48:	20 c0       	rjmp	.+64     	; 0x1c8a <free+0xaa>
    1c4a:	12 96       	adiw	r26, 0x02	; 2
    1c4c:	8d 91       	ld	r24, X+
    1c4e:	9c 91       	ld	r25, X
    1c50:	13 97       	sbiw	r26, 0x03	; 3
    1c52:	ad 01       	movw	r20, r26
    1c54:	00 97       	sbiw	r24, 0x00	; 0
    1c56:	11 f0       	breq	.+4      	; 0x1c5c <free+0x7c>
    1c58:	dc 01       	movw	r26, r24
    1c5a:	d3 cf       	rjmp	.-90     	; 0x1c02 <free+0x22>
    1c5c:	fa 01       	movw	r30, r20
    1c5e:	d3 83       	std	Z+3, r29	; 0x03
    1c60:	c2 83       	std	Z+2, r28	; 0x02
    1c62:	21 91       	ld	r18, Z+
    1c64:	31 91       	ld	r19, Z+
    1c66:	e2 0f       	add	r30, r18
    1c68:	f3 1f       	adc	r31, r19
    1c6a:	ce 17       	cp	r28, r30
    1c6c:	df 07       	cpc	r29, r31
    1c6e:	69 f4       	brne	.+26     	; 0x1c8a <free+0xaa>
    1c70:	88 81       	ld	r24, Y
    1c72:	99 81       	ldd	r25, Y+1	; 0x01
    1c74:	28 0f       	add	r18, r24
    1c76:	39 1f       	adc	r19, r25
    1c78:	2e 5f       	subi	r18, 0xFE	; 254
    1c7a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c7c:	fa 01       	movw	r30, r20
    1c7e:	31 83       	std	Z+1, r19	; 0x01
    1c80:	20 83       	st	Z, r18
    1c82:	8a 81       	ldd	r24, Y+2	; 0x02
    1c84:	9b 81       	ldd	r25, Y+3	; 0x03
    1c86:	93 83       	std	Z+3, r25	; 0x03
    1c88:	82 83       	std	Z+2, r24	; 0x02
    1c8a:	df 91       	pop	r29
    1c8c:	cf 91       	pop	r28
    1c8e:	08 95       	ret

00001c90 <fdevopen>:
    1c90:	0f 93       	push	r16
    1c92:	1f 93       	push	r17
    1c94:	cf 93       	push	r28
    1c96:	df 93       	push	r29
    1c98:	8c 01       	movw	r16, r24
    1c9a:	eb 01       	movw	r28, r22
    1c9c:	00 97       	sbiw	r24, 0x00	; 0
    1c9e:	31 f4       	brne	.+12     	; 0x1cac <fdevopen+0x1c>
    1ca0:	61 15       	cp	r22, r1
    1ca2:	71 05       	cpc	r23, r1
    1ca4:	19 f4       	brne	.+6      	; 0x1cac <fdevopen+0x1c>
    1ca6:	20 e0       	ldi	r18, 0x00	; 0
    1ca8:	30 e0       	ldi	r19, 0x00	; 0
    1caa:	38 c0       	rjmp	.+112    	; 0x1d1c <fdevopen+0x8c>
    1cac:	81 e0       	ldi	r24, 0x01	; 1
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	6e e0       	ldi	r22, 0x0E	; 14
    1cb2:	70 e0       	ldi	r23, 0x00	; 0
    1cb4:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <calloc>
    1cb8:	fc 01       	movw	r30, r24
    1cba:	9c 01       	movw	r18, r24
    1cbc:	00 97       	sbiw	r24, 0x00	; 0
    1cbe:	71 f1       	breq	.+92     	; 0x1d1c <fdevopen+0x8c>
    1cc0:	80 e8       	ldi	r24, 0x80	; 128
    1cc2:	83 83       	std	Z+3, r24	; 0x03
    1cc4:	20 97       	sbiw	r28, 0x00	; 0
    1cc6:	71 f0       	breq	.+28     	; 0x1ce4 <fdevopen+0x54>
    1cc8:	d3 87       	std	Z+11, r29	; 0x0b
    1cca:	c2 87       	std	Z+10, r28	; 0x0a
    1ccc:	81 e8       	ldi	r24, 0x81	; 129
    1cce:	83 83       	std	Z+3, r24	; 0x03
    1cd0:	80 91 92 01 	lds	r24, 0x0192
    1cd4:	90 91 93 01 	lds	r25, 0x0193
    1cd8:	89 2b       	or	r24, r25
    1cda:	21 f4       	brne	.+8      	; 0x1ce4 <fdevopen+0x54>
    1cdc:	f0 93 93 01 	sts	0x0193, r31
    1ce0:	e0 93 92 01 	sts	0x0192, r30
    1ce4:	01 15       	cp	r16, r1
    1ce6:	11 05       	cpc	r17, r1
    1ce8:	c9 f0       	breq	.+50     	; 0x1d1c <fdevopen+0x8c>
    1cea:	11 87       	std	Z+9, r17	; 0x09
    1cec:	00 87       	std	Z+8, r16	; 0x08
    1cee:	83 81       	ldd	r24, Z+3	; 0x03
    1cf0:	82 60       	ori	r24, 0x02	; 2
    1cf2:	83 83       	std	Z+3, r24	; 0x03
    1cf4:	80 91 94 01 	lds	r24, 0x0194
    1cf8:	90 91 95 01 	lds	r25, 0x0195
    1cfc:	89 2b       	or	r24, r25
    1cfe:	71 f4       	brne	.+28     	; 0x1d1c <fdevopen+0x8c>
    1d00:	f0 93 95 01 	sts	0x0195, r31
    1d04:	e0 93 94 01 	sts	0x0194, r30
    1d08:	80 91 96 01 	lds	r24, 0x0196
    1d0c:	90 91 97 01 	lds	r25, 0x0197
    1d10:	89 2b       	or	r24, r25
    1d12:	21 f4       	brne	.+8      	; 0x1d1c <fdevopen+0x8c>
    1d14:	f0 93 97 01 	sts	0x0197, r31
    1d18:	e0 93 96 01 	sts	0x0196, r30
    1d1c:	c9 01       	movw	r24, r18
    1d1e:	df 91       	pop	r29
    1d20:	cf 91       	pop	r28
    1d22:	1f 91       	pop	r17
    1d24:	0f 91       	pop	r16
    1d26:	08 95       	ret

00001d28 <calloc>:
    1d28:	0f 93       	push	r16
    1d2a:	1f 93       	push	r17
    1d2c:	cf 93       	push	r28
    1d2e:	df 93       	push	r29
    1d30:	68 9f       	mul	r22, r24
    1d32:	80 01       	movw	r16, r0
    1d34:	69 9f       	mul	r22, r25
    1d36:	10 0d       	add	r17, r0
    1d38:	78 9f       	mul	r23, r24
    1d3a:	10 0d       	add	r17, r0
    1d3c:	11 24       	eor	r1, r1
    1d3e:	c8 01       	movw	r24, r16
    1d40:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <malloc>
    1d44:	ec 01       	movw	r28, r24
    1d46:	00 97       	sbiw	r24, 0x00	; 0
    1d48:	29 f0       	breq	.+10     	; 0x1d54 <calloc+0x2c>
    1d4a:	60 e0       	ldi	r22, 0x00	; 0
    1d4c:	70 e0       	ldi	r23, 0x00	; 0
    1d4e:	a8 01       	movw	r20, r16
    1d50:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <memset>
    1d54:	ce 01       	movw	r24, r28
    1d56:	df 91       	pop	r29
    1d58:	cf 91       	pop	r28
    1d5a:	1f 91       	pop	r17
    1d5c:	0f 91       	pop	r16
    1d5e:	08 95       	ret

00001d60 <memset>:
    1d60:	dc 01       	movw	r26, r24
    1d62:	01 c0       	rjmp	.+2      	; 0x1d66 <memset+0x6>
    1d64:	6d 93       	st	X+, r22
    1d66:	41 50       	subi	r20, 0x01	; 1
    1d68:	50 40       	sbci	r21, 0x00	; 0
    1d6a:	e0 f7       	brcc	.-8      	; 0x1d64 <memset+0x4>
    1d6c:	08 95       	ret

00001d6e <_exit>:
    1d6e:	f8 94       	cli

00001d70 <__stop_program>:
    1d70:	ff cf       	rjmp	.-2      	; 0x1d70 <__stop_program>
