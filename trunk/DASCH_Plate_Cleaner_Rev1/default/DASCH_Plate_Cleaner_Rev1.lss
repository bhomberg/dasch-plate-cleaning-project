
DASCH_Plate_Cleaner_Rev1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000021a  00800100  00004456  000044ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004456  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  0080031a  0080031a  00004704  2**0
                  ALLOC
  3 .stab         000027c0  00000000  00000000  00004704  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002591  00000000  00000000  00006ec4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000040  00000000  00000000  00009455  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001b4  00000000  00000000  00009495  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000f1b  00000000  00000000  00009649  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000391  00000000  00000000  0000a564  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002178  00000000  00000000  0000a8f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000120  00000000  00000000  0000ca70  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000008f8  00000000  00000000  0000cb90  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000789  00000000  00000000  0000d488  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000048  00000000  00000000  0000dc11  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 10 1f 	jmp	0x3e20	; 0x3e20 <__vector_11>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	13 e0       	ldi	r17, 0x03	; 3
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e6 e5       	ldi	r30, 0x56	; 86
      a0:	f4 e4       	ldi	r31, 0x44	; 68
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	aa 31       	cpi	r26, 0x1A	; 26
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	13 e0       	ldi	r17, 0x03	; 3
      b4:	aa e1       	ldi	r26, 0x1A	; 26
      b6:	b3 e0       	ldi	r27, 0x03	; 3
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	ae 33       	cpi	r26, 0x3E	; 62
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 be 00 	call	0x17c	; 0x17c <main>
      c6:	0c 94 29 22 	jmp	0x4452	; 0x4452 <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <_ZN16OrangutanDigital11isInputHighEh>:


	// high-level method for reading the input value of the specified pin.  If the voltage on the pin is low,
	// this method will return 0.  Otherwise, it will return a non-zero result that depends on the value of
	// the pin.
	inline static unsigned char isInputHigh(unsigned char pin)
      ce:	48 2f       	mov	r20, r24
		io->pinRegister = 0;
		io->portRegister = 0;
		io->ddrRegister = 0;
		io->bitmask = 0;

		if (pin < 8)			// pin 0 = PD0, ..., 7 = PD7
      d0:	88 30       	cpi	r24, 0x08	; 8
      d2:	58 f4       	brcc	.+22     	; 0xea <_ZN16OrangutanDigital11isInputHighEh+0x1c>
		{
			io->pinRegister = (unsigned char*)&PIND;
			io->portRegister = (unsigned char*)&PORTD;
			io->ddrRegister = (unsigned char*)&DDRD;
			io->bitmask = 1 << pin;
      d4:	81 e0       	ldi	r24, 0x01	; 1
      d6:	90 e0       	ldi	r25, 0x00	; 0
      d8:	02 c0       	rjmp	.+4      	; 0xde <_ZN16OrangutanDigital11isInputHighEh+0x10>
      da:	88 0f       	add	r24, r24
      dc:	99 1f       	adc	r25, r25
      de:	4a 95       	dec	r20
      e0:	e2 f7       	brpl	.-8      	; 0xda <_ZN16OrangutanDigital11isInputHighEh+0xc>
      e2:	98 2f       	mov	r25, r24
      e4:	e9 e2       	ldi	r30, 0x29	; 41
      e6:	f0 e0       	ldi	r31, 0x00	; 0
      e8:	36 c0       	rjmp	.+108    	; 0x156 <_ZN16OrangutanDigital11isInputHighEh+0x88>
		}

#if defined(_ORANGUTAN_SVP) || defined(_ORANGUTAN_X2)

		else if (pin < 16)		// pin 8 = PB0, ..., 15 = PB7
      ea:	80 31       	cpi	r24, 0x10	; 16
      ec:	78 f4       	brcc	.+30     	; 0x10c <_ZN16OrangutanDigital11isInputHighEh+0x3e>
		{
			io->pinRegister = (unsigned char*)&PINB;
			io->portRegister = (unsigned char*)&PORTB;
			io->ddrRegister = (unsigned char*)&DDRB;
			io->bitmask = 1 << (pin - 8);
      ee:	28 2f       	mov	r18, r24
      f0:	30 e0       	ldi	r19, 0x00	; 0
      f2:	28 50       	subi	r18, 0x08	; 8
      f4:	30 40       	sbci	r19, 0x00	; 0
      f6:	81 e0       	ldi	r24, 0x01	; 1
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	02 c0       	rjmp	.+4      	; 0x100 <_ZN16OrangutanDigital11isInputHighEh+0x32>
      fc:	88 0f       	add	r24, r24
      fe:	99 1f       	adc	r25, r25
     100:	2a 95       	dec	r18
     102:	e2 f7       	brpl	.-8      	; 0xfc <_ZN16OrangutanDigital11isInputHighEh+0x2e>
     104:	98 2f       	mov	r25, r24
     106:	e3 e2       	ldi	r30, 0x23	; 35
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	25 c0       	rjmp	.+74     	; 0x156 <_ZN16OrangutanDigital11isInputHighEh+0x88>
		}
		else if (pin < 24)		// pin 16 = PC0, ..., 23 = PC7
     10c:	88 31       	cpi	r24, 0x18	; 24
     10e:	78 f4       	brcc	.+30     	; 0x12e <_ZN16OrangutanDigital11isInputHighEh+0x60>
		{
			io->pinRegister = (unsigned char*)&PINC;
			io->portRegister = (unsigned char*)&PORTC;
			io->ddrRegister = (unsigned char*)&DDRC;
			io->bitmask = 1 << (pin - 16);
     110:	28 2f       	mov	r18, r24
     112:	30 e0       	ldi	r19, 0x00	; 0
     114:	20 51       	subi	r18, 0x10	; 16
     116:	30 40       	sbci	r19, 0x00	; 0
     118:	81 e0       	ldi	r24, 0x01	; 1
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	02 c0       	rjmp	.+4      	; 0x122 <_ZN16OrangutanDigital11isInputHighEh+0x54>
     11e:	88 0f       	add	r24, r24
     120:	99 1f       	adc	r25, r25
     122:	2a 95       	dec	r18
     124:	e2 f7       	brpl	.-8      	; 0x11e <_ZN16OrangutanDigital11isInputHighEh+0x50>
     126:	98 2f       	mov	r25, r24
     128:	e6 e2       	ldi	r30, 0x26	; 38
     12a:	f0 e0       	ldi	r31, 0x00	; 0
     12c:	14 c0       	rjmp	.+40     	; 0x156 <_ZN16OrangutanDigital11isInputHighEh+0x88>
		}
		else if (pin < 32)		// pin 24 = PA7, ..., 31 = PA0
     12e:	80 32       	cpi	r24, 0x20	; 32
     130:	20 f0       	brcs	.+8      	; 0x13a <_ZN16OrangutanDigital11isInputHighEh+0x6c>
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	e0 e0       	ldi	r30, 0x00	; 0
     136:	f0 e0       	ldi	r31, 0x00	; 0
     138:	0e c0       	rjmp	.+28     	; 0x156 <_ZN16OrangutanDigital11isInputHighEh+0x88>
		{
			io->pinRegister = (unsigned char*)&PINA;
			io->portRegister = (unsigned char*)&PORTA;
			io->ddrRegister = (unsigned char*)&DDRA;
			io->bitmask = 1 << (31 - pin);
     13a:	2f e1       	ldi	r18, 0x1F	; 31
     13c:	30 e0       	ldi	r19, 0x00	; 0
     13e:	28 1b       	sub	r18, r24
     140:	31 09       	sbc	r19, r1
     142:	81 e0       	ldi	r24, 0x01	; 1
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	02 c0       	rjmp	.+4      	; 0x14c <_ZN16OrangutanDigital11isInputHighEh+0x7e>
     148:	88 0f       	add	r24, r24
     14a:	99 1f       	adc	r25, r25
     14c:	2a 95       	dec	r18
     14e:	e2 f7       	brpl	.-8      	; 0x148 <_ZN16OrangutanDigital11isInputHighEh+0x7a>
     150:	98 2f       	mov	r25, r24
     152:	e0 e2       	ldi	r30, 0x20	; 32
     154:	f0 e0       	ldi	r31, 0x00	; 0

	// low-level method for reading the value of the PIN register for an pin or set of pins
	// described by an IOStruct pointer.
	inline static unsigned char getInputValue(struct IOStruct* ioPin)
	{
		return *(ioPin->pinRegister) & ioPin->bitmask;
     156:	80 81       	ld	r24, Z
	inline static unsigned char isInputHigh(unsigned char pin)
	{
		struct IOStruct registers;
		getIORegisters(&registers, pin);
		return getInputValue(&registers);
	}
     158:	89 23       	and	r24, r25
     15a:	08 95       	ret

0000015c <__cxa_guard_acquire>:

extern "C" int __cxa_guard_acquire(__guard *); 
extern "C" void __cxa_guard_release (__guard *); 
extern "C" void __cxa_guard_abort (__guard *); 

int __cxa_guard_acquire(__guard *g) {return !*(char *)(g);}; 
     15c:	fc 01       	movw	r30, r24
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	80 81       	ld	r24, Z
     164:	88 23       	and	r24, r24
     166:	11 f4       	brne	.+4      	; 0x16c <__cxa_guard_acquire+0x10>
     168:	21 e0       	ldi	r18, 0x01	; 1
     16a:	30 e0       	ldi	r19, 0x00	; 0
     16c:	c9 01       	movw	r24, r18
     16e:	08 95       	ret

00000170 <__cxa_guard_release>:
void __cxa_guard_release (__guard *g) {*(char *)g = 1;}; 
     170:	fc 01       	movw	r30, r24
     172:	81 e0       	ldi	r24, 0x01	; 1
     174:	80 83       	st	Z, r24
     176:	08 95       	ret

00000178 <__cxa_guard_abort>:
void __cxa_guard_abort (__guard *) {}; 
     178:	08 95       	ret

0000017a <__cxa_pure_virtual>:

extern "C" void __cxa_pure_virtual(void); 
void __cxa_pure_virtual(void) {}; 
     17a:	08 95       	ret

0000017c <main>:
		unsigned int iNull17 : 1;
	} bits_in_inputByte1;
	char inputByte1;
} u_inputByte1;
  
int main()   
     17c:	2f 92       	push	r2
     17e:	3f 92       	push	r3
     180:	4f 92       	push	r4
     182:	5f 92       	push	r5
     184:	6f 92       	push	r6
     186:	7f 92       	push	r7
     188:	8f 92       	push	r8
     18a:	9f 92       	push	r9
     18c:	af 92       	push	r10
     18e:	bf 92       	push	r11
     190:	cf 92       	push	r12
     192:	df 92       	push	r13
     194:	ef 92       	push	r14
     196:	ff 92       	push	r15
     198:	0f 93       	push	r16
     19a:	1f 93       	push	r17
     19c:	df 93       	push	r29
     19e:	cf 93       	push	r28
     1a0:	cd b7       	in	r28, 0x3d	; 61
     1a2:	de b7       	in	r29, 0x3e	; 62
     1a4:	6e 97       	sbiw	r28, 0x1e	; 30
     1a6:	0f b6       	in	r0, 0x3f	; 63
     1a8:	f8 94       	cli
     1aa:	de bf       	out	0x3e, r29	; 62
     1ac:	0f be       	out	0x3f, r0	; 63
     1ae:	cd bf       	out	0x3d, r28	; 61
	int totallength3 = 2, totallength4 = 2, totallength5 = 2;
	int m2HalfPlate = 2000, m2WholePlate = 2000, m1LoadPlate = 2000, m2HomeFix = 2000;
	int m2Brush1Step = 2000, m2Brush2Step = 2000, m2Dry1Step = 2000, m2Dry2Step = 2000;
	int m2LoadBack = 2000, m2Dry1StepWhole = 2000, m2Brush2StepWhole = 2000;
    
	u_motorByte0.motorByte0 = 0;  // initialize motorByte0
     1b0:	10 92 1a 03 	sts	0x031A, r1
	u_motorByte1.motorByte1 = 0;  // initialize motorByte1
     1b4:	10 92 1b 03 	sts	0x031B, r1
	u_outputByte0.outputByte0 = 255;  // initialize outputByte0
     1b8:	8f ef       	ldi	r24, 0xFF	; 255
     1ba:	80 93 1c 03 	sts	0x031C, r24
	u_outputByte1.outputByte1 = 255;  // initialize outputByte1
     1be:	80 93 1d 03 	sts	0x031D, r24
	u_inputByte0.inputByte0 = 0;  // initialize inputByte0
     1c2:	10 92 1e 03 	sts	0x031E, r1
	u_inputByte1.inputByte1 = 0;  // initialize inputByte1
     1c6:	10 92 1f 03 	sts	0x031F, r1
	
	OrangutanLCD::clear();
     1ca:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
	OrangutanLCD::print("BEGIN ");
     1ce:	80 e0       	ldi	r24, 0x00	; 0
     1d0:	91 e0       	ldi	r25, 0x01	; 1
     1d2:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
// another C++ file.
inline unsigned long get_ms() { return OrangutanTime::ms(); }
inline unsigned long millis() { return OrangutanTime::ms(); }

inline void delay(unsigned int milliseconds) { OrangutanTime::delayMilliseconds(milliseconds); }
inline void delay_ms(unsigned int milliseconds) { OrangutanTime::delayMilliseconds(milliseconds); }
     1d6:	88 ee       	ldi	r24, 0xE8	; 232
     1d8:	93 e0       	ldi	r25, 0x03	; 3
     1da:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>
	
	delay_ms(1000);

    i2c_init();                                // init I2C interface
     1de:	0e 94 35 1a 	call	0x346a	; 0x346a <_Z8i2c_initv>
	
    OrangutanLCD::print("INIT ");
     1e2:	87 e0       	ldi	r24, 0x07	; 7
     1e4:	91 e0       	ldi	r25, 0x01	; 1
     1e6:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
	
    ret1 = i2c_start(I2C1+I2C_WRITE);       // set device address and write mode
     1ea:	80 e4       	ldi	r24, 0x40	; 64
     1ec:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
     1f0:	c8 2e       	mov	r12, r24
	i2c_stop();
     1f2:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>
	ret2 = i2c_start(I2C2+I2C_WRITE);
     1f6:	82 e4       	ldi	r24, 0x42	; 66
     1f8:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
     1fc:	08 2f       	mov	r16, r24
	i2c_stop();
     1fe:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>
	ret3 = i2c_start(I2C3+I2C_WRITE);
     202:	84 e4       	ldi	r24, 0x44	; 68
     204:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
     208:	e8 2e       	mov	r14, r24
	i2c_stop();
     20a:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>
    
	OrangutanLCD::clear();
     20e:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
	OrangutanLCD::print("START ");
     212:	8d e0       	ldi	r24, 0x0D	; 13
     214:	91 e0       	ldi	r25, 0x01	; 1
     216:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
	
	if ( ret1 | ret2 | ret3 ) {
     21a:	10 e0       	ldi	r17, 0x00	; 0
     21c:	dd 24       	eor	r13, r13
     21e:	0c 29       	or	r16, r12
     220:	1d 29       	or	r17, r13
     222:	ff 24       	eor	r15, r15
     224:	0e 29       	or	r16, r14
     226:	1f 29       	or	r17, r15
     228:	01 2b       	or	r16, r17
     22a:	61 f0       	breq	.+24     	; 0x244 <main+0xc8>
        /* failed to issue start condition, possibly no device found */
        
		OrangutanLCD::print("NAK ");
     22c:	84 e1       	ldi	r24, 0x14	; 20
     22e:	91 e0       	ldi	r25, 0x01	; 1
     230:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
		i2c_stop();
     234:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>
		OrangutanLCD::print("STOP ");
     238:	89 e1       	ldi	r24, 0x19	; 25
     23a:	91 e0       	ldi	r25, 0x01	; 1
     23c:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     240:	0c 94 43 18 	jmp	0x3086	; 0x3086 <main+0x2f0a>
    }
	else {
		OrangutanLCD::print("ACK ");
     244:	8f e1       	ldi	r24, 0x1F	; 31
     246:	91 e0       	ldi	r25, 0x01	; 1
     248:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
        /* issuing start condition ok, device accessible */
		OrangutanLCD::print("BINIT ");
     24c:	84 e2       	ldi	r24, 0x24	; 36
     24e:	91 e0       	ldi	r25, 0x01	; 1
     250:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
		i2c_start(I2C1+I2C_WRITE);
     254:	80 e4       	ldi	r24, 0x40	; 64
     256:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
		i2c_write(0x6);
     25a:	86 e0       	ldi	r24, 0x06	; 6
     25c:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
		i2c_write(0x0);
     260:	80 e0       	ldi	r24, 0x00	; 0
     262:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
		i2c_write(0x0);
     266:	80 e0       	ldi	r24, 0x00	; 0
     268:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
		i2c_stop();
     26c:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>
		
		i2c_start(I2C2+I2C_WRITE);
     270:	82 e4       	ldi	r24, 0x42	; 66
     272:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
		i2c_write(0x6);
     276:	86 e0       	ldi	r24, 0x06	; 6
     278:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
		i2c_write(0x0);
     27c:	80 e0       	ldi	r24, 0x00	; 0
     27e:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
		i2c_write(0x0);
     282:	80 e0       	ldi	r24, 0x00	; 0
     284:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
		i2c_stop();
     288:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>
     28c:	88 ee       	ldi	r24, 0xE8	; 232
     28e:	93 e0       	ldi	r25, 0x03	; 3
     290:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>


		delay_ms(1000);
		OrangutanLCD::clear();
     294:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
		int counter = 0;
		int print0 = 1, print6 = 1, print15 = 1, print24 = 1, print28 = 1, print35 = 1;
		int counterRef = 0, counterRef14 = 0, counterRef26 = 0, counterRefFive = 0, counterRef30 = 0;
		int pWait = 100, mWait = 100, kWait = 100;

		if(OrangutanDigital::isInputHigh(IO_D3))
     298:	83 e0       	ldi	r24, 0x03	; 3
     29a:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     29e:	88 23       	and	r24, r24
     2a0:	09 f4       	brne	.+2      	; 0x2a4 <main+0x128>
     2a2:	df c6       	rjmp	.+3518   	; 0x1062 <main+0xee6>
		{
			OrangutanLCD::print("CHECK");
     2a4:	8b e2       	ldi	r24, 0x2B	; 43
     2a6:	91 e0       	ldi	r25, 0x01	; 1
     2a8:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     2ac:	88 ee       	ldi	r24, 0xE8	; 232
     2ae:	93 e0       	ldi	r25, 0x03	; 3
     2b0:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>
     2b4:	1a 82       	std	Y+2, r1	; 0x02
     2b6:	19 82       	std	Y+1, r1	; 0x01
     2b8:	66 24       	eor	r6, r6
     2ba:	77 24       	eor	r7, r7
     2bc:	22 24       	eor	r2, r2
     2be:	33 24       	eor	r3, r3
     2c0:	44 24       	eor	r4, r4
     2c2:	55 24       	eor	r5, r5
     2c4:	1c 8e       	std	Y+28, r1	; 0x1c
     2c6:	1b 8e       	std	Y+27, r1	; 0x1b
     2c8:	1e 8e       	std	Y+30, r1	; 0x1e
     2ca:	1d 8e       	std	Y+29, r1	; 0x1d
     2cc:	cc 24       	eor	r12, r12
     2ce:	dd 24       	eor	r13, r13
     2d0:	aa 24       	eor	r10, r10
     2d2:	bb 24       	eor	r11, r11
     2d4:	11 e0       	ldi	r17, 0x01	; 1
     2d6:	e1 2e       	mov	r14, r17
     2d8:	f1 2c       	mov	r15, r1
     2da:	1c 86       	std	Y+12, r1	; 0x0c
     2dc:	1b 86       	std	Y+11, r1	; 0x0b
     2de:	1a 86       	std	Y+10, r1	; 0x0a
     2e0:	19 86       	std	Y+9, r1	; 0x09
     2e2:	88 24       	eor	r8, r8
     2e4:	99 24       	eor	r9, r9
     2e6:	00 e0       	ldi	r16, 0x00	; 0
     2e8:	10 e0       	ldi	r17, 0x00	; 0
			int button = 1, counterRefPush = 0, counterRefRel = 0, stateButton = 0;
			int print = 0;

			while(state != -1){

				i2c_start(I2C3+I2C_WRITE);						// first start condition (write)
     2ea:	84 e4       	ldi	r24, 0x44	; 68
     2ec:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				i2c_write(0x0);								// write command byte
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_start(I2C3+I2C_READ);						// second start condition (read)
     2f6:	85 e4       	ldi	r24, 0x45	; 69
     2f8:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				u_inputByte0.inputByte0 = i2c_readAck();				// read first byte and send Ack, requesting more
     2fc:	0e 94 a6 1a 	call	0x354c	; 0x354c <_Z11i2c_readAckv>
     300:	80 93 1e 03 	sts	0x031E, r24
   		     	u_inputByte1.inputByte1 = i2c_readNak();				// read second byte and send stop condition
     304:	0e 94 b0 1a 	call	0x3560	; 0x3560 <_Z11i2c_readNakv>
     308:	80 93 1f 03 	sts	0x031F, r24
  	 	     	i2c_stop();								// set stop conditon = release bus 		
     30c:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>
				
				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
     310:	81 14       	cp	r8, r1
     312:	91 04       	cpc	r9, r1
     314:	11 f0       	breq	.+4      	; 0x31a <main+0x19e>
     316:	0c 94 48 18 	jmp	0x3090	; 0x3090 <main+0x2f14>
     31a:	80 e0       	ldi	r24, 0x00	; 0
     31c:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     320:	88 23       	and	r24, r24
     322:	b9 f1       	breq	.+110    	; 0x392 <main+0x216>
     324:	dc 86       	std	Y+12, r13	; 0x0c
     326:	cb 86       	std	Y+11, r12	; 0x0b
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
					if(counter - counterRefPush > 15){
     328:	c6 01       	movw	r24, r12
     32a:	2b 85       	ldd	r18, Y+11	; 0x0b
     32c:	3c 85       	ldd	r19, Y+12	; 0x0c
     32e:	82 1b       	sub	r24, r18
     330:	93 0b       	sbc	r25, r19
     332:	40 97       	sbiw	r24, 0x10	; 16
     334:	54 f0       	brlt	.+20     	; 0x34a <main+0x1ce>
						if(!OrangutanDigital::isInputHigh(IO_D0)){
     336:	80 e0       	ldi	r24, 0x00	; 0
     338:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     33c:	88 23       	and	r24, r24
     33e:	11 f0       	breq	.+4      	; 0x344 <main+0x1c8>
     340:	0c 94 50 18 	jmp	0x30a0	; 0x30a0 <main+0x2f24>
     344:	da 86       	std	Y+10, r13	; 0x0a
     346:	c9 86       	std	Y+9, r12	; 0x09
     348:	0c c0       	rjmp	.+24     	; 0x362 <main+0x1e6>
							counterRefRel = counter;
							stateButton = 2;
						}
					}
					else if(!OrangutanDigital::isInputHigh(IO_D0)){
     34a:	80 e0       	ldi	r24, 0x00	; 0
     34c:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     350:	88 23       	and	r24, r24
     352:	11 f0       	breq	.+4      	; 0x358 <main+0x1dc>
     354:	0c 94 50 18 	jmp	0x30a0	; 0x30a0 <main+0x2f24>
     358:	16 c0       	rjmp	.+44     	; 0x386 <main+0x20a>
						stateButton = 0;
					}
				}
				if(stateButton == 2){
     35a:	32 e0       	ldi	r19, 0x02	; 2
     35c:	83 16       	cp	r8, r19
     35e:	91 04       	cpc	r9, r1
     360:	c1 f4       	brne	.+48     	; 0x392 <main+0x216>
					if(OrangutanDigital::isInputHigh(IO_D0)){
     362:	80 e0       	ldi	r24, 0x00	; 0
     364:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     368:	88 23       	and	r24, r24
     36a:	21 f0       	breq	.+8      	; 0x374 <main+0x1f8>
     36c:	dc 86       	std	Y+12, r13	; 0x0c
     36e:	cb 86       	std	Y+11, r12	; 0x0b
     370:	0c 94 50 18 	jmp	0x30a0	; 0x30a0 <main+0x2f24>
						stateButton = 1;
						counterRefPush = counter;
					}
					else if(counter - counterRefRel > 15){
     374:	c6 01       	movw	r24, r12
     376:	49 85       	ldd	r20, Y+9	; 0x09
     378:	5a 85       	ldd	r21, Y+10	; 0x0a
     37a:	84 1b       	sub	r24, r20
     37c:	95 0b       	sbc	r25, r21
     37e:	40 97       	sbiw	r24, 0x10	; 16
     380:	2c f0       	brlt	.+10     	; 0x38c <main+0x210>
     382:	ee 24       	eor	r14, r14
     384:	ff 24       	eor	r15, r15
     386:	88 24       	eor	r8, r8
     388:	99 24       	eor	r9, r9
     38a:	03 c0       	rjmp	.+6      	; 0x392 <main+0x216>
     38c:	b2 e0       	ldi	r27, 0x02	; 2
     38e:	8b 2e       	mov	r8, r27
     390:	91 2c       	mov	r9, r1
					}
				}

				//state conversions

				if(state == 0 && button == 0){
     392:	8d 8d       	ldd	r24, Y+29	; 0x1d
     394:	9e 8d       	ldd	r25, Y+30	; 0x1e
     396:	89 2b       	or	r24, r25
     398:	71 f4       	brne	.+28     	; 0x3b6 <main+0x23a>
     39a:	e1 14       	cp	r14, r1
     39c:	f1 04       	cpc	r15, r1
     39e:	09 f0       	breq	.+2      	; 0x3a2 <main+0x226>
     3a0:	6b c0       	rjmp	.+214    	; 0x478 <main+0x2fc>
					OrangutanLCD::clear();
     3a2:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     3a6:	56 01       	movw	r10, r12
     3a8:	a1 e0       	ldi	r26, 0x01	; 1
     3aa:	ea 2e       	mov	r14, r26
     3ac:	f1 2c       	mov	r15, r1
     3ae:	00 e0       	ldi	r16, 0x00	; 0
     3b0:	10 e0       	ldi	r17, 0x00	; 0
     3b2:	0c 94 55 18 	jmp	0x30aa	; 0x30aa <main+0x2f2e>
					button = 1;
					state = 1;
					counterRef = counter;
					print = 0;
				}
				if(state == 1 && button == 0){
     3b6:	ed 8d       	ldd	r30, Y+29	; 0x1d
     3b8:	fe 8d       	ldd	r31, Y+30	; 0x1e
     3ba:	31 97       	sbiw	r30, 0x01	; 1
     3bc:	79 f4       	brne	.+30     	; 0x3dc <main+0x260>
     3be:	e1 14       	cp	r14, r1
     3c0:	f1 04       	cpc	r15, r1
     3c2:	11 f0       	breq	.+4      	; 0x3c8 <main+0x24c>
     3c4:	0c 94 55 18 	jmp	0x30aa	; 0x30aa <main+0x2f2e>
					OrangutanLCD::clear();
     3c8:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     3cc:	56 01       	movw	r10, r12
     3ce:	f1 e0       	ldi	r31, 0x01	; 1
     3d0:	ef 2e       	mov	r14, r31
     3d2:	f1 2c       	mov	r15, r1
     3d4:	00 e0       	ldi	r16, 0x00	; 0
     3d6:	10 e0       	ldi	r17, 0x00	; 0
     3d8:	0c 94 5b 18 	jmp	0x30b6	; 0x30b6 <main+0x2f3a>
					button = 1;
					state = 2;
					counterRef = counter;
					print = 0;
				}
				if(state == 2 && button == 0){
     3dc:	2d 8d       	ldd	r18, Y+29	; 0x1d
     3de:	3e 8d       	ldd	r19, Y+30	; 0x1e
     3e0:	22 30       	cpi	r18, 0x02	; 2
     3e2:	31 05       	cpc	r19, r1
     3e4:	79 f4       	brne	.+30     	; 0x404 <main+0x288>
     3e6:	e1 14       	cp	r14, r1
     3e8:	f1 04       	cpc	r15, r1
     3ea:	11 f0       	breq	.+4      	; 0x3f0 <main+0x274>
     3ec:	0c 94 5b 18 	jmp	0x30b6	; 0x30b6 <main+0x2f3a>
					OrangutanLCD::clear();
     3f0:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     3f4:	56 01       	movw	r10, r12
     3f6:	e1 e0       	ldi	r30, 0x01	; 1
     3f8:	ee 2e       	mov	r14, r30
     3fa:	f1 2c       	mov	r15, r1
     3fc:	00 e0       	ldi	r16, 0x00	; 0
     3fe:	10 e0       	ldi	r17, 0x00	; 0
     400:	0c 94 61 18 	jmp	0x30c2	; 0x30c2 <main+0x2f46>
					button = 1;
					state = 3;
					counterRef = counter;
					print = 0;
				}
				if(state == 3 && button == 0){
     404:	4d 8d       	ldd	r20, Y+29	; 0x1d
     406:	5e 8d       	ldd	r21, Y+30	; 0x1e
     408:	43 30       	cpi	r20, 0x03	; 3
     40a:	51 05       	cpc	r21, r1
     40c:	79 f4       	brne	.+30     	; 0x42c <main+0x2b0>
     40e:	e1 14       	cp	r14, r1
     410:	f1 04       	cpc	r15, r1
     412:	11 f0       	breq	.+4      	; 0x418 <main+0x29c>
     414:	0c 94 61 18 	jmp	0x30c2	; 0x30c2 <main+0x2f46>
					OrangutanLCD::clear();
     418:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     41c:	56 01       	movw	r10, r12
     41e:	71 e0       	ldi	r23, 0x01	; 1
     420:	e7 2e       	mov	r14, r23
     422:	f1 2c       	mov	r15, r1
     424:	00 e0       	ldi	r16, 0x00	; 0
     426:	10 e0       	ldi	r17, 0x00	; 0
     428:	0c 94 67 18 	jmp	0x30ce	; 0x30ce <main+0x2f52>
					button = 1;
					state = 4;
					counterRef = counter;
					print = 0;
				}
				if(state == 4 && button == 0){
     42c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     42e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     430:	04 97       	sbiw	r24, 0x04	; 4
     432:	79 f4       	brne	.+30     	; 0x452 <main+0x2d6>
     434:	e1 14       	cp	r14, r1
     436:	f1 04       	cpc	r15, r1
     438:	11 f0       	breq	.+4      	; 0x43e <main+0x2c2>
     43a:	0c 94 67 18 	jmp	0x30ce	; 0x30ce <main+0x2f52>
					OrangutanLCD::clear();
     43e:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     442:	56 01       	movw	r10, r12
     444:	61 e0       	ldi	r22, 0x01	; 1
     446:	e6 2e       	mov	r14, r22
     448:	f1 2c       	mov	r15, r1
     44a:	00 e0       	ldi	r16, 0x00	; 0
     44c:	10 e0       	ldi	r17, 0x00	; 0
     44e:	0c 94 6d 18 	jmp	0x30da	; 0x30da <main+0x2f5e>
					button = 1;
					state = 5;
					counterRef = counter;
					print = 0;
				}
				if(state == 5 && button == 0){
     452:	ed 8d       	ldd	r30, Y+29	; 0x1d
     454:	fe 8d       	ldd	r31, Y+30	; 0x1e
     456:	35 97       	sbiw	r30, 0x05	; 5
     458:	79 f4       	brne	.+30     	; 0x478 <main+0x2fc>
     45a:	e1 14       	cp	r14, r1
     45c:	f1 04       	cpc	r15, r1
     45e:	11 f0       	breq	.+4      	; 0x464 <main+0x2e8>
     460:	0c 94 6d 18 	jmp	0x30da	; 0x30da <main+0x2f5e>
					OrangutanLCD::clear();
     464:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     468:	56 01       	movw	r10, r12
     46a:	51 e0       	ldi	r21, 0x01	; 1
     46c:	e5 2e       	mov	r14, r21
     46e:	f1 2c       	mov	r15, r1
     470:	00 e0       	ldi	r16, 0x00	; 0
     472:	10 e0       	ldi	r17, 0x00	; 0
     474:	0c 94 73 18 	jmp	0x30e6	; 0x30e6 <main+0x2f6a>
					button = 1;
					state = 6;
					counterRef = counter;
					print = 0;
				}
				if(state == 6 && button == 0){
     478:	2d 8d       	ldd	r18, Y+29	; 0x1d
     47a:	3e 8d       	ldd	r19, Y+30	; 0x1e
     47c:	26 30       	cpi	r18, 0x06	; 6
     47e:	31 05       	cpc	r19, r1
     480:	79 f4       	brne	.+30     	; 0x4a0 <main+0x324>
     482:	e1 14       	cp	r14, r1
     484:	f1 04       	cpc	r15, r1
     486:	11 f0       	breq	.+4      	; 0x48c <main+0x310>
     488:	0c 94 73 18 	jmp	0x30e6	; 0x30e6 <main+0x2f6a>
					OrangutanLCD::clear();
     48c:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     490:	56 01       	movw	r10, r12
     492:	41 e0       	ldi	r20, 0x01	; 1
     494:	e4 2e       	mov	r14, r20
     496:	f1 2c       	mov	r15, r1
     498:	00 e0       	ldi	r16, 0x00	; 0
     49a:	10 e0       	ldi	r17, 0x00	; 0
     49c:	0c 94 79 18 	jmp	0x30f2	; 0x30f2 <main+0x2f76>
					button = 1;
					state = 7;
					counterRef = counter;
					print = 0;
				}
				if(state == 7 && button == 0){
     4a0:	4d 8d       	ldd	r20, Y+29	; 0x1d
     4a2:	5e 8d       	ldd	r21, Y+30	; 0x1e
     4a4:	47 30       	cpi	r20, 0x07	; 7
     4a6:	51 05       	cpc	r21, r1
     4a8:	79 f4       	brne	.+30     	; 0x4c8 <main+0x34c>
     4aa:	e1 14       	cp	r14, r1
     4ac:	f1 04       	cpc	r15, r1
     4ae:	11 f0       	breq	.+4      	; 0x4b4 <main+0x338>
     4b0:	0c 94 79 18 	jmp	0x30f2	; 0x30f2 <main+0x2f76>
					OrangutanLCD::clear();
     4b4:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     4b8:	56 01       	movw	r10, r12
     4ba:	31 e0       	ldi	r19, 0x01	; 1
     4bc:	e3 2e       	mov	r14, r19
     4be:	f1 2c       	mov	r15, r1
     4c0:	00 e0       	ldi	r16, 0x00	; 0
     4c2:	10 e0       	ldi	r17, 0x00	; 0
     4c4:	0c 94 7f 18 	jmp	0x30fe	; 0x30fe <main+0x2f82>
					button = 1;
					state = 8;
					counterRef = counter;
					print = 0;
				}
				if(state == 8 && button == 0){
     4c8:	8d 8d       	ldd	r24, Y+29	; 0x1d
     4ca:	9e 8d       	ldd	r25, Y+30	; 0x1e
     4cc:	08 97       	sbiw	r24, 0x08	; 8
     4ce:	29 f4       	brne	.+10     	; 0x4da <main+0x35e>
     4d0:	e1 14       	cp	r14, r1
     4d2:	f1 04       	cpc	r15, r1
     4d4:	51 f0       	breq	.+20     	; 0x4ea <main+0x36e>
     4d6:	0c 94 7f 18 	jmp	0x30fe	; 0x30fe <main+0x2f82>
					state = 9;
					counterRef = counter;
					print = 0;
				}
				if(state == 9 && button == 0){
     4da:	ed 8d       	ldd	r30, Y+29	; 0x1d
     4dc:	fe 8d       	ldd	r31, Y+30	; 0x1e
     4de:	39 97       	sbiw	r30, 0x09	; 9
     4e0:	71 f4       	brne	.+28     	; 0x4fe <main+0x382>
     4e2:	e1 14       	cp	r14, r1
     4e4:	f1 04       	cpc	r15, r1
     4e6:	09 f0       	breq	.+2      	; 0x4ea <main+0x36e>
     4e8:	54 c0       	rjmp	.+168    	; 0x592 <main+0x416>
					OrangutanLCD::clear();
     4ea:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     4ee:	56 01       	movw	r10, r12
     4f0:	21 e0       	ldi	r18, 0x01	; 1
     4f2:	e2 2e       	mov	r14, r18
     4f4:	f1 2c       	mov	r15, r1
     4f6:	00 e0       	ldi	r16, 0x00	; 0
     4f8:	10 e0       	ldi	r17, 0x00	; 0
     4fa:	0c 94 85 18 	jmp	0x310a	; 0x310a <main+0x2f8e>
					button = 1;
					state = 10;
					counterRef = counter;
					print = 0;
				}
				if(state == 10 && button == 0){
     4fe:	2d 8d       	ldd	r18, Y+29	; 0x1d
     500:	3e 8d       	ldd	r19, Y+30	; 0x1e
     502:	2a 30       	cpi	r18, 0x0A	; 10
     504:	31 05       	cpc	r19, r1
     506:	39 f4       	brne	.+14     	; 0x516 <main+0x39a>
     508:	e1 14       	cp	r14, r1
     50a:	f1 04       	cpc	r15, r1
     50c:	11 f4       	brne	.+4      	; 0x512 <main+0x396>
     50e:	0c 94 8b 18 	jmp	0x3116	; 0x3116 <main+0x2f9a>
     512:	0c 94 85 18 	jmp	0x310a	; 0x310a <main+0x2f8e>
					button = 1;
					state = 11;
					counterRef = counter;
					print = 0;
				}
				if(state == 11 && button == 0){
     516:	4d 8d       	ldd	r20, Y+29	; 0x1d
     518:	5e 8d       	ldd	r21, Y+30	; 0x1e
     51a:	4b 30       	cpi	r20, 0x0B	; 11
     51c:	51 05       	cpc	r21, r1
     51e:	79 f4       	brne	.+30     	; 0x53e <main+0x3c2>
     520:	e1 14       	cp	r14, r1
     522:	f1 04       	cpc	r15, r1
     524:	11 f0       	breq	.+4      	; 0x52a <main+0x3ae>
     526:	0c 94 91 18 	jmp	0x3122	; 0x3122 <main+0x2fa6>
					OrangutanLCD::clear();
     52a:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     52e:	56 01       	movw	r10, r12
     530:	91 e0       	ldi	r25, 0x01	; 1
     532:	e9 2e       	mov	r14, r25
     534:	f1 2c       	mov	r15, r1
     536:	00 e0       	ldi	r16, 0x00	; 0
     538:	10 e0       	ldi	r17, 0x00	; 0
     53a:	0c 94 97 18 	jmp	0x312e	; 0x312e <main+0x2fb2>
					button = 1;
					state = 12;
					counterRef = counter;
					print = 0;
				}
				if(state == 12 && button == 0){
     53e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     540:	9e 8d       	ldd	r25, Y+30	; 0x1e
     542:	0c 97       	sbiw	r24, 0x0c	; 12
     544:	39 f4       	brne	.+14     	; 0x554 <main+0x3d8>
     546:	e1 14       	cp	r14, r1
     548:	f1 04       	cpc	r15, r1
     54a:	11 f4       	brne	.+4      	; 0x550 <main+0x3d4>
     54c:	0c 94 9d 18 	jmp	0x313a	; 0x313a <main+0x2fbe>
     550:	0c 94 97 18 	jmp	0x312e	; 0x312e <main+0x2fb2>
					button = 1;
					state = 13;
					counterRef = counter;
					print = 0;
				}
				if(state == 13 && button == 0){
     554:	ed 8d       	ldd	r30, Y+29	; 0x1d
     556:	fe 8d       	ldd	r31, Y+30	; 0x1e
     558:	3d 97       	sbiw	r30, 0x0d	; 13
     55a:	79 f4       	brne	.+30     	; 0x57a <main+0x3fe>
     55c:	e1 14       	cp	r14, r1
     55e:	f1 04       	cpc	r15, r1
     560:	11 f0       	breq	.+4      	; 0x566 <main+0x3ea>
     562:	0c 94 a3 18 	jmp	0x3146	; 0x3146 <main+0x2fca>
					OrangutanLCD::clear();
     566:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     56a:	56 01       	movw	r10, r12
     56c:	81 e0       	ldi	r24, 0x01	; 1
     56e:	e8 2e       	mov	r14, r24
     570:	f1 2c       	mov	r15, r1
     572:	00 e0       	ldi	r16, 0x00	; 0
     574:	10 e0       	ldi	r17, 0x00	; 0
     576:	0c 94 a9 18 	jmp	0x3152	; 0x3152 <main+0x2fd6>
					button = 1;
					state = 14;
					counterRef = counter;
					print = 0;
				}
				if(state == 14 && button == 0){
     57a:	2d 8d       	ldd	r18, Y+29	; 0x1d
     57c:	3e 8d       	ldd	r19, Y+30	; 0x1e
     57e:	2e 30       	cpi	r18, 0x0E	; 14
     580:	31 05       	cpc	r19, r1
     582:	39 f4       	brne	.+14     	; 0x592 <main+0x416>
     584:	e1 14       	cp	r14, r1
     586:	f1 04       	cpc	r15, r1
     588:	11 f4       	brne	.+4      	; 0x58e <main+0x412>
     58a:	0c 94 af 18 	jmp	0x315e	; 0x315e <main+0x2fe2>
     58e:	0c 94 a9 18 	jmp	0x3152	; 0x3152 <main+0x2fd6>
					button = 1;
					state = 15;
					counterRef = counter;
					print = 0;
				}
				if(state == 15 && button == 0){
     592:	4d 8d       	ldd	r20, Y+29	; 0x1d
     594:	5e 8d       	ldd	r21, Y+30	; 0x1e
     596:	4f 30       	cpi	r20, 0x0F	; 15
     598:	51 05       	cpc	r21, r1
     59a:	79 f4       	brne	.+30     	; 0x5ba <main+0x43e>
     59c:	e1 14       	cp	r14, r1
     59e:	f1 04       	cpc	r15, r1
     5a0:	11 f0       	breq	.+4      	; 0x5a6 <main+0x42a>
     5a2:	0c 94 b5 18 	jmp	0x316a	; 0x316a <main+0x2fee>
					OrangutanLCD::clear();
     5a6:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     5aa:	56 01       	movw	r10, r12
     5ac:	01 e0       	ldi	r16, 0x01	; 1
     5ae:	e0 2e       	mov	r14, r16
     5b0:	f1 2c       	mov	r15, r1
     5b2:	00 e0       	ldi	r16, 0x00	; 0
     5b4:	10 e0       	ldi	r17, 0x00	; 0
     5b6:	0c 94 bb 18 	jmp	0x3176	; 0x3176 <main+0x2ffa>
					button = 1;
					state = 16;
					counterRef = counter;
					print = 0;
				}
				if(state == 16 && button == 0){
     5ba:	8d 8d       	ldd	r24, Y+29	; 0x1d
     5bc:	9e 8d       	ldd	r25, Y+30	; 0x1e
     5be:	40 97       	sbiw	r24, 0x10	; 16
     5c0:	39 f4       	brne	.+14     	; 0x5d0 <main+0x454>
     5c2:	e1 14       	cp	r14, r1
     5c4:	f1 04       	cpc	r15, r1
     5c6:	11 f4       	brne	.+4      	; 0x5cc <main+0x450>
     5c8:	0c 94 c1 18 	jmp	0x3182	; 0x3182 <main+0x3006>
     5cc:	0c 94 bb 18 	jmp	0x3176	; 0x3176 <main+0x2ffa>
					button = 1;
					state = 17;
					counterRef = counter;
					print = 0;
				}
				if(state == 17 && button == 0){
     5d0:	ed 8d       	ldd	r30, Y+29	; 0x1d
     5d2:	fe 8d       	ldd	r31, Y+30	; 0x1e
     5d4:	71 97       	sbiw	r30, 0x11	; 17
     5d6:	79 f4       	brne	.+30     	; 0x5f6 <main+0x47a>
     5d8:	e1 14       	cp	r14, r1
     5da:	f1 04       	cpc	r15, r1
     5dc:	11 f0       	breq	.+4      	; 0x5e2 <main+0x466>
     5de:	0c 94 c7 18 	jmp	0x318e	; 0x318e <main+0x3012>
					OrangutanLCD::clear();
     5e2:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     5e6:	56 01       	movw	r10, r12
     5e8:	11 e0       	ldi	r17, 0x01	; 1
     5ea:	e1 2e       	mov	r14, r17
     5ec:	f1 2c       	mov	r15, r1
     5ee:	00 e0       	ldi	r16, 0x00	; 0
     5f0:	10 e0       	ldi	r17, 0x00	; 0
     5f2:	0c 94 cd 18 	jmp	0x319a	; 0x319a <main+0x301e>
					button = 1;
					state = 18;
					counterRef = counter;
					print = 0;
				}
				if(state == 18 && button == 0){
     5f6:	2d 8d       	ldd	r18, Y+29	; 0x1d
     5f8:	3e 8d       	ldd	r19, Y+30	; 0x1e
     5fa:	22 31       	cpi	r18, 0x12	; 18
     5fc:	31 05       	cpc	r19, r1
     5fe:	39 f4       	brne	.+14     	; 0x60e <main+0x492>
     600:	e1 14       	cp	r14, r1
     602:	f1 04       	cpc	r15, r1
     604:	11 f4       	brne	.+4      	; 0x60a <main+0x48e>
     606:	0c 94 d3 18 	jmp	0x31a6	; 0x31a6 <main+0x302a>
     60a:	0c 94 cd 18 	jmp	0x319a	; 0x319a <main+0x301e>
					button = 1;
					state = 19;
					counterRef = counter;
					print = 0;
				}
				if(state == 19 && button == 0){
     60e:	4d 8d       	ldd	r20, Y+29	; 0x1d
     610:	5e 8d       	ldd	r21, Y+30	; 0x1e
     612:	43 31       	cpi	r20, 0x13	; 19
     614:	51 05       	cpc	r21, r1
     616:	79 f4       	brne	.+30     	; 0x636 <main+0x4ba>
     618:	e1 14       	cp	r14, r1
     61a:	f1 04       	cpc	r15, r1
     61c:	11 f0       	breq	.+4      	; 0x622 <main+0x4a6>
     61e:	0c 94 d9 18 	jmp	0x31b2	; 0x31b2 <main+0x3036>
					OrangutanLCD::clear();
     622:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     626:	56 01       	movw	r10, r12
     628:	b1 e0       	ldi	r27, 0x01	; 1
     62a:	eb 2e       	mov	r14, r27
     62c:	f1 2c       	mov	r15, r1
     62e:	00 e0       	ldi	r16, 0x00	; 0
     630:	10 e0       	ldi	r17, 0x00	; 0
     632:	0c 94 df 18 	jmp	0x31be	; 0x31be <main+0x3042>
					button = 1;
					state = 20;
					counterRef = counter;
					print = 0;
				}
				if(state == 20 && button == 0){
     636:	8d 8d       	ldd	r24, Y+29	; 0x1d
     638:	9e 8d       	ldd	r25, Y+30	; 0x1e
     63a:	44 97       	sbiw	r24, 0x14	; 20
     63c:	39 f4       	brne	.+14     	; 0x64c <main+0x4d0>
     63e:	e1 14       	cp	r14, r1
     640:	f1 04       	cpc	r15, r1
     642:	11 f4       	brne	.+4      	; 0x648 <main+0x4cc>
     644:	0c 94 e5 18 	jmp	0x31ca	; 0x31ca <main+0x304e>
     648:	0c 94 df 18 	jmp	0x31be	; 0x31be <main+0x3042>
					button = 1;
					state = 21;
					counterRef = counter;
					print = 0;
				}
				if(state == 21 && button == 0){
     64c:	ed 8d       	ldd	r30, Y+29	; 0x1d
     64e:	fe 8d       	ldd	r31, Y+30	; 0x1e
     650:	75 97       	sbiw	r30, 0x15	; 21
     652:	79 f4       	brne	.+30     	; 0x672 <main+0x4f6>
     654:	e1 14       	cp	r14, r1
     656:	f1 04       	cpc	r15, r1
     658:	11 f0       	breq	.+4      	; 0x65e <main+0x4e2>
     65a:	0c 94 eb 18 	jmp	0x31d6	; 0x31d6 <main+0x305a>
					OrangutanLCD::clear();
     65e:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     662:	56 01       	movw	r10, r12
     664:	a1 e0       	ldi	r26, 0x01	; 1
     666:	ea 2e       	mov	r14, r26
     668:	f1 2c       	mov	r15, r1
     66a:	00 e0       	ldi	r16, 0x00	; 0
     66c:	10 e0       	ldi	r17, 0x00	; 0
     66e:	0c 94 f1 18 	jmp	0x31e2	; 0x31e2 <main+0x3066>
					button = 1;
					state = 22;
					counterRef = counter;
					print = 0;
				}
				if(state == 22 && button == 0){
     672:	2d 8d       	ldd	r18, Y+29	; 0x1d
     674:	3e 8d       	ldd	r19, Y+30	; 0x1e
     676:	26 31       	cpi	r18, 0x16	; 22
     678:	31 05       	cpc	r19, r1
     67a:	39 f4       	brne	.+14     	; 0x68a <main+0x50e>
     67c:	e1 14       	cp	r14, r1
     67e:	f1 04       	cpc	r15, r1
     680:	11 f4       	brne	.+4      	; 0x686 <main+0x50a>
     682:	0c 94 f7 18 	jmp	0x31ee	; 0x31ee <main+0x3072>
     686:	0c 94 f1 18 	jmp	0x31e2	; 0x31e2 <main+0x3066>
					button = 1;
					state = 23;
					counterRef = counter;
					print = 0;
				}
				if(state == 23 && button == 0){
     68a:	4d 8d       	ldd	r20, Y+29	; 0x1d
     68c:	5e 8d       	ldd	r21, Y+30	; 0x1e
     68e:	47 31       	cpi	r20, 0x17	; 23
     690:	51 05       	cpc	r21, r1
     692:	79 f4       	brne	.+30     	; 0x6b2 <main+0x536>
     694:	e1 14       	cp	r14, r1
     696:	f1 04       	cpc	r15, r1
     698:	11 f0       	breq	.+4      	; 0x69e <main+0x522>
     69a:	0c 94 fd 18 	jmp	0x31fa	; 0x31fa <main+0x307e>
					OrangutanLCD::clear();
     69e:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     6a2:	56 01       	movw	r10, r12
     6a4:	f1 e0       	ldi	r31, 0x01	; 1
     6a6:	ef 2e       	mov	r14, r31
     6a8:	f1 2c       	mov	r15, r1
     6aa:	00 e0       	ldi	r16, 0x00	; 0
     6ac:	10 e0       	ldi	r17, 0x00	; 0
     6ae:	0c 94 03 19 	jmp	0x3206	; 0x3206 <main+0x308a>
					button = 1;
					state = 24;
					counterRef = counter;
					print = 0;
				}
				if(state == 24 && button == 0){
     6b2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     6b4:	9e 8d       	ldd	r25, Y+30	; 0x1e
     6b6:	48 97       	sbiw	r24, 0x18	; 24
     6b8:	39 f4       	brne	.+14     	; 0x6c8 <main+0x54c>
     6ba:	e1 14       	cp	r14, r1
     6bc:	f1 04       	cpc	r15, r1
     6be:	11 f4       	brne	.+4      	; 0x6c4 <main+0x548>
     6c0:	0c 94 09 19 	jmp	0x3212	; 0x3212 <main+0x3096>
     6c4:	0c 94 03 19 	jmp	0x3206	; 0x3206 <main+0x308a>
					button = 1;
					state = 25;
					counterRef = counter;
					print = 0;
				}
				if(state == 25 && button == 0){
     6c8:	ed 8d       	ldd	r30, Y+29	; 0x1d
     6ca:	fe 8d       	ldd	r31, Y+30	; 0x1e
     6cc:	79 97       	sbiw	r30, 0x19	; 25
     6ce:	79 f4       	brne	.+30     	; 0x6ee <main+0x572>
     6d0:	e1 14       	cp	r14, r1
     6d2:	f1 04       	cpc	r15, r1
     6d4:	11 f0       	breq	.+4      	; 0x6da <main+0x55e>
     6d6:	0c 94 0f 19 	jmp	0x321e	; 0x321e <main+0x30a2>
					OrangutanLCD::clear();
     6da:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     6de:	56 01       	movw	r10, r12
     6e0:	e1 e0       	ldi	r30, 0x01	; 1
     6e2:	ee 2e       	mov	r14, r30
     6e4:	f1 2c       	mov	r15, r1
     6e6:	00 e0       	ldi	r16, 0x00	; 0
     6e8:	10 e0       	ldi	r17, 0x00	; 0
     6ea:	0c 94 15 19 	jmp	0x322a	; 0x322a <main+0x30ae>
					button = 1;
					state = 26;
					counterRef = counter;
					print = 0;
				}
				if(state == 26 && button == 0){
     6ee:	2d 8d       	ldd	r18, Y+29	; 0x1d
     6f0:	3e 8d       	ldd	r19, Y+30	; 0x1e
     6f2:	2a 31       	cpi	r18, 0x1A	; 26
     6f4:	31 05       	cpc	r19, r1
     6f6:	39 f4       	brne	.+14     	; 0x706 <main+0x58a>
     6f8:	e1 14       	cp	r14, r1
     6fa:	f1 04       	cpc	r15, r1
     6fc:	11 f4       	brne	.+4      	; 0x702 <main+0x586>
     6fe:	0c 94 1b 19 	jmp	0x3236	; 0x3236 <main+0x30ba>
     702:	0c 94 15 19 	jmp	0x322a	; 0x322a <main+0x30ae>
					button = 1;
					state = 27;
					counterRef = counter;
					print = 0;
				}
				if(state == 27 && button == 0){
     706:	4d 8d       	ldd	r20, Y+29	; 0x1d
     708:	5e 8d       	ldd	r21, Y+30	; 0x1e
     70a:	4b 31       	cpi	r20, 0x1B	; 27
     70c:	51 05       	cpc	r21, r1
     70e:	79 f4       	brne	.+30     	; 0x72e <main+0x5b2>
     710:	e1 14       	cp	r14, r1
     712:	f1 04       	cpc	r15, r1
     714:	11 f0       	breq	.+4      	; 0x71a <main+0x59e>
     716:	0c 94 21 19 	jmp	0x3242	; 0x3242 <main+0x30c6>
					OrangutanLCD::clear();
     71a:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     71e:	56 01       	movw	r10, r12
     720:	71 e0       	ldi	r23, 0x01	; 1
     722:	e7 2e       	mov	r14, r23
     724:	f1 2c       	mov	r15, r1
     726:	00 e0       	ldi	r16, 0x00	; 0
     728:	10 e0       	ldi	r17, 0x00	; 0
     72a:	0c 94 27 19 	jmp	0x324e	; 0x324e <main+0x30d2>
					button = 1;
					state = 28;
					counterRef = counter;
					print = 0;
				}
				if(state == 28 && button == 0){
     72e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     730:	9e 8d       	ldd	r25, Y+30	; 0x1e
     732:	4c 97       	sbiw	r24, 0x1c	; 28
     734:	39 f4       	brne	.+14     	; 0x744 <main+0x5c8>
     736:	e1 14       	cp	r14, r1
     738:	f1 04       	cpc	r15, r1
     73a:	11 f4       	brne	.+4      	; 0x740 <main+0x5c4>
     73c:	0c 94 2d 19 	jmp	0x325a	; 0x325a <main+0x30de>
     740:	0c 94 27 19 	jmp	0x324e	; 0x324e <main+0x30d2>
					button = 1;
					state = 29;
					counterRef = counter;
					print = 0;
				}
				if(state == 29 && button == 0){
     744:	ed 8d       	ldd	r30, Y+29	; 0x1d
     746:	fe 8d       	ldd	r31, Y+30	; 0x1e
     748:	7d 97       	sbiw	r30, 0x1d	; 29
     74a:	79 f4       	brne	.+30     	; 0x76a <main+0x5ee>
     74c:	e1 14       	cp	r14, r1
     74e:	f1 04       	cpc	r15, r1
     750:	11 f0       	breq	.+4      	; 0x756 <main+0x5da>
     752:	0c 94 33 19 	jmp	0x3266	; 0x3266 <main+0x30ea>
					OrangutanLCD::clear();
     756:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
     75a:	56 01       	movw	r10, r12
     75c:	61 e0       	ldi	r22, 0x01	; 1
     75e:	e6 2e       	mov	r14, r22
     760:	f1 2c       	mov	r15, r1
     762:	00 e0       	ldi	r16, 0x00	; 0
     764:	10 e0       	ldi	r17, 0x00	; 0
     766:	0c 94 39 19 	jmp	0x3272	; 0x3272 <main+0x30f6>
					button = 1;
					state = 30;
					counterRef = counter;
					print = 0;
				}
				if(state == 30 && button == 0){
     76a:	2d 8d       	ldd	r18, Y+29	; 0x1d
     76c:	3e 8d       	ldd	r19, Y+30	; 0x1e
     76e:	2e 31       	cpi	r18, 0x1E	; 30
     770:	31 05       	cpc	r19, r1
     772:	39 f4       	brne	.+14     	; 0x782 <main+0x606>
     774:	e1 14       	cp	r14, r1
     776:	f1 04       	cpc	r15, r1
     778:	11 f4       	brne	.+4      	; 0x77e <main+0x602>
     77a:	0c 94 3f 19 	jmp	0x327e	; 0x327e <main+0x3102>
     77e:	0c 94 39 19 	jmp	0x3272	; 0x3272 <main+0x30f6>
					button = 1;
					state = 31;
					counterRef = counter;
					print = 0;
				}
				if(state == 31 && button == 0){
     782:	4d 8d       	ldd	r20, Y+29	; 0x1d
     784:	5e 8d       	ldd	r21, Y+30	; 0x1e
     786:	4f 31       	cpi	r20, 0x1F	; 31
     788:	51 05       	cpc	r21, r1
     78a:	a1 f4       	brne	.+40     	; 0x7b4 <main+0x638>
     78c:	e1 14       	cp	r14, r1
     78e:	f1 04       	cpc	r15, r1
     790:	11 f0       	breq	.+4      	; 0x796 <main+0x61a>
     792:	0c 94 45 19 	jmp	0x328a	; 0x328a <main+0x310e>
					OrangutanLCD::clear();
     796:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
     79a:	80 91 1a 03 	lds	r24, 0x031A
     79e:	84 60       	ori	r24, 0x04	; 4
     7a0:	80 93 1a 03 	sts	0x031A, r24
     7a4:	56 01       	movw	r10, r12
     7a6:	51 e0       	ldi	r21, 0x01	; 1
     7a8:	e5 2e       	mov	r14, r21
     7aa:	f1 2c       	mov	r15, r1
     7ac:	00 e0       	ldi	r16, 0x00	; 0
     7ae:	10 e0       	ldi	r17, 0x00	; 0
     7b0:	0c 94 4b 19 	jmp	0x3296	; 0x3296 <main+0x311a>
					button = 1;
					state = 32;
					counterRef = counter;
					print = 0;
				}
				if(state == 32 && button == 0){
     7b4:	8d 8d       	ldd	r24, Y+29	; 0x1d
     7b6:	9e 8d       	ldd	r25, Y+30	; 0x1e
     7b8:	80 97       	sbiw	r24, 0x20	; 32
     7ba:	39 f4       	brne	.+14     	; 0x7ca <main+0x64e>
     7bc:	e1 14       	cp	r14, r1
     7be:	f1 04       	cpc	r15, r1
     7c0:	11 f4       	brne	.+4      	; 0x7c6 <main+0x64a>
     7c2:	0c 94 51 19 	jmp	0x32a2	; 0x32a2 <main+0x3126>
     7c6:	0c 94 4b 19 	jmp	0x3296	; 0x3296 <main+0x311a>
					button = 1;
					state = 33;
					counterRef = counter;
					print = 0;
				}
				if(state == 33 && button == 0){
     7ca:	ed 8d       	ldd	r30, Y+29	; 0x1d
     7cc:	fe 8d       	ldd	r31, Y+30	; 0x1e
     7ce:	b1 97       	sbiw	r30, 0x21	; 33
     7d0:	a9 f4       	brne	.+42     	; 0x7fc <main+0x680>
     7d2:	e1 14       	cp	r14, r1
     7d4:	f1 04       	cpc	r15, r1
     7d6:	11 f0       	breq	.+4      	; 0x7dc <main+0x660>
     7d8:	0c 94 57 19 	jmp	0x32ae	; 0x32ae <main+0x3132>
					OrangutanLCD::clear();
     7dc:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
     7e0:	80 91 1a 03 	lds	r24, 0x031A
     7e4:	8b 7f       	andi	r24, 0xFB	; 251
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
     7e6:	80 62       	ori	r24, 0x20	; 32
     7e8:	80 93 1a 03 	sts	0x031A, r24
     7ec:	56 01       	movw	r10, r12
     7ee:	41 e0       	ldi	r20, 0x01	; 1
     7f0:	e4 2e       	mov	r14, r20
     7f2:	f1 2c       	mov	r15, r1
     7f4:	00 e0       	ldi	r16, 0x00	; 0
     7f6:	10 e0       	ldi	r17, 0x00	; 0
     7f8:	0c 94 5d 19 	jmp	0x32ba	; 0x32ba <main+0x313e>
					button = 1;
					state = 34;
					counterRef = counter;
					print = 0;
				}
				if(state == 34 && button == 0){
     7fc:	2d 8d       	ldd	r18, Y+29	; 0x1d
     7fe:	3e 8d       	ldd	r19, Y+30	; 0x1e
     800:	22 32       	cpi	r18, 0x22	; 34
     802:	31 05       	cpc	r19, r1
     804:	39 f4       	brne	.+14     	; 0x814 <main+0x698>
     806:	e1 14       	cp	r14, r1
     808:	f1 04       	cpc	r15, r1
     80a:	11 f4       	brne	.+4      	; 0x810 <main+0x694>
     80c:	0c 94 63 19 	jmp	0x32c6	; 0x32c6 <main+0x314a>
     810:	0c 94 5d 19 	jmp	0x32ba	; 0x32ba <main+0x313e>
					button = 1;
					state = 35;
					counterRef = counter;
					print = 0;
				}
				if(state == 35 && button == 0){
     814:	4d 8d       	ldd	r20, Y+29	; 0x1d
     816:	5e 8d       	ldd	r21, Y+30	; 0x1e
     818:	43 32       	cpi	r20, 0x23	; 35
     81a:	51 05       	cpc	r21, r1
     81c:	c9 f4       	brne	.+50     	; 0x850 <main+0x6d4>
     81e:	e1 14       	cp	r14, r1
     820:	f1 04       	cpc	r15, r1
     822:	11 f0       	breq	.+4      	; 0x828 <main+0x6ac>
     824:	0c 94 69 19 	jmp	0x32d2	; 0x32d2 <main+0x3156>
					OrangutanLCD::clear();
     828:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
     82c:	80 91 1a 03 	lds	r24, 0x031A
     830:	8f 7d       	andi	r24, 0xDF	; 223
     832:	80 93 1a 03 	sts	0x031A, r24
					u_motorByte1.bits_in_motorByte1.m3Drop = 1;
     836:	80 91 1b 03 	lds	r24, 0x031B
     83a:	81 60       	ori	r24, 0x01	; 1
     83c:	80 93 1b 03 	sts	0x031B, r24
     840:	56 01       	movw	r10, r12
     842:	31 e0       	ldi	r19, 0x01	; 1
     844:	e3 2e       	mov	r14, r19
     846:	f1 2c       	mov	r15, r1
     848:	00 e0       	ldi	r16, 0x00	; 0
     84a:	10 e0       	ldi	r17, 0x00	; 0
     84c:	0c 94 6f 19 	jmp	0x32de	; 0x32de <main+0x3162>
					button = 1;
					state = 36;
					counterRef = counter;
					print = 0;
				}
				if(state == 36 && button == 0){
     850:	8d 8d       	ldd	r24, Y+29	; 0x1d
     852:	9e 8d       	ldd	r25, Y+30	; 0x1e
     854:	84 97       	sbiw	r24, 0x24	; 36
     856:	39 f4       	brne	.+14     	; 0x866 <main+0x6ea>
     858:	e1 14       	cp	r14, r1
     85a:	f1 04       	cpc	r15, r1
     85c:	11 f4       	brne	.+4      	; 0x862 <main+0x6e6>
     85e:	0c 94 75 19 	jmp	0x32ea	; 0x32ea <main+0x316e>
     862:	0c 94 6f 19 	jmp	0x32de	; 0x32de <main+0x3162>
					button = 1;
					state = 37;
					counterRef = counter;
					print = 0;
				}
				if(state == 37 && button == 0){
     866:	ed 8d       	ldd	r30, Y+29	; 0x1d
     868:	fe 8d       	ldd	r31, Y+30	; 0x1e
     86a:	b5 97       	sbiw	r30, 0x25	; 37
     86c:	a9 f4       	brne	.+42     	; 0x898 <main+0x71c>
     86e:	e1 14       	cp	r14, r1
     870:	f1 04       	cpc	r15, r1
     872:	11 f0       	breq	.+4      	; 0x878 <main+0x6fc>
     874:	0c 94 7b 19 	jmp	0x32f6	; 0x32f6 <main+0x317a>
					OrangutanLCD::clear();
     878:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
					u_motorByte1.bits_in_motorByte1.m3Drop = 0;
     87c:	80 91 1b 03 	lds	r24, 0x031B
     880:	8e 7f       	andi	r24, 0xFE	; 254
					u_motorByte1.bits_in_motorByte1.m4Drop = 1;
     882:	88 60       	ori	r24, 0x08	; 8
     884:	80 93 1b 03 	sts	0x031B, r24
     888:	56 01       	movw	r10, r12
     88a:	21 e0       	ldi	r18, 0x01	; 1
     88c:	e2 2e       	mov	r14, r18
     88e:	f1 2c       	mov	r15, r1
     890:	00 e0       	ldi	r16, 0x00	; 0
     892:	10 e0       	ldi	r17, 0x00	; 0
     894:	0c 94 81 19 	jmp	0x3302	; 0x3302 <main+0x3186>
					button = 1;
					state = 38;
					counterRef = counter;
					print = 0;
				}
				if(state == 38 && button == 0){
     898:	2d 8d       	ldd	r18, Y+29	; 0x1d
     89a:	3e 8d       	ldd	r19, Y+30	; 0x1e
     89c:	26 32       	cpi	r18, 0x26	; 38
     89e:	31 05       	cpc	r19, r1
     8a0:	39 f4       	brne	.+14     	; 0x8b0 <main+0x734>
     8a2:	e1 14       	cp	r14, r1
     8a4:	f1 04       	cpc	r15, r1
     8a6:	11 f4       	brne	.+4      	; 0x8ac <main+0x730>
     8a8:	0c 94 87 19 	jmp	0x330e	; 0x330e <main+0x3192>
     8ac:	0c 94 81 19 	jmp	0x3302	; 0x3302 <main+0x3186>
					button = 1;
					state = 39;
					counterRef = counter;
					print = 0;
				}
				if(state == 39 && button == 0){
     8b0:	4d 8d       	ldd	r20, Y+29	; 0x1d
     8b2:	5e 8d       	ldd	r21, Y+30	; 0x1e
     8b4:	47 32       	cpi	r20, 0x27	; 39
     8b6:	51 05       	cpc	r21, r1
     8b8:	a9 f4       	brne	.+42     	; 0x8e4 <main+0x768>
     8ba:	e1 14       	cp	r14, r1
     8bc:	f1 04       	cpc	r15, r1
     8be:	11 f0       	breq	.+4      	; 0x8c4 <main+0x748>
     8c0:	0c 94 8d 19 	jmp	0x331a	; 0x331a <main+0x319e>
					OrangutanLCD::clear();
     8c4:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
					u_motorByte1.bits_in_motorByte1.m4Drop = 0;
     8c8:	80 91 1b 03 	lds	r24, 0x031B
     8cc:	87 7f       	andi	r24, 0xF7	; 247
					u_motorByte1.bits_in_motorByte1.m5Drop = 1;
     8ce:	80 64       	ori	r24, 0x40	; 64
     8d0:	80 93 1b 03 	sts	0x031B, r24
     8d4:	56 01       	movw	r10, r12
     8d6:	91 e0       	ldi	r25, 0x01	; 1
     8d8:	e9 2e       	mov	r14, r25
     8da:	f1 2c       	mov	r15, r1
     8dc:	00 e0       	ldi	r16, 0x00	; 0
     8de:	10 e0       	ldi	r17, 0x00	; 0
     8e0:	0c 94 93 19 	jmp	0x3326	; 0x3326 <main+0x31aa>
					button = 1;
					state = 40;
					counterRef = counter;
					print = 0;
				}
				if(state == 40 && button == 0){
     8e4:	8d 8d       	ldd	r24, Y+29	; 0x1d
     8e6:	9e 8d       	ldd	r25, Y+30	; 0x1e
     8e8:	88 97       	sbiw	r24, 0x28	; 40
     8ea:	39 f4       	brne	.+14     	; 0x8fa <main+0x77e>
     8ec:	e1 14       	cp	r14, r1
     8ee:	f1 04       	cpc	r15, r1
     8f0:	11 f4       	brne	.+4      	; 0x8f6 <main+0x77a>
     8f2:	0c 94 99 19 	jmp	0x3332	; 0x3332 <main+0x31b6>
     8f6:	0c 94 93 19 	jmp	0x3326	; 0x3326 <main+0x31aa>
					button = 1;
					state = 41;
					counterRef = counter;
					print = 0;
				}
				if(state == 41 && button == 0){
     8fa:	ed 8d       	ldd	r30, Y+29	; 0x1d
     8fc:	fe 8d       	ldd	r31, Y+30	; 0x1e
     8fe:	b9 97       	sbiw	r30, 0x29	; 41
     900:	91 f4       	brne	.+36     	; 0x926 <main+0x7aa>
     902:	e1 14       	cp	r14, r1
     904:	f1 04       	cpc	r15, r1
     906:	59 f5       	brne	.+86     	; 0x95e <main+0x7e2>
					OrangutanLCD::clear();
     908:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
					u_motorByte1.bits_in_motorByte1.m5Drop = 0;
     90c:	80 91 1b 03 	lds	r24, 0x031B
     910:	8f 7b       	andi	r24, 0xBF	; 191
     912:	80 93 1b 03 	sts	0x031B, r24
     916:	1c 8e       	std	Y+28, r1	; 0x1c
     918:	1b 8e       	std	Y+27, r1	; 0x1b
     91a:	2f ef       	ldi	r18, 0xFF	; 255
     91c:	3f ef       	ldi	r19, 0xFF	; 255
     91e:	3e 8f       	std	Y+30, r19	; 0x1e
     920:	2d 8f       	std	Y+29, r18	; 0x1d
     922:	0c 94 9e 19 	jmp	0x333c	; 0x333c <main+0x31c0>
					print = 0;
					m5 = 0;
				}

				//state actions
				if(state == 0){
     926:	4d 8d       	ldd	r20, Y+29	; 0x1d
     928:	5e 8d       	ldd	r21, Y+30	; 0x1e
     92a:	45 2b       	or	r20, r21
     92c:	c1 f4       	brne	.+48     	; 0x95e <main+0x7e2>
					if(print == 0){
     92e:	01 15       	cp	r16, r1
     930:	11 05       	cpc	r17, r1
     932:	41 f4       	brne	.+16     	; 0x944 <main+0x7c8>
						OrangutanLCD::clear();
     934:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("SENSOR 0 PLATE");
     938:	81 e3       	ldi	r24, 0x31	; 49
     93a:	91 e0       	ldi	r25, 0x01	; 1
     93c:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     940:	01 e0       	ldi	r16, 0x01	; 1
     942:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(0,1);
     944:	80 e0       	ldi	r24, 0x00	; 0
     946:	61 e0       	ldi	r22, 0x01	; 1
     948:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
	// position and will not span lines.
	static void print(unsigned long value);
	static void print(long value);
	static inline void print(unsigned int value)
	{
		print((unsigned long)value);
     94c:	60 91 1e 03 	lds	r22, 0x031E
     950:	61 70       	andi	r22, 0x01	; 1
     952:	70 e0       	ldi	r23, 0x00	; 0
     954:	80 e0       	ldi	r24, 0x00	; 0
     956:	90 e0       	ldi	r25, 0x00	; 0
     958:	0e 94 ff 1c 	call	0x39fe	; 0x39fe <_ZN12OrangutanLCD5printEm>
     95c:	71 c0       	rjmp	.+226    	; 0xa40 <main+0x8c4>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.plate);
				}
				if(state == 1){
     95e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     960:	9e 8d       	ldd	r25, Y+30	; 0x1e
     962:	01 97       	sbiw	r24, 0x01	; 1
     964:	b9 f4       	brne	.+46     	; 0x994 <main+0x818>
					if(print == 0){
     966:	01 15       	cp	r16, r1
     968:	11 05       	cpc	r17, r1
     96a:	31 f4       	brne	.+12     	; 0x978 <main+0x7fc>
						OrangutanLCD::print("SENSOR 1 ON LIFT");
     96c:	80 e4       	ldi	r24, 0x40	; 64
     96e:	91 e0       	ldi	r25, 0x01	; 1
     970:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     974:	01 e0       	ldi	r16, 0x01	; 1
     976:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(0,1);
     978:	80 e0       	ldi	r24, 0x00	; 0
     97a:	61 e0       	ldi	r22, 0x01	; 1
     97c:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
     980:	60 91 1e 03 	lds	r22, 0x031E
     984:	66 95       	lsr	r22
     986:	61 70       	andi	r22, 0x01	; 1
     988:	70 e0       	ldi	r23, 0x00	; 0
     98a:	80 e0       	ldi	r24, 0x00	; 0
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	0e 94 ff 1c 	call	0x39fe	; 0x39fe <_ZN12OrangutanLCD5printEm>
     992:	72 c0       	rjmp	.+228    	; 0xa78 <main+0x8fc>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixtureLift);
				}
				if(state == 2){
     994:	ed 8d       	ldd	r30, Y+29	; 0x1d
     996:	fe 8d       	ldd	r31, Y+30	; 0x1e
     998:	32 97       	sbiw	r30, 0x02	; 2
     99a:	c1 f4       	brne	.+48     	; 0x9cc <main+0x850>
					if(print == 0){
     99c:	01 15       	cp	r16, r1
     99e:	11 05       	cpc	r17, r1
     9a0:	31 f4       	brne	.+12     	; 0x9ae <main+0x832>
						OrangutanLCD::print("SENSOR 2 HOMED");
     9a2:	81 e5       	ldi	r24, 0x51	; 81
     9a4:	91 e0       	ldi	r25, 0x01	; 1
     9a6:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     9aa:	01 e0       	ldi	r16, 0x01	; 1
     9ac:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(0,1);
     9ae:	80 e0       	ldi	r24, 0x00	; 0
     9b0:	61 e0       	ldi	r22, 0x01	; 1
     9b2:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
     9b6:	60 91 1e 03 	lds	r22, 0x031E
     9ba:	66 95       	lsr	r22
     9bc:	66 95       	lsr	r22
     9be:	61 70       	andi	r22, 0x01	; 1
     9c0:	70 e0       	ldi	r23, 0x00	; 0
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	0e 94 ff 1c 	call	0x39fe	; 0x39fe <_ZN12OrangutanLCD5printEm>
     9ca:	73 c0       	rjmp	.+230    	; 0xab2 <main+0x936>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixtureHome);
				}
				if(state == 3){
     9cc:	2d 8d       	ldd	r18, Y+29	; 0x1d
     9ce:	3e 8d       	ldd	r19, Y+30	; 0x1e
     9d0:	23 30       	cpi	r18, 0x03	; 3
     9d2:	31 05       	cpc	r19, r1
     9d4:	c9 f4       	brne	.+50     	; 0xa08 <main+0x88c>
					if(print == 0){
     9d6:	01 15       	cp	r16, r1
     9d8:	11 05       	cpc	r17, r1
     9da:	31 f4       	brne	.+12     	; 0x9e8 <main+0x86c>
						OrangutanLCD::print("SENSOR 3 ON PLATE");
     9dc:	80 e6       	ldi	r24, 0x60	; 96
     9de:	91 e0       	ldi	r25, 0x01	; 1
     9e0:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     9e4:	01 e0       	ldi	r16, 0x01	; 1
     9e6:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(0,1);
     9e8:	80 e0       	ldi	r24, 0x00	; 0
     9ea:	61 e0       	ldi	r22, 0x01	; 1
     9ec:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
     9f0:	60 91 1e 03 	lds	r22, 0x031E
     9f4:	66 95       	lsr	r22
     9f6:	66 95       	lsr	r22
     9f8:	66 95       	lsr	r22
     9fa:	61 70       	andi	r22, 0x01	; 1
     9fc:	70 e0       	ldi	r23, 0x00	; 0
     9fe:	80 e0       	ldi	r24, 0x00	; 0
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	0e 94 ff 1c 	call	0x39fe	; 0x39fe <_ZN12OrangutanLCD5printEm>
     a06:	72 c0       	rjmp	.+228    	; 0xaec <main+0x970>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixturePlate);
				}
				if(state == 4){
     a08:	4d 8d       	ldd	r20, Y+29	; 0x1d
     a0a:	5e 8d       	ldd	r21, Y+30	; 0x1e
     a0c:	44 30       	cpi	r20, 0x04	; 4
     a0e:	51 05       	cpc	r21, r1
     a10:	b9 f4       	brne	.+46     	; 0xa40 <main+0x8c4>
					if(print == 0){
     a12:	01 15       	cp	r16, r1
     a14:	11 05       	cpc	r17, r1
     a16:	31 f4       	brne	.+12     	; 0xa24 <main+0x8a8>
						OrangutanLCD::print("SENSOR 4 BRUSH1");
     a18:	82 e7       	ldi	r24, 0x72	; 114
     a1a:	91 e0       	ldi	r25, 0x01	; 1
     a1c:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     a20:	01 e0       	ldi	r16, 0x01	; 1
     a22:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(0,1);
     a24:	80 e0       	ldi	r24, 0x00	; 0
     a26:	61 e0       	ldi	r22, 0x01	; 1
     a28:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
     a2c:	60 91 1e 03 	lds	r22, 0x031E
     a30:	62 95       	swap	r22
     a32:	61 70       	andi	r22, 0x01	; 1
     a34:	70 e0       	ldi	r23, 0x00	; 0
     a36:	80 e0       	ldi	r24, 0x00	; 0
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	0e 94 ff 1c 	call	0x39fe	; 0x39fe <_ZN12OrangutanLCD5printEm>
     a3e:	6a c0       	rjmp	.+212    	; 0xb14 <main+0x998>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixtureBrush1);
				}
				if(state == 5){
     a40:	8d 8d       	ldd	r24, Y+29	; 0x1d
     a42:	9e 8d       	ldd	r25, Y+30	; 0x1e
     a44:	05 97       	sbiw	r24, 0x05	; 5
     a46:	c1 f4       	brne	.+48     	; 0xa78 <main+0x8fc>
					if(print == 0){
     a48:	01 15       	cp	r16, r1
     a4a:	11 05       	cpc	r17, r1
     a4c:	31 f4       	brne	.+12     	; 0xa5a <main+0x8de>
						OrangutanLCD::print("SENSOR 5 BRUSH2");
     a4e:	82 e8       	ldi	r24, 0x82	; 130
     a50:	91 e0       	ldi	r25, 0x01	; 1
     a52:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     a56:	01 e0       	ldi	r16, 0x01	; 1
     a58:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(0,1);
     a5a:	80 e0       	ldi	r24, 0x00	; 0
     a5c:	61 e0       	ldi	r22, 0x01	; 1
     a5e:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
     a62:	60 91 1e 03 	lds	r22, 0x031E
     a66:	62 95       	swap	r22
     a68:	66 95       	lsr	r22
     a6a:	61 70       	andi	r22, 0x01	; 1
     a6c:	70 e0       	ldi	r23, 0x00	; 0
     a6e:	80 e0       	ldi	r24, 0x00	; 0
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	0e 94 ff 1c 	call	0x39fe	; 0x39fe <_ZN12OrangutanLCD5printEm>
     a76:	58 c0       	rjmp	.+176    	; 0xb28 <main+0x9ac>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixtureBrush2);
				}
				if(state == 6){
     a78:	ed 8d       	ldd	r30, Y+29	; 0x1d
     a7a:	fe 8d       	ldd	r31, Y+30	; 0x1e
     a7c:	36 97       	sbiw	r30, 0x06	; 6
     a7e:	c9 f4       	brne	.+50     	; 0xab2 <main+0x936>
					if(print == 0){
     a80:	01 15       	cp	r16, r1
     a82:	11 05       	cpc	r17, r1
     a84:	31 f4       	brne	.+12     	; 0xa92 <main+0x916>
						OrangutanLCD::print("SENSOR 6 DRY1");
     a86:	82 e9       	ldi	r24, 0x92	; 146
     a88:	91 e0       	ldi	r25, 0x01	; 1
     a8a:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     a8e:	01 e0       	ldi	r16, 0x01	; 1
     a90:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(0,1);
     a92:	80 e0       	ldi	r24, 0x00	; 0
     a94:	61 e0       	ldi	r22, 0x01	; 1
     a96:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
     a9a:	60 91 1e 03 	lds	r22, 0x031E
     a9e:	62 95       	swap	r22
     aa0:	66 95       	lsr	r22
     aa2:	66 95       	lsr	r22
     aa4:	61 70       	andi	r22, 0x01	; 1
     aa6:	70 e0       	ldi	r23, 0x00	; 0
     aa8:	80 e0       	ldi	r24, 0x00	; 0
     aaa:	90 e0       	ldi	r25, 0x00	; 0
     aac:	0e 94 ff 1c 	call	0x39fe	; 0x39fe <_ZN12OrangutanLCD5printEm>
     ab0:	4e c0       	rjmp	.+156    	; 0xb4e <main+0x9d2>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixtureDry1);
				}
				if(state == 7){
     ab2:	2d 8d       	ldd	r18, Y+29	; 0x1d
     ab4:	3e 8d       	ldd	r19, Y+30	; 0x1e
     ab6:	27 30       	cpi	r18, 0x07	; 7
     ab8:	31 05       	cpc	r19, r1
     aba:	c1 f4       	brne	.+48     	; 0xaec <main+0x970>
					if(print == 0){
     abc:	01 15       	cp	r16, r1
     abe:	11 05       	cpc	r17, r1
     ac0:	31 f4       	brne	.+12     	; 0xace <main+0x952>
						OrangutanLCD::print("SENSOR 7 DRY2");
     ac2:	80 ea       	ldi	r24, 0xA0	; 160
     ac4:	91 e0       	ldi	r25, 0x01	; 1
     ac6:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     aca:	01 e0       	ldi	r16, 0x01	; 1
     acc:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(0,1);
     ace:	80 e0       	ldi	r24, 0x00	; 0
     ad0:	61 e0       	ldi	r22, 0x01	; 1
     ad2:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
     ad6:	60 91 1e 03 	lds	r22, 0x031E
     ada:	66 1f       	adc	r22, r22
     adc:	66 27       	eor	r22, r22
     ade:	66 1f       	adc	r22, r22
     ae0:	70 e0       	ldi	r23, 0x00	; 0
     ae2:	80 e0       	ldi	r24, 0x00	; 0
     ae4:	90 e0       	ldi	r25, 0x00	; 0
     ae6:	0e 94 ff 1c 	call	0x39fe	; 0x39fe <_ZN12OrangutanLCD5printEm>
     aea:	3c c0       	rjmp	.+120    	; 0xb64 <main+0x9e8>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixtureDry2);
				}
				if(state == 8){
     aec:	4d 8d       	ldd	r20, Y+29	; 0x1d
     aee:	5e 8d       	ldd	r21, Y+30	; 0x1e
     af0:	48 30       	cpi	r20, 0x08	; 8
     af2:	51 05       	cpc	r21, r1
     af4:	79 f4       	brne	.+30     	; 0xb14 <main+0x998>
					if(print == 0){
     af6:	01 15       	cp	r16, r1
     af8:	11 05       	cpc	r17, r1
     afa:	31 f4       	brne	.+12     	; 0xb08 <main+0x98c>
						OrangutanLCD::print("OUT 0 AC POWER");
     afc:	8e ea       	ldi	r24, 0xAE	; 174
     afe:	91 e0       	ldi	r25, 0x01	; 1
     b00:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     b04:	01 e0       	ldi	r16, 0x01	; 1
     b06:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.ACPower = 0;
     b08:	80 91 1c 03 	lds	r24, 0x031C
     b0c:	8e 7f       	andi	r24, 0xFE	; 254
     b0e:	80 93 1c 03 	sts	0x031C, r24
     b12:	3c c0       	rjmp	.+120    	; 0xb8c <main+0xa10>
				}
				if(state == 9){
     b14:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b16:	9e 8d       	ldd	r25, Y+30	; 0x1e
     b18:	09 97       	sbiw	r24, 0x09	; 9
     b1a:	31 f4       	brne	.+12     	; 0xb28 <main+0x9ac>
					u_outputByte0.bits_in_outputByte0.ACPower = 1;
     b1c:	80 91 1c 03 	lds	r24, 0x031C
     b20:	81 60       	ori	r24, 0x01	; 1
     b22:	80 93 1c 03 	sts	0x031C, r24
     b26:	3c c0       	rjmp	.+120    	; 0xba0 <main+0xa24>
				}
				if(state == 10){
     b28:	ed 8d       	ldd	r30, Y+29	; 0x1d
     b2a:	fe 8d       	ldd	r31, Y+30	; 0x1e
     b2c:	3a 97       	sbiw	r30, 0x0a	; 10
     b2e:	79 f4       	brne	.+30     	; 0xb4e <main+0x9d2>
					if(print == 0){
     b30:	01 15       	cp	r16, r1
     b32:	11 05       	cpc	r17, r1
     b34:	31 f4       	brne	.+12     	; 0xb42 <main+0x9c6>
						OrangutanLCD::print("OUT 1 BLOWER");
     b36:	8d eb       	ldi	r24, 0xBD	; 189
     b38:	91 e0       	ldi	r25, 0x01	; 1
     b3a:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     b3e:	01 e0       	ldi	r16, 0x01	; 1
     b40:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.blowerPulse = 0;
     b42:	80 91 1c 03 	lds	r24, 0x031C
     b46:	8d 7f       	andi	r24, 0xFD	; 253
     b48:	80 93 1c 03 	sts	0x031C, r24
     b4c:	3d c0       	rjmp	.+122    	; 0xbc8 <main+0xa4c>
				}
				if(state == 11){
     b4e:	2d 8d       	ldd	r18, Y+29	; 0x1d
     b50:	3e 8d       	ldd	r19, Y+30	; 0x1e
     b52:	2b 30       	cpi	r18, 0x0B	; 11
     b54:	31 05       	cpc	r19, r1
     b56:	31 f4       	brne	.+12     	; 0xb64 <main+0x9e8>
					u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
     b58:	80 91 1c 03 	lds	r24, 0x031C
     b5c:	82 60       	ori	r24, 0x02	; 2
     b5e:	80 93 1c 03 	sts	0x031C, r24
     b62:	3d c0       	rjmp	.+122    	; 0xbde <main+0xa62>
				}
				if(state == 12){
     b64:	4d 8d       	ldd	r20, Y+29	; 0x1d
     b66:	5e 8d       	ldd	r21, Y+30	; 0x1e
     b68:	4c 30       	cpi	r20, 0x0C	; 12
     b6a:	51 05       	cpc	r21, r1
     b6c:	79 f4       	brne	.+30     	; 0xb8c <main+0xa10>
					if(print == 0){
     b6e:	01 15       	cp	r16, r1
     b70:	11 05       	cpc	r17, r1
     b72:	31 f4       	brne	.+12     	; 0xb80 <main+0xa04>
						OrangutanLCD::print("OUT 2 STOP");
     b74:	8a ec       	ldi	r24, 0xCA	; 202
     b76:	91 e0       	ldi	r25, 0x01	; 1
     b78:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     b7c:	01 e0       	ldi	r16, 0x01	; 1
     b7e:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.plateStop = 0;
     b80:	80 91 1c 03 	lds	r24, 0x031C
     b84:	8b 7f       	andi	r24, 0xFB	; 251
     b86:	80 93 1c 03 	sts	0x031C, r24
     b8a:	3e c0       	rjmp	.+124    	; 0xc08 <main+0xa8c>
				}
				if(state == 13){
     b8c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b8e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     b90:	0d 97       	sbiw	r24, 0x0d	; 13
     b92:	31 f4       	brne	.+12     	; 0xba0 <main+0xa24>
					u_outputByte0.bits_in_outputByte0.plateStop = 1;
     b94:	80 91 1c 03 	lds	r24, 0x031C
     b98:	84 60       	ori	r24, 0x04	; 4
     b9a:	80 93 1c 03 	sts	0x031C, r24
     b9e:	3e c0       	rjmp	.+124    	; 0xc1c <main+0xaa0>
				}
				if(state == 14){
     ba0:	ed 8d       	ldd	r30, Y+29	; 0x1d
     ba2:	fe 8d       	ldd	r31, Y+30	; 0x1e
     ba4:	3e 97       	sbiw	r30, 0x0e	; 14
     ba6:	81 f4       	brne	.+32     	; 0xbc8 <main+0xa4c>
					if(print == 0){
     ba8:	01 15       	cp	r16, r1
     baa:	11 05       	cpc	r17, r1
     bac:	31 f4       	brne	.+12     	; 0xbba <main+0xa3e>
						OrangutanLCD::print("OUT 3 FIXTURE RAISE");
     bae:	85 ed       	ldi	r24, 0xD5	; 213
     bb0:	91 e0       	ldi	r25, 0x01	; 1
     bb2:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     bb6:	01 e0       	ldi	r16, 0x01	; 1
     bb8:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
     bba:	80 91 1c 03 	lds	r24, 0x031C
     bbe:	87 7f       	andi	r24, 0xF7	; 247
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
     bc0:	80 61       	ori	r24, 0x10	; 16
     bc2:	80 93 1c 03 	sts	0x031C, r24
     bc6:	3e c0       	rjmp	.+124    	; 0xc44 <main+0xac8>
				}
				if(state == 15){
     bc8:	2d 8d       	ldd	r18, Y+29	; 0x1d
     bca:	3e 8d       	ldd	r19, Y+30	; 0x1e
     bcc:	2f 30       	cpi	r18, 0x0F	; 15
     bce:	31 05       	cpc	r19, r1
     bd0:	31 f4       	brne	.+12     	; 0xbde <main+0xa62>
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
     bd2:	80 91 1c 03 	lds	r24, 0x031C
     bd6:	88 60       	ori	r24, 0x08	; 8
     bd8:	80 93 1c 03 	sts	0x031C, r24
     bdc:	3e c0       	rjmp	.+124    	; 0xc5a <main+0xade>
					//u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
				}
				if(state == 16){
     bde:	4d 8d       	ldd	r20, Y+29	; 0x1d
     be0:	5e 8d       	ldd	r21, Y+30	; 0x1e
     be2:	40 31       	cpi	r20, 0x10	; 16
     be4:	51 05       	cpc	r21, r1
     be6:	81 f4       	brne	.+32     	; 0xc08 <main+0xa8c>
					if(print == 0){
     be8:	01 15       	cp	r16, r1
     bea:	11 05       	cpc	r17, r1
     bec:	31 f4       	brne	.+12     	; 0xbfa <main+0xa7e>
						OrangutanLCD::print("OUT 4 FIXTURE LOWER");
     bee:	89 ee       	ldi	r24, 0xE9	; 233
     bf0:	91 e0       	ldi	r25, 0x01	; 1
     bf2:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     bf6:	01 e0       	ldi	r16, 0x01	; 1
     bf8:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
     bfa:	80 91 1c 03 	lds	r24, 0x031C
     bfe:	88 60       	ori	r24, 0x08	; 8
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
     c00:	8f 7e       	andi	r24, 0xEF	; 239
     c02:	80 93 1c 03 	sts	0x031C, r24
     c06:	3e c0       	rjmp	.+124    	; 0xc84 <main+0xb08>
				}
				if(state == 17){
     c08:	8d 8d       	ldd	r24, Y+29	; 0x1d
     c0a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     c0c:	41 97       	sbiw	r24, 0x11	; 17
     c0e:	31 f4       	brne	.+12     	; 0xc1c <main+0xaa0>
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
     c10:	80 91 1c 03 	lds	r24, 0x031C
     c14:	80 61       	ori	r24, 0x10	; 16
     c16:	80 93 1c 03 	sts	0x031C, r24
     c1a:	3e c0       	rjmp	.+124    	; 0xc98 <main+0xb1c>
				}
				if(state == 18){
     c1c:	ed 8d       	ldd	r30, Y+29	; 0x1d
     c1e:	fe 8d       	ldd	r31, Y+30	; 0x1e
     c20:	72 97       	sbiw	r30, 0x12	; 18
     c22:	81 f4       	brne	.+32     	; 0xc44 <main+0xac8>
					if(print == 0){
     c24:	01 15       	cp	r16, r1
     c26:	11 05       	cpc	r17, r1
     c28:	31 f4       	brne	.+12     	; 0xc36 <main+0xaba>
						OrangutanLCD::print("OUT 5 BRUSH1 RAISE");
     c2a:	8d ef       	ldi	r24, 0xFD	; 253
     c2c:	91 e0       	ldi	r25, 0x01	; 1
     c2e:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     c32:	01 e0       	ldi	r16, 0x01	; 1
     c34:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.brush1Raise = 0;
     c36:	80 91 1c 03 	lds	r24, 0x031C
     c3a:	8f 7d       	andi	r24, 0xDF	; 223
					u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
     c3c:	80 64       	ori	r24, 0x40	; 64
     c3e:	80 93 1c 03 	sts	0x031C, r24
     c42:	42 c0       	rjmp	.+132    	; 0xcc8 <main+0xb4c>
				}
				if(state == 19){
     c44:	2d 8d       	ldd	r18, Y+29	; 0x1d
     c46:	3e 8d       	ldd	r19, Y+30	; 0x1e
     c48:	23 31       	cpi	r18, 0x13	; 19
     c4a:	31 05       	cpc	r19, r1
     c4c:	31 f4       	brne	.+12     	; 0xc5a <main+0xade>
					u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
     c4e:	80 91 1c 03 	lds	r24, 0x031C
     c52:	80 62       	ori	r24, 0x20	; 32
     c54:	80 93 1c 03 	sts	0x031C, r24
     c58:	42 c0       	rjmp	.+132    	; 0xcde <main+0xb62>
					//u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
				}
				if(state == 20){
     c5a:	4d 8d       	ldd	r20, Y+29	; 0x1d
     c5c:	5e 8d       	ldd	r21, Y+30	; 0x1e
     c5e:	44 31       	cpi	r20, 0x14	; 20
     c60:	51 05       	cpc	r21, r1
     c62:	81 f4       	brne	.+32     	; 0xc84 <main+0xb08>
					if(print == 0){
     c64:	01 15       	cp	r16, r1
     c66:	11 05       	cpc	r17, r1
     c68:	31 f4       	brne	.+12     	; 0xc76 <main+0xafa>
						OrangutanLCD::print("OUT 6 BRUSH1 LOWER");
     c6a:	80 e1       	ldi	r24, 0x10	; 16
     c6c:	92 e0       	ldi	r25, 0x02	; 2
     c6e:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     c72:	01 e0       	ldi	r16, 0x01	; 1
     c74:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
     c76:	80 91 1c 03 	lds	r24, 0x031C
     c7a:	8f 7b       	andi	r24, 0xBF	; 191
					u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
     c7c:	80 62       	ori	r24, 0x20	; 32
     c7e:	80 93 1c 03 	sts	0x031C, r24
     c82:	46 c0       	rjmp	.+140    	; 0xd10 <main+0xb94>
				}
				if(state == 21){
     c84:	8d 8d       	ldd	r24, Y+29	; 0x1d
     c86:	9e 8d       	ldd	r25, Y+30	; 0x1e
     c88:	45 97       	sbiw	r24, 0x15	; 21
     c8a:	31 f4       	brne	.+12     	; 0xc98 <main+0xb1c>
					u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
     c8c:	80 91 1c 03 	lds	r24, 0x031C
     c90:	80 64       	ori	r24, 0x40	; 64
     c92:	80 93 1c 03 	sts	0x031C, r24
     c96:	46 c0       	rjmp	.+140    	; 0xd24 <main+0xba8>
				}
				if(state == 22){
     c98:	ed 8d       	ldd	r30, Y+29	; 0x1d
     c9a:	fe 8d       	ldd	r31, Y+30	; 0x1e
     c9c:	76 97       	sbiw	r30, 0x16	; 22
     c9e:	a1 f4       	brne	.+40     	; 0xcc8 <main+0xb4c>
					if(print == 0){
     ca0:	01 15       	cp	r16, r1
     ca2:	11 05       	cpc	r17, r1
     ca4:	31 f4       	brne	.+12     	; 0xcb2 <main+0xb36>
						OrangutanLCD::print("OUT 7 BRUSH2 RAISE");
     ca6:	83 e2       	ldi	r24, 0x23	; 35
     ca8:	92 e0       	ldi	r25, 0x02	; 2
     caa:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     cae:	01 e0       	ldi	r16, 0x01	; 1
     cb0:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.brush2Raise = 0;
     cb2:	80 91 1c 03 	lds	r24, 0x031C
     cb6:	8f 77       	andi	r24, 0x7F	; 127
     cb8:	80 93 1c 03 	sts	0x031C, r24
					u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
     cbc:	80 91 1d 03 	lds	r24, 0x031D
     cc0:	81 60       	ori	r24, 0x01	; 1
     cc2:	80 93 1d 03 	sts	0x031D, r24
     cc6:	42 c0       	rjmp	.+132    	; 0xd4c <main+0xbd0>
				}
				if(state == 23){
     cc8:	2d 8d       	ldd	r18, Y+29	; 0x1d
     cca:	3e 8d       	ldd	r19, Y+30	; 0x1e
     ccc:	27 31       	cpi	r18, 0x17	; 23
     cce:	31 05       	cpc	r19, r1
     cd0:	31 f4       	brne	.+12     	; 0xcde <main+0xb62>
					u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
     cd2:	80 91 1c 03 	lds	r24, 0x031C
     cd6:	80 68       	ori	r24, 0x80	; 128
     cd8:	80 93 1c 03 	sts	0x031C, r24
     cdc:	42 c0       	rjmp	.+132    	; 0xd62 <main+0xbe6>
					//u_outputByte0.bits_in_outputByte0.brush2Lower = 0;
				}
				if(state == 24){
     cde:	4d 8d       	ldd	r20, Y+29	; 0x1d
     ce0:	5e 8d       	ldd	r21, Y+30	; 0x1e
     ce2:	48 31       	cpi	r20, 0x18	; 24
     ce4:	51 05       	cpc	r21, r1
     ce6:	a1 f4       	brne	.+40     	; 0xd10 <main+0xb94>
					if(print == 0){
     ce8:	01 15       	cp	r16, r1
     cea:	11 05       	cpc	r17, r1
     cec:	31 f4       	brne	.+12     	; 0xcfa <main+0xb7e>
						OrangutanLCD::print("OUT 8 BRUSH2 LOWER");
     cee:	86 e3       	ldi	r24, 0x36	; 54
     cf0:	92 e0       	ldi	r25, 0x02	; 2
     cf2:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     cf6:	01 e0       	ldi	r16, 0x01	; 1
     cf8:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte1.bits_in_outputByte1.brush2Lower = 0;
     cfa:	80 91 1d 03 	lds	r24, 0x031D
     cfe:	8e 7f       	andi	r24, 0xFE	; 254
     d00:	80 93 1d 03 	sts	0x031D, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
     d04:	80 91 1c 03 	lds	r24, 0x031C
     d08:	80 68       	ori	r24, 0x80	; 128
     d0a:	80 93 1c 03 	sts	0x031C, r24
     d0e:	3e c0       	rjmp	.+124    	; 0xd8c <main+0xc10>
				}
				if(state == 25){
     d10:	8d 8d       	ldd	r24, Y+29	; 0x1d
     d12:	9e 8d       	ldd	r25, Y+30	; 0x1e
     d14:	49 97       	sbiw	r24, 0x19	; 25
     d16:	31 f4       	brne	.+12     	; 0xd24 <main+0xba8>
					u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
     d18:	80 91 1d 03 	lds	r24, 0x031D
     d1c:	81 60       	ori	r24, 0x01	; 1
     d1e:	80 93 1d 03 	sts	0x031D, r24
     d22:	3e c0       	rjmp	.+124    	; 0xda0 <main+0xc24>
				}
				if(state == 26){
     d24:	ed 8d       	ldd	r30, Y+29	; 0x1d
     d26:	fe 8d       	ldd	r31, Y+30	; 0x1e
     d28:	7a 97       	sbiw	r30, 0x1a	; 26
     d2a:	81 f4       	brne	.+32     	; 0xd4c <main+0xbd0>
					if(print == 0){
     d2c:	01 15       	cp	r16, r1
     d2e:	11 05       	cpc	r17, r1
     d30:	31 f4       	brne	.+12     	; 0xd3e <main+0xbc2>
						OrangutanLCD::print("OUT 9 PT RAISE");
     d32:	89 e4       	ldi	r24, 0x49	; 73
     d34:	92 e0       	ldi	r25, 0x02	; 2
     d36:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     d3a:	01 e0       	ldi	r16, 0x01	; 1
     d3c:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte1.bits_in_outputByte1.ptRaise = 0;
     d3e:	80 91 1d 03 	lds	r24, 0x031D
     d42:	8d 7f       	andi	r24, 0xFD	; 253
					u_outputByte1.bits_in_outputByte1.ptLower = 1;
     d44:	84 60       	ori	r24, 0x04	; 4
     d46:	80 93 1d 03 	sts	0x031D, r24
     d4a:	3d c0       	rjmp	.+122    	; 0xdc6 <main+0xc4a>
				}
				if(state == 27){
     d4c:	2d 8d       	ldd	r18, Y+29	; 0x1d
     d4e:	3e 8d       	ldd	r19, Y+30	; 0x1e
     d50:	2b 31       	cpi	r18, 0x1B	; 27
     d52:	31 05       	cpc	r19, r1
     d54:	31 f4       	brne	.+12     	; 0xd62 <main+0xbe6>
					u_outputByte1.bits_in_outputByte1.ptRaise = 1;
     d56:	80 91 1d 03 	lds	r24, 0x031D
     d5a:	82 60       	ori	r24, 0x02	; 2
     d5c:	80 93 1d 03 	sts	0x031D, r24
     d60:	3d c0       	rjmp	.+122    	; 0xddc <main+0xc60>
					//u_outputByte1.bits_in_outputByte1.ptLower = 0;
				}
				if(state == 28){
     d62:	4d 8d       	ldd	r20, Y+29	; 0x1d
     d64:	5e 8d       	ldd	r21, Y+30	; 0x1e
     d66:	4c 31       	cpi	r20, 0x1C	; 28
     d68:	51 05       	cpc	r21, r1
     d6a:	81 f4       	brne	.+32     	; 0xd8c <main+0xc10>
					if(print == 0){
     d6c:	01 15       	cp	r16, r1
     d6e:	11 05       	cpc	r17, r1
     d70:	31 f4       	brne	.+12     	; 0xd7e <main+0xc02>
						OrangutanLCD::print("OUT 10 PT LOWER");
     d72:	88 e5       	ldi	r24, 0x58	; 88
     d74:	92 e0       	ldi	r25, 0x02	; 2
     d76:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     d7a:	01 e0       	ldi	r16, 0x01	; 1
     d7c:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte1.bits_in_outputByte1.ptLower = 0;
     d7e:	80 91 1d 03 	lds	r24, 0x031D
     d82:	8b 7f       	andi	r24, 0xFB	; 251
					u_outputByte1.bits_in_outputByte1.ptRaise = 1;
     d84:	82 60       	ori	r24, 0x02	; 2
     d86:	80 93 1d 03 	sts	0x031D, r24
     d8a:	40 c0       	rjmp	.+128    	; 0xe0c <main+0xc90>
				}
				if(state == 29){
     d8c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     d8e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     d90:	4d 97       	sbiw	r24, 0x1d	; 29
     d92:	31 f4       	brne	.+12     	; 0xda0 <main+0xc24>
					u_outputByte1.bits_in_outputByte1.ptLower = 1;
     d94:	80 91 1d 03 	lds	r24, 0x031D
     d98:	84 60       	ori	r24, 0x04	; 4
     d9a:	80 93 1d 03 	sts	0x031D, r24
     d9e:	44 c0       	rjmp	.+136    	; 0xe28 <main+0xcac>
				}
				if(state == 30){
     da0:	ed 8d       	ldd	r30, Y+29	; 0x1d
     da2:	fe 8d       	ldd	r31, Y+30	; 0x1e
     da4:	7e 97       	sbiw	r30, 0x1e	; 30
     da6:	79 f4       	brne	.+30     	; 0xdc6 <main+0xc4a>
					if(print == 0){
     da8:	01 15       	cp	r16, r1
     daa:	11 05       	cpc	r17, r1
     dac:	31 f4       	brne	.+12     	; 0xdba <main+0xc3e>
						OrangutanLCD::print("OUT 11 AIR KNIFE");
     dae:	88 e6       	ldi	r24, 0x68	; 104
     db0:	92 e0       	ldi	r25, 0x02	; 2
     db2:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     db6:	01 e0       	ldi	r16, 0x01	; 1
     db8:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte1.bits_in_outputByte1.airKnife = 0;
     dba:	80 91 1d 03 	lds	r24, 0x031D
     dbe:	87 7f       	andi	r24, 0xF7	; 247
     dc0:	80 93 1d 03 	sts	0x031D, r24
     dc4:	4a c0       	rjmp	.+148    	; 0xe5a <main+0xcde>
				}
				if(state == 31){
     dc6:	2d 8d       	ldd	r18, Y+29	; 0x1d
     dc8:	3e 8d       	ldd	r19, Y+30	; 0x1e
     dca:	2f 31       	cpi	r18, 0x1F	; 31
     dcc:	31 05       	cpc	r19, r1
     dce:	31 f4       	brne	.+12     	; 0xddc <main+0xc60>
					u_outputByte1.bits_in_outputByte1.airKnife = 1;
     dd0:	80 91 1d 03 	lds	r24, 0x031D
     dd4:	88 60       	ori	r24, 0x08	; 8
     dd6:	80 93 1d 03 	sts	0x031D, r24
     dda:	4c c0       	rjmp	.+152    	; 0xe74 <main+0xcf8>
				}
				if(state == 32){
     ddc:	4d 8d       	ldd	r20, Y+29	; 0x1d
     dde:	5e 8d       	ldd	r21, Y+30	; 0x1e
     de0:	40 32       	cpi	r20, 0x20	; 32
     de2:	51 05       	cpc	r21, r1
     de4:	99 f4       	brne	.+38     	; 0xe0c <main+0xc90>
					if(print == 0){
     de6:	01 15       	cp	r16, r1
     de8:	11 05       	cpc	r17, r1
     dea:	31 f4       	brne	.+12     	; 0xdf8 <main+0xc7c>
						OrangutanLCD::print("M1 PLATE");
     dec:	89 e7       	ldi	r24, 0x79	; 121
     dee:	92 e0       	ldi	r25, 0x02	; 2
     df0:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     df4:	01 e0       	ldi	r16, 0x01	; 1
     df6:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_motorByte0.bits_in_motorByte0.m1Dir = 0;
     df8:	80 91 1a 03 	lds	r24, 0x031A
     dfc:	8d 7f       	andi	r24, 0xFD	; 253
     dfe:	80 93 1a 03 	sts	0x031A, r24
     e02:	81 e0       	ldi	r24, 0x01	; 1
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	9a 83       	std	Y+2, r25	; 0x02
     e08:	89 83       	std	Y+1, r24	; 0x01
     e0a:	4c c0       	rjmp	.+152    	; 0xea4 <main+0xd28>
					m1 =  1;
				}
				if(state == 33){
     e0c:	ed 8d       	ldd	r30, Y+29	; 0x1d
     e0e:	fe 8d       	ldd	r31, Y+30	; 0x1e
     e10:	b1 97       	sbiw	r30, 0x21	; 33
     e12:	51 f4       	brne	.+20     	; 0xe28 <main+0xcac>
					u_motorByte0.bits_in_motorByte0.m1Dir = 1;
     e14:	80 91 1a 03 	lds	r24, 0x031A
     e18:	82 60       	ori	r24, 0x02	; 2
     e1a:	80 93 1a 03 	sts	0x031A, r24
     e1e:	21 e0       	ldi	r18, 0x01	; 1
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	3a 83       	std	Y+2, r19	; 0x02
     e24:	29 83       	std	Y+1, r18	; 0x01
     e26:	4c c0       	rjmp	.+152    	; 0xec0 <main+0xd44>
					m1 =  1;
				}
				if(state == 34){
     e28:	4d 8d       	ldd	r20, Y+29	; 0x1d
     e2a:	5e 8d       	ldd	r21, Y+30	; 0x1e
     e2c:	42 32       	cpi	r20, 0x22	; 34
     e2e:	51 05       	cpc	r21, r1
     e30:	a1 f4       	brne	.+40     	; 0xe5a <main+0xcde>
					if(print == 0){
     e32:	01 15       	cp	r16, r1
     e34:	11 05       	cpc	r17, r1
     e36:	31 f4       	brne	.+12     	; 0xe44 <main+0xcc8>
						OrangutanLCD::print("M2 FIXTURE");
     e38:	82 e8       	ldi	r24, 0x82	; 130
     e3a:	92 e0       	ldi	r25, 0x02	; 2
     e3c:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     e40:	01 e0       	ldi	r16, 0x01	; 1
     e42:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;
     e44:	80 91 1a 03 	lds	r24, 0x031A
     e48:	8f 7e       	andi	r24, 0xEF	; 239
     e4a:	80 93 1a 03 	sts	0x031A, r24
     e4e:	1a 82       	std	Y+2, r1	; 0x02
     e50:	19 82       	std	Y+1, r1	; 0x01
     e52:	81 e0       	ldi	r24, 0x01	; 1
     e54:	68 2e       	mov	r6, r24
     e56:	71 2c       	mov	r7, r1
     e58:	49 c0       	rjmp	.+146    	; 0xeec <main+0xd70>
					m2 =  1;
					m1 = 0;
				}
				if(state == 35){
     e5a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     e5c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     e5e:	83 97       	sbiw	r24, 0x23	; 35
     e60:	49 f4       	brne	.+18     	; 0xe74 <main+0xcf8>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;
     e62:	80 91 1a 03 	lds	r24, 0x031A
     e66:	80 61       	ori	r24, 0x10	; 16
     e68:	80 93 1a 03 	sts	0x031A, r24
     e6c:	b1 e0       	ldi	r27, 0x01	; 1
     e6e:	6b 2e       	mov	r6, r27
     e70:	71 2c       	mov	r7, r1
     e72:	49 c0       	rjmp	.+146    	; 0xf06 <main+0xd8a>
					m2 =  1;
				}
				if(state == 36){
     e74:	ed 8d       	ldd	r30, Y+29	; 0x1d
     e76:	fe 8d       	ldd	r31, Y+30	; 0x1e
     e78:	b4 97       	sbiw	r30, 0x24	; 36
     e7a:	a1 f4       	brne	.+40     	; 0xea4 <main+0xd28>
					if(print == 0){
     e7c:	01 15       	cp	r16, r1
     e7e:	11 05       	cpc	r17, r1
     e80:	31 f4       	brne	.+12     	; 0xe8e <main+0xd12>
						OrangutanLCD::print("M3 BRUSH1");
     e82:	8d e8       	ldi	r24, 0x8D	; 141
     e84:	92 e0       	ldi	r25, 0x02	; 2
     e86:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     e8a:	01 e0       	ldi	r16, 0x01	; 1
     e8c:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_motorByte0.bits_in_motorByte0.m3Dir = 0;
     e8e:	80 91 1a 03 	lds	r24, 0x031A
     e92:	8f 77       	andi	r24, 0x7F	; 127
     e94:	80 93 1a 03 	sts	0x031A, r24
     e98:	66 24       	eor	r6, r6
     e9a:	77 24       	eor	r7, r7
     e9c:	a1 e0       	ldi	r26, 0x01	; 1
     e9e:	2a 2e       	mov	r2, r26
     ea0:	31 2c       	mov	r3, r1
     ea2:	4a c0       	rjmp	.+148    	; 0xf38 <main+0xdbc>
					m3 =  1;
					m2 = 0;
				}
				if(state == 37){
     ea4:	2d 8d       	ldd	r18, Y+29	; 0x1d
     ea6:	3e 8d       	ldd	r19, Y+30	; 0x1e
     ea8:	25 32       	cpi	r18, 0x25	; 37
     eaa:	31 05       	cpc	r19, r1
     eac:	49 f4       	brne	.+18     	; 0xec0 <main+0xd44>
					u_motorByte0.bits_in_motorByte0.m3Dir = 1;
     eae:	80 91 1a 03 	lds	r24, 0x031A
     eb2:	80 68       	ori	r24, 0x80	; 128
     eb4:	80 93 1a 03 	sts	0x031A, r24
     eb8:	f1 e0       	ldi	r31, 0x01	; 1
     eba:	2f 2e       	mov	r2, r31
     ebc:	31 2c       	mov	r3, r1
     ebe:	4a c0       	rjmp	.+148    	; 0xf54 <main+0xdd8>
					m3 =  1;
				}
				if(state == 38){
     ec0:	4d 8d       	ldd	r20, Y+29	; 0x1d
     ec2:	5e 8d       	ldd	r21, Y+30	; 0x1e
     ec4:	46 32       	cpi	r20, 0x26	; 38
     ec6:	51 05       	cpc	r21, r1
     ec8:	89 f4       	brne	.+34     	; 0xeec <main+0xd70>
					if(print == 0){
     eca:	01 15       	cp	r16, r1
     ecc:	11 05       	cpc	r17, r1
     ece:	31 f4       	brne	.+12     	; 0xedc <main+0xd60>
						OrangutanLCD::print("M4 BRUSH2");
     ed0:	87 e9       	ldi	r24, 0x97	; 151
     ed2:	92 e0       	ldi	r25, 0x02	; 2
     ed4:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     ed8:	01 e0       	ldi	r16, 0x01	; 1
     eda:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_motorByte1.bits_in_motorByte1.m4Dir = 0;
     edc:	80 91 1b 03 	lds	r24, 0x031B
     ee0:	8b 7f       	andi	r24, 0xFB	; 251
     ee2:	80 93 1b 03 	sts	0x031B, r24
     ee6:	22 24       	eor	r2, r2
     ee8:	33 24       	eor	r3, r3
     eea:	09 c0       	rjmp	.+18     	; 0xefe <main+0xd82>
					m4 =  1;
					m3 = 0;
				}
				if(state == 39){
     eec:	8d 8d       	ldd	r24, Y+29	; 0x1d
     eee:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ef0:	87 97       	sbiw	r24, 0x27	; 39
     ef2:	49 f4       	brne	.+18     	; 0xf06 <main+0xd8a>
					u_motorByte1.bits_in_motorByte1.m4Dir = 1;
     ef4:	80 91 1b 03 	lds	r24, 0x031B
     ef8:	84 60       	ori	r24, 0x04	; 4
     efa:	80 93 1b 03 	sts	0x031B, r24
     efe:	e1 e0       	ldi	r30, 0x01	; 1
     f00:	4e 2e       	mov	r4, r30
     f02:	51 2c       	mov	r5, r1
     f04:	27 c0       	rjmp	.+78     	; 0xf54 <main+0xdd8>
					m4 =  1;
				}
				if(state == 40){
     f06:	ed 8d       	ldd	r30, Y+29	; 0x1d
     f08:	fe 8d       	ldd	r31, Y+30	; 0x1e
     f0a:	b8 97       	sbiw	r30, 0x28	; 40
     f0c:	a9 f4       	brne	.+42     	; 0xf38 <main+0xdbc>
					if(print == 0){
     f0e:	01 15       	cp	r16, r1
     f10:	11 05       	cpc	r17, r1
     f12:	31 f4       	brne	.+12     	; 0xf20 <main+0xda4>
						OrangutanLCD::print("M5 PTOWEL");
     f14:	81 ea       	ldi	r24, 0xA1	; 161
     f16:	92 e0       	ldi	r25, 0x02	; 2
     f18:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
     f1c:	01 e0       	ldi	r16, 0x01	; 1
     f1e:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_motorByte1.bits_in_motorByte1.m5Dir = 0;
     f20:	80 91 1b 03 	lds	r24, 0x031B
     f24:	8f 7d       	andi	r24, 0xDF	; 223
     f26:	80 93 1b 03 	sts	0x031B, r24
     f2a:	21 e0       	ldi	r18, 0x01	; 1
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	3c 8f       	std	Y+28, r19	; 0x1c
     f30:	2b 8f       	std	Y+27, r18	; 0x1b
     f32:	44 24       	eor	r4, r4
     f34:	55 24       	eor	r5, r5
     f36:	0e c0       	rjmp	.+28     	; 0xf54 <main+0xdd8>
					m5 =  1;
					m4 = 0;
				}
				if(state == 41){
     f38:	4d 8d       	ldd	r20, Y+29	; 0x1d
     f3a:	5e 8d       	ldd	r21, Y+30	; 0x1e
     f3c:	49 32       	cpi	r20, 0x29	; 41
     f3e:	51 05       	cpc	r21, r1
     f40:	49 f4       	brne	.+18     	; 0xf54 <main+0xdd8>
					u_motorByte1.bits_in_motorByte1.m5Dir = 1;
     f42:	80 91 1b 03 	lds	r24, 0x031B
     f46:	80 62       	ori	r24, 0x20	; 32
     f48:	80 93 1b 03 	sts	0x031B, r24
     f4c:	81 e0       	ldi	r24, 0x01	; 1
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	9c 8f       	std	Y+28, r25	; 0x1c
     f52:	8b 8f       	std	Y+27, r24	; 0x1b
					m5 =  1;
				}

				//motor and write
				if( ((counter - counterRef) % (totallength1) ) < (steplength1) && m1)  //check if it is in the right period of the loop to send high
     f54:	c6 01       	movw	r24, r12
     f56:	8a 19       	sub	r24, r10
     f58:	9b 09       	sbc	r25, r11
     f5a:	62 e0       	ldi	r22, 0x02	; 2
     f5c:	70 e0       	ldi	r23, 0x00	; 0
     f5e:	0e 94 35 20 	call	0x406a	; 0x406a <__divmodhi4>
     f62:	9c 01       	movw	r18, r24
     f64:	18 16       	cp	r1, r24
     f66:	19 06       	cpc	r1, r25
     f68:	54 f0       	brlt	.+20     	; 0xf7e <main+0xe02>
     f6a:	e9 81       	ldd	r30, Y+1	; 0x01
     f6c:	fa 81       	ldd	r31, Y+2	; 0x02
     f6e:	ef 2b       	or	r30, r31
     f70:	31 f0       	breq	.+12     	; 0xf7e <main+0xe02>
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 1; // set bit 0
     f72:	80 91 1a 03 	lds	r24, 0x031A
     f76:	81 60       	ori	r24, 0x01	; 1
     f78:	80 93 1a 03 	sts	0x031A, r24
     f7c:	08 c0       	rjmp	.+16     	; 0xf8e <main+0xe12>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 0; // set bit 0
     f7e:	80 91 1a 03 	lds	r24, 0x031A
     f82:	8e 7f       	andi	r24, 0xFE	; 254
     f84:	80 93 1a 03 	sts	0x031A, r24
				}

				if( ((counter - counterRef) % (totallength2) ) < (steplength2) && m2)
     f88:	12 16       	cp	r1, r18
     f8a:	13 06       	cpc	r1, r19
     f8c:	4c f0       	brlt	.+18     	; 0xfa0 <main+0xe24>
     f8e:	61 14       	cp	r6, r1
     f90:	71 04       	cpc	r7, r1
     f92:	31 f0       	breq	.+12     	; 0xfa0 <main+0xe24>
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 1; // set bit 1
     f94:	80 91 1a 03 	lds	r24, 0x031A
     f98:	88 60       	ori	r24, 0x08	; 8
     f9a:	80 93 1a 03 	sts	0x031A, r24
     f9e:	08 c0       	rjmp	.+16     	; 0xfb0 <main+0xe34>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 0; // set bit 1
     fa0:	80 91 1a 03 	lds	r24, 0x031A
     fa4:	87 7f       	andi	r24, 0xF7	; 247
     fa6:	80 93 1a 03 	sts	0x031A, r24
				}

				if( ((counter - counterRef) % (totallength3) ) < (steplength3) && m3)
     faa:	12 16       	cp	r1, r18
     fac:	13 06       	cpc	r1, r19
     fae:	4c f0       	brlt	.+18     	; 0xfc2 <main+0xe46>
     fb0:	21 14       	cp	r2, r1
     fb2:	31 04       	cpc	r3, r1
     fb4:	31 f0       	breq	.+12     	; 0xfc2 <main+0xe46>
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 1; // set bit 1
     fb6:	80 91 1a 03 	lds	r24, 0x031A
     fba:	80 64       	ori	r24, 0x40	; 64
     fbc:	80 93 1a 03 	sts	0x031A, r24
     fc0:	08 c0       	rjmp	.+16     	; 0xfd2 <main+0xe56>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 0; // set bit 1
     fc2:	80 91 1a 03 	lds	r24, 0x031A
     fc6:	8f 7b       	andi	r24, 0xBF	; 191
     fc8:	80 93 1a 03 	sts	0x031A, r24
				}

				if( ((counter - counterRef) % (totallength4) ) < (steplength4) && m4)
     fcc:	12 16       	cp	r1, r18
     fce:	13 06       	cpc	r1, r19
     fd0:	3c f0       	brlt	.+14     	; 0xfe0 <main+0xe64>
     fd2:	41 14       	cp	r4, r1
     fd4:	51 04       	cpc	r5, r1
     fd6:	21 f0       	breq	.+8      	; 0xfe0 <main+0xe64>
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 1; // set bit 1
     fd8:	80 91 1b 03 	lds	r24, 0x031B
     fdc:	82 60       	ori	r24, 0x02	; 2
     fde:	03 c0       	rjmp	.+6      	; 0xfe6 <main+0xe6a>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 0; // set bit 1
     fe0:	80 91 1b 03 	lds	r24, 0x031B
     fe4:	8d 7f       	andi	r24, 0xFD	; 253
     fe6:	80 93 1b 03 	sts	0x031B, r24
				}

				if( ((counter - counterRefFive) % (totallength5) ) < (steplength5) && m5)
     fea:	c0 fc       	sbrc	r12, 0
     fec:	08 c0       	rjmp	.+16     	; 0xffe <main+0xe82>
     fee:	2b 8d       	ldd	r18, Y+27	; 0x1b
     ff0:	3c 8d       	ldd	r19, Y+28	; 0x1c
     ff2:	23 2b       	or	r18, r19
     ff4:	21 f0       	breq	.+8      	; 0xffe <main+0xe82>
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 1; // set bit 1
     ff6:	80 91 1b 03 	lds	r24, 0x031B
     ffa:	80 61       	ori	r24, 0x10	; 16
     ffc:	03 c0       	rjmp	.+6      	; 0x1004 <main+0xe88>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 0; // set bit 1
     ffe:	80 91 1b 03 	lds	r24, 0x031B
    1002:	8f 7e       	andi	r24, 0xEF	; 239
    1004:	80 93 1b 03 	sts	0x031B, r24
				}

				i2c_start(I2C1+I2C_WRITE);
    1008:	80 e4       	ldi	r24, 0x40	; 64
    100a:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				i2c_write(0x2);									// write command byte
    100e:	82 e0       	ldi	r24, 0x02	; 2
    1010:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_write(u_motorByte0.motorByte0);                       // write first byte of output
    1014:	80 91 1a 03 	lds	r24, 0x031A
    1018:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
       	 		i2c_write(u_motorByte1.motorByte1);                       // write second byte of output
    101c:	80 91 1b 03 	lds	r24, 0x031B
    1020:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
       		 	i2c_stop();                            // set stop conditon = release bus
    1024:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>

				i2c_start(I2C2+I2C_WRITE);
    1028:	82 e4       	ldi	r24, 0x42	; 66
    102a:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				i2c_write(0x2);
    102e:	82 e0       	ldi	r24, 0x02	; 2
    1030:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_write(u_outputByte0.outputByte0);
    1034:	80 91 1c 03 	lds	r24, 0x031C
    1038:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_write(u_outputByte1.outputByte1);
    103c:	80 91 1d 03 	lds	r24, 0x031D
    1040:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
    1044:	81 e0       	ldi	r24, 0x01	; 1
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>
			delay_ms(1000);
			//initialize
			int button = 1, counterRefPush = 0, counterRefRel = 0, stateButton = 0;
			int print = 0;

			while(state != -1){
    104c:	4d 8d       	ldd	r20, Y+29	; 0x1d
    104e:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1050:	4f 5f       	subi	r20, 0xFF	; 255
    1052:	5f 4f       	sbci	r21, 0xFF	; 255
    1054:	11 f4       	brne	.+4      	; 0x105a <main+0xede>
    1056:	0c 94 29 18 	jmp	0x3052	; 0x3052 <main+0x2ed6>
				i2c_start(I2C2+I2C_WRITE);
				i2c_write(0x2);
				i2c_write(u_outputByte0.outputByte0);
				i2c_write(u_outputByte1.outputByte1);

				counter ++;
    105a:	08 94       	sec
    105c:	c1 1c       	adc	r12, r1
    105e:	d1 1c       	adc	r13, r1
    1060:	44 c9       	rjmp	.-3448   	; 0x2ea <main+0x16e>
				delay_ms(1);
			}
		}
		else{
		
		OrangutanLCD::print("NORMAL");
    1062:	8b ea       	ldi	r24, 0xAB	; 171
    1064:	92 e0       	ldi	r25, 0x02	; 2
    1066:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    106a:	88 ee       	ldi	r24, 0xE8	; 232
    106c:	93 e0       	ldi	r25, 0x03	; 3
    106e:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>
		delay_ms(1000);

		int button = 1, counterRefPush = 0, counterRefRel = 0, stateButton = 0;

		//u_motorByte0.bits_in_motorByte0.m1Drop = 1;
		u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    1072:	80 91 1a 03 	lds	r24, 0x031A
    1076:	80 62       	ori	r24, 0x20	; 32
    1078:	80 93 1a 03 	sts	0x031A, r24
		/*u_motorByte1.bits_in_motorByte1.m3Drop = 1;
		u_motorByte1.bits_in_motorByte1.m4Drop = 1;
		u_motorByte1.bits_in_motorByte1.m5Drop = 1;*/

		if(!OrangutanDigital::isInputHigh(IO_D1) && !OrangutanDigital::isInputHigh(IO_D2)){
    107c:	81 e0       	ldi	r24, 0x01	; 1
    107e:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1082:	88 23       	and	r24, r24
    1084:	11 f0       	breq	.+4      	; 0x108a <main+0xf0e>
    1086:	0c 94 a5 19 	jmp	0x334a	; 0x334a <main+0x31ce>
    108a:	82 e0       	ldi	r24, 0x02	; 2
    108c:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1090:	88 23       	and	r24, r24
    1092:	11 f0       	breq	.+4      	; 0x1098 <main+0xf1c>
    1094:	0c 94 a5 19 	jmp	0x334a	; 0x334a <main+0x31ce>
			OrangutanLCD::gotoXY(0,1);
    1098:	61 e0       	ldi	r22, 0x01	; 1
    109a:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
			OrangutanLCD::print("FIRST B");
    109e:	82 eb       	ldi	r24, 0xB2	; 178
    10a0:	92 e0       	ldi	r25, 0x02	; 2
    10a2:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    10a6:	88 24       	eor	r8, r8
    10a8:	99 24       	eor	r9, r9
    10aa:	cc 24       	eor	r12, r12
    10ac:	dd 24       	eor	r13, r13
    10ae:	44 24       	eor	r4, r4
    10b0:	55 24       	eor	r5, r5
    10b2:	22 24       	eor	r2, r2
    10b4:	33 24       	eor	r3, r3
    10b6:	1e 8e       	std	Y+30, r1	; 0x1e
    10b8:	1d 8e       	std	Y+29, r1	; 0x1d
    10ba:	00 e0       	ldi	r16, 0x00	; 0
    10bc:	10 e0       	ldi	r17, 0x00	; 0
    10be:	e1 e0       	ldi	r30, 0x01	; 1
    10c0:	f0 e0       	ldi	r31, 0x00	; 0
    10c2:	fa 8f       	std	Y+26, r31	; 0x1a
    10c4:	e9 8f       	std	Y+25, r30	; 0x19
    10c6:	f8 8f       	std	Y+24, r31	; 0x18
    10c8:	ef 8b       	std	Y+23, r30	; 0x17
    10ca:	fc 8b       	std	Y+20, r31	; 0x14
    10cc:	eb 8b       	std	Y+19, r30	; 0x13
    10ce:	fa 8b       	std	Y+18, r31	; 0x12
    10d0:	e9 8b       	std	Y+17, r30	; 0x11
    10d2:	f8 8b       	std	Y+16, r31	; 0x10
    10d4:	ef 87       	std	Y+15, r30	; 0x0f
    10d6:	ee 24       	eor	r14, r14
    10d8:	ff 24       	eor	r15, r15
    10da:	1e 86       	std	Y+14, r1	; 0x0e
    10dc:	1d 86       	std	Y+13, r1	; 0x0d
    10de:	f8 87       	std	Y+8, r31	; 0x08
    10e0:	ef 83       	std	Y+7, r30	; 0x07
    10e2:	1e 82       	std	Y+6, r1	; 0x06
    10e4:	1d 82       	std	Y+5, r1	; 0x05
    10e6:	1c 82       	std	Y+4, r1	; 0x04
    10e8:	1b 82       	std	Y+3, r1	; 0x03
    10ea:	aa 24       	eor	r10, r10
    10ec:	bb 24       	eor	r11, r11
    10ee:	b9 c4       	rjmp	.+2418   	; 0x1a62 <main+0x18e6>
			while(state != -1)
			{
				i2c_start(I2C3+I2C_WRITE);						// first start condition (write)
    10f0:	84 e4       	ldi	r24, 0x44	; 68
    10f2:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				i2c_write(0x0);								// write command byte
    10f6:	80 e0       	ldi	r24, 0x00	; 0
    10f8:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_start(I2C3+I2C_READ);						// second start condition (read)
    10fc:	85 e4       	ldi	r24, 0x45	; 69
    10fe:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				u_inputByte0.inputByte0 = i2c_readAck();				// read first byte and send Ack, requesting more
    1102:	0e 94 a6 1a 	call	0x354c	; 0x354c <_Z11i2c_readAckv>
    1106:	80 93 1e 03 	sts	0x031E, r24
   		     	u_inputByte1.inputByte1 = i2c_readNak();				// read second byte and send stop condition
    110a:	0e 94 b0 1a 	call	0x3560	; 0x3560 <_Z11i2c_readNakv>
    110e:	80 93 1f 03 	sts	0x031F, r24
  	 	     	i2c_stop();								// set stop conditon = release bus 		
    1112:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>
				OrangutanLCD::gotoXY(0,1);
    1116:	80 e0       	ldi	r24, 0x00	; 0
    1118:	61 e0       	ldi	r22, 0x01	; 1
    111a:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
				OrangutanLCD::print("STATE ");
    111e:	8a eb       	ldi	r24, 0xBA	; 186
    1120:	92 e0       	ldi	r25, 0x02	; 2
    1122:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
	};
	static inline void print(int value)
	{
		print((long)value);
    1126:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1128:	3e 8d       	ldd	r19, Y+30	; 0x1e
    112a:	b9 01       	movw	r22, r18
    112c:	88 27       	eor	r24, r24
    112e:	77 fd       	sbrc	r23, 7
    1130:	80 95       	com	r24
    1132:	98 2f       	mov	r25, r24
    1134:	0e 94 62 1d 	call	0x3ac4	; 0x3ac4 <_ZN12OrangutanLCD5printEl>
				OrangutanLCD::print(state);

				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
    1138:	a1 14       	cp	r10, r1
    113a:	b1 04       	cpc	r11, r1
    113c:	11 f0       	breq	.+4      	; 0x1142 <main+0xfc6>
    113e:	0c 94 cb 19 	jmp	0x3396	; 0x3396 <main+0x321a>
    1142:	80 e0       	ldi	r24, 0x00	; 0
    1144:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1148:	88 23       	and	r24, r24
    114a:	b9 f1       	breq	.+110    	; 0x11ba <main+0x103e>
    114c:	1e 83       	std	Y+6, r17	; 0x06
    114e:	0d 83       	std	Y+5, r16	; 0x05
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
					if(counter - counterRefPush > 15){
    1150:	c8 01       	movw	r24, r16
    1152:	4d 81       	ldd	r20, Y+5	; 0x05
    1154:	5e 81       	ldd	r21, Y+6	; 0x06
    1156:	84 1b       	sub	r24, r20
    1158:	95 0b       	sbc	r25, r21
    115a:	40 97       	sbiw	r24, 0x10	; 16
    115c:	54 f0       	brlt	.+20     	; 0x1172 <main+0xff6>
						if(!OrangutanDigital::isInputHigh(IO_D0)){
    115e:	80 e0       	ldi	r24, 0x00	; 0
    1160:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1164:	88 23       	and	r24, r24
    1166:	11 f0       	breq	.+4      	; 0x116c <main+0xff0>
    1168:	0c 94 d3 19 	jmp	0x33a6	; 0x33a6 <main+0x322a>
    116c:	1c 83       	std	Y+4, r17	; 0x04
    116e:	0b 83       	std	Y+3, r16	; 0x03
    1170:	0c c0       	rjmp	.+24     	; 0x118a <main+0x100e>
							counterRefRel = counter;
							stateButton = 2;
						}
					}
					else if(!OrangutanDigital::isInputHigh(IO_D0)){
    1172:	80 e0       	ldi	r24, 0x00	; 0
    1174:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1178:	88 23       	and	r24, r24
    117a:	11 f0       	breq	.+4      	; 0x1180 <main+0x1004>
    117c:	0c 94 d3 19 	jmp	0x33a6	; 0x33a6 <main+0x322a>
    1180:	16 c0       	rjmp	.+44     	; 0x11ae <main+0x1032>
						stateButton = 0;
					}
				}
				if(stateButton == 2){
    1182:	52 e0       	ldi	r21, 0x02	; 2
    1184:	a5 16       	cp	r10, r21
    1186:	b1 04       	cpc	r11, r1
    1188:	c1 f4       	brne	.+48     	; 0x11ba <main+0x103e>
					if(OrangutanDigital::isInputHigh(IO_D0)){
    118a:	80 e0       	ldi	r24, 0x00	; 0
    118c:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1190:	88 23       	and	r24, r24
    1192:	21 f0       	breq	.+8      	; 0x119c <main+0x1020>
    1194:	1e 83       	std	Y+6, r17	; 0x06
    1196:	0d 83       	std	Y+5, r16	; 0x05
    1198:	0c 94 d3 19 	jmp	0x33a6	; 0x33a6 <main+0x322a>
						stateButton = 1;
						counterRefPush = counter;
					}
					else if(counter - counterRefRel > 15){
    119c:	c8 01       	movw	r24, r16
    119e:	eb 81       	ldd	r30, Y+3	; 0x03
    11a0:	fc 81       	ldd	r31, Y+4	; 0x04
    11a2:	8e 1b       	sub	r24, r30
    11a4:	9f 0b       	sbc	r25, r31
    11a6:	40 97       	sbiw	r24, 0x10	; 16
    11a8:	2c f0       	brlt	.+10     	; 0x11b4 <main+0x1038>
    11aa:	18 86       	std	Y+8, r1	; 0x08
    11ac:	1f 82       	std	Y+7, r1	; 0x07
    11ae:	aa 24       	eor	r10, r10
    11b0:	bb 24       	eor	r11, r11
    11b2:	03 c0       	rjmp	.+6      	; 0x11ba <main+0x103e>
    11b4:	72 e0       	ldi	r23, 0x02	; 2
    11b6:	a7 2e       	mov	r10, r23
    11b8:	b1 2c       	mov	r11, r1
					}
				}

				//state conversions
	
				if(state == 0 && button == 0){
    11ba:	2d 8d       	ldd	r18, Y+29	; 0x1d
    11bc:	3e 8d       	ldd	r19, Y+30	; 0x1e
    11be:	23 2b       	or	r18, r19
    11c0:	59 f4       	brne	.+22     	; 0x11d8 <main+0x105c>
    11c2:	4f 81       	ldd	r20, Y+7	; 0x07
    11c4:	58 85       	ldd	r21, Y+8	; 0x08
    11c6:	45 2b       	or	r20, r21
    11c8:	09 f0       	breq	.+2      	; 0x11cc <main+0x1050>
    11ca:	4a c0       	rjmp	.+148    	; 0x1260 <main+0x10e4>
    11cc:	78 01       	movw	r14, r16
    11ce:	81 e0       	ldi	r24, 0x01	; 1
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	98 87       	std	Y+8, r25	; 0x08
    11d4:	8f 83       	std	Y+7, r24	; 0x07
    11d6:	04 c0       	rjmp	.+8      	; 0x11e0 <main+0x1064>
					button = 1;
					state = 1;
					counterRef = counter;
				}
				if(state == 1 && counter - counterRef > totallength1*m1LoadPlate/*&& u_inputByte0.bits_in_inputByte0.plate == 0*/){
    11d8:	ed 8d       	ldd	r30, Y+29	; 0x1d
    11da:	fe 8d       	ldd	r31, Y+30	; 0x1e
    11dc:	31 97       	sbiw	r30, 0x01	; 1
    11de:	49 f4       	brne	.+18     	; 0x11f2 <main+0x1076>
    11e0:	c8 01       	movw	r24, r16
    11e2:	8e 19       	sub	r24, r14
    11e4:	9f 09       	sbc	r25, r15
    11e6:	81 5a       	subi	r24, 0xA1	; 161
    11e8:	9f 40       	sbci	r25, 0x0F	; 15
    11ea:	0c f4       	brge	.+2      	; 0x11ee <main+0x1072>
    11ec:	47 c0       	rjmp	.+142    	; 0x127c <main+0x1100>
    11ee:	78 01       	movw	r14, r16
    11f0:	05 c0       	rjmp	.+10     	; 0x11fc <main+0x1080>
					state = 2;
					counterRef = counter;
				}
				if(state == 2 && counter - counterRef > pWait){
    11f2:	2d 8d       	ldd	r18, Y+29	; 0x1d
    11f4:	3e 8d       	ldd	r19, Y+30	; 0x1e
    11f6:	22 30       	cpi	r18, 0x02	; 2
    11f8:	31 05       	cpc	r19, r1
    11fa:	49 f4       	brne	.+18     	; 0x120e <main+0x1092>
    11fc:	c8 01       	movw	r24, r16
    11fe:	8e 19       	sub	r24, r14
    1200:	9f 09       	sbc	r25, r15
    1202:	85 36       	cpi	r24, 0x65	; 101
    1204:	91 05       	cpc	r25, r1
    1206:	0c f4       	brge	.+2      	; 0x120a <main+0x108e>
    1208:	4a c0       	rjmp	.+148    	; 0x129e <main+0x1122>
    120a:	78 01       	movw	r14, r16
    120c:	05 c0       	rjmp	.+10     	; 0x1218 <main+0x109c>
					state = 3;
					counterRef = counter;
				}
				if(state == 3 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
    120e:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1210:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1212:	43 30       	cpi	r20, 0x03	; 3
    1214:	51 05       	cpc	r21, r1
    1216:	49 f4       	brne	.+18     	; 0x122a <main+0x10ae>
    1218:	c8 01       	movw	r24, r16
    121a:	8e 19       	sub	r24, r14
    121c:	9f 09       	sbc	r25, r15
    121e:	81 5a       	subi	r24, 0xA1	; 161
    1220:	9f 40       	sbci	r25, 0x0F	; 15
    1222:	0c f4       	brge	.+2      	; 0x1226 <main+0x10aa>
    1224:	4e c0       	rjmp	.+156    	; 0x12c2 <main+0x1146>
    1226:	78 01       	movw	r14, r16
    1228:	04 c0       	rjmp	.+8      	; 0x1232 <main+0x10b6>
					state = 4;
					counterRef = counter;
				}
				if(state == 4 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
    122a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    122c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    122e:	04 97       	sbiw	r24, 0x04	; 4
    1230:	49 f4       	brne	.+18     	; 0x1244 <main+0x10c8>
    1232:	c8 01       	movw	r24, r16
    1234:	8e 19       	sub	r24, r14
    1236:	9f 09       	sbc	r25, r15
    1238:	89 5e       	subi	r24, 0xE9	; 233
    123a:	93 40       	sbci	r25, 0x03	; 3
    123c:	0c f4       	brge	.+2      	; 0x1240 <main+0x10c4>
    123e:	52 c0       	rjmp	.+164    	; 0x12e4 <main+0x1168>
    1240:	78 01       	movw	r14, r16
    1242:	05 c0       	rjmp	.+10     	; 0x124e <main+0x10d2>
					state = 5;
					counterRef = counter;
				}
				if(state == 5 && counter - counterRef > pWait){
    1244:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1246:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1248:	25 30       	cpi	r18, 0x05	; 5
    124a:	31 05       	cpc	r19, r1
    124c:	49 f4       	brne	.+18     	; 0x1260 <main+0x10e4>
    124e:	c8 01       	movw	r24, r16
    1250:	8e 19       	sub	r24, r14
    1252:	9f 09       	sbc	r25, r15
    1254:	85 36       	cpi	r24, 0x65	; 101
    1256:	91 05       	cpc	r25, r1
    1258:	0c f4       	brge	.+2      	; 0x125c <main+0x10e0>
    125a:	54 c0       	rjmp	.+168    	; 0x1304 <main+0x1188>
    125c:	78 01       	movw	r14, r16
    125e:	05 c0       	rjmp	.+10     	; 0x126a <main+0x10ee>
						state = 6;
					counterRef = counter;
				}
				if(state == 6 && counter - counterRef > totallength2*m2Brush1Step /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush1 == 0*/){
    1260:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1262:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1264:	46 30       	cpi	r20, 0x06	; 6
    1266:	51 05       	cpc	r21, r1
    1268:	69 f4       	brne	.+26     	; 0x1284 <main+0x1108>
    126a:	c8 01       	movw	r24, r16
    126c:	8e 19       	sub	r24, r14
    126e:	9f 09       	sbc	r25, r15
    1270:	81 5a       	subi	r24, 0xA1	; 161
    1272:	9f 40       	sbci	r25, 0x0F	; 15
    1274:	0c f4       	brge	.+2      	; 0x1278 <main+0x10fc>
    1276:	57 c0       	rjmp	.+174    	; 0x1326 <main+0x11aa>
    1278:	78 01       	movw	r14, r16
    127a:	08 c0       	rjmp	.+16     	; 0x128c <main+0x1110>
    127c:	81 e0       	ldi	r24, 0x01	; 1
    127e:	90 e0       	ldi	r25, 0x00	; 0
    1280:	9e 8f       	std	Y+30, r25	; 0x1e
    1282:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 7;
					counterRef = counter;
				}
				if(state == 7 && counter - counterRef > mWait){
    1284:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1286:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1288:	37 97       	sbiw	r30, 0x07	; 7
    128a:	69 f4       	brne	.+26     	; 0x12a6 <main+0x112a>
    128c:	c8 01       	movw	r24, r16
    128e:	8e 19       	sub	r24, r14
    1290:	9f 09       	sbc	r25, r15
    1292:	85 36       	cpi	r24, 0x65	; 101
    1294:	91 05       	cpc	r25, r1
    1296:	0c f4       	brge	.+2      	; 0x129a <main+0x111e>
    1298:	58 c0       	rjmp	.+176    	; 0x134a <main+0x11ce>
    129a:	78 01       	movw	r14, r16
    129c:	09 c0       	rjmp	.+18     	; 0x12b0 <main+0x1134>
    129e:	22 e0       	ldi	r18, 0x02	; 2
    12a0:	30 e0       	ldi	r19, 0x00	; 0
    12a2:	3e 8f       	std	Y+30, r19	; 0x1e
    12a4:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 8;
					counterRef = counter;
				}
				if(state == 8 && counter - counterRef > pWait){
    12a6:	4d 8d       	ldd	r20, Y+29	; 0x1d
    12a8:	5e 8d       	ldd	r21, Y+30	; 0x1e
    12aa:	48 30       	cpi	r20, 0x08	; 8
    12ac:	51 05       	cpc	r21, r1
    12ae:	69 f4       	brne	.+26     	; 0x12ca <main+0x114e>
    12b0:	c8 01       	movw	r24, r16
    12b2:	8e 19       	sub	r24, r14
    12b4:	9f 09       	sbc	r25, r15
    12b6:	85 36       	cpi	r24, 0x65	; 101
    12b8:	91 05       	cpc	r25, r1
    12ba:	0c f4       	brge	.+2      	; 0x12be <main+0x1142>
    12bc:	55 c0       	rjmp	.+170    	; 0x1368 <main+0x11ec>
    12be:	78 01       	movw	r14, r16
    12c0:	08 c0       	rjmp	.+16     	; 0x12d2 <main+0x1156>
    12c2:	83 e0       	ldi	r24, 0x03	; 3
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	9e 8f       	std	Y+30, r25	; 0x1e
    12c8:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 9;
						counterRef = counter;
				}
					if(state == 9 && counter - counterRef > totallength2*m2HalfPlate){
    12ca:	ed 8d       	ldd	r30, Y+29	; 0x1d
    12cc:	fe 8d       	ldd	r31, Y+30	; 0x1e
    12ce:	39 97       	sbiw	r30, 0x09	; 9
    12d0:	69 f4       	brne	.+26     	; 0x12ec <main+0x1170>
    12d2:	c8 01       	movw	r24, r16
    12d4:	8e 19       	sub	r24, r14
    12d6:	9f 09       	sbc	r25, r15
    12d8:	81 5a       	subi	r24, 0xA1	; 161
    12da:	9f 40       	sbci	r25, 0x0F	; 15
    12dc:	0c f4       	brge	.+2      	; 0x12e0 <main+0x1164>
    12de:	56 c0       	rjmp	.+172    	; 0x138c <main+0x1210>
    12e0:	78 01       	movw	r14, r16
    12e2:	09 c0       	rjmp	.+18     	; 0x12f6 <main+0x117a>
    12e4:	24 e0       	ldi	r18, 0x04	; 4
    12e6:	30 e0       	ldi	r19, 0x00	; 0
    12e8:	3e 8f       	std	Y+30, r19	; 0x1e
    12ea:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 10;
					counterRef = counter;
				}
				if(state == 10 && counter - counterRef > pWait){
    12ec:	4d 8d       	ldd	r20, Y+29	; 0x1d
    12ee:	5e 8d       	ldd	r21, Y+30	; 0x1e
    12f0:	4a 30       	cpi	r20, 0x0A	; 10
    12f2:	51 05       	cpc	r21, r1
    12f4:	59 f4       	brne	.+22     	; 0x130c <main+0x1190>
    12f6:	c8 01       	movw	r24, r16
    12f8:	8e 19       	sub	r24, r14
    12fa:	9f 09       	sbc	r25, r15
    12fc:	85 36       	cpi	r24, 0x65	; 101
    12fe:	91 05       	cpc	r25, r1
    1300:	4c f4       	brge	.+18     	; 0x1314 <main+0x1198>
    1302:	55 c0       	rjmp	.+170    	; 0x13ae <main+0x1232>
    1304:	85 e0       	ldi	r24, 0x05	; 5
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	9e 8f       	std	Y+30, r25	; 0x1e
    130a:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 11;
				}
				if(state == 11 && counter - counterRef > totallength2*m2HalfPlate /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush1 == 0*/){
    130c:	ed 8d       	ldd	r30, Y+29	; 0x1d
    130e:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1310:	3b 97       	sbiw	r30, 0x0b	; 11
    1312:	69 f4       	brne	.+26     	; 0x132e <main+0x11b2>
    1314:	c8 01       	movw	r24, r16
    1316:	8e 19       	sub	r24, r14
    1318:	9f 09       	sbc	r25, r15
    131a:	81 5a       	subi	r24, 0xA1	; 161
    131c:	9f 40       	sbci	r25, 0x0F	; 15
    131e:	0c f4       	brge	.+2      	; 0x1322 <main+0x11a6>
    1320:	58 c0       	rjmp	.+176    	; 0x13d2 <main+0x1256>
    1322:	78 01       	movw	r14, r16
    1324:	09 c0       	rjmp	.+18     	; 0x1338 <main+0x11bc>
    1326:	26 e0       	ldi	r18, 0x06	; 6
    1328:	30 e0       	ldi	r19, 0x00	; 0
    132a:	3e 8f       	std	Y+30, r19	; 0x1e
    132c:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 12;
					counterRef = counter;
				}
				if(state == 12 && counter - counterRef > pWait){
    132e:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1330:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1332:	4c 30       	cpi	r20, 0x0C	; 12
    1334:	51 05       	cpc	r21, r1
    1336:	69 f4       	brne	.+26     	; 0x1352 <main+0x11d6>
    1338:	c8 01       	movw	r24, r16
    133a:	8e 19       	sub	r24, r14
    133c:	9f 09       	sbc	r25, r15
    133e:	85 36       	cpi	r24, 0x65	; 101
    1340:	91 05       	cpc	r25, r1
    1342:	0c f4       	brge	.+2      	; 0x1346 <main+0x11ca>
    1344:	55 c0       	rjmp	.+170    	; 0x13f0 <main+0x1274>
    1346:	78 01       	movw	r14, r16
    1348:	08 c0       	rjmp	.+16     	; 0x135a <main+0x11de>
    134a:	87 e0       	ldi	r24, 0x07	; 7
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	9e 8f       	std	Y+30, r25	; 0x1e
    1350:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 13;
					counterRef = counter;
				}
				if(state == 13 && counter - counterRef > totallength2*m2HalfPlate){
    1352:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1354:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1356:	3d 97       	sbiw	r30, 0x0d	; 13
    1358:	59 f4       	brne	.+22     	; 0x1370 <main+0x11f4>
    135a:	c8 01       	movw	r24, r16
    135c:	8e 19       	sub	r24, r14
    135e:	9f 09       	sbc	r25, r15
    1360:	81 5a       	subi	r24, 0xA1	; 161
    1362:	9f 40       	sbci	r25, 0x0F	; 15
    1364:	54 f4       	brge	.+20     	; 0x137a <main+0x11fe>
    1366:	57 c0       	rjmp	.+174    	; 0x1416 <main+0x129a>
    1368:	28 e0       	ldi	r18, 0x08	; 8
    136a:	30 e0       	ldi	r19, 0x00	; 0
    136c:	3e 8f       	std	Y+30, r19	; 0x1e
    136e:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 14;
					counterRef14 = counter;
					}
				if(state == 14 && counter - counterRef > pWait){
    1370:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1372:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1374:	4e 30       	cpi	r20, 0x0E	; 14
    1376:	51 05       	cpc	r21, r1
    1378:	69 f4       	brne	.+26     	; 0x1394 <main+0x1218>
    137a:	c8 01       	movw	r24, r16
    137c:	8e 19       	sub	r24, r14
    137e:	9f 09       	sbc	r25, r15
    1380:	85 36       	cpi	r24, 0x65	; 101
    1382:	91 05       	cpc	r25, r1
    1384:	0c f4       	brge	.+2      	; 0x1388 <main+0x120c>
    1386:	5a c0       	rjmp	.+180    	; 0x143c <main+0x12c0>
    1388:	78 01       	movw	r14, r16
    138a:	08 c0       	rjmp	.+16     	; 0x139c <main+0x1220>
    138c:	89 e0       	ldi	r24, 0x09	; 9
    138e:	90 e0       	ldi	r25, 0x00	; 0
    1390:	9e 8f       	std	Y+30, r25	; 0x1e
    1392:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 23;
					counterRef = counter;
				}
				if(state == 23 && counter - counterRef > totallength2*m2Dry1StepWhole /*&& u_inputByte0.bits_in_inputByte0.fixtureDry1 == 0*/){
    1394:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1396:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1398:	77 97       	sbiw	r30, 0x17	; 23
    139a:	69 f4       	brne	.+26     	; 0x13b6 <main+0x123a>
    139c:	c8 01       	movw	r24, r16
    139e:	8e 19       	sub	r24, r14
    13a0:	9f 09       	sbc	r25, r15
    13a2:	81 5a       	subi	r24, 0xA1	; 161
    13a4:	9f 40       	sbci	r25, 0x0F	; 15
    13a6:	0c f4       	brge	.+2      	; 0x13aa <main+0x122e>
    13a8:	5a c0       	rjmp	.+180    	; 0x145e <main+0x12e2>
    13aa:	78 01       	movw	r14, r16
    13ac:	09 c0       	rjmp	.+18     	; 0x13c0 <main+0x1244>
    13ae:	2a e0       	ldi	r18, 0x0A	; 10
    13b0:	30 e0       	ldi	r19, 0x00	; 0
    13b2:	3e 8f       	std	Y+30, r19	; 0x1e
    13b4:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 24;
					counterRef = counter;
				}
				if(state == 24 && counter - counterRef > kWait){
    13b6:	4d 8d       	ldd	r20, Y+29	; 0x1d
    13b8:	5e 8d       	ldd	r21, Y+30	; 0x1e
    13ba:	48 31       	cpi	r20, 0x18	; 24
    13bc:	51 05       	cpc	r21, r1
    13be:	69 f4       	brne	.+26     	; 0x13da <main+0x125e>
    13c0:	c8 01       	movw	r24, r16
    13c2:	8e 19       	sub	r24, r14
    13c4:	9f 09       	sbc	r25, r15
    13c6:	85 36       	cpi	r24, 0x65	; 101
    13c8:	91 05       	cpc	r25, r1
    13ca:	0c f4       	brge	.+2      	; 0x13ce <main+0x1252>
    13cc:	58 c0       	rjmp	.+176    	; 0x147e <main+0x1302>
    13ce:	78 01       	movw	r14, r16
    13d0:	08 c0       	rjmp	.+16     	; 0x13e2 <main+0x1266>
    13d2:	8b e0       	ldi	r24, 0x0B	; 11
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	9e 8f       	std	Y+30, r25	; 0x1e
    13d8:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 25;
					counterRef = counter;
				}
				if(state == 25 && counter - counterRef > totallength2*m2WholePlate){
    13da:	ed 8d       	ldd	r30, Y+29	; 0x1d
    13dc:	fe 8d       	ldd	r31, Y+30	; 0x1e
    13de:	79 97       	sbiw	r30, 0x19	; 25
    13e0:	59 f4       	brne	.+22     	; 0x13f8 <main+0x127c>
    13e2:	c8 01       	movw	r24, r16
    13e4:	8e 19       	sub	r24, r14
    13e6:	9f 09       	sbc	r25, r15
    13e8:	81 5a       	subi	r24, 0xA1	; 161
    13ea:	9f 40       	sbci	r25, 0x0F	; 15
    13ec:	54 f4       	brge	.+20     	; 0x1402 <main+0x1286>
    13ee:	58 c0       	rjmp	.+176    	; 0x14a0 <main+0x1324>
    13f0:	2c e0       	ldi	r18, 0x0C	; 12
    13f2:	30 e0       	ldi	r19, 0x00	; 0
    13f4:	3e 8f       	std	Y+30, r19	; 0x1e
    13f6:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 26;
					counterRef26 = counter;
				}
				if(state == 26 && counter - counterRef > totallength2*m2Dry2Step /*&& u_inputByte0.bits_in_inputByte0.fixtureDry2 == 0*/){
    13f8:	4d 8d       	ldd	r20, Y+29	; 0x1d
    13fa:	5e 8d       	ldd	r21, Y+30	; 0x1e
    13fc:	4a 31       	cpi	r20, 0x1A	; 26
    13fe:	51 05       	cpc	r21, r1
    1400:	71 f4       	brne	.+28     	; 0x141e <main+0x12a2>
    1402:	c8 01       	movw	r24, r16
    1404:	8e 19       	sub	r24, r14
    1406:	9f 09       	sbc	r25, r15
    1408:	81 5a       	subi	r24, 0xA1	; 161
    140a:	9f 40       	sbci	r25, 0x0F	; 15
    140c:	0c f4       	brge	.+2      	; 0x1410 <main+0x1294>
    140e:	5a c0       	rjmp	.+180    	; 0x14c4 <main+0x1348>
    1410:	1e 87       	std	Y+14, r17	; 0x0e
    1412:	0d 87       	std	Y+13, r16	; 0x0d
    1414:	08 c0       	rjmp	.+16     	; 0x1426 <main+0x12aa>
    1416:	8d e0       	ldi	r24, 0x0D	; 13
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	9e 8f       	std	Y+30, r25	; 0x1e
    141c:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 27;
					counterRefFive = counter;
				}
				if(state == 27 && counter - counterRefFive > mWait){
    141e:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1420:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1422:	7b 97       	sbiw	r30, 0x1b	; 27
    1424:	79 f4       	brne	.+30     	; 0x1444 <main+0x12c8>
    1426:	c8 01       	movw	r24, r16
    1428:	2d 85       	ldd	r18, Y+13	; 0x0d
    142a:	3e 85       	ldd	r19, Y+14	; 0x0e
    142c:	82 1b       	sub	r24, r18
    142e:	93 0b       	sbc	r25, r19
    1430:	85 36       	cpi	r24, 0x65	; 101
    1432:	91 05       	cpc	r25, r1
    1434:	0c f4       	brge	.+2      	; 0x1438 <main+0x12bc>
    1436:	57 c0       	rjmp	.+174    	; 0x14e6 <main+0x136a>
    1438:	78 01       	movw	r14, r16
    143a:	08 c0       	rjmp	.+16     	; 0x144c <main+0x12d0>
    143c:	4e e0       	ldi	r20, 0x0E	; 14
    143e:	50 e0       	ldi	r21, 0x00	; 0
    1440:	5e 8f       	std	Y+30, r21	; 0x1e
    1442:	4d 8f       	std	Y+29, r20	; 0x1d
					state = 28;
					counterRef = counter;
				}
				if(state == 28 && counter - counterRef > pWait){
    1444:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1446:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1448:	4c 97       	sbiw	r24, 0x1c	; 28
    144a:	69 f4       	brne	.+26     	; 0x1466 <main+0x12ea>
    144c:	c8 01       	movw	r24, r16
    144e:	8e 19       	sub	r24, r14
    1450:	9f 09       	sbc	r25, r15
    1452:	85 36       	cpi	r24, 0x65	; 101
    1454:	91 05       	cpc	r25, r1
    1456:	0c f4       	brge	.+2      	; 0x145a <main+0x12de>
    1458:	58 c0       	rjmp	.+176    	; 0x150a <main+0x138e>
    145a:	78 01       	movw	r14, r16
    145c:	09 c0       	rjmp	.+18     	; 0x1470 <main+0x12f4>
    145e:	e7 e1       	ldi	r30, 0x17	; 23
    1460:	f0 e0       	ldi	r31, 0x00	; 0
    1462:	fe 8f       	std	Y+30, r31	; 0x1e
    1464:	ed 8f       	std	Y+29, r30	; 0x1d
					state = 29;
					counterRef = counter;
				}
				if(state == 29 && counter - counterRef > totallength2*m2WholePlate){
    1466:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1468:	3e 8d       	ldd	r19, Y+30	; 0x1e
    146a:	2d 31       	cpi	r18, 0x1D	; 29
    146c:	31 05       	cpc	r19, r1
    146e:	59 f4       	brne	.+22     	; 0x1486 <main+0x130a>
    1470:	c8 01       	movw	r24, r16
    1472:	8e 19       	sub	r24, r14
    1474:	9f 09       	sbc	r25, r15
    1476:	81 5a       	subi	r24, 0xA1	; 161
    1478:	9f 40       	sbci	r25, 0x0F	; 15
    147a:	4c f4       	brge	.+18     	; 0x148e <main+0x1312>
    147c:	57 c0       	rjmp	.+174    	; 0x152c <main+0x13b0>
    147e:	48 e1       	ldi	r20, 0x18	; 24
    1480:	50 e0       	ldi	r21, 0x00	; 0
    1482:	5e 8f       	std	Y+30, r21	; 0x1e
    1484:	4d 8f       	std	Y+29, r20	; 0x1d
					state = 30;
					counterRef30 = counter;
				}
				if(state == 30 && counter - counterRef > totallength2*m2LoadBack /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
    1486:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1488:	9e 8d       	ldd	r25, Y+30	; 0x1e
    148a:	4e 97       	sbiw	r24, 0x1e	; 30
    148c:	69 f4       	brne	.+26     	; 0x14a8 <main+0x132c>
    148e:	c8 01       	movw	r24, r16
    1490:	8e 19       	sub	r24, r14
    1492:	9f 09       	sbc	r25, r15
    1494:	81 5a       	subi	r24, 0xA1	; 161
    1496:	9f 40       	sbci	r25, 0x0F	; 15
    1498:	0c f4       	brge	.+2      	; 0x149c <main+0x1320>
    149a:	5b c0       	rjmp	.+182    	; 0x1552 <main+0x13d6>
    149c:	78 01       	movw	r14, r16
    149e:	09 c0       	rjmp	.+18     	; 0x14b2 <main+0x1336>
    14a0:	29 e1       	ldi	r18, 0x19	; 25
    14a2:	30 e0       	ldi	r19, 0x00	; 0
    14a4:	3e 8f       	std	Y+30, r19	; 0x1e
    14a6:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 31;
					counterRef = counter;
				}
					if(state == 31 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
    14a8:	4d 8d       	ldd	r20, Y+29	; 0x1d
    14aa:	5e 8d       	ldd	r21, Y+30	; 0x1e
    14ac:	4f 31       	cpi	r20, 0x1F	; 31
    14ae:	51 05       	cpc	r21, r1
    14b0:	69 f4       	brne	.+26     	; 0x14cc <main+0x1350>
    14b2:	c8 01       	movw	r24, r16
    14b4:	8e 19       	sub	r24, r14
    14b6:	9f 09       	sbc	r25, r15
    14b8:	89 5e       	subi	r24, 0xE9	; 233
    14ba:	93 40       	sbci	r25, 0x03	; 3
    14bc:	0c f4       	brge	.+2      	; 0x14c0 <main+0x1344>
    14be:	79 c0       	rjmp	.+242    	; 0x15b2 <main+0x1436>
    14c0:	78 01       	movw	r14, r16
    14c2:	08 c0       	rjmp	.+16     	; 0x14d4 <main+0x1358>
    14c4:	8a e1       	ldi	r24, 0x1A	; 26
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	9e 8f       	std	Y+30, r25	; 0x1e
    14ca:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 32;
					counterRef = counter;
				}
				if(state == 32 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureHome == 0*/){
    14cc:	ed 8d       	ldd	r30, Y+29	; 0x1d
    14ce:	fe 8d       	ldd	r31, Y+30	; 0x1e
    14d0:	b0 97       	sbiw	r30, 0x20	; 32
    14d2:	69 f4       	brne	.+26     	; 0x14ee <main+0x1372>
    14d4:	c8 01       	movw	r24, r16
    14d6:	8e 19       	sub	r24, r14
    14d8:	9f 09       	sbc	r25, r15
    14da:	81 5a       	subi	r24, 0xA1	; 161
    14dc:	9f 40       	sbci	r25, 0x0F	; 15
    14de:	0c f4       	brge	.+2      	; 0x14e2 <main+0x1366>
    14e0:	93 c0       	rjmp	.+294    	; 0x1608 <main+0x148c>
    14e2:	78 01       	movw	r14, r16
    14e4:	09 c0       	rjmp	.+18     	; 0x14f8 <main+0x137c>
    14e6:	2b e1       	ldi	r18, 0x1B	; 27
    14e8:	30 e0       	ldi	r19, 0x00	; 0
    14ea:	3e 8f       	std	Y+30, r19	; 0x1e
    14ec:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 33;
					counterRef = counter;
				}
				if(state == 33 && counter - counterRef > pWait){
    14ee:	4d 8d       	ldd	r20, Y+29	; 0x1d
    14f0:	5e 8d       	ldd	r21, Y+30	; 0x1e
    14f2:	41 32       	cpi	r20, 0x21	; 33
    14f4:	51 05       	cpc	r21, r1
    14f6:	69 f4       	brne	.+26     	; 0x1512 <main+0x1396>
    14f8:	c8 01       	movw	r24, r16
    14fa:	8e 19       	sub	r24, r14
    14fc:	9f 09       	sbc	r25, r15
    14fe:	85 36       	cpi	r24, 0x65	; 101
    1500:	91 05       	cpc	r25, r1
    1502:	0c f4       	brge	.+2      	; 0x1506 <main+0x138a>
    1504:	99 c0       	rjmp	.+306    	; 0x1638 <main+0x14bc>
    1506:	78 01       	movw	r14, r16
    1508:	08 c0       	rjmp	.+16     	; 0x151a <main+0x139e>
    150a:	8c e1       	ldi	r24, 0x1C	; 28
    150c:	90 e0       	ldi	r25, 0x00	; 0
    150e:	9e 8f       	std	Y+30, r25	; 0x1e
    1510:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 34;
					counterRef = counter;
				}
				if(state == 34 && counter - counterRef > totallength1*m1LoadPlate){
    1512:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1514:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1516:	b2 97       	sbiw	r30, 0x22	; 34
    1518:	69 f4       	brne	.+26     	; 0x1534 <main+0x13b8>
    151a:	c8 01       	movw	r24, r16
    151c:	8e 19       	sub	r24, r14
    151e:	9f 09       	sbc	r25, r15
    1520:	81 5a       	subi	r24, 0xA1	; 161
    1522:	9f 40       	sbci	r25, 0x0F	; 15
    1524:	0c f4       	brge	.+2      	; 0x1528 <main+0x13ac>
    1526:	99 c0       	rjmp	.+306    	; 0x165a <main+0x14de>
    1528:	78 01       	movw	r14, r16
    152a:	09 c0       	rjmp	.+18     	; 0x153e <main+0x13c2>
    152c:	2d e1       	ldi	r18, 0x1D	; 29
    152e:	30 e0       	ldi	r19, 0x00	; 0
    1530:	3e 8f       	std	Y+30, r19	; 0x1e
    1532:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 35;
					counterRef = counter;
				}
				if(state == 35 && counter - counterRef > 10){
    1534:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1536:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1538:	43 32       	cpi	r20, 0x23	; 35
    153a:	51 05       	cpc	r21, r1
    153c:	71 f4       	brne	.+28     	; 0x155a <main+0x13de>
    153e:	c8 01       	movw	r24, r16
    1540:	8e 19       	sub	r24, r14
    1542:	9f 09       	sbc	r25, r15
    1544:	0b 97       	sbiw	r24, 0x0b	; 11
    1546:	14 f4       	brge	.+4      	; 0x154c <main+0x13d0>
    1548:	0c 94 d8 19 	jmp	0x33b0	; 0x33b0 <main+0x3234>
    154c:	8f ef       	ldi	r24, 0xFF	; 255
    154e:	9f ef       	ldi	r25, 0xFF	; 255
    1550:	32 c0       	rjmp	.+100    	; 0x15b6 <main+0x143a>
    1552:	ee e1       	ldi	r30, 0x1E	; 30
    1554:	f0 e0       	ldi	r31, 0x00	; 0
    1556:	0c 94 da 19 	jmp	0x33b4	; 0x33b4 <main+0x3238>
				}


				//state actions
						
				if(state == 0){
    155a:	2d 8d       	ldd	r18, Y+29	; 0x1d
    155c:	3e 8d       	ldd	r19, Y+30	; 0x1e
    155e:	23 2b       	or	r18, r19
    1560:	61 f5       	brne	.+88     	; 0x15ba <main+0x143e>
					if(u_inputByte0.bits_in_inputByte0.fixtureHome == 1){
    1562:	80 91 1e 03 	lds	r24, 0x031E
    1566:	90 91 1a 03 	lds	r25, 0x031A
    156a:	20 91 1c 03 	lds	r18, 0x031C
    156e:	82 ff       	sbrs	r24, 2
    1570:	0a c0       	rjmp	.+20     	; 0x1586 <main+0x140a>
						u_motorByte0.bits_in_motorByte0.m2Dir = 0;  //********* 0 is used as fixture backward ?cc?, 1 as forward ?c? **********
    1572:	9f 7e       	andi	r25, 0xEF	; 239
    1574:	90 93 1a 03 	sts	0x031A, r25
						u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    1578:	27 7f       	andi	r18, 0xF7	; 247
    157a:	20 93 1c 03 	sts	0x031C, r18
    157e:	61 e0       	ldi	r22, 0x01	; 1
    1580:	c6 2e       	mov	r12, r22
    1582:	d1 2c       	mov	r13, r1
    1584:	6e c0       	rjmp	.+220    	; 0x1662 <main+0x14e6>
						m2 = 1;
					}
					else{
						u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    1586:	9f 7d       	andi	r25, 0xDF	; 223
    1588:	90 93 1a 03 	sts	0x031A, r25
						m2 = 0;
						u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    158c:	2f 7e       	andi	r18, 0xEF	; 239
						u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    158e:	28 60       	ori	r18, 0x08	; 8
    1590:	20 93 1c 03 	sts	0x031C, r18
						if(print0 == 1){
    1594:	49 8d       	ldd	r20, Y+25	; 0x19
    1596:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1598:	41 30       	cpi	r20, 0x01	; 1
    159a:	51 05       	cpc	r21, r1
    159c:	11 f0       	breq	.+4      	; 0x15a2 <main+0x1426>
    159e:	0c 94 de 19 	jmp	0x33bc	; 0x33bc <main+0x3240>
							OrangutanLCD::clear();
    15a2:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
							OrangutanLCD::print("PUSH TO START");
    15a6:	81 ec       	ldi	r24, 0xC1	; 193
    15a8:	92 e0       	ldi	r25, 0x02	; 2
    15aa:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    15ae:	0c 94 de 19 	jmp	0x33bc	; 0x33bc <main+0x3240>
    15b2:	8f e1       	ldi	r24, 0x1F	; 31
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	9e 8f       	std	Y+30, r25	; 0x1e
    15b8:	8d 8f       	std	Y+29, r24	; 0x1d
							print0 = 0;
						}
					}
				}
				if(state == 1){
    15ba:	ed 8d       	ldd	r30, Y+29	; 0x1d
    15bc:	fe 8d       	ldd	r31, Y+30	; 0x1e
    15be:	31 97       	sbiw	r30, 0x01	; 1
    15c0:	39 f5       	brne	.+78     	; 0x1610 <main+0x1494>
					OrangutanLCD::clear();
    15c2:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
					u_outputByte0.bits_in_outputByte0.ACPower = 0;
    15c6:	20 91 1c 03 	lds	r18, 0x031C
    15ca:	32 2f       	mov	r19, r18
    15cc:	3e 7f       	andi	r19, 0xFE	; 254
					if((counter % 200) < 100){
    15ce:	c8 01       	movw	r24, r16
    15d0:	68 ec       	ldi	r22, 0xC8	; 200
    15d2:	70 e0       	ldi	r23, 0x00	; 0
    15d4:	0e 94 35 20 	call	0x406a	; 0x406a <__divmodhi4>
    15d8:	84 36       	cpi	r24, 0x64	; 100
    15da:	91 05       	cpc	r25, r1
    15dc:	24 f4       	brge	.+8      	; 0x15e6 <main+0x146a>
						u_outputByte0.bits_in_outputByte0.blowerPulse = 0;
    15de:	2c 7f       	andi	r18, 0xFC	; 252
    15e0:	20 93 1c 03 	sts	0x031C, r18
    15e4:	03 c0       	rjmp	.+6      	; 0x15ec <main+0x1470>
					}
					else{
						u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
    15e6:	32 60       	ori	r19, 0x02	; 2
    15e8:	30 93 1c 03 	sts	0x031C, r19
					}
					m1 = 1;
					u_motorByte0.bits_in_motorByte0.m1Dir = 1;  //****** dir1 ******
    15ec:	80 91 1a 03 	lds	r24, 0x031A
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
    15f0:	86 60       	ori	r24, 0x06	; 6
    15f2:	80 93 1a 03 	sts	0x031A, r24
					u_outputByte0.bits_in_outputByte0.plateStop = 0;
    15f6:	80 91 1c 03 	lds	r24, 0x031C
    15fa:	8b 7f       	andi	r24, 0xFB	; 251
    15fc:	80 93 1c 03 	sts	0x031C, r24
    1600:	51 e0       	ldi	r21, 0x01	; 1
    1602:	85 2e       	mov	r8, r21
    1604:	91 2c       	mov	r9, r1
    1606:	2d c0       	rjmp	.+90     	; 0x1662 <main+0x14e6>
    1608:	20 e2       	ldi	r18, 0x20	; 32
    160a:	30 e0       	ldi	r19, 0x00	; 0
    160c:	3e 8f       	std	Y+30, r19	; 0x1e
    160e:	2d 8f       	std	Y+29, r18	; 0x1d
				}
				if(state == 2){
    1610:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1612:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1614:	42 30       	cpi	r20, 0x02	; 2
    1616:	51 05       	cpc	r21, r1
    1618:	99 f4       	brne	.+38     	; 0x1640 <main+0x14c4>
					u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
    161a:	80 91 1c 03 	lds	r24, 0x031C
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    161e:	81 7e       	andi	r24, 0xE1	; 225
					u_outputByte0.bits_in_outputByte0.plateStop = 1;
    1620:	86 61       	ori	r24, 0x16	; 22
    1622:	80 93 1c 03 	sts	0x031C, r24
						m1 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    1626:	80 91 1a 03 	lds	r24, 0x031A
    162a:	80 62       	ori	r24, 0x20	; 32
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    162c:	8b 7f       	andi	r24, 0xFB	; 251
    162e:	80 93 1a 03 	sts	0x031A, r24
    1632:	88 24       	eor	r8, r8
    1634:	99 24       	eor	r9, r9
    1636:	43 c0       	rjmp	.+134    	; 0x16be <main+0x1542>
    1638:	81 e2       	ldi	r24, 0x21	; 33
    163a:	90 e0       	ldi	r25, 0x00	; 0
    163c:	9e 8f       	std	Y+30, r25	; 0x1e
    163e:	8d 8f       	std	Y+29, r24	; 0x1d
				}	
				if(state == 3){
    1640:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1642:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1644:	33 97       	sbiw	r30, 0x03	; 3
    1646:	69 f4       	brne	.+26     	; 0x1662 <main+0x14e6>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ****** dir2 *******
    1648:	80 91 1a 03 	lds	r24, 0x031A
    164c:	80 61       	ori	r24, 0x10	; 16
    164e:	80 93 1a 03 	sts	0x031A, r24
    1652:	41 e0       	ldi	r20, 0x01	; 1
    1654:	c4 2e       	mov	r12, r20
    1656:	d1 2c       	mov	r13, r1
    1658:	52 c0       	rjmp	.+164    	; 0x16fe <main+0x1582>
    165a:	22 e2       	ldi	r18, 0x22	; 34
    165c:	30 e0       	ldi	r19, 0x00	; 0
    165e:	3e 8f       	std	Y+30, r19	; 0x1e
    1660:	2d 8f       	std	Y+29, r18	; 0x1d
					m2 = 1;
				}
				if(state == 4){
    1662:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1664:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1666:	44 30       	cpi	r20, 0x04	; 4
    1668:	51 05       	cpc	r21, r1
    166a:	69 f4       	brne	.+26     	; 0x1686 <main+0x150a>
						m2 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    166c:	80 91 1a 03 	lds	r24, 0x031A
    1670:	8f 7d       	andi	r24, 0xDF	; 223
    1672:	80 93 1a 03 	sts	0x031A, r24
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    1676:	80 91 1c 03 	lds	r24, 0x031C
    167a:	88 60       	ori	r24, 0x08	; 8
    167c:	80 93 1c 03 	sts	0x031C, r24
    1680:	cc 24       	eor	r12, r12
    1682:	dd 24       	eor	r13, r13
    1684:	4a c0       	rjmp	.+148    	; 0x171a <main+0x159e>
				}
				if(state == 5){
    1686:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1688:	9e 8d       	ldd	r25, Y+30	; 0x1e
    168a:	05 97       	sbiw	r24, 0x05	; 5
    168c:	59 f4       	brne	.+22     	; 0x16a4 <main+0x1528>
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    168e:	80 91 1c 03 	lds	r24, 0x031C
    1692:	8f 7e       	andi	r24, 0xEF	; 239
    1694:	80 93 1c 03 	sts	0x031C, r24
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    1698:	80 91 1a 03 	lds	r24, 0x031A
    169c:	80 62       	ori	r24, 0x20	; 32
    169e:	80 93 1a 03 	sts	0x031A, r24
    16a2:	48 c0       	rjmp	.+144    	; 0x1734 <main+0x15b8>
				}
				//*********************************************
				if(state == 6){
    16a4:	ed 8d       	ldd	r30, Y+29	; 0x1d
    16a6:	fe 8d       	ldd	r31, Y+30	; 0x1e
    16a8:	36 97       	sbiw	r30, 0x06	; 6
    16aa:	49 f4       	brne	.+18     	; 0x16be <main+0x1542>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    16ac:	80 91 1a 03 	lds	r24, 0x031A
    16b0:	80 61       	ori	r24, 0x10	; 16
    16b2:	80 93 1a 03 	sts	0x031A, r24
    16b6:	31 e0       	ldi	r19, 0x01	; 1
    16b8:	c3 2e       	mov	r12, r19
    16ba:	d1 2c       	mov	r13, r1
    16bc:	4b c0       	rjmp	.+150    	; 0x1754 <main+0x15d8>
					m2 = 1;
				}
				if(state == 7){
    16be:	2d 8d       	ldd	r18, Y+29	; 0x1d
    16c0:	3e 8d       	ldd	r19, Y+30	; 0x1e
    16c2:	27 30       	cpi	r18, 0x07	; 7
    16c4:	31 05       	cpc	r19, r1
    16c6:	d9 f4       	brne	.+54     	; 0x16fe <main+0x1582>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m3Drop = 1;
    16c8:	80 91 1b 03 	lds	r24, 0x031B
    16cc:	81 60       	ori	r24, 0x01	; 1
    16ce:	80 93 1b 03 	sts	0x031B, r24
					u_motorByte0.bits_in_motorByte0.m3Dir = 0;  // ******* dir3 *******
    16d2:	80 91 1a 03 	lds	r24, 0x031A
    16d6:	8f 77       	andi	r24, 0x7F	; 127
    16d8:	80 93 1a 03 	sts	0x031A, r24
					if(print6 == 1){
    16dc:	4f 89       	ldd	r20, Y+23	; 0x17
    16de:	58 8d       	ldd	r21, Y+24	; 0x18
    16e0:	41 30       	cpi	r20, 0x01	; 1
    16e2:	51 05       	cpc	r21, r1
    16e4:	11 f0       	breq	.+4      	; 0x16ea <main+0x156e>
    16e6:	0c 94 e4 19 	jmp	0x33c8	; 0x33c8 <main+0x324c>
						OrangutanLCD::clear();
    16ea:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("Clean 1");
    16ee:	8f ec       	ldi	r24, 0xCF	; 207
    16f0:	92 e0       	ldi	r25, 0x02	; 2
    16f2:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    16f6:	18 8e       	std	Y+24, r1	; 0x18
    16f8:	1f 8a       	std	Y+23, r1	; 0x17
    16fa:	0c 94 e4 19 	jmp	0x33c8	; 0x33c8 <main+0x324c>
						print6 = 0;
					}
				}
				if(state == 8){
    16fe:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1700:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1702:	08 97       	sbiw	r24, 0x08	; 8
    1704:	51 f4       	brne	.+20     	; 0x171a <main+0x159e>
					m3 = 1;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
    1706:	80 91 1c 03 	lds	r24, 0x031C
    170a:	80 64       	ori	r24, 0x40	; 64
					u_outputByte0.bits_in_outputByte0.brush1Raise = 0;
    170c:	8f 7d       	andi	r24, 0xDF	; 223
    170e:	80 93 1c 03 	sts	0x031C, r24
    1712:	21 e0       	ldi	r18, 0x01	; 1
    1714:	42 2e       	mov	r4, r18
    1716:	51 2c       	mov	r5, r1
    1718:	1d c0       	rjmp	.+58     	; 0x1754 <main+0x15d8>
				}
				if(state == 9){
    171a:	ed 8d       	ldd	r30, Y+29	; 0x1d
    171c:	fe 8d       	ldd	r31, Y+30	; 0x1e
    171e:	39 97       	sbiw	r30, 0x09	; 9
    1720:	49 f4       	brne	.+18     	; 0x1734 <main+0x15b8>
					m2 = 1;
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    1722:	80 91 1a 03 	lds	r24, 0x031A
    1726:	8f 7e       	andi	r24, 0xEF	; 239
    1728:	80 93 1a 03 	sts	0x031A, r24
    172c:	91 e0       	ldi	r25, 0x01	; 1
    172e:	c9 2e       	mov	r12, r25
    1730:	d1 2c       	mov	r13, r1
    1732:	38 c0       	rjmp	.+112    	; 0x17a4 <main+0x1628>
				}
				if(state == 10){
    1734:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1736:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1738:	2a 30       	cpi	r18, 0x0A	; 10
    173a:	31 05       	cpc	r19, r1
    173c:	59 f4       	brne	.+22     	; 0x1754 <main+0x15d8>
					m2 = 0;
					m3 = 0;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
    173e:	80 91 1c 03 	lds	r24, 0x031C
    1742:	8f 7b       	andi	r24, 0xBF	; 191
					u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
    1744:	80 62       	ori	r24, 0x20	; 32
    1746:	80 93 1c 03 	sts	0x031C, r24
    174a:	cc 24       	eor	r12, r12
    174c:	dd 24       	eor	r13, r13
    174e:	44 24       	eor	r4, r4
    1750:	55 24       	eor	r5, r5
    1752:	3d c0       	rjmp	.+122    	; 0x17ce <main+0x1652>
				}
				if(state == 11){
    1754:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1756:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1758:	4b 30       	cpi	r20, 0x0B	; 11
    175a:	51 05       	cpc	r21, r1
    175c:	49 f4       	brne	.+18     	; 0x1770 <main+0x15f4>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    175e:	80 91 1a 03 	lds	r24, 0x031A
    1762:	80 61       	ori	r24, 0x10	; 16
    1764:	80 93 1a 03 	sts	0x031A, r24
    1768:	81 e0       	ldi	r24, 0x01	; 1
    176a:	c8 2e       	mov	r12, r24
    176c:	d1 2c       	mov	r13, r1
    176e:	38 c0       	rjmp	.+112    	; 0x17e0 <main+0x1664>
					m2 = 1;
				}
				if(state == 12){
    1770:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1772:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1774:	0c 97       	sbiw	r24, 0x0c	; 12
    1776:	89 f4       	brne	.+34     	; 0x179a <main+0x161e>
					m2 = 0;
					u_motorByte0.bits_in_motorByte0.m3Dir = 0;  // ******* dir3 *******
    1778:	80 91 1a 03 	lds	r24, 0x031A
    177c:	8f 77       	andi	r24, 0x7F	; 127
    177e:	80 93 1a 03 	sts	0x031A, r24
					m3 = 1;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
    1782:	80 91 1c 03 	lds	r24, 0x031C
    1786:	80 64       	ori	r24, 0x40	; 64
					u_outputByte0.bits_in_outputByte0.brush1Raise = 0;
    1788:	8f 7d       	andi	r24, 0xDF	; 223
    178a:	80 93 1c 03 	sts	0x031C, r24
    178e:	cc 24       	eor	r12, r12
    1790:	dd 24       	eor	r13, r13
    1792:	b1 e0       	ldi	r27, 0x01	; 1
    1794:	4b 2e       	mov	r4, r27
    1796:	51 2c       	mov	r5, r1
    1798:	3c c0       	rjmp	.+120    	; 0x1812 <main+0x1696>
				}
				if(state == 13){
    179a:	ed 8d       	ldd	r30, Y+29	; 0x1d
    179c:	fe 8d       	ldd	r31, Y+30	; 0x1e
    179e:	3d 97       	sbiw	r30, 0x0d	; 13
    17a0:	09 f4       	brne	.+2      	; 0x17a4 <main+0x1628>
    17a2:	45 c0       	rjmp	.+138    	; 0x182e <main+0x16b2>
					m2 = 1;
				}
				if(state == 14){
    17a4:	2d 8d       	ldd	r18, Y+29	; 0x1d
    17a6:	3e 8d       	ldd	r19, Y+30	; 0x1e
    17a8:	2e 30       	cpi	r18, 0x0E	; 14
    17aa:	31 05       	cpc	r19, r1
    17ac:	81 f4       	brne	.+32     	; 0x17ce <main+0x1652>
					m3 = 0;
					m2 = 0;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
    17ae:	80 91 1c 03 	lds	r24, 0x031C
    17b2:	8f 7b       	andi	r24, 0xBF	; 191
					u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
    17b4:	80 62       	ori	r24, 0x20	; 32
    17b6:	80 93 1c 03 	sts	0x031C, r24
					u_motorByte1.bits_in_motorByte1.m3Drop = 0;
    17ba:	80 91 1b 03 	lds	r24, 0x031B
    17be:	8e 7f       	andi	r24, 0xFE	; 254
    17c0:	80 93 1b 03 	sts	0x031B, r24
    17c4:	cc 24       	eor	r12, r12
    17c6:	dd 24       	eor	r13, r13
    17c8:	44 24       	eor	r4, r4
    17ca:	55 24       	eor	r5, r5
    17cc:	3e c0       	rjmp	.+124    	; 0x184a <main+0x16ce>
				}
				
				//*************************************************
				if(state == 23){
    17ce:	4d 8d       	ldd	r20, Y+29	; 0x1d
    17d0:	5e 8d       	ldd	r21, Y+30	; 0x1e
    17d2:	47 31       	cpi	r20, 0x17	; 23
    17d4:	51 05       	cpc	r21, r1
    17d6:	21 f4       	brne	.+8      	; 0x17e0 <main+0x1664>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    17d8:	80 91 1a 03 	lds	r24, 0x031A
    17dc:	80 61       	ori	r24, 0x10	; 16
    17de:	21 c0       	rjmp	.+66     	; 0x1822 <main+0x16a6>
					m2 = 1;
				}
				if(state == 24){
    17e0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    17e2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    17e4:	48 97       	sbiw	r24, 0x18	; 24
    17e6:	a9 f4       	brne	.+42     	; 0x1812 <main+0x1696>
					m2 = 0;
					u_outputByte1.bits_in_outputByte1.airKnife = 0;
    17e8:	80 91 1d 03 	lds	r24, 0x031D
    17ec:	87 7f       	andi	r24, 0xF7	; 247
    17ee:	80 93 1d 03 	sts	0x031D, r24
						if(print24 == 1){
    17f2:	eb 89       	ldd	r30, Y+19	; 0x13
    17f4:	fc 89       	ldd	r31, Y+20	; 0x14
    17f6:	31 97       	sbiw	r30, 0x01	; 1
    17f8:	11 f0       	breq	.+4      	; 0x17fe <main+0x1682>
    17fa:	0c 94 e8 19 	jmp	0x33d0	; 0x33d0 <main+0x3254>
						OrangutanLCD::clear();
    17fe:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("DRY AIR");
    1802:	87 ed       	ldi	r24, 0xD7	; 215
    1804:	92 e0       	ldi	r25, 0x02	; 2
    1806:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    180a:	1c 8a       	std	Y+20, r1	; 0x14
    180c:	1b 8a       	std	Y+19, r1	; 0x13
    180e:	0c 94 e8 19 	jmp	0x33d0	; 0x33d0 <main+0x3254>
						print24 = 0;
					}
				}
				if(state == 25){
    1812:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1814:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1816:	29 31       	cpi	r18, 0x19	; 25
    1818:	31 05       	cpc	r19, r1
    181a:	61 f4       	brne	.+24     	; 0x1834 <main+0x16b8>
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    181c:	80 91 1a 03 	lds	r24, 0x031A
    1820:	8f 7e       	andi	r24, 0xEF	; 239
    1822:	80 93 1a 03 	sts	0x031A, r24
    1826:	a1 e0       	ldi	r26, 0x01	; 1
    1828:	ca 2e       	mov	r12, r26
    182a:	d1 2c       	mov	r13, r1
    182c:	1e c0       	rjmp	.+60     	; 0x186a <main+0x16ee>
    182e:	f1 e0       	ldi	r31, 0x01	; 1
    1830:	cf 2e       	mov	r12, r31
    1832:	d1 2c       	mov	r13, r1
					m2 = 1;
				}
				if(state == 26){
    1834:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1836:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1838:	4a 31       	cpi	r20, 0x1A	; 26
    183a:	51 05       	cpc	r21, r1
    183c:	31 f4       	brne	.+12     	; 0x184a <main+0x16ce>
					u_outputByte1.bits_in_outputByte1.airKnife = 1;
    183e:	80 91 1d 03 	lds	r24, 0x031D
    1842:	88 60       	ori	r24, 0x08	; 8
    1844:	80 93 1d 03 	sts	0x031D, r24
    1848:	3d c0       	rjmp	.+122    	; 0x18c4 <main+0x1748>
				}
				if(state == 27){
    184a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    184c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    184e:	4b 97       	sbiw	r24, 0x1b	; 27
    1850:	61 f4       	brne	.+24     	; 0x186a <main+0x16ee>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m5Drop = 1;
    1852:	80 91 1b 03 	lds	r24, 0x031B
    1856:	80 64       	ori	r24, 0x40	; 64
					u_motorByte1.bits_in_motorByte1.m5Dir = 0;
    1858:	8f 7d       	andi	r24, 0xDF	; 223
    185a:	80 93 1b 03 	sts	0x031B, r24
    185e:	cc 24       	eor	r12, r12
    1860:	dd 24       	eor	r13, r13
    1862:	e1 e0       	ldi	r30, 0x01	; 1
    1864:	2e 2e       	mov	r2, r30
    1866:	31 2c       	mov	r3, r1
    1868:	36 c0       	rjmp	.+108    	; 0x18d6 <main+0x175a>
					m5 = 1;
				}
				if(state == 28){
    186a:	ed 8d       	ldd	r30, Y+29	; 0x1d
    186c:	fe 8d       	ldd	r31, Y+30	; 0x1e
    186e:	7c 97       	sbiw	r30, 0x1c	; 28
    1870:	99 f4       	brne	.+38     	; 0x1898 <main+0x171c>
					if(print28 == 1){
    1872:	29 89       	ldd	r18, Y+17	; 0x11
    1874:	3a 89       	ldd	r19, Y+18	; 0x12
    1876:	21 30       	cpi	r18, 0x01	; 1
    1878:	31 05       	cpc	r19, r1
    187a:	41 f4       	brne	.+16     	; 0x188c <main+0x1710>
							OrangutanLCD::clear();
    187c:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("FINAL DRY");
    1880:	8f ed       	ldi	r24, 0xDF	; 223
    1882:	92 e0       	ldi	r25, 0x02	; 2
    1884:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    1888:	1a 8a       	std	Y+18, r1	; 0x12
    188a:	19 8a       	std	Y+17, r1	; 0x11
						print28 = 0;
						}
					u_outputByte1.bits_in_outputByte1.ptRaise = 0;
    188c:	80 91 1d 03 	lds	r24, 0x031D
    1890:	8d 7f       	andi	r24, 0xFD	; 253
    1892:	80 93 1d 03 	sts	0x031D, r24
    1896:	2c c0       	rjmp	.+88     	; 0x18f0 <main+0x1774>
				}
				if(state == 29){
    1898:	4d 8d       	ldd	r20, Y+29	; 0x1d
    189a:	5e 8d       	ldd	r21, Y+30	; 0x1e
    189c:	4d 31       	cpi	r20, 0x1D	; 29
    189e:	51 05       	cpc	r21, r1
    18a0:	d9 f1       	breq	.+118    	; 0x1918 <main+0x179c>
					m2 = 1;
				}
				if(state == 30){
    18a2:	4e 31       	cpi	r20, 0x1E	; 30
    18a4:	51 05       	cpc	r21, r1
    18a6:	71 f4       	brne	.+28     	; 0x18c4 <main+0x1748>
					m5 = 0;
						u_motorByte1.bits_in_motorByte1.m5Drop = 0;
    18a8:	80 91 1b 03 	lds	r24, 0x031B
    18ac:	8f 7b       	andi	r24, 0xBF	; 191
    18ae:	80 93 1b 03 	sts	0x031B, r24
					u_outputByte1.bits_in_outputByte1.ptRaise = 1;
    18b2:	80 91 1d 03 	lds	r24, 0x031D
    18b6:	82 60       	ori	r24, 0x02	; 2
					u_outputByte1.bits_in_outputByte1.ptLower = 0;
    18b8:	8b 7f       	andi	r24, 0xFB	; 251
    18ba:	80 93 1d 03 	sts	0x031D, r24
    18be:	22 24       	eor	r2, r2
    18c0:	33 24       	eor	r3, r3
    18c2:	3b c0       	rjmp	.+118    	; 0x193a <main+0x17be>
				}
				if(state == 31){
    18c4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    18c6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    18c8:	4f 97       	sbiw	r24, 0x1f	; 31
    18ca:	29 f4       	brne	.+10     	; 0x18d6 <main+0x175a>
					m2 = 0;
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    18cc:	80 91 1c 03 	lds	r24, 0x031C
    18d0:	87 7f       	andi	r24, 0xF7	; 247
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
    18d2:	80 61       	ori	r24, 0x10	; 16
    18d4:	1c c0       	rjmp	.+56     	; 0x190e <main+0x1792>
				}
				if(state == 32){
    18d6:	ed 8d       	ldd	r30, Y+29	; 0x1d
    18d8:	fe 8d       	ldd	r31, Y+30	; 0x1e
    18da:	b0 97       	sbiw	r30, 0x20	; 32
    18dc:	49 f4       	brne	.+18     	; 0x18f0 <main+0x1774>
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;
    18de:	80 91 1a 03 	lds	r24, 0x031A
    18e2:	8f 7e       	andi	r24, 0xEF	; 239
    18e4:	80 93 1a 03 	sts	0x031A, r24
    18e8:	71 e0       	ldi	r23, 0x01	; 1
    18ea:	c7 2e       	mov	r12, r23
    18ec:	d1 2c       	mov	r13, r1
    18ee:	3f c0       	rjmp	.+126    	; 0x196e <main+0x17f2>
					m2 = 1;
				}
				if(state == 33){
    18f0:	2d 8d       	ldd	r18, Y+29	; 0x1d
    18f2:	3e 8d       	ldd	r19, Y+30	; 0x1e
    18f4:	21 32       	cpi	r18, 0x21	; 33
    18f6:	31 05       	cpc	r19, r1
    18f8:	91 f4       	brne	.+36     	; 0x191e <main+0x17a2>
					m2 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    18fa:	80 91 1a 03 	lds	r24, 0x031A
    18fe:	8f 7d       	andi	r24, 0xDF	; 223
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
    1900:	84 60       	ori	r24, 0x04	; 4
    1902:	80 93 1a 03 	sts	0x031A, r24
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    1906:	80 91 1c 03 	lds	r24, 0x031C
    190a:	88 60       	ori	r24, 0x08	; 8
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    190c:	8f 7e       	andi	r24, 0xEF	; 239
    190e:	80 93 1c 03 	sts	0x031C, r24
    1912:	cc 24       	eor	r12, r12
    1914:	dd 24       	eor	r13, r13
    1916:	2b c0       	rjmp	.+86     	; 0x196e <main+0x17f2>
    1918:	61 e0       	ldi	r22, 0x01	; 1
    191a:	c6 2e       	mov	r12, r22
    191c:	d1 2c       	mov	r13, r1
				}
				if(state == 34){
    191e:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1920:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1922:	42 32       	cpi	r20, 0x22	; 34
    1924:	51 05       	cpc	r21, r1
    1926:	49 f4       	brne	.+18     	; 0x193a <main+0x17be>
					u_motorByte0.bits_in_motorByte0.m1Dir = 0;
    1928:	80 91 1a 03 	lds	r24, 0x031A
    192c:	8d 7f       	andi	r24, 0xFD	; 253
    192e:	80 93 1a 03 	sts	0x031A, r24
    1932:	51 e0       	ldi	r21, 0x01	; 1
    1934:	85 2e       	mov	r8, r21
    1936:	91 2c       	mov	r9, r1
    1938:	1a c0       	rjmp	.+52     	; 0x196e <main+0x17f2>
					m1 = 1;
					}
				if(state == 35){
    193a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    193c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    193e:	83 97       	sbiw	r24, 0x23	; 35
    1940:	b1 f4       	brne	.+44     	; 0x196e <main+0x17f2>
					m1 = 0;
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    1942:	80 91 1a 03 	lds	r24, 0x031A
    1946:	8b 7f       	andi	r24, 0xFB	; 251
    1948:	80 93 1a 03 	sts	0x031A, r24
					if(print35 == 1){
    194c:	ef 85       	ldd	r30, Y+15	; 0x0f
    194e:	f8 89       	ldd	r31, Y+16	; 0x10
    1950:	31 97       	sbiw	r30, 0x01	; 1
    1952:	19 f0       	breq	.+6      	; 0x195a <main+0x17de>
    1954:	88 24       	eor	r8, r8
    1956:	99 24       	eor	r9, r9
    1958:	0a c0       	rjmp	.+20     	; 0x196e <main+0x17f2>
						OrangutanLCD::clear();
    195a:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("END OF CYCLE");
    195e:	89 ee       	ldi	r24, 0xE9	; 233
    1960:	92 e0       	ldi	r25, 0x02	; 2
    1962:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    1966:	88 24       	eor	r8, r8
    1968:	99 24       	eor	r9, r9
    196a:	18 8a       	std	Y+16, r1	; 0x10
    196c:	1f 86       	std	Y+15, r1	; 0x0f





				if( ((counter - counterRef) % (totallength1) ) < (steplength1) && m1)  //check if it is in the right period of the loop to send high
    196e:	c8 01       	movw	r24, r16
    1970:	8e 19       	sub	r24, r14
    1972:	9f 09       	sbc	r25, r15
    1974:	62 e0       	ldi	r22, 0x02	; 2
    1976:	70 e0       	ldi	r23, 0x00	; 0
    1978:	0e 94 35 20 	call	0x406a	; 0x406a <__divmodhi4>
    197c:	9c 01       	movw	r18, r24
    197e:	18 16       	cp	r1, r24
    1980:	19 06       	cpc	r1, r25
    1982:	4c f0       	brlt	.+18     	; 0x1996 <main+0x181a>
    1984:	81 14       	cp	r8, r1
    1986:	91 04       	cpc	r9, r1
    1988:	31 f0       	breq	.+12     	; 0x1996 <main+0x181a>
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 1; // set bit 0
    198a:	80 91 1a 03 	lds	r24, 0x031A
    198e:	81 60       	ori	r24, 0x01	; 1
    1990:	80 93 1a 03 	sts	0x031A, r24
    1994:	08 c0       	rjmp	.+16     	; 0x19a6 <main+0x182a>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 0; // set bit 0
    1996:	80 91 1a 03 	lds	r24, 0x031A
    199a:	8e 7f       	andi	r24, 0xFE	; 254
    199c:	80 93 1a 03 	sts	0x031A, r24
				}

				if( ((counter - counterRef) % (totallength2) ) < (steplength2) && m2)
    19a0:	12 16       	cp	r1, r18
    19a2:	13 06       	cpc	r1, r19
    19a4:	4c f0       	brlt	.+18     	; 0x19b8 <main+0x183c>
    19a6:	c1 14       	cp	r12, r1
    19a8:	d1 04       	cpc	r13, r1
    19aa:	31 f0       	breq	.+12     	; 0x19b8 <main+0x183c>
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 1; // set bit 1
    19ac:	80 91 1a 03 	lds	r24, 0x031A
    19b0:	88 60       	ori	r24, 0x08	; 8
    19b2:	80 93 1a 03 	sts	0x031A, r24
    19b6:	08 c0       	rjmp	.+16     	; 0x19c8 <main+0x184c>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 0; // set bit 1
    19b8:	80 91 1a 03 	lds	r24, 0x031A
    19bc:	87 7f       	andi	r24, 0xF7	; 247
    19be:	80 93 1a 03 	sts	0x031A, r24
				}

				if( ((counter - counterRef) % (totallength3) ) < (steplength3) && m3)
    19c2:	12 16       	cp	r1, r18
    19c4:	13 06       	cpc	r1, r19
    19c6:	3c f0       	brlt	.+14     	; 0x19d6 <main+0x185a>
    19c8:	41 14       	cp	r4, r1
    19ca:	51 04       	cpc	r5, r1
    19cc:	21 f0       	breq	.+8      	; 0x19d6 <main+0x185a>
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 1; // set bit 1
    19ce:	80 91 1a 03 	lds	r24, 0x031A
    19d2:	80 64       	ori	r24, 0x40	; 64
    19d4:	03 c0       	rjmp	.+6      	; 0x19dc <main+0x1860>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 0; // set bit 1
    19d6:	80 91 1a 03 	lds	r24, 0x031A
    19da:	8f 7b       	andi	r24, 0xBF	; 191
    19dc:	80 93 1a 03 	sts	0x031A, r24
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 1; // set bit 1
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 0; // set bit 1
    19e0:	20 91 1b 03 	lds	r18, 0x031B
    19e4:	2d 7f       	andi	r18, 0xFD	; 253
    19e6:	20 93 1b 03 	sts	0x031B, r18
				}

				if( ((counter - counterRefFive) % (totallength5) ) < (steplength5) && m5)
    19ea:	c8 01       	movw	r24, r16
    19ec:	4d 85       	ldd	r20, Y+13	; 0x0d
    19ee:	5e 85       	ldd	r21, Y+14	; 0x0e
    19f0:	84 1b       	sub	r24, r20
    19f2:	95 0b       	sbc	r25, r21
    19f4:	62 e0       	ldi	r22, 0x02	; 2
    19f6:	70 e0       	ldi	r23, 0x00	; 0
    19f8:	0e 94 35 20 	call	0x406a	; 0x406a <__divmodhi4>
    19fc:	18 16       	cp	r1, r24
    19fe:	19 06       	cpc	r1, r25
    1a00:	3c f0       	brlt	.+14     	; 0x1a10 <main+0x1894>
    1a02:	21 14       	cp	r2, r1
    1a04:	31 04       	cpc	r3, r1
    1a06:	21 f0       	breq	.+8      	; 0x1a10 <main+0x1894>
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 1; // set bit 1
    1a08:	20 61       	ori	r18, 0x10	; 16
    1a0a:	20 93 1b 03 	sts	0x031B, r18
    1a0e:	05 c0       	rjmp	.+10     	; 0x1a1a <main+0x189e>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 0; // set bit 1
    1a10:	80 91 1b 03 	lds	r24, 0x031B
    1a14:	8f 7e       	andi	r24, 0xEF	; 239
    1a16:	80 93 1b 03 	sts	0x031B, r24
				}

				i2c_start(I2C1+I2C_WRITE);
    1a1a:	80 e4       	ldi	r24, 0x40	; 64
    1a1c:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				i2c_write(0x2);									// write command byte
    1a20:	82 e0       	ldi	r24, 0x02	; 2
    1a22:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_write(u_motorByte0.motorByte0);                       // write first byte of output
    1a26:	80 91 1a 03 	lds	r24, 0x031A
    1a2a:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
       	 		i2c_write(u_motorByte1.motorByte1);                       // write second byte of output
    1a2e:	80 91 1b 03 	lds	r24, 0x031B
    1a32:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
       		 	i2c_stop();                            // set stop conditon = release bus
    1a36:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>

				i2c_start(I2C2+I2C_WRITE);
    1a3a:	82 e4       	ldi	r24, 0x42	; 66
    1a3c:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				i2c_write(0x2);
    1a40:	82 e0       	ldi	r24, 0x02	; 2
    1a42:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_write(u_outputByte0.outputByte0);
    1a46:	80 91 1c 03 	lds	r24, 0x031C
    1a4a:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_write(u_outputByte1.outputByte1);
    1a4e:	80 91 1d 03 	lds	r24, 0x031D
    1a52:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>

				counter ++;
    1a56:	0f 5f       	subi	r16, 0xFF	; 255
    1a58:	1f 4f       	sbci	r17, 0xFF	; 255
    1a5a:	81 e0       	ldi	r24, 0x01	; 1
    1a5c:	90 e0       	ldi	r25, 0x00	; 0
    1a5e:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>
		u_motorByte1.bits_in_motorByte1.m5Drop = 1;*/

		if(!OrangutanDigital::isInputHigh(IO_D1) && !OrangutanDigital::isInputHigh(IO_D2)){
			OrangutanLCD::gotoXY(0,1);
			OrangutanLCD::print("FIRST B");
			while(state != -1)
    1a62:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1a64:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1a66:	8f 5f       	subi	r24, 0xFF	; 255
    1a68:	9f 4f       	sbci	r25, 0xFF	; 255
    1a6a:	09 f0       	breq	.+2      	; 0x1a6e <main+0x18f2>
    1a6c:	41 cb       	rjmp	.-2430   	; 0x10f0 <main+0xf74>
				delay_ms(1);
   		 	}
		}		


		if(OrangutanDigital::isInputHigh(IO_D1) && !OrangutanDigital::isInputHigh(IO_D2)){
    1a6e:	81 e0       	ldi	r24, 0x01	; 1
    1a70:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1a74:	88 23       	and	r24, r24
    1a76:	11 f4       	brne	.+4      	; 0x1a7c <main+0x1900>
    1a78:	0c 94 ec 19 	jmp	0x33d8	; 0x33d8 <main+0x325c>
    1a7c:	82 e0       	ldi	r24, 0x02	; 2
    1a7e:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1a82:	88 23       	and	r24, r24
    1a84:	11 f0       	breq	.+4      	; 0x1a8a <main+0x190e>
    1a86:	0c 94 ec 19 	jmp	0x33d8	; 0x33d8 <main+0x325c>
			OrangutanLCD::gotoXY(0,1);
    1a8a:	61 e0       	ldi	r22, 0x01	; 1
    1a8c:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
			OrangutanLCD::print("SECOND B");
    1a90:	86 ef       	ldi	r24, 0xF6	; 246
    1a92:	92 e0       	ldi	r25, 0x02	; 2
    1a94:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    1a98:	66 24       	eor	r6, r6
    1a9a:	77 24       	eor	r7, r7
    1a9c:	21 e0       	ldi	r18, 0x01	; 1
    1a9e:	30 e0       	ldi	r19, 0x00	; 0
    1aa0:	3e 8b       	std	Y+22, r19	; 0x16
    1aa2:	2d 8b       	std	Y+21, r18	; 0x15
    1aa4:	d7 c4       	rjmp	.+2478   	; 0x2454 <main+0x22d8>
			while(state != -1)
			{
				i2c_start(I2C3+I2C_WRITE);						// first start condition (write)
    1aa6:	84 e4       	ldi	r24, 0x44	; 68
    1aa8:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				i2c_write(0x0);								// write command byte
    1aac:	80 e0       	ldi	r24, 0x00	; 0
    1aae:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_start(I2C3+I2C_READ);						// second start condition (read)
    1ab2:	85 e4       	ldi	r24, 0x45	; 69
    1ab4:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				u_inputByte0.inputByte0 = i2c_readAck();				// read first byte and send Ack, requesting more
    1ab8:	0e 94 a6 1a 	call	0x354c	; 0x354c <_Z11i2c_readAckv>
    1abc:	80 93 1e 03 	sts	0x031E, r24
   		     	u_inputByte1.inputByte1 = i2c_readNak();				// read second byte and send stop condition
    1ac0:	0e 94 b0 1a 	call	0x3560	; 0x3560 <_Z11i2c_readNakv>
    1ac4:	80 93 1f 03 	sts	0x031F, r24
  	 	     	i2c_stop();								// set stop conditon = release bus 		
    1ac8:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>
				OrangutanLCD::gotoXY(0,1);
    1acc:	80 e0       	ldi	r24, 0x00	; 0
    1ace:	61 e0       	ldi	r22, 0x01	; 1
    1ad0:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
				OrangutanLCD::print("STATE ");
    1ad4:	8a eb       	ldi	r24, 0xBA	; 186
    1ad6:	92 e0       	ldi	r25, 0x02	; 2
    1ad8:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    1adc:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1ade:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1ae0:	ba 01       	movw	r22, r20
    1ae2:	88 27       	eor	r24, r24
    1ae4:	77 fd       	sbrc	r23, 7
    1ae6:	80 95       	com	r24
    1ae8:	98 2f       	mov	r25, r24
    1aea:	0e 94 62 1d 	call	0x3ac4	; 0x3ac4 <_ZN12OrangutanLCD5printEl>
				OrangutanLCD::print(state);

				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
    1aee:	a1 14       	cp	r10, r1
    1af0:	b1 04       	cpc	r11, r1
    1af2:	11 f0       	breq	.+4      	; 0x1af8 <main+0x197c>
    1af4:	0c 94 f3 19 	jmp	0x33e6	; 0x33e6 <main+0x326a>
    1af8:	80 e0       	ldi	r24, 0x00	; 0
    1afa:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1afe:	88 23       	and	r24, r24
    1b00:	b9 f1       	breq	.+110    	; 0x1b70 <main+0x19f4>
    1b02:	1e 83       	std	Y+6, r17	; 0x06
    1b04:	0d 83       	std	Y+5, r16	; 0x05
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
					if(counter - counterRefPush > 15){
    1b06:	c8 01       	movw	r24, r16
    1b08:	ed 81       	ldd	r30, Y+5	; 0x05
    1b0a:	fe 81       	ldd	r31, Y+6	; 0x06
    1b0c:	8e 1b       	sub	r24, r30
    1b0e:	9f 0b       	sbc	r25, r31
    1b10:	40 97       	sbiw	r24, 0x10	; 16
    1b12:	54 f0       	brlt	.+20     	; 0x1b28 <main+0x19ac>
						if(!OrangutanDigital::isInputHigh(IO_D0)){
    1b14:	80 e0       	ldi	r24, 0x00	; 0
    1b16:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1b1a:	88 23       	and	r24, r24
    1b1c:	11 f0       	breq	.+4      	; 0x1b22 <main+0x19a6>
    1b1e:	0c 94 fb 19 	jmp	0x33f6	; 0x33f6 <main+0x327a>
    1b22:	1c 83       	std	Y+4, r17	; 0x04
    1b24:	0b 83       	std	Y+3, r16	; 0x03
    1b26:	0c c0       	rjmp	.+24     	; 0x1b40 <main+0x19c4>
							counterRefRel = counter;
							stateButton = 2;
						}
					}
					else if(!OrangutanDigital::isInputHigh(IO_D0)){
    1b28:	80 e0       	ldi	r24, 0x00	; 0
    1b2a:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1b2e:	88 23       	and	r24, r24
    1b30:	11 f0       	breq	.+4      	; 0x1b36 <main+0x19ba>
    1b32:	0c 94 fb 19 	jmp	0x33f6	; 0x33f6 <main+0x327a>
    1b36:	16 c0       	rjmp	.+44     	; 0x1b64 <main+0x19e8>
						stateButton = 0;
					}
				}
				if(stateButton == 2){
    1b38:	f2 e0       	ldi	r31, 0x02	; 2
    1b3a:	af 16       	cp	r10, r31
    1b3c:	b1 04       	cpc	r11, r1
    1b3e:	c1 f4       	brne	.+48     	; 0x1b70 <main+0x19f4>
					if(OrangutanDigital::isInputHigh(IO_D0)){
    1b40:	80 e0       	ldi	r24, 0x00	; 0
    1b42:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1b46:	88 23       	and	r24, r24
    1b48:	21 f0       	breq	.+8      	; 0x1b52 <main+0x19d6>
    1b4a:	1e 83       	std	Y+6, r17	; 0x06
    1b4c:	0d 83       	std	Y+5, r16	; 0x05
    1b4e:	0c 94 fb 19 	jmp	0x33f6	; 0x33f6 <main+0x327a>
						stateButton = 1;
						counterRefPush = counter;
					}
					else if(counter - counterRefRel > 15){
    1b52:	c8 01       	movw	r24, r16
    1b54:	2b 81       	ldd	r18, Y+3	; 0x03
    1b56:	3c 81       	ldd	r19, Y+4	; 0x04
    1b58:	82 1b       	sub	r24, r18
    1b5a:	93 0b       	sbc	r25, r19
    1b5c:	40 97       	sbiw	r24, 0x10	; 16
    1b5e:	2c f0       	brlt	.+10     	; 0x1b6a <main+0x19ee>
    1b60:	18 86       	std	Y+8, r1	; 0x08
    1b62:	1f 82       	std	Y+7, r1	; 0x07
    1b64:	aa 24       	eor	r10, r10
    1b66:	bb 24       	eor	r11, r11
    1b68:	03 c0       	rjmp	.+6      	; 0x1b70 <main+0x19f4>
    1b6a:	42 e0       	ldi	r20, 0x02	; 2
    1b6c:	a4 2e       	mov	r10, r20
    1b6e:	b1 2c       	mov	r11, r1
					}
				}

				//state conversions
	
				if(state == 0 && button == 0){
    1b70:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1b72:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1b74:	45 2b       	or	r20, r21
    1b76:	59 f4       	brne	.+22     	; 0x1b8e <main+0x1a12>
    1b78:	8f 81       	ldd	r24, Y+7	; 0x07
    1b7a:	98 85       	ldd	r25, Y+8	; 0x08
    1b7c:	89 2b       	or	r24, r25
    1b7e:	09 f0       	breq	.+2      	; 0x1b82 <main+0x1a06>
    1b80:	4b c0       	rjmp	.+150    	; 0x1c18 <main+0x1a9c>
    1b82:	78 01       	movw	r14, r16
    1b84:	e1 e0       	ldi	r30, 0x01	; 1
    1b86:	f0 e0       	ldi	r31, 0x00	; 0
    1b88:	f8 87       	std	Y+8, r31	; 0x08
    1b8a:	ef 83       	std	Y+7, r30	; 0x07
    1b8c:	05 c0       	rjmp	.+10     	; 0x1b98 <main+0x1a1c>
					button = 1;
					state = 1;
					counterRef = counter;
				}
				if(state == 1 && counter - counterRef > totallength1*m1LoadPlate/*&& u_inputByte0.bits_in_inputByte0.plate == 0*/){
    1b8e:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1b90:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1b92:	21 30       	cpi	r18, 0x01	; 1
    1b94:	31 05       	cpc	r19, r1
    1b96:	49 f4       	brne	.+18     	; 0x1baa <main+0x1a2e>
    1b98:	c8 01       	movw	r24, r16
    1b9a:	8e 19       	sub	r24, r14
    1b9c:	9f 09       	sbc	r25, r15
    1b9e:	81 5a       	subi	r24, 0xA1	; 161
    1ba0:	9f 40       	sbci	r25, 0x0F	; 15
    1ba2:	0c f4       	brge	.+2      	; 0x1ba6 <main+0x1a2a>
    1ba4:	46 c0       	rjmp	.+140    	; 0x1c32 <main+0x1ab6>
    1ba6:	78 01       	movw	r14, r16
    1ba8:	05 c0       	rjmp	.+10     	; 0x1bb4 <main+0x1a38>
						state = 2;
					counterRef = counter;
				}
				if(state == 2 && counter - counterRef > pWait){
    1baa:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1bac:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1bae:	42 30       	cpi	r20, 0x02	; 2
    1bb0:	51 05       	cpc	r21, r1
    1bb2:	49 f4       	brne	.+18     	; 0x1bc6 <main+0x1a4a>
    1bb4:	c8 01       	movw	r24, r16
    1bb6:	8e 19       	sub	r24, r14
    1bb8:	9f 09       	sbc	r25, r15
    1bba:	85 36       	cpi	r24, 0x65	; 101
    1bbc:	91 05       	cpc	r25, r1
    1bbe:	0c f4       	brge	.+2      	; 0x1bc2 <main+0x1a46>
    1bc0:	4a c0       	rjmp	.+148    	; 0x1c56 <main+0x1ada>
    1bc2:	78 01       	movw	r14, r16
    1bc4:	04 c0       	rjmp	.+8      	; 0x1bce <main+0x1a52>
					state = 3;
					counterRef = counter;
				}
				if(state == 3 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
    1bc6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1bc8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1bca:	03 97       	sbiw	r24, 0x03	; 3
    1bcc:	49 f4       	brne	.+18     	; 0x1be0 <main+0x1a64>
    1bce:	c8 01       	movw	r24, r16
    1bd0:	8e 19       	sub	r24, r14
    1bd2:	9f 09       	sbc	r25, r15
    1bd4:	81 5a       	subi	r24, 0xA1	; 161
    1bd6:	9f 40       	sbci	r25, 0x0F	; 15
    1bd8:	0c f4       	brge	.+2      	; 0x1bdc <main+0x1a60>
    1bda:	4e c0       	rjmp	.+156    	; 0x1c78 <main+0x1afc>
    1bdc:	78 01       	movw	r14, r16
    1bde:	05 c0       	rjmp	.+10     	; 0x1bea <main+0x1a6e>
					state = 4;
					counterRef = counter;
				}
				if(state == 4 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
    1be0:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1be2:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1be4:	24 30       	cpi	r18, 0x04	; 4
    1be6:	31 05       	cpc	r19, r1
    1be8:	49 f4       	brne	.+18     	; 0x1bfc <main+0x1a80>
    1bea:	c8 01       	movw	r24, r16
    1bec:	8e 19       	sub	r24, r14
    1bee:	9f 09       	sbc	r25, r15
    1bf0:	89 5e       	subi	r24, 0xE9	; 233
    1bf2:	93 40       	sbci	r25, 0x03	; 3
    1bf4:	0c f4       	brge	.+2      	; 0x1bf8 <main+0x1a7c>
    1bf6:	52 c0       	rjmp	.+164    	; 0x1c9c <main+0x1b20>
    1bf8:	78 01       	movw	r14, r16
    1bfa:	05 c0       	rjmp	.+10     	; 0x1c06 <main+0x1a8a>
					state = 5;
					counterRef = counter;
				}
				if(state == 5 && counter - counterRef > pWait){
    1bfc:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1bfe:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1c00:	45 30       	cpi	r20, 0x05	; 5
    1c02:	51 05       	cpc	r21, r1
    1c04:	49 f4       	brne	.+18     	; 0x1c18 <main+0x1a9c>
    1c06:	c8 01       	movw	r24, r16
    1c08:	8e 19       	sub	r24, r14
    1c0a:	9f 09       	sbc	r25, r15
    1c0c:	85 36       	cpi	r24, 0x65	; 101
    1c0e:	91 05       	cpc	r25, r1
    1c10:	0c f4       	brge	.+2      	; 0x1c14 <main+0x1a98>
    1c12:	55 c0       	rjmp	.+170    	; 0x1cbe <main+0x1b42>
    1c14:	78 01       	movw	r14, r16
    1c16:	04 c0       	rjmp	.+8      	; 0x1c20 <main+0x1aa4>
						state = 6;
					counterRef = counter;
				}
				if(state == 6 && counter - counterRef > totallength2*m2Brush2StepWhole /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush1 == 0*/){
    1c18:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1c1a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1c1c:	06 97       	sbiw	r24, 0x06	; 6
    1c1e:	69 f4       	brne	.+26     	; 0x1c3a <main+0x1abe>
    1c20:	c8 01       	movw	r24, r16
    1c22:	8e 19       	sub	r24, r14
    1c24:	9f 09       	sbc	r25, r15
    1c26:	81 5a       	subi	r24, 0xA1	; 161
    1c28:	9f 40       	sbci	r25, 0x0F	; 15
    1c2a:	0c f4       	brge	.+2      	; 0x1c2e <main+0x1ab2>
    1c2c:	5a c0       	rjmp	.+180    	; 0x1ce2 <main+0x1b66>
    1c2e:	78 01       	movw	r14, r16
    1c30:	09 c0       	rjmp	.+18     	; 0x1c44 <main+0x1ac8>
    1c32:	21 e0       	ldi	r18, 0x01	; 1
    1c34:	30 e0       	ldi	r19, 0x00	; 0
    1c36:	3e 8f       	std	Y+30, r19	; 0x1e
    1c38:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 15;
					counterRef = counter;
				}
				if(state == 15 && counter - counterRef > mWait){
    1c3a:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1c3c:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1c3e:	4f 30       	cpi	r20, 0x0F	; 15
    1c40:	51 05       	cpc	r21, r1
    1c42:	69 f4       	brne	.+26     	; 0x1c5e <main+0x1ae2>
    1c44:	c8 01       	movw	r24, r16
    1c46:	8e 19       	sub	r24, r14
    1c48:	9f 09       	sbc	r25, r15
    1c4a:	85 36       	cpi	r24, 0x65	; 101
    1c4c:	91 05       	cpc	r25, r1
    1c4e:	0c f4       	brge	.+2      	; 0x1c52 <main+0x1ad6>
    1c50:	59 c0       	rjmp	.+178    	; 0x1d04 <main+0x1b88>
    1c52:	78 01       	movw	r14, r16
    1c54:	08 c0       	rjmp	.+16     	; 0x1c66 <main+0x1aea>
    1c56:	82 e0       	ldi	r24, 0x02	; 2
    1c58:	90 e0       	ldi	r25, 0x00	; 0
    1c5a:	9e 8f       	std	Y+30, r25	; 0x1e
    1c5c:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 16;
					counterRef = counter;
				}
				if(state == 16 && counter - counterRef > pWait){
    1c5e:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1c60:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1c62:	70 97       	sbiw	r30, 0x10	; 16
    1c64:	69 f4       	brne	.+26     	; 0x1c80 <main+0x1b04>
    1c66:	c8 01       	movw	r24, r16
    1c68:	8e 19       	sub	r24, r14
    1c6a:	9f 09       	sbc	r25, r15
    1c6c:	85 36       	cpi	r24, 0x65	; 101
    1c6e:	91 05       	cpc	r25, r1
    1c70:	0c f4       	brge	.+2      	; 0x1c74 <main+0x1af8>
    1c72:	5a c0       	rjmp	.+180    	; 0x1d28 <main+0x1bac>
    1c74:	78 01       	movw	r14, r16
    1c76:	09 c0       	rjmp	.+18     	; 0x1c8a <main+0x1b0e>
    1c78:	23 e0       	ldi	r18, 0x03	; 3
    1c7a:	30 e0       	ldi	r19, 0x00	; 0
    1c7c:	3e 8f       	std	Y+30, r19	; 0x1e
    1c7e:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 17;
					counterRef = counter;
				}
				if(state == 17 && counter - counterRef > totallength2*m2HalfPlate){
    1c80:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1c82:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1c84:	41 31       	cpi	r20, 0x11	; 17
    1c86:	51 05       	cpc	r21, r1
    1c88:	69 f4       	brne	.+26     	; 0x1ca4 <main+0x1b28>
    1c8a:	c8 01       	movw	r24, r16
    1c8c:	8e 19       	sub	r24, r14
    1c8e:	9f 09       	sbc	r25, r15
    1c90:	81 5a       	subi	r24, 0xA1	; 161
    1c92:	9f 40       	sbci	r25, 0x0F	; 15
    1c94:	0c f4       	brge	.+2      	; 0x1c98 <main+0x1b1c>
    1c96:	59 c0       	rjmp	.+178    	; 0x1d4a <main+0x1bce>
    1c98:	78 01       	movw	r14, r16
    1c9a:	08 c0       	rjmp	.+16     	; 0x1cac <main+0x1b30>
    1c9c:	84 e0       	ldi	r24, 0x04	; 4
    1c9e:	90 e0       	ldi	r25, 0x00	; 0
    1ca0:	9e 8f       	std	Y+30, r25	; 0x1e
    1ca2:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 18;
					counterRef = counter;
				}
				if(state == 18 && counter - counterRef > pWait){
    1ca4:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1ca6:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1ca8:	72 97       	sbiw	r30, 0x12	; 18
    1caa:	69 f4       	brne	.+26     	; 0x1cc6 <main+0x1b4a>
    1cac:	c8 01       	movw	r24, r16
    1cae:	8e 19       	sub	r24, r14
    1cb0:	9f 09       	sbc	r25, r15
    1cb2:	85 36       	cpi	r24, 0x65	; 101
    1cb4:	91 05       	cpc	r25, r1
    1cb6:	0c f4       	brge	.+2      	; 0x1cba <main+0x1b3e>
    1cb8:	5a c0       	rjmp	.+180    	; 0x1d6e <main+0x1bf2>
    1cba:	78 01       	movw	r14, r16
    1cbc:	09 c0       	rjmp	.+18     	; 0x1cd0 <main+0x1b54>
    1cbe:	25 e0       	ldi	r18, 0x05	; 5
    1cc0:	30 e0       	ldi	r19, 0x00	; 0
    1cc2:	3e 8f       	std	Y+30, r19	; 0x1e
    1cc4:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 19;
					counterRef = counter;
				}
				if(state == 19 && counter - counterRef > totallength2*m2HalfPlate /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush2 == 0*/){
    1cc6:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1cc8:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1cca:	43 31       	cpi	r20, 0x13	; 19
    1ccc:	51 05       	cpc	r21, r1
    1cce:	69 f4       	brne	.+26     	; 0x1cea <main+0x1b6e>
    1cd0:	c8 01       	movw	r24, r16
    1cd2:	8e 19       	sub	r24, r14
    1cd4:	9f 09       	sbc	r25, r15
    1cd6:	81 5a       	subi	r24, 0xA1	; 161
    1cd8:	9f 40       	sbci	r25, 0x0F	; 15
    1cda:	0c f4       	brge	.+2      	; 0x1cde <main+0x1b62>
    1cdc:	59 c0       	rjmp	.+178    	; 0x1d90 <main+0x1c14>
    1cde:	78 01       	movw	r14, r16
    1ce0:	08 c0       	rjmp	.+16     	; 0x1cf2 <main+0x1b76>
    1ce2:	86 e0       	ldi	r24, 0x06	; 6
    1ce4:	90 e0       	ldi	r25, 0x00	; 0
    1ce6:	9e 8f       	std	Y+30, r25	; 0x1e
    1ce8:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 20;
					counterRef = counter;
				}
				if(state == 20 && counter - counterRef > pWait){
    1cea:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1cec:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1cee:	74 97       	sbiw	r30, 0x14	; 20
    1cf0:	69 f4       	brne	.+26     	; 0x1d0c <main+0x1b90>
    1cf2:	c8 01       	movw	r24, r16
    1cf4:	8e 19       	sub	r24, r14
    1cf6:	9f 09       	sbc	r25, r15
    1cf8:	85 36       	cpi	r24, 0x65	; 101
    1cfa:	91 05       	cpc	r25, r1
    1cfc:	0c f4       	brge	.+2      	; 0x1d00 <main+0x1b84>
    1cfe:	58 c0       	rjmp	.+176    	; 0x1db0 <main+0x1c34>
    1d00:	78 01       	movw	r14, r16
    1d02:	09 c0       	rjmp	.+18     	; 0x1d16 <main+0x1b9a>
    1d04:	2f e0       	ldi	r18, 0x0F	; 15
    1d06:	30 e0       	ldi	r19, 0x00	; 0
    1d08:	3e 8f       	std	Y+30, r19	; 0x1e
    1d0a:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 21;
					counterRef = counter;
				}
				if(state == 21 && counter - counterRef > totallength2*m2HalfPlate){
    1d0c:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1d0e:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1d10:	45 31       	cpi	r20, 0x15	; 21
    1d12:	51 05       	cpc	r21, r1
    1d14:	69 f4       	brne	.+26     	; 0x1d30 <main+0x1bb4>
    1d16:	c8 01       	movw	r24, r16
    1d18:	8e 19       	sub	r24, r14
    1d1a:	9f 09       	sbc	r25, r15
    1d1c:	81 5a       	subi	r24, 0xA1	; 161
    1d1e:	9f 40       	sbci	r25, 0x0F	; 15
    1d20:	0c f4       	brge	.+2      	; 0x1d24 <main+0x1ba8>
    1d22:	58 c0       	rjmp	.+176    	; 0x1dd4 <main+0x1c58>
    1d24:	78 01       	movw	r14, r16
    1d26:	08 c0       	rjmp	.+16     	; 0x1d38 <main+0x1bbc>
    1d28:	80 e1       	ldi	r24, 0x10	; 16
    1d2a:	90 e0       	ldi	r25, 0x00	; 0
    1d2c:	9e 8f       	std	Y+30, r25	; 0x1e
    1d2e:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 22;
					counterRef = counter;
				}
				if(state == 22 && counter - counterRef > pWait){
    1d30:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1d32:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1d34:	76 97       	sbiw	r30, 0x16	; 22
    1d36:	69 f4       	brne	.+26     	; 0x1d52 <main+0x1bd6>
    1d38:	c8 01       	movw	r24, r16
    1d3a:	8e 19       	sub	r24, r14
    1d3c:	9f 09       	sbc	r25, r15
    1d3e:	85 36       	cpi	r24, 0x65	; 101
    1d40:	91 05       	cpc	r25, r1
    1d42:	0c f4       	brge	.+2      	; 0x1d46 <main+0x1bca>
    1d44:	5b c0       	rjmp	.+182    	; 0x1dfc <main+0x1c80>
    1d46:	78 01       	movw	r14, r16
    1d48:	09 c0       	rjmp	.+18     	; 0x1d5c <main+0x1be0>
    1d4a:	21 e1       	ldi	r18, 0x11	; 17
    1d4c:	30 e0       	ldi	r19, 0x00	; 0
    1d4e:	3e 8f       	std	Y+30, r19	; 0x1e
    1d50:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 23;
					counterRef = counter;
				}
				if(state == 23 && counter - counterRef > totallength2*m2Dry1Step /*&& u_inputByte0.bits_in_inputByte0.fixtureDry1 == 0*/){
    1d52:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1d54:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1d56:	47 31       	cpi	r20, 0x17	; 23
    1d58:	51 05       	cpc	r21, r1
    1d5a:	69 f4       	brne	.+26     	; 0x1d76 <main+0x1bfa>
    1d5c:	c8 01       	movw	r24, r16
    1d5e:	8e 19       	sub	r24, r14
    1d60:	9f 09       	sbc	r25, r15
    1d62:	81 5a       	subi	r24, 0xA1	; 161
    1d64:	9f 40       	sbci	r25, 0x0F	; 15
    1d66:	0c f4       	brge	.+2      	; 0x1d6a <main+0x1bee>
    1d68:	5b c0       	rjmp	.+182    	; 0x1e20 <main+0x1ca4>
    1d6a:	78 01       	movw	r14, r16
    1d6c:	08 c0       	rjmp	.+16     	; 0x1d7e <main+0x1c02>
    1d6e:	82 e1       	ldi	r24, 0x12	; 18
    1d70:	90 e0       	ldi	r25, 0x00	; 0
    1d72:	9e 8f       	std	Y+30, r25	; 0x1e
    1d74:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 24;
					counterRef = counter;
				}
				if(state == 24 && counter - counterRef > kWait){
    1d76:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1d78:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1d7a:	78 97       	sbiw	r30, 0x18	; 24
    1d7c:	69 f4       	brne	.+26     	; 0x1d98 <main+0x1c1c>
    1d7e:	c8 01       	movw	r24, r16
    1d80:	8e 19       	sub	r24, r14
    1d82:	9f 09       	sbc	r25, r15
    1d84:	85 36       	cpi	r24, 0x65	; 101
    1d86:	91 05       	cpc	r25, r1
    1d88:	0c f4       	brge	.+2      	; 0x1d8c <main+0x1c10>
    1d8a:	59 c0       	rjmp	.+178    	; 0x1e3e <main+0x1cc2>
    1d8c:	78 01       	movw	r14, r16
    1d8e:	09 c0       	rjmp	.+18     	; 0x1da2 <main+0x1c26>
    1d90:	23 e1       	ldi	r18, 0x13	; 19
    1d92:	30 e0       	ldi	r19, 0x00	; 0
    1d94:	3e 8f       	std	Y+30, r19	; 0x1e
    1d96:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 25;
					counterRef = counter;
				}
				if(state == 25 && counter - counterRef > totallength2*m2WholePlate){
    1d98:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1d9a:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1d9c:	49 31       	cpi	r20, 0x19	; 25
    1d9e:	51 05       	cpc	r21, r1
    1da0:	59 f4       	brne	.+22     	; 0x1db8 <main+0x1c3c>
    1da2:	c8 01       	movw	r24, r16
    1da4:	8e 19       	sub	r24, r14
    1da6:	9f 09       	sbc	r25, r15
    1da8:	81 5a       	subi	r24, 0xA1	; 161
    1daa:	9f 40       	sbci	r25, 0x0F	; 15
    1dac:	4c f4       	brge	.+18     	; 0x1dc0 <main+0x1c44>
    1dae:	59 c0       	rjmp	.+178    	; 0x1e62 <main+0x1ce6>
    1db0:	84 e1       	ldi	r24, 0x14	; 20
    1db2:	90 e0       	ldi	r25, 0x00	; 0
    1db4:	9e 8f       	std	Y+30, r25	; 0x1e
    1db6:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 26;
					counterRef26 = counter;
				}
				if(state == 26 && counter - counterRef > totallength2*m2Dry2Step /*&& u_inputByte0.bits_in_inputByte0.fixtureDry2 == 0*/){
    1db8:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1dba:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1dbc:	7a 97       	sbiw	r30, 0x1a	; 26
    1dbe:	71 f4       	brne	.+28     	; 0x1ddc <main+0x1c60>
    1dc0:	c8 01       	movw	r24, r16
    1dc2:	8e 19       	sub	r24, r14
    1dc4:	9f 09       	sbc	r25, r15
    1dc6:	81 5a       	subi	r24, 0xA1	; 161
    1dc8:	9f 40       	sbci	r25, 0x0F	; 15
    1dca:	0c f4       	brge	.+2      	; 0x1dce <main+0x1c52>
    1dcc:	5b c0       	rjmp	.+182    	; 0x1e84 <main+0x1d08>
    1dce:	1e 87       	std	Y+14, r17	; 0x0e
    1dd0:	0d 87       	std	Y+13, r16	; 0x0d
    1dd2:	09 c0       	rjmp	.+18     	; 0x1de6 <main+0x1c6a>
    1dd4:	25 e1       	ldi	r18, 0x15	; 21
    1dd6:	30 e0       	ldi	r19, 0x00	; 0
    1dd8:	3e 8f       	std	Y+30, r19	; 0x1e
    1dda:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 27;
					counterRefFive = counter;
				}
				if(state == 27 && counter - counterRefFive > mWait){
    1ddc:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1dde:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1de0:	4b 31       	cpi	r20, 0x1B	; 27
    1de2:	51 05       	cpc	r21, r1
    1de4:	79 f4       	brne	.+30     	; 0x1e04 <main+0x1c88>
    1de6:	c8 01       	movw	r24, r16
    1de8:	ed 85       	ldd	r30, Y+13	; 0x0d
    1dea:	fe 85       	ldd	r31, Y+14	; 0x0e
    1dec:	8e 1b       	sub	r24, r30
    1dee:	9f 0b       	sbc	r25, r31
    1df0:	85 36       	cpi	r24, 0x65	; 101
    1df2:	91 05       	cpc	r25, r1
    1df4:	0c f4       	brge	.+2      	; 0x1df8 <main+0x1c7c>
    1df6:	58 c0       	rjmp	.+176    	; 0x1ea8 <main+0x1d2c>
    1df8:	78 01       	movw	r14, r16
    1dfa:	09 c0       	rjmp	.+18     	; 0x1e0e <main+0x1c92>
    1dfc:	26 e1       	ldi	r18, 0x16	; 22
    1dfe:	30 e0       	ldi	r19, 0x00	; 0
    1e00:	3e 8f       	std	Y+30, r19	; 0x1e
    1e02:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 28;
					counterRef = counter;
				}
				if(state == 28 && counter - counterRef > pWait){
    1e04:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1e06:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1e08:	4c 31       	cpi	r20, 0x1C	; 28
    1e0a:	51 05       	cpc	r21, r1
    1e0c:	69 f4       	brne	.+26     	; 0x1e28 <main+0x1cac>
    1e0e:	c8 01       	movw	r24, r16
    1e10:	8e 19       	sub	r24, r14
    1e12:	9f 09       	sbc	r25, r15
    1e14:	85 36       	cpi	r24, 0x65	; 101
    1e16:	91 05       	cpc	r25, r1
    1e18:	0c f4       	brge	.+2      	; 0x1e1c <main+0x1ca0>
    1e1a:	57 c0       	rjmp	.+174    	; 0x1eca <main+0x1d4e>
    1e1c:	78 01       	movw	r14, r16
    1e1e:	08 c0       	rjmp	.+16     	; 0x1e30 <main+0x1cb4>
    1e20:	87 e1       	ldi	r24, 0x17	; 23
    1e22:	90 e0       	ldi	r25, 0x00	; 0
    1e24:	9e 8f       	std	Y+30, r25	; 0x1e
    1e26:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 29;
					counterRef = counter;
				}
				if(state == 29 && counter - counterRef > totallength2*m2WholePlate){
    1e28:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1e2a:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1e2c:	7d 97       	sbiw	r30, 0x1d	; 29
    1e2e:	59 f4       	brne	.+22     	; 0x1e46 <main+0x1cca>
    1e30:	c8 01       	movw	r24, r16
    1e32:	8e 19       	sub	r24, r14
    1e34:	9f 09       	sbc	r25, r15
    1e36:	81 5a       	subi	r24, 0xA1	; 161
    1e38:	9f 40       	sbci	r25, 0x0F	; 15
    1e3a:	54 f4       	brge	.+20     	; 0x1e50 <main+0x1cd4>
    1e3c:	58 c0       	rjmp	.+176    	; 0x1eee <main+0x1d72>
    1e3e:	28 e1       	ldi	r18, 0x18	; 24
    1e40:	30 e0       	ldi	r19, 0x00	; 0
    1e42:	3e 8f       	std	Y+30, r19	; 0x1e
    1e44:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 30;
					counterRef30 = counter;
				}
				if(state == 30 && counter - counterRef > totallength2*m2LoadBack /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
    1e46:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1e48:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1e4a:	4e 31       	cpi	r20, 0x1E	; 30
    1e4c:	51 05       	cpc	r21, r1
    1e4e:	69 f4       	brne	.+26     	; 0x1e6a <main+0x1cee>
    1e50:	c8 01       	movw	r24, r16
    1e52:	8e 19       	sub	r24, r14
    1e54:	9f 09       	sbc	r25, r15
    1e56:	81 5a       	subi	r24, 0xA1	; 161
    1e58:	9f 40       	sbci	r25, 0x0F	; 15
    1e5a:	0c f4       	brge	.+2      	; 0x1e5e <main+0x1ce2>
    1e5c:	5a c0       	rjmp	.+180    	; 0x1f12 <main+0x1d96>
    1e5e:	78 01       	movw	r14, r16
    1e60:	08 c0       	rjmp	.+16     	; 0x1e72 <main+0x1cf6>
    1e62:	89 e1       	ldi	r24, 0x19	; 25
    1e64:	90 e0       	ldi	r25, 0x00	; 0
    1e66:	9e 8f       	std	Y+30, r25	; 0x1e
    1e68:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 31;
					counterRef = counter;
				}
					if(state == 31 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
    1e6a:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1e6c:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1e6e:	7f 97       	sbiw	r30, 0x1f	; 31
    1e70:	69 f4       	brne	.+26     	; 0x1e8c <main+0x1d10>
    1e72:	c8 01       	movw	r24, r16
    1e74:	8e 19       	sub	r24, r14
    1e76:	9f 09       	sbc	r25, r15
    1e78:	89 5e       	subi	r24, 0xE9	; 233
    1e7a:	93 40       	sbci	r25, 0x03	; 3
    1e7c:	0c f4       	brge	.+2      	; 0x1e80 <main+0x1d04>
    1e7e:	78 c0       	rjmp	.+240    	; 0x1f70 <main+0x1df4>
    1e80:	78 01       	movw	r14, r16
    1e82:	09 c0       	rjmp	.+18     	; 0x1e96 <main+0x1d1a>
    1e84:	2a e1       	ldi	r18, 0x1A	; 26
    1e86:	30 e0       	ldi	r19, 0x00	; 0
    1e88:	3e 8f       	std	Y+30, r19	; 0x1e
    1e8a:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 32;
					counterRef = counter;
				}
				if(state == 32 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureHome == 0*/){
    1e8c:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1e8e:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1e90:	40 32       	cpi	r20, 0x20	; 32
    1e92:	51 05       	cpc	r21, r1
    1e94:	69 f4       	brne	.+26     	; 0x1eb0 <main+0x1d34>
    1e96:	c8 01       	movw	r24, r16
    1e98:	8e 19       	sub	r24, r14
    1e9a:	9f 09       	sbc	r25, r15
    1e9c:	81 5a       	subi	r24, 0xA1	; 161
    1e9e:	9f 40       	sbci	r25, 0x0F	; 15
    1ea0:	0c f4       	brge	.+2      	; 0x1ea4 <main+0x1d28>
    1ea2:	92 c0       	rjmp	.+292    	; 0x1fc8 <main+0x1e4c>
    1ea4:	78 01       	movw	r14, r16
    1ea6:	08 c0       	rjmp	.+16     	; 0x1eb8 <main+0x1d3c>
    1ea8:	8b e1       	ldi	r24, 0x1B	; 27
    1eaa:	90 e0       	ldi	r25, 0x00	; 0
    1eac:	9e 8f       	std	Y+30, r25	; 0x1e
    1eae:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 33;
					counterRef = counter;
				}
				if(state == 33 && counter - counterRef > pWait){
    1eb0:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1eb2:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1eb4:	b1 97       	sbiw	r30, 0x21	; 33
    1eb6:	69 f4       	brne	.+26     	; 0x1ed2 <main+0x1d56>
    1eb8:	c8 01       	movw	r24, r16
    1eba:	8e 19       	sub	r24, r14
    1ebc:	9f 09       	sbc	r25, r15
    1ebe:	85 36       	cpi	r24, 0x65	; 101
    1ec0:	91 05       	cpc	r25, r1
    1ec2:	0c f4       	brge	.+2      	; 0x1ec6 <main+0x1d4a>
    1ec4:	98 c0       	rjmp	.+304    	; 0x1ff6 <main+0x1e7a>
    1ec6:	78 01       	movw	r14, r16
    1ec8:	09 c0       	rjmp	.+18     	; 0x1edc <main+0x1d60>
    1eca:	2c e1       	ldi	r18, 0x1C	; 28
    1ecc:	30 e0       	ldi	r19, 0x00	; 0
    1ece:	3e 8f       	std	Y+30, r19	; 0x1e
    1ed0:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 34;
					counterRef = counter;
				}
				if(state == 34 && counter - counterRef > totallength1*m1LoadPlate){
    1ed2:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1ed4:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1ed6:	42 32       	cpi	r20, 0x22	; 34
    1ed8:	51 05       	cpc	r21, r1
    1eda:	69 f4       	brne	.+26     	; 0x1ef6 <main+0x1d7a>
    1edc:	c8 01       	movw	r24, r16
    1ede:	8e 19       	sub	r24, r14
    1ee0:	9f 09       	sbc	r25, r15
    1ee2:	81 5a       	subi	r24, 0xA1	; 161
    1ee4:	9f 40       	sbci	r25, 0x0F	; 15
    1ee6:	0c f4       	brge	.+2      	; 0x1eea <main+0x1d6e>
    1ee8:	98 c0       	rjmp	.+304    	; 0x201a <main+0x1e9e>
    1eea:	78 01       	movw	r14, r16
    1eec:	08 c0       	rjmp	.+16     	; 0x1efe <main+0x1d82>
    1eee:	8d e1       	ldi	r24, 0x1D	; 29
    1ef0:	90 e0       	ldi	r25, 0x00	; 0
    1ef2:	9e 8f       	std	Y+30, r25	; 0x1e
    1ef4:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 35;
					counterRef = counter;
				}
				if(state == 35 && counter - counterRef > 10){
    1ef6:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1ef8:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1efa:	b3 97       	sbiw	r30, 0x23	; 35
    1efc:	71 f4       	brne	.+28     	; 0x1f1a <main+0x1d9e>
    1efe:	c8 01       	movw	r24, r16
    1f00:	8e 19       	sub	r24, r14
    1f02:	9f 09       	sbc	r25, r15
    1f04:	0b 97       	sbiw	r24, 0x0b	; 11
    1f06:	14 f4       	brge	.+4      	; 0x1f0c <main+0x1d90>
    1f08:	0c 94 00 1a 	jmp	0x3400	; 0x3400 <main+0x3284>
    1f0c:	2f ef       	ldi	r18, 0xFF	; 255
    1f0e:	3f ef       	ldi	r19, 0xFF	; 255
    1f10:	31 c0       	rjmp	.+98     	; 0x1f74 <main+0x1df8>
    1f12:	4e e1       	ldi	r20, 0x1E	; 30
    1f14:	50 e0       	ldi	r21, 0x00	; 0
    1f16:	0c 94 02 1a 	jmp	0x3404	; 0x3404 <main+0x3288>
				}


				//state actions
						
				if(state == 0){
    1f1a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1f1c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1f1e:	89 2b       	or	r24, r25
    1f20:	59 f5       	brne	.+86     	; 0x1f78 <main+0x1dfc>
					if(u_inputByte0.bits_in_inputByte0.fixtureHome == 1){
    1f22:	80 91 1e 03 	lds	r24, 0x031E
    1f26:	90 91 1a 03 	lds	r25, 0x031A
    1f2a:	20 91 1c 03 	lds	r18, 0x031C
    1f2e:	82 ff       	sbrs	r24, 2
    1f30:	0a c0       	rjmp	.+20     	; 0x1f46 <main+0x1dca>
						u_motorByte0.bits_in_motorByte0.m2Dir = 0;  //********* 0 is used as fixture backward ?cc?, 1 as forward ?c? **********
    1f32:	9f 7e       	andi	r25, 0xEF	; 239
    1f34:	90 93 1a 03 	sts	0x031A, r25
						u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    1f38:	27 7f       	andi	r18, 0xF7	; 247
    1f3a:	20 93 1c 03 	sts	0x031C, r18
    1f3e:	31 e0       	ldi	r19, 0x01	; 1
    1f40:	c3 2e       	mov	r12, r19
    1f42:	d1 2c       	mov	r13, r1
    1f44:	6e c0       	rjmp	.+220    	; 0x2022 <main+0x1ea6>
						m2 = 1;
					}
					else{
						u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    1f46:	9f 7d       	andi	r25, 0xDF	; 223
    1f48:	90 93 1a 03 	sts	0x031A, r25
						m2 = 0;
						u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    1f4c:	2f 7e       	andi	r18, 0xEF	; 239
						u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    1f4e:	28 60       	ori	r18, 0x08	; 8
    1f50:	20 93 1c 03 	sts	0x031C, r18
						if(print0 == 1){
    1f54:	e9 8d       	ldd	r30, Y+25	; 0x19
    1f56:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1f58:	31 97       	sbiw	r30, 0x01	; 1
    1f5a:	11 f0       	breq	.+4      	; 0x1f60 <main+0x1de4>
    1f5c:	0c 94 06 1a 	jmp	0x340c	; 0x340c <main+0x3290>
							OrangutanLCD::clear();
    1f60:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
							OrangutanLCD::print("PUSH TO START");
    1f64:	81 ec       	ldi	r24, 0xC1	; 193
    1f66:	92 e0       	ldi	r25, 0x02	; 2
    1f68:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    1f6c:	0c 94 06 1a 	jmp	0x340c	; 0x340c <main+0x3290>
    1f70:	2f e1       	ldi	r18, 0x1F	; 31
    1f72:	30 e0       	ldi	r19, 0x00	; 0
    1f74:	3e 8f       	std	Y+30, r19	; 0x1e
    1f76:	2d 8f       	std	Y+29, r18	; 0x1d
							print0 = 0;
						}
					}
				}
				if(state == 1){
    1f78:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1f7a:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1f7c:	41 30       	cpi	r20, 0x01	; 1
    1f7e:	51 05       	cpc	r21, r1
    1f80:	39 f5       	brne	.+78     	; 0x1fd0 <main+0x1e54>
					OrangutanLCD::clear();
    1f82:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
					u_outputByte0.bits_in_outputByte0.ACPower = 0;
    1f86:	20 91 1c 03 	lds	r18, 0x031C
    1f8a:	32 2f       	mov	r19, r18
    1f8c:	3e 7f       	andi	r19, 0xFE	; 254
					if((counter % 200) < 100){
    1f8e:	c8 01       	movw	r24, r16
    1f90:	68 ec       	ldi	r22, 0xC8	; 200
    1f92:	70 e0       	ldi	r23, 0x00	; 0
    1f94:	0e 94 35 20 	call	0x406a	; 0x406a <__divmodhi4>
    1f98:	84 36       	cpi	r24, 0x64	; 100
    1f9a:	91 05       	cpc	r25, r1
    1f9c:	24 f4       	brge	.+8      	; 0x1fa6 <main+0x1e2a>
						u_outputByte0.bits_in_outputByte0.blowerPulse = 0;
    1f9e:	2c 7f       	andi	r18, 0xFC	; 252
    1fa0:	20 93 1c 03 	sts	0x031C, r18
    1fa4:	03 c0       	rjmp	.+6      	; 0x1fac <main+0x1e30>
					}
					else{
						u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
    1fa6:	32 60       	ori	r19, 0x02	; 2
    1fa8:	30 93 1c 03 	sts	0x031C, r19
					}
					m1 = 1;
					u_motorByte0.bits_in_motorByte0.m1Dir = 1;  //****** dir1 ******
    1fac:	80 91 1a 03 	lds	r24, 0x031A
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
    1fb0:	86 60       	ori	r24, 0x06	; 6
    1fb2:	80 93 1a 03 	sts	0x031A, r24
					u_outputByte0.bits_in_outputByte0.plateStop = 0;
    1fb6:	80 91 1c 03 	lds	r24, 0x031C
    1fba:	8b 7f       	andi	r24, 0xFB	; 251
    1fbc:	80 93 1c 03 	sts	0x031C, r24
    1fc0:	21 e0       	ldi	r18, 0x01	; 1
    1fc2:	82 2e       	mov	r8, r18
    1fc4:	91 2c       	mov	r9, r1
    1fc6:	2d c0       	rjmp	.+90     	; 0x2022 <main+0x1ea6>
    1fc8:	80 e2       	ldi	r24, 0x20	; 32
    1fca:	90 e0       	ldi	r25, 0x00	; 0
    1fcc:	9e 8f       	std	Y+30, r25	; 0x1e
    1fce:	8d 8f       	std	Y+29, r24	; 0x1d
				}
				if(state == 2){
    1fd0:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1fd2:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1fd4:	32 97       	sbiw	r30, 0x02	; 2
    1fd6:	99 f4       	brne	.+38     	; 0x1ffe <main+0x1e82>
					u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
    1fd8:	80 91 1c 03 	lds	r24, 0x031C
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    1fdc:	81 7e       	andi	r24, 0xE1	; 225
					u_outputByte0.bits_in_outputByte0.plateStop = 1;
    1fde:	86 61       	ori	r24, 0x16	; 22
    1fe0:	80 93 1c 03 	sts	0x031C, r24
						m1 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    1fe4:	80 91 1a 03 	lds	r24, 0x031A
    1fe8:	80 62       	ori	r24, 0x20	; 32
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    1fea:	8b 7f       	andi	r24, 0xFB	; 251
    1fec:	80 93 1a 03 	sts	0x031A, r24
    1ff0:	88 24       	eor	r8, r8
    1ff2:	99 24       	eor	r9, r9
    1ff4:	45 c0       	rjmp	.+138    	; 0x2080 <main+0x1f04>
    1ff6:	21 e2       	ldi	r18, 0x21	; 33
    1ff8:	30 e0       	ldi	r19, 0x00	; 0
    1ffa:	3e 8f       	std	Y+30, r19	; 0x1e
    1ffc:	2d 8f       	std	Y+29, r18	; 0x1d
				}	
				if(state == 3){
    1ffe:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2000:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2002:	43 30       	cpi	r20, 0x03	; 3
    2004:	51 05       	cpc	r21, r1
    2006:	69 f4       	brne	.+26     	; 0x2022 <main+0x1ea6>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ****** dir2 *******
    2008:	80 91 1a 03 	lds	r24, 0x031A
    200c:	80 61       	ori	r24, 0x10	; 16
    200e:	80 93 1a 03 	sts	0x031A, r24
    2012:	91 e0       	ldi	r25, 0x01	; 1
    2014:	c9 2e       	mov	r12, r25
    2016:	d1 2c       	mov	r13, r1
    2018:	4d c0       	rjmp	.+154    	; 0x20b4 <main+0x1f38>
    201a:	82 e2       	ldi	r24, 0x22	; 34
    201c:	90 e0       	ldi	r25, 0x00	; 0
    201e:	9e 8f       	std	Y+30, r25	; 0x1e
    2020:	8d 8f       	std	Y+29, r24	; 0x1d
					m2 = 1;
				}
				if(state == 4){
    2022:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2024:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2026:	34 97       	sbiw	r30, 0x04	; 4
    2028:	69 f4       	brne	.+26     	; 0x2044 <main+0x1ec8>
						m2 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    202a:	80 91 1a 03 	lds	r24, 0x031A
    202e:	8f 7d       	andi	r24, 0xDF	; 223
    2030:	80 93 1a 03 	sts	0x031A, r24
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    2034:	80 91 1c 03 	lds	r24, 0x031C
    2038:	88 60       	ori	r24, 0x08	; 8
    203a:	80 93 1c 03 	sts	0x031C, r24
    203e:	cc 24       	eor	r12, r12
    2040:	dd 24       	eor	r13, r13
    2042:	4b c0       	rjmp	.+150    	; 0x20da <main+0x1f5e>
				}
				if(state == 5){
    2044:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2046:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2048:	25 30       	cpi	r18, 0x05	; 5
    204a:	31 05       	cpc	r19, r1
    204c:	59 f4       	brne	.+22     	; 0x2064 <main+0x1ee8>
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    204e:	80 91 1c 03 	lds	r24, 0x031C
    2052:	8f 7e       	andi	r24, 0xEF	; 239
    2054:	80 93 1c 03 	sts	0x031C, r24
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    2058:	80 91 1a 03 	lds	r24, 0x031A
    205c:	80 62       	ori	r24, 0x20	; 32
    205e:	80 93 1a 03 	sts	0x031A, r24
    2062:	49 c0       	rjmp	.+146    	; 0x20f6 <main+0x1f7a>
				}
				//*********************************************
				if(state == 6){
    2064:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2066:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2068:	46 30       	cpi	r20, 0x06	; 6
    206a:	51 05       	cpc	r21, r1
    206c:	49 f4       	brne	.+18     	; 0x2080 <main+0x1f04>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    206e:	80 91 1a 03 	lds	r24, 0x031A
    2072:	80 61       	ori	r24, 0x10	; 16
    2074:	80 93 1a 03 	sts	0x031A, r24
    2078:	81 e0       	ldi	r24, 0x01	; 1
    207a:	c8 2e       	mov	r12, r24
    207c:	d1 2c       	mov	r13, r1
    207e:	4e c0       	rjmp	.+156    	; 0x211c <main+0x1fa0>
					m2 = 1;
				}
				
				//*************************** may need to reverse order depending on dry station 1 positioning ***************************
				if(state == 15){
    2080:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2082:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2084:	0f 97       	sbiw	r24, 0x0f	; 15
    2086:	b1 f4       	brne	.+44     	; 0x20b4 <main+0x1f38>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m4Drop = 1;
    2088:	80 91 1b 03 	lds	r24, 0x031B
    208c:	88 60       	ori	r24, 0x08	; 8
					u_motorByte1.bits_in_motorByte1.m4Dir = 0;  // ******* dir4 *******
    208e:	8b 7f       	andi	r24, 0xFB	; 251
    2090:	80 93 1b 03 	sts	0x031B, r24
					if(print15 == 1){
    2094:	ed 89       	ldd	r30, Y+21	; 0x15
    2096:	fe 89       	ldd	r31, Y+22	; 0x16
    2098:	31 97       	sbiw	r30, 0x01	; 1
    209a:	11 f0       	breq	.+4      	; 0x20a0 <main+0x1f24>
    209c:	0c 94 0c 1a 	jmp	0x3418	; 0x3418 <main+0x329c>
						OrangutanLCD::clear();
    20a0:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("Clean 2");
    20a4:	8f ef       	ldi	r24, 0xFF	; 255
    20a6:	92 e0       	ldi	r25, 0x02	; 2
    20a8:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    20ac:	1e 8a       	std	Y+22, r1	; 0x16
    20ae:	1d 8a       	std	Y+21, r1	; 0x15
    20b0:	0c 94 0c 1a 	jmp	0x3418	; 0x3418 <main+0x329c>
						print15 = 0;
					}
				}
				if(state == 16){
    20b4:	2d 8d       	ldd	r18, Y+29	; 0x1d
    20b6:	3e 8d       	ldd	r19, Y+30	; 0x1e
    20b8:	20 31       	cpi	r18, 0x10	; 16
    20ba:	31 05       	cpc	r19, r1
    20bc:	71 f4       	brne	.+28     	; 0x20da <main+0x1f5e>
					m4 = 1;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
    20be:	80 91 1d 03 	lds	r24, 0x031D
    20c2:	81 60       	ori	r24, 0x01	; 1
    20c4:	80 93 1d 03 	sts	0x031D, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 0;
    20c8:	80 91 1c 03 	lds	r24, 0x031C
    20cc:	8f 77       	andi	r24, 0x7F	; 127
    20ce:	80 93 1c 03 	sts	0x031C, r24
    20d2:	b1 e0       	ldi	r27, 0x01	; 1
    20d4:	6b 2e       	mov	r6, r27
    20d6:	71 2c       	mov	r7, r1
    20d8:	21 c0       	rjmp	.+66     	; 0x211c <main+0x1fa0>
				}
				if(state == 17){
    20da:	4d 8d       	ldd	r20, Y+29	; 0x1d
    20dc:	5e 8d       	ldd	r21, Y+30	; 0x1e
    20de:	41 31       	cpi	r20, 0x11	; 17
    20e0:	51 05       	cpc	r21, r1
    20e2:	49 f4       	brne	.+18     	; 0x20f6 <main+0x1f7a>
					m2 = 1;
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    20e4:	80 91 1a 03 	lds	r24, 0x031A
    20e8:	8f 7e       	andi	r24, 0xEF	; 239
    20ea:	80 93 1a 03 	sts	0x031A, r24
    20ee:	a1 e0       	ldi	r26, 0x01	; 1
    20f0:	ca 2e       	mov	r12, r26
    20f2:	d1 2c       	mov	r13, r1
    20f4:	40 c0       	rjmp	.+128    	; 0x2176 <main+0x1ffa>
				}
				if(state == 18){
    20f6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    20f8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    20fa:	42 97       	sbiw	r24, 0x12	; 18
    20fc:	79 f4       	brne	.+30     	; 0x211c <main+0x1fa0>
					m2 = 0;
					m4 = 0;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 0;
    20fe:	80 91 1d 03 	lds	r24, 0x031D
    2102:	8e 7f       	andi	r24, 0xFE	; 254
    2104:	80 93 1d 03 	sts	0x031D, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
    2108:	80 91 1c 03 	lds	r24, 0x031C
    210c:	80 68       	ori	r24, 0x80	; 128
    210e:	80 93 1c 03 	sts	0x031C, r24
    2112:	cc 24       	eor	r12, r12
    2114:	dd 24       	eor	r13, r13
    2116:	66 24       	eor	r6, r6
    2118:	77 24       	eor	r7, r7
    211a:	45 c0       	rjmp	.+138    	; 0x21a6 <main+0x202a>
				}
				if(state == 19){
    211c:	ed 8d       	ldd	r30, Y+29	; 0x1d
    211e:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2120:	73 97       	sbiw	r30, 0x13	; 19
    2122:	49 f4       	brne	.+18     	; 0x2136 <main+0x1fba>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    2124:	80 91 1a 03 	lds	r24, 0x031A
    2128:	80 61       	ori	r24, 0x10	; 16
    212a:	80 93 1a 03 	sts	0x031A, r24
    212e:	f1 e0       	ldi	r31, 0x01	; 1
    2130:	cf 2e       	mov	r12, r31
    2132:	d1 2c       	mov	r13, r1
    2134:	40 c0       	rjmp	.+128    	; 0x21b6 <main+0x203a>
					m2 = 1;
				}
				if(state == 20){
    2136:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2138:	3e 8d       	ldd	r19, Y+30	; 0x1e
    213a:	24 31       	cpi	r18, 0x14	; 20
    213c:	31 05       	cpc	r19, r1
    213e:	a9 f4       	brne	.+42     	; 0x216a <main+0x1fee>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m4Dir = 0;  // ******* dir4 *******
    2140:	80 91 1b 03 	lds	r24, 0x031B
    2144:	8b 7f       	andi	r24, 0xFB	; 251
    2146:	80 93 1b 03 	sts	0x031B, r24
					m4 = 1;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
    214a:	80 91 1d 03 	lds	r24, 0x031D
    214e:	81 60       	ori	r24, 0x01	; 1
    2150:	80 93 1d 03 	sts	0x031D, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 0;
    2154:	80 91 1c 03 	lds	r24, 0x031C
    2158:	8f 77       	andi	r24, 0x7F	; 127
    215a:	80 93 1c 03 	sts	0x031C, r24
    215e:	cc 24       	eor	r12, r12
    2160:	dd 24       	eor	r13, r13
    2162:	e1 e0       	ldi	r30, 0x01	; 1
    2164:	6e 2e       	mov	r6, r30
    2166:	71 2c       	mov	r7, r1
    2168:	41 c0       	rjmp	.+130    	; 0x21ec <main+0x2070>
				}
				if(state == 21){
    216a:	4d 8d       	ldd	r20, Y+29	; 0x1d
    216c:	5e 8d       	ldd	r21, Y+30	; 0x1e
    216e:	45 31       	cpi	r20, 0x15	; 21
    2170:	51 05       	cpc	r21, r1
    2172:	09 f4       	brne	.+2      	; 0x2176 <main+0x1ffa>
    2174:	48 c0       	rjmp	.+144    	; 0x2206 <main+0x208a>
					m2 = 1;
				}
				if(state == 22){
    2176:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2178:	9e 8d       	ldd	r25, Y+30	; 0x1e
    217a:	46 97       	sbiw	r24, 0x16	; 22
    217c:	a1 f4       	brne	.+40     	; 0x21a6 <main+0x202a>
					m4 = 0;
					m2 = 0;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 0;
    217e:	80 91 1d 03 	lds	r24, 0x031D
    2182:	8e 7f       	andi	r24, 0xFE	; 254
    2184:	80 93 1d 03 	sts	0x031D, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
    2188:	80 91 1c 03 	lds	r24, 0x031C
    218c:	80 68       	ori	r24, 0x80	; 128
    218e:	80 93 1c 03 	sts	0x031C, r24
					u_motorByte1.bits_in_motorByte1.m4Drop = 0;
    2192:	80 91 1b 03 	lds	r24, 0x031B
    2196:	87 7f       	andi	r24, 0xF7	; 247
    2198:	80 93 1b 03 	sts	0x031B, r24
    219c:	cc 24       	eor	r12, r12
    219e:	dd 24       	eor	r13, r13
    21a0:	66 24       	eor	r6, r6
    21a2:	77 24       	eor	r7, r7
    21a4:	3d c0       	rjmp	.+122    	; 0x2220 <main+0x20a4>
				}
				//*************************************************
				if(state == 23){
    21a6:	ed 8d       	ldd	r30, Y+29	; 0x1d
    21a8:	fe 8d       	ldd	r31, Y+30	; 0x1e
    21aa:	77 97       	sbiw	r30, 0x17	; 23
    21ac:	21 f4       	brne	.+8      	; 0x21b6 <main+0x203a>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    21ae:	80 91 1a 03 	lds	r24, 0x031A
    21b2:	80 61       	ori	r24, 0x10	; 16
    21b4:	22 c0       	rjmp	.+68     	; 0x21fa <main+0x207e>
					m2 = 1;
				}
				if(state == 24){
    21b6:	2d 8d       	ldd	r18, Y+29	; 0x1d
    21b8:	3e 8d       	ldd	r19, Y+30	; 0x1e
    21ba:	28 31       	cpi	r18, 0x18	; 24
    21bc:	31 05       	cpc	r19, r1
    21be:	b1 f4       	brne	.+44     	; 0x21ec <main+0x2070>
					m2 = 0;
					u_outputByte1.bits_in_outputByte1.airKnife = 0;
    21c0:	80 91 1d 03 	lds	r24, 0x031D
    21c4:	87 7f       	andi	r24, 0xF7	; 247
    21c6:	80 93 1d 03 	sts	0x031D, r24
						if(print24 == 1){
    21ca:	4b 89       	ldd	r20, Y+19	; 0x13
    21cc:	5c 89       	ldd	r21, Y+20	; 0x14
    21ce:	41 30       	cpi	r20, 0x01	; 1
    21d0:	51 05       	cpc	r21, r1
    21d2:	11 f0       	breq	.+4      	; 0x21d8 <main+0x205c>
    21d4:	0c 94 10 1a 	jmp	0x3420	; 0x3420 <main+0x32a4>
						OrangutanLCD::clear();
    21d8:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("DRY AIR");
    21dc:	87 ed       	ldi	r24, 0xD7	; 215
    21de:	92 e0       	ldi	r25, 0x02	; 2
    21e0:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    21e4:	1c 8a       	std	Y+20, r1	; 0x14
    21e6:	1b 8a       	std	Y+19, r1	; 0x13
    21e8:	0c 94 10 1a 	jmp	0x3420	; 0x3420 <main+0x32a4>
						print24 = 0;
					}
				}
				if(state == 25){
    21ec:	8d 8d       	ldd	r24, Y+29	; 0x1d
    21ee:	9e 8d       	ldd	r25, Y+30	; 0x1e
    21f0:	49 97       	sbiw	r24, 0x19	; 25
    21f2:	61 f4       	brne	.+24     	; 0x220c <main+0x2090>
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    21f4:	80 91 1a 03 	lds	r24, 0x031A
    21f8:	8f 7e       	andi	r24, 0xEF	; 239
    21fa:	80 93 1a 03 	sts	0x031A, r24
    21fe:	71 e0       	ldi	r23, 0x01	; 1
    2200:	c7 2e       	mov	r12, r23
    2202:	d1 2c       	mov	r13, r1
    2204:	1e c0       	rjmp	.+60     	; 0x2242 <main+0x20c6>
    2206:	61 e0       	ldi	r22, 0x01	; 1
    2208:	c6 2e       	mov	r12, r22
    220a:	d1 2c       	mov	r13, r1
					m2 = 1;
				}
				if(state == 26){
    220c:	ed 8d       	ldd	r30, Y+29	; 0x1d
    220e:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2210:	7a 97       	sbiw	r30, 0x1a	; 26
    2212:	31 f4       	brne	.+12     	; 0x2220 <main+0x20a4>
					u_outputByte1.bits_in_outputByte1.airKnife = 1;
    2214:	80 91 1d 03 	lds	r24, 0x031D
    2218:	88 60       	ori	r24, 0x08	; 8
    221a:	80 93 1d 03 	sts	0x031D, r24
    221e:	3d c0       	rjmp	.+122    	; 0x229a <main+0x211e>
				}
				if(state == 27){
    2220:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2222:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2224:	2b 31       	cpi	r18, 0x1B	; 27
    2226:	31 05       	cpc	r19, r1
    2228:	61 f4       	brne	.+24     	; 0x2242 <main+0x20c6>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m5Drop = 1;
    222a:	80 91 1b 03 	lds	r24, 0x031B
    222e:	80 64       	ori	r24, 0x40	; 64
					u_motorByte1.bits_in_motorByte1.m5Dir = 0;
    2230:	8f 7d       	andi	r24, 0xDF	; 223
    2232:	80 93 1b 03 	sts	0x031B, r24
    2236:	cc 24       	eor	r12, r12
    2238:	dd 24       	eor	r13, r13
    223a:	51 e0       	ldi	r21, 0x01	; 1
    223c:	25 2e       	mov	r2, r21
    223e:	31 2c       	mov	r3, r1
    2240:	36 c0       	rjmp	.+108    	; 0x22ae <main+0x2132>
					m5 = 1;
				}
				if(state == 28){
    2242:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2244:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2246:	4c 31       	cpi	r20, 0x1C	; 28
    2248:	51 05       	cpc	r21, r1
    224a:	91 f4       	brne	.+36     	; 0x2270 <main+0x20f4>
					if(print28 == 1){
    224c:	89 89       	ldd	r24, Y+17	; 0x11
    224e:	9a 89       	ldd	r25, Y+18	; 0x12
    2250:	01 97       	sbiw	r24, 0x01	; 1
    2252:	41 f4       	brne	.+16     	; 0x2264 <main+0x20e8>
							OrangutanLCD::clear();
    2254:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("FINAL DRY");
    2258:	8f ed       	ldi	r24, 0xDF	; 223
    225a:	92 e0       	ldi	r25, 0x02	; 2
    225c:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    2260:	1a 8a       	std	Y+18, r1	; 0x12
    2262:	19 8a       	std	Y+17, r1	; 0x11
						print28 = 0;
						}
					u_outputByte1.bits_in_outputByte1.ptRaise = 0;
    2264:	80 91 1d 03 	lds	r24, 0x031D
    2268:	8d 7f       	andi	r24, 0xFD	; 253
    226a:	80 93 1d 03 	sts	0x031D, r24
    226e:	2d c0       	rjmp	.+90     	; 0x22ca <main+0x214e>
				}
				if(state == 29){
    2270:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2272:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2274:	ed 31       	cpi	r30, 0x1D	; 29
    2276:	f1 05       	cpc	r31, r1
    2278:	d9 f1       	breq	.+118    	; 0x22f0 <main+0x2174>
					m2 = 1;
				}
				if(state == 30){
    227a:	7e 97       	sbiw	r30, 0x1e	; 30
    227c:	71 f4       	brne	.+28     	; 0x229a <main+0x211e>
					m5 = 0;
						u_motorByte1.bits_in_motorByte1.m5Drop = 0;
    227e:	80 91 1b 03 	lds	r24, 0x031B
    2282:	8f 7b       	andi	r24, 0xBF	; 191
    2284:	80 93 1b 03 	sts	0x031B, r24
					u_outputByte1.bits_in_outputByte1.ptRaise = 1;
    2288:	80 91 1d 03 	lds	r24, 0x031D
    228c:	82 60       	ori	r24, 0x02	; 2
					u_outputByte1.bits_in_outputByte1.ptLower = 0;
    228e:	8b 7f       	andi	r24, 0xFB	; 251
    2290:	80 93 1d 03 	sts	0x031D, r24
    2294:	22 24       	eor	r2, r2
    2296:	33 24       	eor	r3, r3
    2298:	3b c0       	rjmp	.+118    	; 0x2310 <main+0x2194>
				}
				if(state == 31){
    229a:	2d 8d       	ldd	r18, Y+29	; 0x1d
    229c:	3e 8d       	ldd	r19, Y+30	; 0x1e
    229e:	2f 31       	cpi	r18, 0x1F	; 31
    22a0:	31 05       	cpc	r19, r1
    22a2:	29 f4       	brne	.+10     	; 0x22ae <main+0x2132>
					m2 = 0;
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    22a4:	80 91 1c 03 	lds	r24, 0x031C
    22a8:	87 7f       	andi	r24, 0xF7	; 247
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
    22aa:	80 61       	ori	r24, 0x10	; 16
    22ac:	1c c0       	rjmp	.+56     	; 0x22e6 <main+0x216a>
				}
				if(state == 32){
    22ae:	4d 8d       	ldd	r20, Y+29	; 0x1d
    22b0:	5e 8d       	ldd	r21, Y+30	; 0x1e
    22b2:	40 32       	cpi	r20, 0x20	; 32
    22b4:	51 05       	cpc	r21, r1
    22b6:	49 f4       	brne	.+18     	; 0x22ca <main+0x214e>
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;
    22b8:	80 91 1a 03 	lds	r24, 0x031A
    22bc:	8f 7e       	andi	r24, 0xEF	; 239
    22be:	80 93 1a 03 	sts	0x031A, r24
    22c2:	41 e0       	ldi	r20, 0x01	; 1
    22c4:	c4 2e       	mov	r12, r20
    22c6:	d1 2c       	mov	r13, r1
    22c8:	3f c0       	rjmp	.+126    	; 0x2348 <main+0x21cc>
					m2 = 1;
				}
				if(state == 33){
    22ca:	8d 8d       	ldd	r24, Y+29	; 0x1d
    22cc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    22ce:	81 97       	sbiw	r24, 0x21	; 33
    22d0:	91 f4       	brne	.+36     	; 0x22f6 <main+0x217a>
					m2 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    22d2:	80 91 1a 03 	lds	r24, 0x031A
    22d6:	8f 7d       	andi	r24, 0xDF	; 223
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
    22d8:	84 60       	ori	r24, 0x04	; 4
    22da:	80 93 1a 03 	sts	0x031A, r24
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    22de:	80 91 1c 03 	lds	r24, 0x031C
    22e2:	88 60       	ori	r24, 0x08	; 8
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    22e4:	8f 7e       	andi	r24, 0xEF	; 239
    22e6:	80 93 1c 03 	sts	0x031C, r24
    22ea:	cc 24       	eor	r12, r12
    22ec:	dd 24       	eor	r13, r13
    22ee:	2c c0       	rjmp	.+88     	; 0x2348 <main+0x21cc>
    22f0:	31 e0       	ldi	r19, 0x01	; 1
    22f2:	c3 2e       	mov	r12, r19
    22f4:	d1 2c       	mov	r13, r1
				}
				if(state == 34){
    22f6:	ed 8d       	ldd	r30, Y+29	; 0x1d
    22f8:	fe 8d       	ldd	r31, Y+30	; 0x1e
    22fa:	b2 97       	sbiw	r30, 0x22	; 34
    22fc:	49 f4       	brne	.+18     	; 0x2310 <main+0x2194>
					u_motorByte0.bits_in_motorByte0.m1Dir = 0;
    22fe:	80 91 1a 03 	lds	r24, 0x031A
    2302:	8d 7f       	andi	r24, 0xFD	; 253
    2304:	80 93 1a 03 	sts	0x031A, r24
    2308:	21 e0       	ldi	r18, 0x01	; 1
    230a:	82 2e       	mov	r8, r18
    230c:	91 2c       	mov	r9, r1
    230e:	1c c0       	rjmp	.+56     	; 0x2348 <main+0x21cc>
					m1 = 1;
					}
				if(state == 35){
    2310:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2312:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2314:	23 32       	cpi	r18, 0x23	; 35
    2316:	31 05       	cpc	r19, r1
    2318:	b9 f4       	brne	.+46     	; 0x2348 <main+0x21cc>
					m1 = 0;
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    231a:	80 91 1a 03 	lds	r24, 0x031A
    231e:	8b 7f       	andi	r24, 0xFB	; 251
    2320:	80 93 1a 03 	sts	0x031A, r24
					if(print35 == 1){
    2324:	4f 85       	ldd	r20, Y+15	; 0x0f
    2326:	58 89       	ldd	r21, Y+16	; 0x10
    2328:	41 30       	cpi	r20, 0x01	; 1
    232a:	51 05       	cpc	r21, r1
    232c:	19 f0       	breq	.+6      	; 0x2334 <main+0x21b8>
    232e:	88 24       	eor	r8, r8
    2330:	99 24       	eor	r9, r9
    2332:	0a c0       	rjmp	.+20     	; 0x2348 <main+0x21cc>
						OrangutanLCD::clear();
    2334:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("END OF CYCLE");
    2338:	89 ee       	ldi	r24, 0xE9	; 233
    233a:	92 e0       	ldi	r25, 0x02	; 2
    233c:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    2340:	88 24       	eor	r8, r8
    2342:	99 24       	eor	r9, r9
    2344:	18 8a       	std	Y+16, r1	; 0x10
    2346:	1f 86       	std	Y+15, r1	; 0x0f





				if( ((counter - counterRef) % (totallength1) ) < (steplength1) && m1)  //check if it is in the right period of the loop to send high
    2348:	c8 01       	movw	r24, r16
    234a:	8e 19       	sub	r24, r14
    234c:	9f 09       	sbc	r25, r15
    234e:	62 e0       	ldi	r22, 0x02	; 2
    2350:	70 e0       	ldi	r23, 0x00	; 0
    2352:	0e 94 35 20 	call	0x406a	; 0x406a <__divmodhi4>
    2356:	9c 01       	movw	r18, r24
    2358:	18 16       	cp	r1, r24
    235a:	19 06       	cpc	r1, r25
    235c:	4c f0       	brlt	.+18     	; 0x2370 <main+0x21f4>
    235e:	81 14       	cp	r8, r1
    2360:	91 04       	cpc	r9, r1
    2362:	31 f0       	breq	.+12     	; 0x2370 <main+0x21f4>
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 1; // set bit 0
    2364:	80 91 1a 03 	lds	r24, 0x031A
    2368:	81 60       	ori	r24, 0x01	; 1
    236a:	80 93 1a 03 	sts	0x031A, r24
    236e:	08 c0       	rjmp	.+16     	; 0x2380 <main+0x2204>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 0; // set bit 0
    2370:	80 91 1a 03 	lds	r24, 0x031A
    2374:	8e 7f       	andi	r24, 0xFE	; 254
    2376:	80 93 1a 03 	sts	0x031A, r24
				}

				if( ((counter - counterRef) % (totallength2) ) < (steplength2) && m2)
    237a:	12 16       	cp	r1, r18
    237c:	13 06       	cpc	r1, r19
    237e:	4c f0       	brlt	.+18     	; 0x2392 <main+0x2216>
    2380:	c1 14       	cp	r12, r1
    2382:	d1 04       	cpc	r13, r1
    2384:	31 f0       	breq	.+12     	; 0x2392 <main+0x2216>
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 1; // set bit 1
    2386:	80 91 1a 03 	lds	r24, 0x031A
    238a:	88 60       	ori	r24, 0x08	; 8
    238c:	80 93 1a 03 	sts	0x031A, r24
    2390:	08 c0       	rjmp	.+16     	; 0x23a2 <main+0x2226>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 0; // set bit 1
    2392:	80 91 1a 03 	lds	r24, 0x031A
    2396:	87 7f       	andi	r24, 0xF7	; 247
    2398:	80 93 1a 03 	sts	0x031A, r24
				}

				if( ((counter - counterRef) % (totallength3) ) < (steplength3) && m3)
    239c:	12 16       	cp	r1, r18
    239e:	13 06       	cpc	r1, r19
    23a0:	4c f0       	brlt	.+18     	; 0x23b4 <main+0x2238>
    23a2:	41 14       	cp	r4, r1
    23a4:	51 04       	cpc	r5, r1
    23a6:	31 f0       	breq	.+12     	; 0x23b4 <main+0x2238>
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 1; // set bit 1
    23a8:	80 91 1a 03 	lds	r24, 0x031A
    23ac:	80 64       	ori	r24, 0x40	; 64
    23ae:	80 93 1a 03 	sts	0x031A, r24
    23b2:	08 c0       	rjmp	.+16     	; 0x23c4 <main+0x2248>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 0; // set bit 1
    23b4:	80 91 1a 03 	lds	r24, 0x031A
    23b8:	8f 7b       	andi	r24, 0xBF	; 191
    23ba:	80 93 1a 03 	sts	0x031A, r24
				}

				if( ((counter - counterRef) % (totallength4) ) < (steplength4) && m4)
    23be:	12 16       	cp	r1, r18
    23c0:	13 06       	cpc	r1, r19
    23c2:	3c f0       	brlt	.+14     	; 0x23d2 <main+0x2256>
    23c4:	61 14       	cp	r6, r1
    23c6:	71 04       	cpc	r7, r1
    23c8:	21 f0       	breq	.+8      	; 0x23d2 <main+0x2256>
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 1; // set bit 1
    23ca:	80 91 1b 03 	lds	r24, 0x031B
    23ce:	82 60       	ori	r24, 0x02	; 2
    23d0:	03 c0       	rjmp	.+6      	; 0x23d8 <main+0x225c>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 0; // set bit 1
    23d2:	80 91 1b 03 	lds	r24, 0x031B
    23d6:	8d 7f       	andi	r24, 0xFD	; 253
    23d8:	80 93 1b 03 	sts	0x031B, r24
				}

				if( ((counter - counterRefFive) % (totallength5) ) < (steplength5) && m5)
    23dc:	c8 01       	movw	r24, r16
    23de:	ed 85       	ldd	r30, Y+13	; 0x0d
    23e0:	fe 85       	ldd	r31, Y+14	; 0x0e
    23e2:	8e 1b       	sub	r24, r30
    23e4:	9f 0b       	sbc	r25, r31
    23e6:	62 e0       	ldi	r22, 0x02	; 2
    23e8:	70 e0       	ldi	r23, 0x00	; 0
    23ea:	0e 94 35 20 	call	0x406a	; 0x406a <__divmodhi4>
    23ee:	18 16       	cp	r1, r24
    23f0:	19 06       	cpc	r1, r25
    23f2:	3c f0       	brlt	.+14     	; 0x2402 <main+0x2286>
    23f4:	21 14       	cp	r2, r1
    23f6:	31 04       	cpc	r3, r1
    23f8:	21 f0       	breq	.+8      	; 0x2402 <main+0x2286>
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 1; // set bit 1
    23fa:	80 91 1b 03 	lds	r24, 0x031B
    23fe:	80 61       	ori	r24, 0x10	; 16
    2400:	03 c0       	rjmp	.+6      	; 0x2408 <main+0x228c>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 0; // set bit 1
    2402:	80 91 1b 03 	lds	r24, 0x031B
    2406:	8f 7e       	andi	r24, 0xEF	; 239
    2408:	80 93 1b 03 	sts	0x031B, r24
				}

				i2c_start(I2C1+I2C_WRITE);
    240c:	80 e4       	ldi	r24, 0x40	; 64
    240e:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				i2c_write(0x2);									// write command byte
    2412:	82 e0       	ldi	r24, 0x02	; 2
    2414:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_write(u_motorByte0.motorByte0);                       // write first byte of output
    2418:	80 91 1a 03 	lds	r24, 0x031A
    241c:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
       	 		i2c_write(u_motorByte1.motorByte1);                       // write second byte of output
    2420:	80 91 1b 03 	lds	r24, 0x031B
    2424:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
       		 	i2c_stop();                            // set stop conditon = release bus
    2428:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>

				i2c_start(I2C2+I2C_WRITE);
    242c:	82 e4       	ldi	r24, 0x42	; 66
    242e:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				i2c_write(0x2);
    2432:	82 e0       	ldi	r24, 0x02	; 2
    2434:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_write(u_outputByte0.outputByte0);
    2438:	80 91 1c 03 	lds	r24, 0x031C
    243c:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_write(u_outputByte1.outputByte1);
    2440:	80 91 1d 03 	lds	r24, 0x031D
    2444:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>

				counter ++;
    2448:	0f 5f       	subi	r16, 0xFF	; 255
    244a:	1f 4f       	sbci	r17, 0xFF	; 255
    244c:	81 e0       	ldi	r24, 0x01	; 1
    244e:	90 e0       	ldi	r25, 0x00	; 0
    2450:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>


		if(OrangutanDigital::isInputHigh(IO_D1) && !OrangutanDigital::isInputHigh(IO_D2)){
			OrangutanLCD::gotoXY(0,1);
			OrangutanLCD::print("SECOND B");
			while(state != -1)
    2454:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2456:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2458:	2f 5f       	subi	r18, 0xFF	; 255
    245a:	3f 4f       	sbci	r19, 0xFF	; 255
    245c:	09 f0       	breq	.+2      	; 0x2460 <main+0x22e4>
    245e:	23 cb       	rjmp	.-2490   	; 0x1aa6 <main+0x192a>
				delay_ms(1);
   		 	}
		}


		if(!OrangutanDigital::isInputHigh(IO_D1) && OrangutanDigital::isInputHigh(IO_D2)){
    2460:	81 e0       	ldi	r24, 0x01	; 1
    2462:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    2466:	88 23       	and	r24, r24
    2468:	09 f0       	breq	.+2      	; 0x246c <main+0x22f0>
    246a:	f3 c5       	rjmp	.+3046   	; 0x3052 <main+0x2ed6>
    246c:	82 e0       	ldi	r24, 0x02	; 2
    246e:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    2472:	88 23       	and	r24, r24
    2474:	09 f4       	brne	.+2      	; 0x2478 <main+0x22fc>
    2476:	ed c5       	rjmp	.+3034   	; 0x3052 <main+0x2ed6>
			OrangutanLCD::gotoXY(0,1);
    2478:	80 e0       	ldi	r24, 0x00	; 0
    247a:	61 e0       	ldi	r22, 0x01	; 1
    247c:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
			OrangutanLCD::print("BOTH B");
    2480:	87 e0       	ldi	r24, 0x07	; 7
    2482:	93 e0       	ldi	r25, 0x03	; 3
    2484:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    2488:	de c5       	rjmp	.+3004   	; 0x3046 <main+0x2eca>
			while(state != -1)
			{
				i2c_start(I2C3+I2C_WRITE);						// first start condition (write)
    248a:	84 e4       	ldi	r24, 0x44	; 68
    248c:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				i2c_write(0x0);								// write command byte
    2490:	80 e0       	ldi	r24, 0x00	; 0
    2492:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_start(I2C3+I2C_READ);						// second start condition (read)
    2496:	85 e4       	ldi	r24, 0x45	; 69
    2498:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				u_inputByte0.inputByte0 = i2c_readAck();				// read first byte and send Ack, requesting more
    249c:	0e 94 a6 1a 	call	0x354c	; 0x354c <_Z11i2c_readAckv>
    24a0:	80 93 1e 03 	sts	0x031E, r24
   		     	u_inputByte1.inputByte1 = i2c_readNak();				// read second byte and send stop condition
    24a4:	0e 94 b0 1a 	call	0x3560	; 0x3560 <_Z11i2c_readNakv>
    24a8:	80 93 1f 03 	sts	0x031F, r24
  	 	     	i2c_stop();								// set stop conditon = release bus 		
    24ac:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>
				OrangutanLCD::gotoXY(0,1);
    24b0:	80 e0       	ldi	r24, 0x00	; 0
    24b2:	61 e0       	ldi	r22, 0x01	; 1
    24b4:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
				OrangutanLCD::print("STATE ");
    24b8:	8a eb       	ldi	r24, 0xBA	; 186
    24ba:	92 e0       	ldi	r25, 0x02	; 2
    24bc:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    24c0:	ed 8d       	ldd	r30, Y+29	; 0x1d
    24c2:	fe 8d       	ldd	r31, Y+30	; 0x1e
    24c4:	bf 01       	movw	r22, r30
    24c6:	88 27       	eor	r24, r24
    24c8:	77 fd       	sbrc	r23, 7
    24ca:	80 95       	com	r24
    24cc:	98 2f       	mov	r25, r24
    24ce:	0e 94 62 1d 	call	0x3ac4	; 0x3ac4 <_ZN12OrangutanLCD5printEl>
				OrangutanLCD::print(state);

				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
    24d2:	a1 14       	cp	r10, r1
    24d4:	b1 04       	cpc	r11, r1
    24d6:	09 f0       	breq	.+2      	; 0x24da <main+0x235e>
    24d8:	a7 c7       	rjmp	.+3918   	; 0x3428 <main+0x32ac>
    24da:	80 e0       	ldi	r24, 0x00	; 0
    24dc:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    24e0:	88 23       	and	r24, r24
    24e2:	a1 f1       	breq	.+104    	; 0x254c <main+0x23d0>
    24e4:	1e 83       	std	Y+6, r17	; 0x06
    24e6:	0d 83       	std	Y+5, r16	; 0x05
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
					if(counter - counterRefPush > 15){
    24e8:	c8 01       	movw	r24, r16
    24ea:	2d 81       	ldd	r18, Y+5	; 0x05
    24ec:	3e 81       	ldd	r19, Y+6	; 0x06
    24ee:	82 1b       	sub	r24, r18
    24f0:	93 0b       	sbc	r25, r19
    24f2:	40 97       	sbiw	r24, 0x10	; 16
    24f4:	4c f0       	brlt	.+18     	; 0x2508 <main+0x238c>
						if(!OrangutanDigital::isInputHigh(IO_D0)){
    24f6:	80 e0       	ldi	r24, 0x00	; 0
    24f8:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    24fc:	88 23       	and	r24, r24
    24fe:	09 f0       	breq	.+2      	; 0x2502 <main+0x2386>
    2500:	99 c7       	rjmp	.+3890   	; 0x3434 <main+0x32b8>
    2502:	1c 83       	std	Y+4, r17	; 0x04
    2504:	0b 83       	std	Y+3, r16	; 0x03
    2506:	0b c0       	rjmp	.+22     	; 0x251e <main+0x23a2>
							counterRefRel = counter;
							stateButton = 2;
						}
					}
					else if(!OrangutanDigital::isInputHigh(IO_D0)){
    2508:	80 e0       	ldi	r24, 0x00	; 0
    250a:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    250e:	88 23       	and	r24, r24
    2510:	09 f0       	breq	.+2      	; 0x2514 <main+0x2398>
    2512:	90 c7       	rjmp	.+3872   	; 0x3434 <main+0x32b8>
    2514:	15 c0       	rjmp	.+42     	; 0x2540 <main+0x23c4>
						stateButton = 0;
					}
				}
				if(stateButton == 2){
    2516:	32 e0       	ldi	r19, 0x02	; 2
    2518:	a3 16       	cp	r10, r19
    251a:	b1 04       	cpc	r11, r1
    251c:	b9 f4       	brne	.+46     	; 0x254c <main+0x23d0>
					if(OrangutanDigital::isInputHigh(IO_D0)){
    251e:	80 e0       	ldi	r24, 0x00	; 0
    2520:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    2524:	88 23       	and	r24, r24
    2526:	19 f0       	breq	.+6      	; 0x252e <main+0x23b2>
    2528:	1e 83       	std	Y+6, r17	; 0x06
    252a:	0d 83       	std	Y+5, r16	; 0x05
    252c:	83 c7       	rjmp	.+3846   	; 0x3434 <main+0x32b8>
						stateButton = 1;
						counterRefPush = counter;
					}
					else if(counter - counterRefRel > 15){
    252e:	c8 01       	movw	r24, r16
    2530:	4b 81       	ldd	r20, Y+3	; 0x03
    2532:	5c 81       	ldd	r21, Y+4	; 0x04
    2534:	84 1b       	sub	r24, r20
    2536:	95 0b       	sbc	r25, r21
    2538:	40 97       	sbiw	r24, 0x10	; 16
    253a:	2c f0       	brlt	.+10     	; 0x2546 <main+0x23ca>
    253c:	18 86       	std	Y+8, r1	; 0x08
    253e:	1f 82       	std	Y+7, r1	; 0x07
    2540:	aa 24       	eor	r10, r10
    2542:	bb 24       	eor	r11, r11
    2544:	03 c0       	rjmp	.+6      	; 0x254c <main+0x23d0>
    2546:	92 e0       	ldi	r25, 0x02	; 2
    2548:	a9 2e       	mov	r10, r25
    254a:	b1 2c       	mov	r11, r1
					}
				}

				//state conversions
	
				if(state == 0 && button == 0){
    254c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    254e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2550:	89 2b       	or	r24, r25
    2552:	59 f4       	brne	.+22     	; 0x256a <main+0x23ee>
    2554:	ef 81       	ldd	r30, Y+7	; 0x07
    2556:	f8 85       	ldd	r31, Y+8	; 0x08
    2558:	ef 2b       	or	r30, r31
    255a:	09 f0       	breq	.+2      	; 0x255e <main+0x23e2>
    255c:	4a c0       	rjmp	.+148    	; 0x25f2 <main+0x2476>
    255e:	78 01       	movw	r14, r16
    2560:	21 e0       	ldi	r18, 0x01	; 1
    2562:	30 e0       	ldi	r19, 0x00	; 0
    2564:	38 87       	std	Y+8, r19	; 0x08
    2566:	2f 83       	std	Y+7, r18	; 0x07
    2568:	05 c0       	rjmp	.+10     	; 0x2574 <main+0x23f8>
					button = 1;
					state = 1;
					counterRef = counter;
				}
				if(state == 1 && counter - counterRef > totallength1*m1LoadPlate/*&& u_inputByte0.bits_in_inputByte0.plate == 0*/){
    256a:	4d 8d       	ldd	r20, Y+29	; 0x1d
    256c:	5e 8d       	ldd	r21, Y+30	; 0x1e
    256e:	41 30       	cpi	r20, 0x01	; 1
    2570:	51 05       	cpc	r21, r1
    2572:	49 f4       	brne	.+18     	; 0x2586 <main+0x240a>
    2574:	c8 01       	movw	r24, r16
    2576:	8e 19       	sub	r24, r14
    2578:	9f 09       	sbc	r25, r15
    257a:	81 5a       	subi	r24, 0xA1	; 161
    257c:	9f 40       	sbci	r25, 0x0F	; 15
    257e:	0c f4       	brge	.+2      	; 0x2582 <main+0x2406>
    2580:	45 c0       	rjmp	.+138    	; 0x260c <main+0x2490>
    2582:	78 01       	movw	r14, r16
    2584:	04 c0       	rjmp	.+8      	; 0x258e <main+0x2412>
						state = 2;
					counterRef = counter;
				}
				if(state == 2 && counter - counterRef > pWait){
    2586:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2588:	9e 8d       	ldd	r25, Y+30	; 0x1e
    258a:	02 97       	sbiw	r24, 0x02	; 2
    258c:	49 f4       	brne	.+18     	; 0x25a0 <main+0x2424>
    258e:	c8 01       	movw	r24, r16
    2590:	8e 19       	sub	r24, r14
    2592:	9f 09       	sbc	r25, r15
    2594:	85 36       	cpi	r24, 0x65	; 101
    2596:	91 05       	cpc	r25, r1
    2598:	0c f4       	brge	.+2      	; 0x259c <main+0x2420>
    259a:	4a c0       	rjmp	.+148    	; 0x2630 <main+0x24b4>
    259c:	78 01       	movw	r14, r16
    259e:	04 c0       	rjmp	.+8      	; 0x25a8 <main+0x242c>
					state = 3;
					counterRef = counter;
				}
				if(state == 3 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
    25a0:	ed 8d       	ldd	r30, Y+29	; 0x1d
    25a2:	fe 8d       	ldd	r31, Y+30	; 0x1e
    25a4:	33 97       	sbiw	r30, 0x03	; 3
    25a6:	49 f4       	brne	.+18     	; 0x25ba <main+0x243e>
    25a8:	c8 01       	movw	r24, r16
    25aa:	8e 19       	sub	r24, r14
    25ac:	9f 09       	sbc	r25, r15
    25ae:	81 5a       	subi	r24, 0xA1	; 161
    25b0:	9f 40       	sbci	r25, 0x0F	; 15
    25b2:	0c f4       	brge	.+2      	; 0x25b6 <main+0x243a>
    25b4:	4e c0       	rjmp	.+156    	; 0x2652 <main+0x24d6>
    25b6:	78 01       	movw	r14, r16
    25b8:	05 c0       	rjmp	.+10     	; 0x25c4 <main+0x2448>
					state = 4;
					counterRef = counter;
				}
				if(state == 4 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
    25ba:	2d 8d       	ldd	r18, Y+29	; 0x1d
    25bc:	3e 8d       	ldd	r19, Y+30	; 0x1e
    25be:	24 30       	cpi	r18, 0x04	; 4
    25c0:	31 05       	cpc	r19, r1
    25c2:	49 f4       	brne	.+18     	; 0x25d6 <main+0x245a>
    25c4:	c8 01       	movw	r24, r16
    25c6:	8e 19       	sub	r24, r14
    25c8:	9f 09       	sbc	r25, r15
    25ca:	89 5e       	subi	r24, 0xE9	; 233
    25cc:	93 40       	sbci	r25, 0x03	; 3
    25ce:	0c f4       	brge	.+2      	; 0x25d2 <main+0x2456>
    25d0:	52 c0       	rjmp	.+164    	; 0x2676 <main+0x24fa>
    25d2:	78 01       	movw	r14, r16
    25d4:	05 c0       	rjmp	.+10     	; 0x25e0 <main+0x2464>
					state = 5;
					counterRef = counter;
				}
				if(state == 5 && counter - counterRef > pWait){
    25d6:	4d 8d       	ldd	r20, Y+29	; 0x1d
    25d8:	5e 8d       	ldd	r21, Y+30	; 0x1e
    25da:	45 30       	cpi	r20, 0x05	; 5
    25dc:	51 05       	cpc	r21, r1
    25de:	49 f4       	brne	.+18     	; 0x25f2 <main+0x2476>
    25e0:	c8 01       	movw	r24, r16
    25e2:	8e 19       	sub	r24, r14
    25e4:	9f 09       	sbc	r25, r15
    25e6:	85 36       	cpi	r24, 0x65	; 101
    25e8:	91 05       	cpc	r25, r1
    25ea:	0c f4       	brge	.+2      	; 0x25ee <main+0x2472>
    25ec:	53 c0       	rjmp	.+166    	; 0x2694 <main+0x2518>
    25ee:	78 01       	movw	r14, r16
    25f0:	04 c0       	rjmp	.+8      	; 0x25fa <main+0x247e>
						state = 6;
					counterRef = counter;
				}
				if(state == 6 && counter - counterRef > totallength2*m2Brush1Step /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush1 == 0*/){
    25f2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    25f4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    25f6:	06 97       	sbiw	r24, 0x06	; 6
    25f8:	69 f4       	brne	.+26     	; 0x2614 <main+0x2498>
    25fa:	c8 01       	movw	r24, r16
    25fc:	8e 19       	sub	r24, r14
    25fe:	9f 09       	sbc	r25, r15
    2600:	81 5a       	subi	r24, 0xA1	; 161
    2602:	9f 40       	sbci	r25, 0x0F	; 15
    2604:	0c f4       	brge	.+2      	; 0x2608 <main+0x248c>
    2606:	58 c0       	rjmp	.+176    	; 0x26b8 <main+0x253c>
    2608:	78 01       	movw	r14, r16
    260a:	09 c0       	rjmp	.+18     	; 0x261e <main+0x24a2>
    260c:	21 e0       	ldi	r18, 0x01	; 1
    260e:	30 e0       	ldi	r19, 0x00	; 0
    2610:	3e 8f       	std	Y+30, r19	; 0x1e
    2612:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 7;
					counterRef = counter;
				}
				if(state == 7 && counter - counterRef > mWait){
    2614:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2616:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2618:	47 30       	cpi	r20, 0x07	; 7
    261a:	51 05       	cpc	r21, r1
    261c:	69 f4       	brne	.+26     	; 0x2638 <main+0x24bc>
    261e:	c8 01       	movw	r24, r16
    2620:	8e 19       	sub	r24, r14
    2622:	9f 09       	sbc	r25, r15
    2624:	85 36       	cpi	r24, 0x65	; 101
    2626:	91 05       	cpc	r25, r1
    2628:	0c f4       	brge	.+2      	; 0x262c <main+0x24b0>
    262a:	57 c0       	rjmp	.+174    	; 0x26da <main+0x255e>
    262c:	78 01       	movw	r14, r16
    262e:	08 c0       	rjmp	.+16     	; 0x2640 <main+0x24c4>
    2630:	82 e0       	ldi	r24, 0x02	; 2
    2632:	90 e0       	ldi	r25, 0x00	; 0
    2634:	9e 8f       	std	Y+30, r25	; 0x1e
    2636:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 8;
					counterRef = counter;
				}
				if(state == 8 && counter - counterRef > pWait){
    2638:	ed 8d       	ldd	r30, Y+29	; 0x1d
    263a:	fe 8d       	ldd	r31, Y+30	; 0x1e
    263c:	38 97       	sbiw	r30, 0x08	; 8
    263e:	69 f4       	brne	.+26     	; 0x265a <main+0x24de>
    2640:	c8 01       	movw	r24, r16
    2642:	8e 19       	sub	r24, r14
    2644:	9f 09       	sbc	r25, r15
    2646:	85 36       	cpi	r24, 0x65	; 101
    2648:	91 05       	cpc	r25, r1
    264a:	0c f4       	brge	.+2      	; 0x264e <main+0x24d2>
    264c:	56 c0       	rjmp	.+172    	; 0x26fa <main+0x257e>
    264e:	78 01       	movw	r14, r16
    2650:	09 c0       	rjmp	.+18     	; 0x2664 <main+0x24e8>
    2652:	23 e0       	ldi	r18, 0x03	; 3
    2654:	30 e0       	ldi	r19, 0x00	; 0
    2656:	3e 8f       	std	Y+30, r19	; 0x1e
    2658:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 9;
						counterRef = counter;
				}
					if(state == 9 && counter - counterRef > totallength2*m2HalfPlate){
    265a:	4d 8d       	ldd	r20, Y+29	; 0x1d
    265c:	5e 8d       	ldd	r21, Y+30	; 0x1e
    265e:	49 30       	cpi	r20, 0x09	; 9
    2660:	51 05       	cpc	r21, r1
    2662:	69 f4       	brne	.+26     	; 0x267e <main+0x2502>
    2664:	c8 01       	movw	r24, r16
    2666:	8e 19       	sub	r24, r14
    2668:	9f 09       	sbc	r25, r15
    266a:	81 5a       	subi	r24, 0xA1	; 161
    266c:	9f 40       	sbci	r25, 0x0F	; 15
    266e:	0c f4       	brge	.+2      	; 0x2672 <main+0x24f6>
    2670:	55 c0       	rjmp	.+170    	; 0x271c <main+0x25a0>
    2672:	78 01       	movw	r14, r16
    2674:	08 c0       	rjmp	.+16     	; 0x2686 <main+0x250a>
    2676:	84 e0       	ldi	r24, 0x04	; 4
    2678:	90 e0       	ldi	r25, 0x00	; 0
    267a:	9e 8f       	std	Y+30, r25	; 0x1e
    267c:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 10;
					counterRef = counter;
				}
				if(state == 10 && counter - counterRef > pWait){
    267e:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2680:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2682:	3a 97       	sbiw	r30, 0x0a	; 10
    2684:	59 f4       	brne	.+22     	; 0x269c <main+0x2520>
    2686:	c8 01       	movw	r24, r16
    2688:	8e 19       	sub	r24, r14
    268a:	9f 09       	sbc	r25, r15
    268c:	85 36       	cpi	r24, 0x65	; 101
    268e:	91 05       	cpc	r25, r1
    2690:	54 f4       	brge	.+20     	; 0x26a6 <main+0x252a>
    2692:	56 c0       	rjmp	.+172    	; 0x2740 <main+0x25c4>
    2694:	25 e0       	ldi	r18, 0x05	; 5
    2696:	30 e0       	ldi	r19, 0x00	; 0
    2698:	3e 8f       	std	Y+30, r19	; 0x1e
    269a:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 11;
				}
				if(state == 11 && counter - counterRef > totallength2*m2HalfPlate /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush1 == 0*/){
    269c:	4d 8d       	ldd	r20, Y+29	; 0x1d
    269e:	5e 8d       	ldd	r21, Y+30	; 0x1e
    26a0:	4b 30       	cpi	r20, 0x0B	; 11
    26a2:	51 05       	cpc	r21, r1
    26a4:	69 f4       	brne	.+26     	; 0x26c0 <main+0x2544>
    26a6:	c8 01       	movw	r24, r16
    26a8:	8e 19       	sub	r24, r14
    26aa:	9f 09       	sbc	r25, r15
    26ac:	81 5a       	subi	r24, 0xA1	; 161
    26ae:	9f 40       	sbci	r25, 0x0F	; 15
    26b0:	0c f4       	brge	.+2      	; 0x26b4 <main+0x2538>
    26b2:	57 c0       	rjmp	.+174    	; 0x2762 <main+0x25e6>
    26b4:	78 01       	movw	r14, r16
    26b6:	08 c0       	rjmp	.+16     	; 0x26c8 <main+0x254c>
    26b8:	86 e0       	ldi	r24, 0x06	; 6
    26ba:	90 e0       	ldi	r25, 0x00	; 0
    26bc:	9e 8f       	std	Y+30, r25	; 0x1e
    26be:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 12;
					counterRef = counter;
				}
				if(state == 12 && counter - counterRef > pWait){
    26c0:	ed 8d       	ldd	r30, Y+29	; 0x1d
    26c2:	fe 8d       	ldd	r31, Y+30	; 0x1e
    26c4:	3c 97       	sbiw	r30, 0x0c	; 12
    26c6:	69 f4       	brne	.+26     	; 0x26e2 <main+0x2566>
    26c8:	c8 01       	movw	r24, r16
    26ca:	8e 19       	sub	r24, r14
    26cc:	9f 09       	sbc	r25, r15
    26ce:	85 36       	cpi	r24, 0x65	; 101
    26d0:	91 05       	cpc	r25, r1
    26d2:	0c f4       	brge	.+2      	; 0x26d6 <main+0x255a>
    26d4:	58 c0       	rjmp	.+176    	; 0x2786 <main+0x260a>
    26d6:	78 01       	movw	r14, r16
    26d8:	09 c0       	rjmp	.+18     	; 0x26ec <main+0x2570>
    26da:	27 e0       	ldi	r18, 0x07	; 7
    26dc:	30 e0       	ldi	r19, 0x00	; 0
    26de:	3e 8f       	std	Y+30, r19	; 0x1e
    26e0:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 13;
					counterRef = counter;
				}
				if(state == 13 && counter - counterRef > totallength2*m2HalfPlate){
    26e2:	4d 8d       	ldd	r20, Y+29	; 0x1d
    26e4:	5e 8d       	ldd	r21, Y+30	; 0x1e
    26e6:	4d 30       	cpi	r20, 0x0D	; 13
    26e8:	51 05       	cpc	r21, r1
    26ea:	59 f4       	brne	.+22     	; 0x2702 <main+0x2586>
    26ec:	c8 01       	movw	r24, r16
    26ee:	8e 19       	sub	r24, r14
    26f0:	9f 09       	sbc	r25, r15
    26f2:	81 5a       	subi	r24, 0xA1	; 161
    26f4:	9f 40       	sbci	r25, 0x0F	; 15
    26f6:	4c f4       	brge	.+18     	; 0x270a <main+0x258e>
    26f8:	57 c0       	rjmp	.+174    	; 0x27a8 <main+0x262c>
    26fa:	88 e0       	ldi	r24, 0x08	; 8
    26fc:	90 e0       	ldi	r25, 0x00	; 0
    26fe:	9e 8f       	std	Y+30, r25	; 0x1e
    2700:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 14;
					counterRef14 = counter;
					}
				if(state == 14 && counter - counterRef > totallength2*m2Brush2Step /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush2*/){
    2702:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2704:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2706:	3e 97       	sbiw	r30, 0x0e	; 14
    2708:	69 f4       	brne	.+26     	; 0x2724 <main+0x25a8>
    270a:	c8 01       	movw	r24, r16
    270c:	8e 19       	sub	r24, r14
    270e:	9f 09       	sbc	r25, r15
    2710:	81 5a       	subi	r24, 0xA1	; 161
    2712:	9f 40       	sbci	r25, 0x0F	; 15
    2714:	0c f4       	brge	.+2      	; 0x2718 <main+0x259c>
    2716:	5a c0       	rjmp	.+180    	; 0x27cc <main+0x2650>
    2718:	78 01       	movw	r14, r16
    271a:	09 c0       	rjmp	.+18     	; 0x272e <main+0x25b2>
    271c:	29 e0       	ldi	r18, 0x09	; 9
    271e:	30 e0       	ldi	r19, 0x00	; 0
    2720:	3e 8f       	std	Y+30, r19	; 0x1e
    2722:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 15;
					counterRef = counter;
				}
				if(state == 15 && counter - counterRef > mWait){
    2724:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2726:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2728:	4f 30       	cpi	r20, 0x0F	; 15
    272a:	51 05       	cpc	r21, r1
    272c:	69 f4       	brne	.+26     	; 0x2748 <main+0x25cc>
    272e:	c8 01       	movw	r24, r16
    2730:	8e 19       	sub	r24, r14
    2732:	9f 09       	sbc	r25, r15
    2734:	85 36       	cpi	r24, 0x65	; 101
    2736:	91 05       	cpc	r25, r1
    2738:	0c f4       	brge	.+2      	; 0x273c <main+0x25c0>
    273a:	59 c0       	rjmp	.+178    	; 0x27ee <main+0x2672>
    273c:	78 01       	movw	r14, r16
    273e:	08 c0       	rjmp	.+16     	; 0x2750 <main+0x25d4>
    2740:	8a e0       	ldi	r24, 0x0A	; 10
    2742:	90 e0       	ldi	r25, 0x00	; 0
    2744:	9e 8f       	std	Y+30, r25	; 0x1e
    2746:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 16;
					counterRef = counter;
				}
				if(state == 16 && counter - counterRef > pWait){
    2748:	ed 8d       	ldd	r30, Y+29	; 0x1d
    274a:	fe 8d       	ldd	r31, Y+30	; 0x1e
    274c:	70 97       	sbiw	r30, 0x10	; 16
    274e:	69 f4       	brne	.+26     	; 0x276a <main+0x25ee>
    2750:	c8 01       	movw	r24, r16
    2752:	8e 19       	sub	r24, r14
    2754:	9f 09       	sbc	r25, r15
    2756:	85 36       	cpi	r24, 0x65	; 101
    2758:	91 05       	cpc	r25, r1
    275a:	0c f4       	brge	.+2      	; 0x275e <main+0x25e2>
    275c:	5a c0       	rjmp	.+180    	; 0x2812 <main+0x2696>
    275e:	78 01       	movw	r14, r16
    2760:	09 c0       	rjmp	.+18     	; 0x2774 <main+0x25f8>
    2762:	2b e0       	ldi	r18, 0x0B	; 11
    2764:	30 e0       	ldi	r19, 0x00	; 0
    2766:	3e 8f       	std	Y+30, r19	; 0x1e
    2768:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 17;
					counterRef = counter;
				}
				if(state == 17 && counter - counterRef > totallength2*m2HalfPlate){
    276a:	4d 8d       	ldd	r20, Y+29	; 0x1d
    276c:	5e 8d       	ldd	r21, Y+30	; 0x1e
    276e:	41 31       	cpi	r20, 0x11	; 17
    2770:	51 05       	cpc	r21, r1
    2772:	69 f4       	brne	.+26     	; 0x278e <main+0x2612>
    2774:	c8 01       	movw	r24, r16
    2776:	8e 19       	sub	r24, r14
    2778:	9f 09       	sbc	r25, r15
    277a:	81 5a       	subi	r24, 0xA1	; 161
    277c:	9f 40       	sbci	r25, 0x0F	; 15
    277e:	0c f4       	brge	.+2      	; 0x2782 <main+0x2606>
    2780:	59 c0       	rjmp	.+178    	; 0x2834 <main+0x26b8>
    2782:	78 01       	movw	r14, r16
    2784:	08 c0       	rjmp	.+16     	; 0x2796 <main+0x261a>
    2786:	8c e0       	ldi	r24, 0x0C	; 12
    2788:	90 e0       	ldi	r25, 0x00	; 0
    278a:	9e 8f       	std	Y+30, r25	; 0x1e
    278c:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 18;
					counterRef = counter;
				}
				if(state == 18 && counter - counterRef > pWait){
    278e:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2790:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2792:	72 97       	sbiw	r30, 0x12	; 18
    2794:	69 f4       	brne	.+26     	; 0x27b0 <main+0x2634>
    2796:	c8 01       	movw	r24, r16
    2798:	8e 19       	sub	r24, r14
    279a:	9f 09       	sbc	r25, r15
    279c:	85 36       	cpi	r24, 0x65	; 101
    279e:	91 05       	cpc	r25, r1
    27a0:	0c f4       	brge	.+2      	; 0x27a4 <main+0x2628>
    27a2:	5a c0       	rjmp	.+180    	; 0x2858 <main+0x26dc>
    27a4:	78 01       	movw	r14, r16
    27a6:	09 c0       	rjmp	.+18     	; 0x27ba <main+0x263e>
    27a8:	2d e0       	ldi	r18, 0x0D	; 13
    27aa:	30 e0       	ldi	r19, 0x00	; 0
    27ac:	3e 8f       	std	Y+30, r19	; 0x1e
    27ae:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 19;
					counterRef = counter;
				}
				if(state == 19 && counter - counterRef > totallength2*m2HalfPlate /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush2 == 0*/){
    27b0:	4d 8d       	ldd	r20, Y+29	; 0x1d
    27b2:	5e 8d       	ldd	r21, Y+30	; 0x1e
    27b4:	43 31       	cpi	r20, 0x13	; 19
    27b6:	51 05       	cpc	r21, r1
    27b8:	69 f4       	brne	.+26     	; 0x27d4 <main+0x2658>
    27ba:	c8 01       	movw	r24, r16
    27bc:	8e 19       	sub	r24, r14
    27be:	9f 09       	sbc	r25, r15
    27c0:	81 5a       	subi	r24, 0xA1	; 161
    27c2:	9f 40       	sbci	r25, 0x0F	; 15
    27c4:	0c f4       	brge	.+2      	; 0x27c8 <main+0x264c>
    27c6:	59 c0       	rjmp	.+178    	; 0x287a <main+0x26fe>
    27c8:	78 01       	movw	r14, r16
    27ca:	08 c0       	rjmp	.+16     	; 0x27dc <main+0x2660>
    27cc:	8e e0       	ldi	r24, 0x0E	; 14
    27ce:	90 e0       	ldi	r25, 0x00	; 0
    27d0:	9e 8f       	std	Y+30, r25	; 0x1e
    27d2:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 20;
					counterRef = counter;
				}
				if(state == 20 && counter - counterRef > pWait){
    27d4:	ed 8d       	ldd	r30, Y+29	; 0x1d
    27d6:	fe 8d       	ldd	r31, Y+30	; 0x1e
    27d8:	74 97       	sbiw	r30, 0x14	; 20
    27da:	69 f4       	brne	.+26     	; 0x27f6 <main+0x267a>
    27dc:	c8 01       	movw	r24, r16
    27de:	8e 19       	sub	r24, r14
    27e0:	9f 09       	sbc	r25, r15
    27e2:	85 36       	cpi	r24, 0x65	; 101
    27e4:	91 05       	cpc	r25, r1
    27e6:	0c f4       	brge	.+2      	; 0x27ea <main+0x266e>
    27e8:	58 c0       	rjmp	.+176    	; 0x289a <main+0x271e>
    27ea:	78 01       	movw	r14, r16
    27ec:	09 c0       	rjmp	.+18     	; 0x2800 <main+0x2684>
    27ee:	2f e0       	ldi	r18, 0x0F	; 15
    27f0:	30 e0       	ldi	r19, 0x00	; 0
    27f2:	3e 8f       	std	Y+30, r19	; 0x1e
    27f4:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 21;
					counterRef = counter;
				}
				if(state == 21 && counter - counterRef > totallength2*m2HalfPlate){
    27f6:	4d 8d       	ldd	r20, Y+29	; 0x1d
    27f8:	5e 8d       	ldd	r21, Y+30	; 0x1e
    27fa:	45 31       	cpi	r20, 0x15	; 21
    27fc:	51 05       	cpc	r21, r1
    27fe:	69 f4       	brne	.+26     	; 0x281a <main+0x269e>
    2800:	c8 01       	movw	r24, r16
    2802:	8e 19       	sub	r24, r14
    2804:	9f 09       	sbc	r25, r15
    2806:	81 5a       	subi	r24, 0xA1	; 161
    2808:	9f 40       	sbci	r25, 0x0F	; 15
    280a:	0c f4       	brge	.+2      	; 0x280e <main+0x2692>
    280c:	58 c0       	rjmp	.+176    	; 0x28be <main+0x2742>
    280e:	78 01       	movw	r14, r16
    2810:	08 c0       	rjmp	.+16     	; 0x2822 <main+0x26a6>
    2812:	80 e1       	ldi	r24, 0x10	; 16
    2814:	90 e0       	ldi	r25, 0x00	; 0
    2816:	9e 8f       	std	Y+30, r25	; 0x1e
    2818:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 22;
					counterRef = counter;
				}
				if(state == 22 && counter - counterRef > pWait){
    281a:	ed 8d       	ldd	r30, Y+29	; 0x1d
    281c:	fe 8d       	ldd	r31, Y+30	; 0x1e
    281e:	76 97       	sbiw	r30, 0x16	; 22
    2820:	69 f4       	brne	.+26     	; 0x283c <main+0x26c0>
    2822:	c8 01       	movw	r24, r16
    2824:	8e 19       	sub	r24, r14
    2826:	9f 09       	sbc	r25, r15
    2828:	85 36       	cpi	r24, 0x65	; 101
    282a:	91 05       	cpc	r25, r1
    282c:	0c f4       	brge	.+2      	; 0x2830 <main+0x26b4>
    282e:	5b c0       	rjmp	.+182    	; 0x28e6 <main+0x276a>
    2830:	78 01       	movw	r14, r16
    2832:	09 c0       	rjmp	.+18     	; 0x2846 <main+0x26ca>
    2834:	21 e1       	ldi	r18, 0x11	; 17
    2836:	30 e0       	ldi	r19, 0x00	; 0
    2838:	3e 8f       	std	Y+30, r19	; 0x1e
    283a:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 23;
					counterRef = counter;
				}
				if(state == 23 && counter - counterRef > totallength2*m2Dry1Step /*&& u_inputByte0.bits_in_inputByte0.fixtureDry1 == 0*/){
    283c:	4d 8d       	ldd	r20, Y+29	; 0x1d
    283e:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2840:	47 31       	cpi	r20, 0x17	; 23
    2842:	51 05       	cpc	r21, r1
    2844:	69 f4       	brne	.+26     	; 0x2860 <main+0x26e4>
    2846:	c8 01       	movw	r24, r16
    2848:	8e 19       	sub	r24, r14
    284a:	9f 09       	sbc	r25, r15
    284c:	81 5a       	subi	r24, 0xA1	; 161
    284e:	9f 40       	sbci	r25, 0x0F	; 15
    2850:	0c f4       	brge	.+2      	; 0x2854 <main+0x26d8>
    2852:	5b c0       	rjmp	.+182    	; 0x290a <main+0x278e>
    2854:	78 01       	movw	r14, r16
    2856:	08 c0       	rjmp	.+16     	; 0x2868 <main+0x26ec>
    2858:	82 e1       	ldi	r24, 0x12	; 18
    285a:	90 e0       	ldi	r25, 0x00	; 0
    285c:	9e 8f       	std	Y+30, r25	; 0x1e
    285e:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 24;
					counterRef = counter;
				}
				if(state == 24 && counter - counterRef > kWait){
    2860:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2862:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2864:	78 97       	sbiw	r30, 0x18	; 24
    2866:	69 f4       	brne	.+26     	; 0x2882 <main+0x2706>
    2868:	c8 01       	movw	r24, r16
    286a:	8e 19       	sub	r24, r14
    286c:	9f 09       	sbc	r25, r15
    286e:	85 36       	cpi	r24, 0x65	; 101
    2870:	91 05       	cpc	r25, r1
    2872:	0c f4       	brge	.+2      	; 0x2876 <main+0x26fa>
    2874:	59 c0       	rjmp	.+178    	; 0x2928 <main+0x27ac>
    2876:	78 01       	movw	r14, r16
    2878:	09 c0       	rjmp	.+18     	; 0x288c <main+0x2710>
    287a:	23 e1       	ldi	r18, 0x13	; 19
    287c:	30 e0       	ldi	r19, 0x00	; 0
    287e:	3e 8f       	std	Y+30, r19	; 0x1e
    2880:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 25;
					counterRef = counter;
				}
				if(state == 25 && counter - counterRef > totallength2*m2WholePlate){
    2882:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2884:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2886:	49 31       	cpi	r20, 0x19	; 25
    2888:	51 05       	cpc	r21, r1
    288a:	59 f4       	brne	.+22     	; 0x28a2 <main+0x2726>
    288c:	c8 01       	movw	r24, r16
    288e:	8e 19       	sub	r24, r14
    2890:	9f 09       	sbc	r25, r15
    2892:	81 5a       	subi	r24, 0xA1	; 161
    2894:	9f 40       	sbci	r25, 0x0F	; 15
    2896:	4c f4       	brge	.+18     	; 0x28aa <main+0x272e>
    2898:	59 c0       	rjmp	.+178    	; 0x294c <main+0x27d0>
    289a:	84 e1       	ldi	r24, 0x14	; 20
    289c:	90 e0       	ldi	r25, 0x00	; 0
    289e:	9e 8f       	std	Y+30, r25	; 0x1e
    28a0:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 26;
					counterRef26 = counter;
				}
				if(state == 26 && counter - counterRef > totallength2*m2Dry2Step /*&& u_inputByte0.bits_in_inputByte0.fixtureDry2 == 0*/){
    28a2:	ed 8d       	ldd	r30, Y+29	; 0x1d
    28a4:	fe 8d       	ldd	r31, Y+30	; 0x1e
    28a6:	7a 97       	sbiw	r30, 0x1a	; 26
    28a8:	71 f4       	brne	.+28     	; 0x28c6 <main+0x274a>
    28aa:	c8 01       	movw	r24, r16
    28ac:	8e 19       	sub	r24, r14
    28ae:	9f 09       	sbc	r25, r15
    28b0:	81 5a       	subi	r24, 0xA1	; 161
    28b2:	9f 40       	sbci	r25, 0x0F	; 15
    28b4:	0c f4       	brge	.+2      	; 0x28b8 <main+0x273c>
    28b6:	5b c0       	rjmp	.+182    	; 0x296e <main+0x27f2>
    28b8:	1e 87       	std	Y+14, r17	; 0x0e
    28ba:	0d 87       	std	Y+13, r16	; 0x0d
    28bc:	09 c0       	rjmp	.+18     	; 0x28d0 <main+0x2754>
    28be:	25 e1       	ldi	r18, 0x15	; 21
    28c0:	30 e0       	ldi	r19, 0x00	; 0
    28c2:	3e 8f       	std	Y+30, r19	; 0x1e
    28c4:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 27;
					counterRefFive = counter;
				}
				if(state == 27 && counter - counterRefFive > mWait){
    28c6:	4d 8d       	ldd	r20, Y+29	; 0x1d
    28c8:	5e 8d       	ldd	r21, Y+30	; 0x1e
    28ca:	4b 31       	cpi	r20, 0x1B	; 27
    28cc:	51 05       	cpc	r21, r1
    28ce:	79 f4       	brne	.+30     	; 0x28ee <main+0x2772>
    28d0:	c8 01       	movw	r24, r16
    28d2:	ed 85       	ldd	r30, Y+13	; 0x0d
    28d4:	fe 85       	ldd	r31, Y+14	; 0x0e
    28d6:	8e 1b       	sub	r24, r30
    28d8:	9f 0b       	sbc	r25, r31
    28da:	85 36       	cpi	r24, 0x65	; 101
    28dc:	91 05       	cpc	r25, r1
    28de:	0c f4       	brge	.+2      	; 0x28e2 <main+0x2766>
    28e0:	58 c0       	rjmp	.+176    	; 0x2992 <main+0x2816>
    28e2:	78 01       	movw	r14, r16
    28e4:	09 c0       	rjmp	.+18     	; 0x28f8 <main+0x277c>
    28e6:	26 e1       	ldi	r18, 0x16	; 22
    28e8:	30 e0       	ldi	r19, 0x00	; 0
    28ea:	3e 8f       	std	Y+30, r19	; 0x1e
    28ec:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 28;
					counterRef = counter;
				}
				if(state == 28 && counter - counterRef > pWait){
    28ee:	4d 8d       	ldd	r20, Y+29	; 0x1d
    28f0:	5e 8d       	ldd	r21, Y+30	; 0x1e
    28f2:	4c 31       	cpi	r20, 0x1C	; 28
    28f4:	51 05       	cpc	r21, r1
    28f6:	69 f4       	brne	.+26     	; 0x2912 <main+0x2796>
    28f8:	c8 01       	movw	r24, r16
    28fa:	8e 19       	sub	r24, r14
    28fc:	9f 09       	sbc	r25, r15
    28fe:	85 36       	cpi	r24, 0x65	; 101
    2900:	91 05       	cpc	r25, r1
    2902:	0c f4       	brge	.+2      	; 0x2906 <main+0x278a>
    2904:	57 c0       	rjmp	.+174    	; 0x29b4 <main+0x2838>
    2906:	78 01       	movw	r14, r16
    2908:	08 c0       	rjmp	.+16     	; 0x291a <main+0x279e>
    290a:	87 e1       	ldi	r24, 0x17	; 23
    290c:	90 e0       	ldi	r25, 0x00	; 0
    290e:	9e 8f       	std	Y+30, r25	; 0x1e
    2910:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 29;
					counterRef = counter;
				}
				if(state == 29 && counter - counterRef > totallength2*m2WholePlate){
    2912:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2914:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2916:	7d 97       	sbiw	r30, 0x1d	; 29
    2918:	59 f4       	brne	.+22     	; 0x2930 <main+0x27b4>
    291a:	c8 01       	movw	r24, r16
    291c:	8e 19       	sub	r24, r14
    291e:	9f 09       	sbc	r25, r15
    2920:	81 5a       	subi	r24, 0xA1	; 161
    2922:	9f 40       	sbci	r25, 0x0F	; 15
    2924:	54 f4       	brge	.+20     	; 0x293a <main+0x27be>
    2926:	58 c0       	rjmp	.+176    	; 0x29d8 <main+0x285c>
    2928:	28 e1       	ldi	r18, 0x18	; 24
    292a:	30 e0       	ldi	r19, 0x00	; 0
    292c:	3e 8f       	std	Y+30, r19	; 0x1e
    292e:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 30;
					counterRef30 = counter;
				}
				if(state == 30 && counter - counterRef > totallength2*m2LoadBack /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
    2930:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2932:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2934:	4e 31       	cpi	r20, 0x1E	; 30
    2936:	51 05       	cpc	r21, r1
    2938:	69 f4       	brne	.+26     	; 0x2954 <main+0x27d8>
    293a:	c8 01       	movw	r24, r16
    293c:	8e 19       	sub	r24, r14
    293e:	9f 09       	sbc	r25, r15
    2940:	81 5a       	subi	r24, 0xA1	; 161
    2942:	9f 40       	sbci	r25, 0x0F	; 15
    2944:	0c f4       	brge	.+2      	; 0x2948 <main+0x27cc>
    2946:	59 c0       	rjmp	.+178    	; 0x29fa <main+0x287e>
    2948:	78 01       	movw	r14, r16
    294a:	08 c0       	rjmp	.+16     	; 0x295c <main+0x27e0>
    294c:	89 e1       	ldi	r24, 0x19	; 25
    294e:	90 e0       	ldi	r25, 0x00	; 0
    2950:	9e 8f       	std	Y+30, r25	; 0x1e
    2952:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 31;
					counterRef = counter;
				}
					if(state == 31 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
    2954:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2956:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2958:	7f 97       	sbiw	r30, 0x1f	; 31
    295a:	69 f4       	brne	.+26     	; 0x2976 <main+0x27fa>
    295c:	c8 01       	movw	r24, r16
    295e:	8e 19       	sub	r24, r14
    2960:	9f 09       	sbc	r25, r15
    2962:	89 5e       	subi	r24, 0xE9	; 233
    2964:	93 40       	sbci	r25, 0x03	; 3
    2966:	0c f4       	brge	.+2      	; 0x296a <main+0x27ee>
    2968:	7a c0       	rjmp	.+244    	; 0x2a5e <main+0x28e2>
    296a:	78 01       	movw	r14, r16
    296c:	09 c0       	rjmp	.+18     	; 0x2980 <main+0x2804>
    296e:	2a e1       	ldi	r18, 0x1A	; 26
    2970:	30 e0       	ldi	r19, 0x00	; 0
    2972:	3e 8f       	std	Y+30, r19	; 0x1e
    2974:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 32;
					counterRef = counter;
				}
				if(state == 32 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureHome == 0*/){
    2976:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2978:	5e 8d       	ldd	r21, Y+30	; 0x1e
    297a:	40 32       	cpi	r20, 0x20	; 32
    297c:	51 05       	cpc	r21, r1
    297e:	69 f4       	brne	.+26     	; 0x299a <main+0x281e>
    2980:	c8 01       	movw	r24, r16
    2982:	8e 19       	sub	r24, r14
    2984:	9f 09       	sbc	r25, r15
    2986:	81 5a       	subi	r24, 0xA1	; 161
    2988:	9f 40       	sbci	r25, 0x0F	; 15
    298a:	0c f4       	brge	.+2      	; 0x298e <main+0x2812>
    298c:	94 c0       	rjmp	.+296    	; 0x2ab6 <main+0x293a>
    298e:	78 01       	movw	r14, r16
    2990:	08 c0       	rjmp	.+16     	; 0x29a2 <main+0x2826>
    2992:	8b e1       	ldi	r24, 0x1B	; 27
    2994:	90 e0       	ldi	r25, 0x00	; 0
    2996:	9e 8f       	std	Y+30, r25	; 0x1e
    2998:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 33;
					counterRef = counter;
				}
				if(state == 33 && counter - counterRef > pWait){
    299a:	ed 8d       	ldd	r30, Y+29	; 0x1d
    299c:	fe 8d       	ldd	r31, Y+30	; 0x1e
    299e:	b1 97       	sbiw	r30, 0x21	; 33
    29a0:	69 f4       	brne	.+26     	; 0x29bc <main+0x2840>
    29a2:	c8 01       	movw	r24, r16
    29a4:	8e 19       	sub	r24, r14
    29a6:	9f 09       	sbc	r25, r15
    29a8:	85 36       	cpi	r24, 0x65	; 101
    29aa:	91 05       	cpc	r25, r1
    29ac:	0c f4       	brge	.+2      	; 0x29b0 <main+0x2834>
    29ae:	9a c0       	rjmp	.+308    	; 0x2ae4 <main+0x2968>
    29b0:	78 01       	movw	r14, r16
    29b2:	09 c0       	rjmp	.+18     	; 0x29c6 <main+0x284a>
    29b4:	2c e1       	ldi	r18, 0x1C	; 28
    29b6:	30 e0       	ldi	r19, 0x00	; 0
    29b8:	3e 8f       	std	Y+30, r19	; 0x1e
    29ba:	2d 8f       	std	Y+29, r18	; 0x1d
					state = 34;
					counterRef = counter;
				}
				if(state == 34 && counter - counterRef > totallength1*m1LoadPlate){
    29bc:	4d 8d       	ldd	r20, Y+29	; 0x1d
    29be:	5e 8d       	ldd	r21, Y+30	; 0x1e
    29c0:	42 32       	cpi	r20, 0x22	; 34
    29c2:	51 05       	cpc	r21, r1
    29c4:	69 f4       	brne	.+26     	; 0x29e0 <main+0x2864>
    29c6:	c8 01       	movw	r24, r16
    29c8:	8e 19       	sub	r24, r14
    29ca:	9f 09       	sbc	r25, r15
    29cc:	81 5a       	subi	r24, 0xA1	; 161
    29ce:	9f 40       	sbci	r25, 0x0F	; 15
    29d0:	0c f4       	brge	.+2      	; 0x29d4 <main+0x2858>
    29d2:	9a c0       	rjmp	.+308    	; 0x2b08 <main+0x298c>
    29d4:	78 01       	movw	r14, r16
    29d6:	08 c0       	rjmp	.+16     	; 0x29e8 <main+0x286c>
    29d8:	8d e1       	ldi	r24, 0x1D	; 29
    29da:	90 e0       	ldi	r25, 0x00	; 0
    29dc:	9e 8f       	std	Y+30, r25	; 0x1e
    29de:	8d 8f       	std	Y+29, r24	; 0x1d
					state = 35;
					counterRef = counter;
				}
				if(state == 35 && counter - counterRef > 10){
    29e0:	ed 8d       	ldd	r30, Y+29	; 0x1d
    29e2:	fe 8d       	ldd	r31, Y+30	; 0x1e
    29e4:	b3 97       	sbiw	r30, 0x23	; 35
    29e6:	71 f4       	brne	.+28     	; 0x2a04 <main+0x2888>
    29e8:	c8 01       	movw	r24, r16
    29ea:	8e 19       	sub	r24, r14
    29ec:	9f 09       	sbc	r25, r15
    29ee:	0b 97       	sbiw	r24, 0x0b	; 11
    29f0:	0c f4       	brge	.+2      	; 0x29f4 <main+0x2878>
    29f2:	24 c5       	rjmp	.+2632   	; 0x343c <main+0x32c0>
    29f4:	2f ef       	ldi	r18, 0xFF	; 255
    29f6:	3f ef       	ldi	r19, 0xFF	; 255
    29f8:	34 c0       	rjmp	.+104    	; 0x2a62 <main+0x28e6>
    29fa:	4e e1       	ldi	r20, 0x1E	; 30
    29fc:	50 e0       	ldi	r21, 0x00	; 0
    29fe:	5e 8f       	std	Y+30, r21	; 0x1e
    2a00:	4d 8f       	std	Y+29, r20	; 0x1d
    2a02:	31 c0       	rjmp	.+98     	; 0x2a66 <main+0x28ea>
				}


				//state actions
						
				if(state == 0){
    2a04:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2a06:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2a08:	89 2b       	or	r24, r25
    2a0a:	69 f5       	brne	.+90     	; 0x2a66 <main+0x28ea>
					if(u_inputByte0.bits_in_inputByte0.fixtureHome == 1){
    2a0c:	80 91 1e 03 	lds	r24, 0x031E
    2a10:	90 91 1a 03 	lds	r25, 0x031A
    2a14:	20 91 1c 03 	lds	r18, 0x031C
    2a18:	82 ff       	sbrs	r24, 2
    2a1a:	0a c0       	rjmp	.+20     	; 0x2a30 <main+0x28b4>
						u_motorByte0.bits_in_motorByte0.m2Dir = 0;  //********* 0 is used as fixture backward ?cc?, 1 as forward ?c? **********
    2a1c:	9f 7e       	andi	r25, 0xEF	; 239
    2a1e:	90 93 1a 03 	sts	0x031A, r25
						u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    2a22:	27 7f       	andi	r18, 0xF7	; 247
    2a24:	20 93 1c 03 	sts	0x031C, r18
    2a28:	81 e0       	ldi	r24, 0x01	; 1
    2a2a:	c8 2e       	mov	r12, r24
    2a2c:	d1 2c       	mov	r13, r1
    2a2e:	70 c0       	rjmp	.+224    	; 0x2b10 <main+0x2994>
						m2 = 1;
					}
					else{
						u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    2a30:	9f 7d       	andi	r25, 0xDF	; 223
    2a32:	90 93 1a 03 	sts	0x031A, r25
						m2 = 0;
						u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    2a36:	2f 7e       	andi	r18, 0xEF	; 239
						u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    2a38:	28 60       	ori	r18, 0x08	; 8
    2a3a:	20 93 1c 03 	sts	0x031C, r18
						if(print0 == 1){
    2a3e:	e9 8d       	ldd	r30, Y+25	; 0x19
    2a40:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2a42:	31 97       	sbiw	r30, 0x01	; 1
    2a44:	09 f0       	breq	.+2      	; 0x2a48 <main+0x28cc>
    2a46:	ff c4       	rjmp	.+2558   	; 0x3446 <main+0x32ca>
							OrangutanLCD::clear();
    2a48:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
							OrangutanLCD::print("PUSH TO START");
    2a4c:	81 ec       	ldi	r24, 0xC1	; 193
    2a4e:	92 e0       	ldi	r25, 0x02	; 2
    2a50:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    2a54:	cc 24       	eor	r12, r12
    2a56:	dd 24       	eor	r13, r13
    2a58:	1a 8e       	std	Y+26, r1	; 0x1a
    2a5a:	19 8e       	std	Y+25, r1	; 0x19
    2a5c:	59 c0       	rjmp	.+178    	; 0x2b10 <main+0x2994>
    2a5e:	2f e1       	ldi	r18, 0x1F	; 31
    2a60:	30 e0       	ldi	r19, 0x00	; 0
    2a62:	3e 8f       	std	Y+30, r19	; 0x1e
    2a64:	2d 8f       	std	Y+29, r18	; 0x1d
							print0 = 0;
						}
					}
				}
				if(state == 1){
    2a66:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2a68:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2a6a:	41 30       	cpi	r20, 0x01	; 1
    2a6c:	51 05       	cpc	r21, r1
    2a6e:	39 f5       	brne	.+78     	; 0x2abe <main+0x2942>
					OrangutanLCD::clear();
    2a70:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
					u_outputByte0.bits_in_outputByte0.ACPower = 0;
    2a74:	20 91 1c 03 	lds	r18, 0x031C
    2a78:	32 2f       	mov	r19, r18
    2a7a:	3e 7f       	andi	r19, 0xFE	; 254
					if((counter % 200) < 100){
    2a7c:	c8 01       	movw	r24, r16
    2a7e:	68 ec       	ldi	r22, 0xC8	; 200
    2a80:	70 e0       	ldi	r23, 0x00	; 0
    2a82:	0e 94 35 20 	call	0x406a	; 0x406a <__divmodhi4>
    2a86:	84 36       	cpi	r24, 0x64	; 100
    2a88:	91 05       	cpc	r25, r1
    2a8a:	24 f4       	brge	.+8      	; 0x2a94 <main+0x2918>
						u_outputByte0.bits_in_outputByte0.blowerPulse = 0;
    2a8c:	2c 7f       	andi	r18, 0xFC	; 252
    2a8e:	20 93 1c 03 	sts	0x031C, r18
    2a92:	03 c0       	rjmp	.+6      	; 0x2a9a <main+0x291e>
					}
					else{
						u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
    2a94:	32 60       	ori	r19, 0x02	; 2
    2a96:	30 93 1c 03 	sts	0x031C, r19
					}
					m1 = 1;
					u_motorByte0.bits_in_motorByte0.m1Dir = 1;  //****** dir1 ******
    2a9a:	80 91 1a 03 	lds	r24, 0x031A
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
    2a9e:	86 60       	ori	r24, 0x06	; 6
    2aa0:	80 93 1a 03 	sts	0x031A, r24
					u_outputByte0.bits_in_outputByte0.plateStop = 0;
    2aa4:	80 91 1c 03 	lds	r24, 0x031C
    2aa8:	8b 7f       	andi	r24, 0xFB	; 251
    2aaa:	80 93 1c 03 	sts	0x031C, r24
    2aae:	b1 e0       	ldi	r27, 0x01	; 1
    2ab0:	8b 2e       	mov	r8, r27
    2ab2:	91 2c       	mov	r9, r1
    2ab4:	2d c0       	rjmp	.+90     	; 0x2b10 <main+0x2994>
    2ab6:	80 e2       	ldi	r24, 0x20	; 32
    2ab8:	90 e0       	ldi	r25, 0x00	; 0
    2aba:	9e 8f       	std	Y+30, r25	; 0x1e
    2abc:	8d 8f       	std	Y+29, r24	; 0x1d
				}
				if(state == 2){
    2abe:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2ac0:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2ac2:	32 97       	sbiw	r30, 0x02	; 2
    2ac4:	99 f4       	brne	.+38     	; 0x2aec <main+0x2970>
					u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
    2ac6:	80 91 1c 03 	lds	r24, 0x031C
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    2aca:	81 7e       	andi	r24, 0xE1	; 225
					u_outputByte0.bits_in_outputByte0.plateStop = 1;
    2acc:	86 61       	ori	r24, 0x16	; 22
    2ace:	80 93 1c 03 	sts	0x031C, r24
						m1 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    2ad2:	80 91 1a 03 	lds	r24, 0x031A
    2ad6:	80 62       	ori	r24, 0x20	; 32
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    2ad8:	8b 7f       	andi	r24, 0xFB	; 251
    2ada:	80 93 1a 03 	sts	0x031A, r24
    2ade:	88 24       	eor	r8, r8
    2ae0:	99 24       	eor	r9, r9
    2ae2:	45 c0       	rjmp	.+138    	; 0x2b6e <main+0x29f2>
    2ae4:	21 e2       	ldi	r18, 0x21	; 33
    2ae6:	30 e0       	ldi	r19, 0x00	; 0
    2ae8:	3e 8f       	std	Y+30, r19	; 0x1e
    2aea:	2d 8f       	std	Y+29, r18	; 0x1d
				}	
				if(state == 3){
    2aec:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2aee:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2af0:	43 30       	cpi	r20, 0x03	; 3
    2af2:	51 05       	cpc	r21, r1
    2af4:	69 f4       	brne	.+26     	; 0x2b10 <main+0x2994>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ****** dir2 *******
    2af6:	80 91 1a 03 	lds	r24, 0x031A
    2afa:	80 61       	ori	r24, 0x10	; 16
    2afc:	80 93 1a 03 	sts	0x031A, r24
    2b00:	a1 e0       	ldi	r26, 0x01	; 1
    2b02:	ca 2e       	mov	r12, r26
    2b04:	d1 2c       	mov	r13, r1
    2b06:	4f c0       	rjmp	.+158    	; 0x2ba6 <main+0x2a2a>
    2b08:	82 e2       	ldi	r24, 0x22	; 34
    2b0a:	90 e0       	ldi	r25, 0x00	; 0
    2b0c:	9e 8f       	std	Y+30, r25	; 0x1e
    2b0e:	8d 8f       	std	Y+29, r24	; 0x1d
					m2 = 1;
				}
				if(state == 4){
    2b10:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2b12:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2b14:	34 97       	sbiw	r30, 0x04	; 4
    2b16:	69 f4       	brne	.+26     	; 0x2b32 <main+0x29b6>
						m2 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    2b18:	80 91 1a 03 	lds	r24, 0x031A
    2b1c:	8f 7d       	andi	r24, 0xDF	; 223
    2b1e:	80 93 1a 03 	sts	0x031A, r24
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    2b22:	80 91 1c 03 	lds	r24, 0x031C
    2b26:	88 60       	ori	r24, 0x08	; 8
    2b28:	80 93 1c 03 	sts	0x031C, r24
    2b2c:	cc 24       	eor	r12, r12
    2b2e:	dd 24       	eor	r13, r13
    2b30:	49 c0       	rjmp	.+146    	; 0x2bc4 <main+0x2a48>
				}
				if(state == 5){
    2b32:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2b34:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2b36:	25 30       	cpi	r18, 0x05	; 5
    2b38:	31 05       	cpc	r19, r1
    2b3a:	59 f4       	brne	.+22     	; 0x2b52 <main+0x29d6>
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    2b3c:	80 91 1c 03 	lds	r24, 0x031C
    2b40:	8f 7e       	andi	r24, 0xEF	; 239
    2b42:	80 93 1c 03 	sts	0x031C, r24
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    2b46:	80 91 1a 03 	lds	r24, 0x031A
    2b4a:	80 62       	ori	r24, 0x20	; 32
    2b4c:	80 93 1a 03 	sts	0x031A, r24
    2b50:	47 c0       	rjmp	.+142    	; 0x2be0 <main+0x2a64>
				}
				//*********************************************
				if(state == 6){
    2b52:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2b54:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2b56:	46 30       	cpi	r20, 0x06	; 6
    2b58:	51 05       	cpc	r21, r1
    2b5a:	49 f4       	brne	.+18     	; 0x2b6e <main+0x29f2>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    2b5c:	80 91 1a 03 	lds	r24, 0x031A
    2b60:	80 61       	ori	r24, 0x10	; 16
    2b62:	80 93 1a 03 	sts	0x031A, r24
    2b66:	f1 e0       	ldi	r31, 0x01	; 1
    2b68:	cf 2e       	mov	r12, r31
    2b6a:	d1 2c       	mov	r13, r1
    2b6c:	48 c0       	rjmp	.+144    	; 0x2bfe <main+0x2a82>
					m2 = 1;
				}
				if(state == 7){
    2b6e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2b70:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2b72:	07 97       	sbiw	r24, 0x07	; 7
    2b74:	c1 f4       	brne	.+48     	; 0x2ba6 <main+0x2a2a>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m3Drop = 1;
    2b76:	80 91 1b 03 	lds	r24, 0x031B
    2b7a:	81 60       	ori	r24, 0x01	; 1
    2b7c:	80 93 1b 03 	sts	0x031B, r24
					u_motorByte0.bits_in_motorByte0.m3Dir = 0;  // ******* dir3 *******
    2b80:	80 91 1a 03 	lds	r24, 0x031A
    2b84:	8f 77       	andi	r24, 0x7F	; 127
    2b86:	80 93 1a 03 	sts	0x031A, r24
					if(print6 == 1){
    2b8a:	ef 89       	ldd	r30, Y+23	; 0x17
    2b8c:	f8 8d       	ldd	r31, Y+24	; 0x18
    2b8e:	31 97       	sbiw	r30, 0x01	; 1
    2b90:	09 f0       	breq	.+2      	; 0x2b94 <main+0x2a18>
    2b92:	5c c4       	rjmp	.+2232   	; 0x344c <main+0x32d0>
						OrangutanLCD::clear();
    2b94:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("Clean 1");
    2b98:	8f ec       	ldi	r24, 0xCF	; 207
    2b9a:	92 e0       	ldi	r25, 0x02	; 2
    2b9c:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    2ba0:	18 8e       	std	Y+24, r1	; 0x18
    2ba2:	1f 8a       	std	Y+23, r1	; 0x17
    2ba4:	53 c4       	rjmp	.+2214   	; 0x344c <main+0x32d0>
						print6 = 0;
					}
				}
				if(state == 8){
    2ba6:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2ba8:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2baa:	28 30       	cpi	r18, 0x08	; 8
    2bac:	31 05       	cpc	r19, r1
    2bae:	51 f4       	brne	.+20     	; 0x2bc4 <main+0x2a48>
					m3 = 1;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
    2bb0:	80 91 1c 03 	lds	r24, 0x031C
    2bb4:	80 64       	ori	r24, 0x40	; 64
					u_outputByte0.bits_in_outputByte0.brush1Raise = 0;
    2bb6:	8f 7d       	andi	r24, 0xDF	; 223
    2bb8:	80 93 1c 03 	sts	0x031C, r24
    2bbc:	e1 e0       	ldi	r30, 0x01	; 1
    2bbe:	4e 2e       	mov	r4, r30
    2bc0:	51 2c       	mov	r5, r1
    2bc2:	1d c0       	rjmp	.+58     	; 0x2bfe <main+0x2a82>
				}
				if(state == 9){
    2bc4:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2bc6:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2bc8:	49 30       	cpi	r20, 0x09	; 9
    2bca:	51 05       	cpc	r21, r1
    2bcc:	49 f4       	brne	.+18     	; 0x2be0 <main+0x2a64>
					m2 = 1;
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    2bce:	80 91 1a 03 	lds	r24, 0x031A
    2bd2:	8f 7e       	andi	r24, 0xEF	; 239
    2bd4:	80 93 1a 03 	sts	0x031A, r24
    2bd8:	71 e0       	ldi	r23, 0x01	; 1
    2bda:	c7 2e       	mov	r12, r23
    2bdc:	d1 2c       	mov	r13, r1
    2bde:	38 c0       	rjmp	.+112    	; 0x2c50 <main+0x2ad4>
				}
				if(state == 10){
    2be0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2be2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2be4:	0a 97       	sbiw	r24, 0x0a	; 10
    2be6:	59 f4       	brne	.+22     	; 0x2bfe <main+0x2a82>
					m2 = 0;
					m3 = 0;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
    2be8:	80 91 1c 03 	lds	r24, 0x031C
    2bec:	8f 7b       	andi	r24, 0xBF	; 191
					u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
    2bee:	80 62       	ori	r24, 0x20	; 32
    2bf0:	80 93 1c 03 	sts	0x031C, r24
    2bf4:	44 24       	eor	r4, r4
    2bf6:	55 24       	eor	r5, r5
    2bf8:	cc 24       	eor	r12, r12
    2bfa:	dd 24       	eor	r13, r13
    2bfc:	3b c0       	rjmp	.+118    	; 0x2c74 <main+0x2af8>
				}
				if(state == 11){
    2bfe:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2c00:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2c02:	3b 97       	sbiw	r30, 0x0b	; 11
    2c04:	49 f4       	brne	.+18     	; 0x2c18 <main+0x2a9c>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    2c06:	80 91 1a 03 	lds	r24, 0x031A
    2c0a:	80 61       	ori	r24, 0x10	; 16
    2c0c:	80 93 1a 03 	sts	0x031A, r24
    2c10:	61 e0       	ldi	r22, 0x01	; 1
    2c12:	c6 2e       	mov	r12, r22
    2c14:	d1 2c       	mov	r13, r1
    2c16:	47 c0       	rjmp	.+142    	; 0x2ca6 <main+0x2b2a>
					m2 = 1;
				}
				if(state == 12){
    2c18:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2c1a:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2c1c:	2c 30       	cpi	r18, 0x0C	; 12
    2c1e:	31 05       	cpc	r19, r1
    2c20:	89 f4       	brne	.+34     	; 0x2c44 <main+0x2ac8>
					m2 = 0;
					u_motorByte0.bits_in_motorByte0.m3Dir = 0;  // ******* dir3 *******
    2c22:	80 91 1a 03 	lds	r24, 0x031A
    2c26:	8f 77       	andi	r24, 0x7F	; 127
    2c28:	80 93 1a 03 	sts	0x031A, r24
					m3 = 1;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
    2c2c:	80 91 1c 03 	lds	r24, 0x031C
    2c30:	80 64       	ori	r24, 0x40	; 64
					u_outputByte0.bits_in_outputByte0.brush1Raise = 0;
    2c32:	8f 7d       	andi	r24, 0xDF	; 223
    2c34:	80 93 1c 03 	sts	0x031C, r24
    2c38:	cc 24       	eor	r12, r12
    2c3a:	dd 24       	eor	r13, r13
    2c3c:	51 e0       	ldi	r21, 0x01	; 1
    2c3e:	45 2e       	mov	r4, r21
    2c40:	51 2c       	mov	r5, r1
    2c42:	44 c0       	rjmp	.+136    	; 0x2ccc <main+0x2b50>
				}
				if(state == 13){
    2c44:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2c46:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2c48:	4d 30       	cpi	r20, 0x0D	; 13
    2c4a:	51 05       	cpc	r21, r1
    2c4c:	09 f4       	brne	.+2      	; 0x2c50 <main+0x2ad4>
    2c4e:	4b c0       	rjmp	.+150    	; 0x2ce6 <main+0x2b6a>
					m2 = 1;
				}
				if(state == 14){
    2c50:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2c52:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2c54:	0e 97       	sbiw	r24, 0x0e	; 14
    2c56:	71 f4       	brne	.+28     	; 0x2c74 <main+0x2af8>
					m3 = 0;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
    2c58:	80 91 1c 03 	lds	r24, 0x031C
    2c5c:	8f 7b       	andi	r24, 0xBF	; 191
					u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
    2c5e:	80 62       	ori	r24, 0x20	; 32
    2c60:	80 93 1c 03 	sts	0x031C, r24
					u_motorByte1.bits_in_motorByte1.m3Drop = 0;
    2c64:	80 91 1b 03 	lds	r24, 0x031B
    2c68:	8e 7f       	andi	r24, 0xFE	; 254
    2c6a:	80 93 1b 03 	sts	0x031B, r24
    2c6e:	44 24       	eor	r4, r4
    2c70:	55 24       	eor	r5, r5
    2c72:	4f c0       	rjmp	.+158    	; 0x2d12 <main+0x2b96>
				}
				//*************************** may need to reverse order depending on dry station 1 positioning ***************************
				if(state == 15){
    2c74:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2c76:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2c78:	3f 97       	sbiw	r30, 0x0f	; 15
    2c7a:	a9 f4       	brne	.+42     	; 0x2ca6 <main+0x2b2a>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m4Drop = 1;
    2c7c:	80 91 1b 03 	lds	r24, 0x031B
    2c80:	88 60       	ori	r24, 0x08	; 8
					u_motorByte1.bits_in_motorByte1.m4Dir = 0;  // ******* dir4 *******
    2c82:	8b 7f       	andi	r24, 0xFB	; 251
    2c84:	80 93 1b 03 	sts	0x031B, r24
					if(print15 == 1){
    2c88:	2d 89       	ldd	r18, Y+21	; 0x15
    2c8a:	3e 89       	ldd	r19, Y+22	; 0x16
    2c8c:	21 30       	cpi	r18, 0x01	; 1
    2c8e:	31 05       	cpc	r19, r1
    2c90:	09 f0       	breq	.+2      	; 0x2c94 <main+0x2b18>
    2c92:	df c3       	rjmp	.+1982   	; 0x3452 <main+0x32d6>
						OrangutanLCD::clear();
    2c94:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("Clean 2");
    2c98:	8f ef       	ldi	r24, 0xFF	; 255
    2c9a:	92 e0       	ldi	r25, 0x02	; 2
    2c9c:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    2ca0:	1e 8a       	std	Y+22, r1	; 0x16
    2ca2:	1d 8a       	std	Y+21, r1	; 0x15
    2ca4:	d6 c3       	rjmp	.+1964   	; 0x3452 <main+0x32d6>
						print15 = 0;
					}
				}
				if(state == 16){
    2ca6:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2ca8:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2caa:	40 31       	cpi	r20, 0x10	; 16
    2cac:	51 05       	cpc	r21, r1
    2cae:	71 f4       	brne	.+28     	; 0x2ccc <main+0x2b50>
					m4 = 1;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
    2cb0:	80 91 1d 03 	lds	r24, 0x031D
    2cb4:	81 60       	ori	r24, 0x01	; 1
    2cb6:	80 93 1d 03 	sts	0x031D, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 0;
    2cba:	80 91 1c 03 	lds	r24, 0x031C
    2cbe:	8f 77       	andi	r24, 0x7F	; 127
    2cc0:	80 93 1c 03 	sts	0x031C, r24
    2cc4:	41 e0       	ldi	r20, 0x01	; 1
    2cc6:	64 2e       	mov	r6, r20
    2cc8:	71 2c       	mov	r7, r1
    2cca:	23 c0       	rjmp	.+70     	; 0x2d12 <main+0x2b96>
				}
				if(state == 17){
    2ccc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2cce:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2cd0:	41 97       	sbiw	r24, 0x11	; 17
    2cd2:	61 f4       	brne	.+24     	; 0x2cec <main+0x2b70>
					m2 = 1;
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    2cd4:	80 91 1a 03 	lds	r24, 0x031A
    2cd8:	8f 7e       	andi	r24, 0xEF	; 239
    2cda:	80 93 1a 03 	sts	0x031A, r24
    2cde:	31 e0       	ldi	r19, 0x01	; 1
    2ce0:	c3 2e       	mov	r12, r19
    2ce2:	d1 2c       	mov	r13, r1
    2ce4:	43 c0       	rjmp	.+134    	; 0x2d6c <main+0x2bf0>
    2ce6:	21 e0       	ldi	r18, 0x01	; 1
    2ce8:	c2 2e       	mov	r12, r18
    2cea:	d1 2c       	mov	r13, r1
				}
				if(state == 18){
    2cec:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2cee:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2cf0:	72 97       	sbiw	r30, 0x12	; 18
    2cf2:	79 f4       	brne	.+30     	; 0x2d12 <main+0x2b96>
					m2 = 0;
					m4 = 0;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 0;
    2cf4:	80 91 1d 03 	lds	r24, 0x031D
    2cf8:	8e 7f       	andi	r24, 0xFE	; 254
    2cfa:	80 93 1d 03 	sts	0x031D, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
    2cfe:	80 91 1c 03 	lds	r24, 0x031C
    2d02:	80 68       	ori	r24, 0x80	; 128
    2d04:	80 93 1c 03 	sts	0x031C, r24
    2d08:	cc 24       	eor	r12, r12
    2d0a:	dd 24       	eor	r13, r13
    2d0c:	66 24       	eor	r6, r6
    2d0e:	77 24       	eor	r7, r7
    2d10:	45 c0       	rjmp	.+138    	; 0x2d9c <main+0x2c20>
				}
				if(state == 19){
    2d12:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2d14:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2d16:	23 31       	cpi	r18, 0x13	; 19
    2d18:	31 05       	cpc	r19, r1
    2d1a:	49 f4       	brne	.+18     	; 0x2d2e <main+0x2bb2>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    2d1c:	80 91 1a 03 	lds	r24, 0x031A
    2d20:	80 61       	ori	r24, 0x10	; 16
    2d22:	80 93 1a 03 	sts	0x031A, r24
    2d26:	91 e0       	ldi	r25, 0x01	; 1
    2d28:	c9 2e       	mov	r12, r25
    2d2a:	d1 2c       	mov	r13, r1
    2d2c:	40 c0       	rjmp	.+128    	; 0x2dae <main+0x2c32>
					m2 = 1;
				}
				if(state == 20){
    2d2e:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2d30:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2d32:	44 31       	cpi	r20, 0x14	; 20
    2d34:	51 05       	cpc	r21, r1
    2d36:	a9 f4       	brne	.+42     	; 0x2d62 <main+0x2be6>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m4Dir = 0;  // ******* dir4 *******
    2d38:	80 91 1b 03 	lds	r24, 0x031B
    2d3c:	8b 7f       	andi	r24, 0xFB	; 251
    2d3e:	80 93 1b 03 	sts	0x031B, r24
					m4 = 1;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
    2d42:	80 91 1d 03 	lds	r24, 0x031D
    2d46:	81 60       	ori	r24, 0x01	; 1
    2d48:	80 93 1d 03 	sts	0x031D, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 0;
    2d4c:	80 91 1c 03 	lds	r24, 0x031C
    2d50:	8f 77       	andi	r24, 0x7F	; 127
    2d52:	80 93 1c 03 	sts	0x031C, r24
    2d56:	cc 24       	eor	r12, r12
    2d58:	dd 24       	eor	r13, r13
    2d5a:	81 e0       	ldi	r24, 0x01	; 1
    2d5c:	68 2e       	mov	r6, r24
    2d5e:	71 2c       	mov	r7, r1
    2d60:	3e c0       	rjmp	.+124    	; 0x2dde <main+0x2c62>
				}
				if(state == 21){
    2d62:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2d64:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2d66:	45 97       	sbiw	r24, 0x15	; 21
    2d68:	09 f4       	brne	.+2      	; 0x2d6c <main+0x2bf0>
    2d6a:	46 c0       	rjmp	.+140    	; 0x2df8 <main+0x2c7c>
					m2 = 1;
				}
				if(state == 22){
    2d6c:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2d6e:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2d70:	76 97       	sbiw	r30, 0x16	; 22
    2d72:	a1 f4       	brne	.+40     	; 0x2d9c <main+0x2c20>
					m4 = 0;
					m2 = 0;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 0;
    2d74:	80 91 1d 03 	lds	r24, 0x031D
    2d78:	8e 7f       	andi	r24, 0xFE	; 254
    2d7a:	80 93 1d 03 	sts	0x031D, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
    2d7e:	80 91 1c 03 	lds	r24, 0x031C
    2d82:	80 68       	ori	r24, 0x80	; 128
    2d84:	80 93 1c 03 	sts	0x031C, r24
					u_motorByte1.bits_in_motorByte1.m4Drop = 0;
    2d88:	80 91 1b 03 	lds	r24, 0x031B
    2d8c:	87 7f       	andi	r24, 0xF7	; 247
    2d8e:	80 93 1b 03 	sts	0x031B, r24
    2d92:	cc 24       	eor	r12, r12
    2d94:	dd 24       	eor	r13, r13
    2d96:	66 24       	eor	r6, r6
    2d98:	77 24       	eor	r7, r7
    2d9a:	3c c0       	rjmp	.+120    	; 0x2e14 <main+0x2c98>
				}
				//*************************************************
				if(state == 23){
    2d9c:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2d9e:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2da0:	27 31       	cpi	r18, 0x17	; 23
    2da2:	31 05       	cpc	r19, r1
    2da4:	21 f4       	brne	.+8      	; 0x2dae <main+0x2c32>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    2da6:	80 91 1a 03 	lds	r24, 0x031A
    2daa:	80 61       	ori	r24, 0x10	; 16
    2dac:	1f c0       	rjmp	.+62     	; 0x2dec <main+0x2c70>
					m2 = 1;
				}
				if(state == 24){
    2dae:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2db0:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2db2:	48 31       	cpi	r20, 0x18	; 24
    2db4:	51 05       	cpc	r21, r1
    2db6:	99 f4       	brne	.+38     	; 0x2dde <main+0x2c62>
					m2 = 0;
					u_outputByte1.bits_in_outputByte1.airKnife = 0;
    2db8:	80 91 1d 03 	lds	r24, 0x031D
    2dbc:	87 7f       	andi	r24, 0xF7	; 247
    2dbe:	80 93 1d 03 	sts	0x031D, r24
						if(print24 == 1){
    2dc2:	8b 89       	ldd	r24, Y+19	; 0x13
    2dc4:	9c 89       	ldd	r25, Y+20	; 0x14
    2dc6:	01 97       	sbiw	r24, 0x01	; 1
    2dc8:	09 f0       	breq	.+2      	; 0x2dcc <main+0x2c50>
    2dca:	46 c3       	rjmp	.+1676   	; 0x3458 <main+0x32dc>
						OrangutanLCD::clear();
    2dcc:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("DRY AIR");
    2dd0:	87 ed       	ldi	r24, 0xD7	; 215
    2dd2:	92 e0       	ldi	r25, 0x02	; 2
    2dd4:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    2dd8:	1c 8a       	std	Y+20, r1	; 0x14
    2dda:	1b 8a       	std	Y+19, r1	; 0x13
    2ddc:	3d c3       	rjmp	.+1658   	; 0x3458 <main+0x32dc>
						print24 = 0;
					}
				}
				if(state == 25){
    2dde:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2de0:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2de2:	79 97       	sbiw	r30, 0x19	; 25
    2de4:	61 f4       	brne	.+24     	; 0x2dfe <main+0x2c82>
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    2de6:	80 91 1a 03 	lds	r24, 0x031A
    2dea:	8f 7e       	andi	r24, 0xEF	; 239
    2dec:	80 93 1a 03 	sts	0x031A, r24
    2df0:	b1 e0       	ldi	r27, 0x01	; 1
    2df2:	cb 2e       	mov	r12, r27
    2df4:	d1 2c       	mov	r13, r1
    2df6:	1f c0       	rjmp	.+62     	; 0x2e36 <main+0x2cba>
    2df8:	a1 e0       	ldi	r26, 0x01	; 1
    2dfa:	ca 2e       	mov	r12, r26
    2dfc:	d1 2c       	mov	r13, r1
					m2 = 1;
				}
				if(state == 26){
    2dfe:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2e00:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2e02:	2a 31       	cpi	r18, 0x1A	; 26
    2e04:	31 05       	cpc	r19, r1
    2e06:	31 f4       	brne	.+12     	; 0x2e14 <main+0x2c98>
					u_outputByte1.bits_in_outputByte1.airKnife = 1;
    2e08:	80 91 1d 03 	lds	r24, 0x031D
    2e0c:	88 60       	ori	r24, 0x08	; 8
    2e0e:	80 93 1d 03 	sts	0x031D, r24
    2e12:	3d c0       	rjmp	.+122    	; 0x2e8e <main+0x2d12>
				}
				if(state == 27){
    2e14:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2e16:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2e18:	4b 31       	cpi	r20, 0x1B	; 27
    2e1a:	51 05       	cpc	r21, r1
    2e1c:	61 f4       	brne	.+24     	; 0x2e36 <main+0x2cba>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m5Drop = 1;
    2e1e:	80 91 1b 03 	lds	r24, 0x031B
    2e22:	80 64       	ori	r24, 0x40	; 64
					u_motorByte1.bits_in_motorByte1.m5Dir = 0;
    2e24:	8f 7d       	andi	r24, 0xDF	; 223
    2e26:	80 93 1b 03 	sts	0x031B, r24
    2e2a:	cc 24       	eor	r12, r12
    2e2c:	dd 24       	eor	r13, r13
    2e2e:	f1 e0       	ldi	r31, 0x01	; 1
    2e30:	2f 2e       	mov	r2, r31
    2e32:	31 2c       	mov	r3, r1
    2e34:	36 c0       	rjmp	.+108    	; 0x2ea2 <main+0x2d26>
					m5 = 1;
				}
				if(state == 28){
    2e36:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2e38:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2e3a:	4c 97       	sbiw	r24, 0x1c	; 28
    2e3c:	91 f4       	brne	.+36     	; 0x2e62 <main+0x2ce6>
					if(print28 == 1){
    2e3e:	e9 89       	ldd	r30, Y+17	; 0x11
    2e40:	fa 89       	ldd	r31, Y+18	; 0x12
    2e42:	31 97       	sbiw	r30, 0x01	; 1
    2e44:	41 f4       	brne	.+16     	; 0x2e56 <main+0x2cda>
							OrangutanLCD::clear();
    2e46:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("FINAL DRY");
    2e4a:	8f ed       	ldi	r24, 0xDF	; 223
    2e4c:	92 e0       	ldi	r25, 0x02	; 2
    2e4e:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    2e52:	1a 8a       	std	Y+18, r1	; 0x12
    2e54:	19 8a       	std	Y+17, r1	; 0x11
						print28 = 0;
						}
					u_outputByte1.bits_in_outputByte1.ptRaise = 0;
    2e56:	80 91 1d 03 	lds	r24, 0x031D
    2e5a:	8d 7f       	andi	r24, 0xFD	; 253
    2e5c:	80 93 1d 03 	sts	0x031D, r24
    2e60:	2d c0       	rjmp	.+90     	; 0x2ebc <main+0x2d40>
				}
				if(state == 29){
    2e62:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2e64:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2e66:	2d 31       	cpi	r18, 0x1D	; 29
    2e68:	31 05       	cpc	r19, r1
    2e6a:	d9 f1       	breq	.+118    	; 0x2ee2 <main+0x2d66>
					m2 = 1;
				}
				if(state == 30){
    2e6c:	2e 31       	cpi	r18, 0x1E	; 30
    2e6e:	31 05       	cpc	r19, r1
    2e70:	71 f4       	brne	.+28     	; 0x2e8e <main+0x2d12>
					m5 = 0;
						u_motorByte1.bits_in_motorByte1.m5Drop = 0;
    2e72:	80 91 1b 03 	lds	r24, 0x031B
    2e76:	8f 7b       	andi	r24, 0xBF	; 191
    2e78:	80 93 1b 03 	sts	0x031B, r24
					u_outputByte1.bits_in_outputByte1.ptRaise = 1;
    2e7c:	80 91 1d 03 	lds	r24, 0x031D
    2e80:	82 60       	ori	r24, 0x02	; 2
					u_outputByte1.bits_in_outputByte1.ptLower = 0;
    2e82:	8b 7f       	andi	r24, 0xFB	; 251
    2e84:	80 93 1d 03 	sts	0x031D, r24
    2e88:	22 24       	eor	r2, r2
    2e8a:	33 24       	eor	r3, r3
    2e8c:	3b c0       	rjmp	.+118    	; 0x2f04 <main+0x2d88>
				}
				if(state == 31){
    2e8e:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2e90:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2e92:	4f 31       	cpi	r20, 0x1F	; 31
    2e94:	51 05       	cpc	r21, r1
    2e96:	29 f4       	brne	.+10     	; 0x2ea2 <main+0x2d26>
					m2 = 0;
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    2e98:	80 91 1c 03 	lds	r24, 0x031C
    2e9c:	87 7f       	andi	r24, 0xF7	; 247
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
    2e9e:	80 61       	ori	r24, 0x10	; 16
    2ea0:	1b c0       	rjmp	.+54     	; 0x2ed8 <main+0x2d5c>
				}
				if(state == 32){
    2ea2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2ea4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2ea6:	80 97       	sbiw	r24, 0x20	; 32
    2ea8:	49 f4       	brne	.+18     	; 0x2ebc <main+0x2d40>
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;
    2eaa:	80 91 1a 03 	lds	r24, 0x031A
    2eae:	8f 7e       	andi	r24, 0xEF	; 239
    2eb0:	80 93 1a 03 	sts	0x031A, r24
    2eb4:	e1 e0       	ldi	r30, 0x01	; 1
    2eb6:	ce 2e       	mov	r12, r30
    2eb8:	d1 2c       	mov	r13, r1
    2eba:	3f c0       	rjmp	.+126    	; 0x2f3a <main+0x2dbe>
					m2 = 1;
				}
				if(state == 33){
    2ebc:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2ebe:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2ec0:	b1 97       	sbiw	r30, 0x21	; 33
    2ec2:	91 f4       	brne	.+36     	; 0x2ee8 <main+0x2d6c>
					m2 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    2ec4:	80 91 1a 03 	lds	r24, 0x031A
    2ec8:	8f 7d       	andi	r24, 0xDF	; 223
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
    2eca:	84 60       	ori	r24, 0x04	; 4
    2ecc:	80 93 1a 03 	sts	0x031A, r24
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    2ed0:	80 91 1c 03 	lds	r24, 0x031C
    2ed4:	88 60       	ori	r24, 0x08	; 8
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    2ed6:	8f 7e       	andi	r24, 0xEF	; 239
    2ed8:	80 93 1c 03 	sts	0x031C, r24
    2edc:	cc 24       	eor	r12, r12
    2ede:	dd 24       	eor	r13, r13
    2ee0:	2c c0       	rjmp	.+88     	; 0x2f3a <main+0x2dbe>
    2ee2:	71 e0       	ldi	r23, 0x01	; 1
    2ee4:	c7 2e       	mov	r12, r23
    2ee6:	d1 2c       	mov	r13, r1
				}
				if(state == 34){
    2ee8:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2eea:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2eec:	22 32       	cpi	r18, 0x22	; 34
    2eee:	31 05       	cpc	r19, r1
    2ef0:	49 f4       	brne	.+18     	; 0x2f04 <main+0x2d88>
					u_motorByte0.bits_in_motorByte0.m1Dir = 0;
    2ef2:	80 91 1a 03 	lds	r24, 0x031A
    2ef6:	8d 7f       	andi	r24, 0xFD	; 253
    2ef8:	80 93 1a 03 	sts	0x031A, r24
    2efc:	61 e0       	ldi	r22, 0x01	; 1
    2efe:	86 2e       	mov	r8, r22
    2f00:	91 2c       	mov	r9, r1
    2f02:	1b c0       	rjmp	.+54     	; 0x2f3a <main+0x2dbe>
					m1 = 1;
					}
				if(state == 35){
    2f04:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2f06:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2f08:	43 32       	cpi	r20, 0x23	; 35
    2f0a:	51 05       	cpc	r21, r1
    2f0c:	b1 f4       	brne	.+44     	; 0x2f3a <main+0x2dbe>
					m1 = 0;
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    2f0e:	80 91 1a 03 	lds	r24, 0x031A
    2f12:	8b 7f       	andi	r24, 0xFB	; 251
    2f14:	80 93 1a 03 	sts	0x031A, r24
					if(print35 == 1){
    2f18:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f1a:	98 89       	ldd	r25, Y+16	; 0x10
    2f1c:	01 97       	sbiw	r24, 0x01	; 1
    2f1e:	19 f0       	breq	.+6      	; 0x2f26 <main+0x2daa>
    2f20:	88 24       	eor	r8, r8
    2f22:	99 24       	eor	r9, r9
    2f24:	0a c0       	rjmp	.+20     	; 0x2f3a <main+0x2dbe>
						OrangutanLCD::clear();
    2f26:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("END OF CYCLE");
    2f2a:	89 ee       	ldi	r24, 0xE9	; 233
    2f2c:	92 e0       	ldi	r25, 0x02	; 2
    2f2e:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    2f32:	88 24       	eor	r8, r8
    2f34:	99 24       	eor	r9, r9
    2f36:	18 8a       	std	Y+16, r1	; 0x10
    2f38:	1f 86       	std	Y+15, r1	; 0x0f





				if( ((counter - counterRef) % (totallength1) ) < (steplength1) && m1)  //check if it is in the right period of the loop to send high
    2f3a:	c8 01       	movw	r24, r16
    2f3c:	8e 19       	sub	r24, r14
    2f3e:	9f 09       	sbc	r25, r15
    2f40:	62 e0       	ldi	r22, 0x02	; 2
    2f42:	70 e0       	ldi	r23, 0x00	; 0
    2f44:	0e 94 35 20 	call	0x406a	; 0x406a <__divmodhi4>
    2f48:	9c 01       	movw	r18, r24
    2f4a:	18 16       	cp	r1, r24
    2f4c:	19 06       	cpc	r1, r25
    2f4e:	4c f0       	brlt	.+18     	; 0x2f62 <main+0x2de6>
    2f50:	81 14       	cp	r8, r1
    2f52:	91 04       	cpc	r9, r1
    2f54:	31 f0       	breq	.+12     	; 0x2f62 <main+0x2de6>
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 1; // set bit 0
    2f56:	80 91 1a 03 	lds	r24, 0x031A
    2f5a:	81 60       	ori	r24, 0x01	; 1
    2f5c:	80 93 1a 03 	sts	0x031A, r24
    2f60:	08 c0       	rjmp	.+16     	; 0x2f72 <main+0x2df6>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 0; // set bit 0
    2f62:	80 91 1a 03 	lds	r24, 0x031A
    2f66:	8e 7f       	andi	r24, 0xFE	; 254
    2f68:	80 93 1a 03 	sts	0x031A, r24
				}

				if( ((counter - counterRef) % (totallength2) ) < (steplength2) && m2)
    2f6c:	12 16       	cp	r1, r18
    2f6e:	13 06       	cpc	r1, r19
    2f70:	4c f0       	brlt	.+18     	; 0x2f84 <main+0x2e08>
    2f72:	c1 14       	cp	r12, r1
    2f74:	d1 04       	cpc	r13, r1
    2f76:	31 f0       	breq	.+12     	; 0x2f84 <main+0x2e08>
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 1; // set bit 1
    2f78:	80 91 1a 03 	lds	r24, 0x031A
    2f7c:	88 60       	ori	r24, 0x08	; 8
    2f7e:	80 93 1a 03 	sts	0x031A, r24
    2f82:	08 c0       	rjmp	.+16     	; 0x2f94 <main+0x2e18>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 0; // set bit 1
    2f84:	80 91 1a 03 	lds	r24, 0x031A
    2f88:	87 7f       	andi	r24, 0xF7	; 247
    2f8a:	80 93 1a 03 	sts	0x031A, r24
				}

				if( ((counter - counterRef) % (totallength3) ) < (steplength3) && m3)
    2f8e:	12 16       	cp	r1, r18
    2f90:	13 06       	cpc	r1, r19
    2f92:	4c f0       	brlt	.+18     	; 0x2fa6 <main+0x2e2a>
    2f94:	41 14       	cp	r4, r1
    2f96:	51 04       	cpc	r5, r1
    2f98:	31 f0       	breq	.+12     	; 0x2fa6 <main+0x2e2a>
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 1; // set bit 1
    2f9a:	80 91 1a 03 	lds	r24, 0x031A
    2f9e:	80 64       	ori	r24, 0x40	; 64
    2fa0:	80 93 1a 03 	sts	0x031A, r24
    2fa4:	08 c0       	rjmp	.+16     	; 0x2fb6 <main+0x2e3a>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 0; // set bit 1
    2fa6:	80 91 1a 03 	lds	r24, 0x031A
    2faa:	8f 7b       	andi	r24, 0xBF	; 191
    2fac:	80 93 1a 03 	sts	0x031A, r24
				}

				if( ((counter - counterRef) % (totallength4) ) < (steplength4) && m4)
    2fb0:	12 16       	cp	r1, r18
    2fb2:	13 06       	cpc	r1, r19
    2fb4:	3c f0       	brlt	.+14     	; 0x2fc4 <main+0x2e48>
    2fb6:	61 14       	cp	r6, r1
    2fb8:	71 04       	cpc	r7, r1
    2fba:	21 f0       	breq	.+8      	; 0x2fc4 <main+0x2e48>
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 1; // set bit 1
    2fbc:	80 91 1b 03 	lds	r24, 0x031B
    2fc0:	82 60       	ori	r24, 0x02	; 2
    2fc2:	03 c0       	rjmp	.+6      	; 0x2fca <main+0x2e4e>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 0; // set bit 1
    2fc4:	80 91 1b 03 	lds	r24, 0x031B
    2fc8:	8d 7f       	andi	r24, 0xFD	; 253
    2fca:	80 93 1b 03 	sts	0x031B, r24
				}

				if( ((counter - counterRefFive) % (totallength5) ) < (steplength5) && m5)
    2fce:	c8 01       	movw	r24, r16
    2fd0:	ed 85       	ldd	r30, Y+13	; 0x0d
    2fd2:	fe 85       	ldd	r31, Y+14	; 0x0e
    2fd4:	8e 1b       	sub	r24, r30
    2fd6:	9f 0b       	sbc	r25, r31
    2fd8:	62 e0       	ldi	r22, 0x02	; 2
    2fda:	70 e0       	ldi	r23, 0x00	; 0
    2fdc:	0e 94 35 20 	call	0x406a	; 0x406a <__divmodhi4>
    2fe0:	18 16       	cp	r1, r24
    2fe2:	19 06       	cpc	r1, r25
    2fe4:	3c f0       	brlt	.+14     	; 0x2ff4 <main+0x2e78>
    2fe6:	21 14       	cp	r2, r1
    2fe8:	31 04       	cpc	r3, r1
    2fea:	21 f0       	breq	.+8      	; 0x2ff4 <main+0x2e78>
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 1; // set bit 1
    2fec:	80 91 1b 03 	lds	r24, 0x031B
    2ff0:	80 61       	ori	r24, 0x10	; 16
    2ff2:	03 c0       	rjmp	.+6      	; 0x2ffa <main+0x2e7e>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 0; // set bit 1
    2ff4:	80 91 1b 03 	lds	r24, 0x031B
    2ff8:	8f 7e       	andi	r24, 0xEF	; 239
    2ffa:	80 93 1b 03 	sts	0x031B, r24
				}

				i2c_start(I2C1+I2C_WRITE);
    2ffe:	80 e4       	ldi	r24, 0x40	; 64
    3000:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				i2c_write(0x2);									// write command byte
    3004:	82 e0       	ldi	r24, 0x02	; 2
    3006:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_write(u_motorByte0.motorByte0);                       // write first byte of output
    300a:	80 91 1a 03 	lds	r24, 0x031A
    300e:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
       	 		i2c_write(u_motorByte1.motorByte1);                       // write second byte of output
    3012:	80 91 1b 03 	lds	r24, 0x031B
    3016:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
       		 	i2c_stop();                            // set stop conditon = release bus
    301a:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>

				i2c_start(I2C2+I2C_WRITE);
    301e:	82 e4       	ldi	r24, 0x42	; 66
    3020:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
				i2c_write(0x2);
    3024:	82 e0       	ldi	r24, 0x02	; 2
    3026:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_write(u_outputByte0.outputByte0);
    302a:	80 91 1c 03 	lds	r24, 0x031C
    302e:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
				i2c_write(u_outputByte1.outputByte1);
    3032:	80 91 1d 03 	lds	r24, 0x031D
    3036:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>

				counter ++;
    303a:	0f 5f       	subi	r16, 0xFF	; 255
    303c:	1f 4f       	sbci	r17, 0xFF	; 255
    303e:	81 e0       	ldi	r24, 0x01	; 1
    3040:	90 e0       	ldi	r25, 0x00	; 0
    3042:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>


		if(!OrangutanDigital::isInputHigh(IO_D1) && OrangutanDigital::isInputHigh(IO_D2)){
			OrangutanLCD::gotoXY(0,1);
			OrangutanLCD::print("BOTH B");
			while(state != -1)
    3046:	2d 8d       	ldd	r18, Y+29	; 0x1d
    3048:	3e 8d       	ldd	r19, Y+30	; 0x1e
    304a:	2f 5f       	subi	r18, 0xFF	; 255
    304c:	3f 4f       	sbci	r19, 0xFF	; 255
    304e:	09 f0       	breq	.+2      	; 0x3052 <main+0x2ed6>
    3050:	1c ca       	rjmp	.-3016   	; 0x248a <main+0x230e>
				counter ++;
				delay_ms(1);
   		 	}
		}
		}
		u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    3052:	80 91 1a 03 	lds	r24, 0x031A
		u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    3056:	8b 7d       	andi	r24, 0xDB	; 219
    3058:	80 93 1a 03 	sts	0x031A, r24
		u_motorByte1.bits_in_motorByte1.m3Drop = 0;
    305c:	80 91 1b 03 	lds	r24, 0x031B
		u_motorByte1.bits_in_motorByte1.m4Drop = 0;
		u_motorByte1.bits_in_motorByte1.m5Drop = 0;
    3060:	86 7b       	andi	r24, 0xB6	; 182
    3062:	80 93 1b 03 	sts	0x031B, r24
		
		i2c_start(I2C1+I2C_WRITE);
    3066:	80 e4       	ldi	r24, 0x40	; 64
    3068:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>
		i2c_write(0x2);
    306c:	82 e0       	ldi	r24, 0x02	; 2
    306e:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
		i2c_write(u_motorByte0.motorByte0);
    3072:	80 91 1a 03 	lds	r24, 0x031A
    3076:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
		i2c_write(u_motorByte1.motorByte1);
    307a:	80 91 1b 03 	lds	r24, 0x031B
    307e:	0e 94 94 1a 	call	0x3528	; 0x3528 <_Z9i2c_writeh>
		i2c_stop();
    3082:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_Z8i2c_stopv>
	}
	OrangutanLCD::print("END");
    3086:	8e e0       	ldi	r24, 0x0E	; 14
    3088:	93 e0       	ldi	r25, 0x03	; 3
    308a:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    308e:	ff cf       	rjmp	.-2      	; 0x308e <main+0x2f12>
				
				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
    3090:	51 e0       	ldi	r21, 0x01	; 1
    3092:	85 16       	cp	r8, r21
    3094:	91 04       	cpc	r9, r1
    3096:	11 f0       	breq	.+4      	; 0x309c <main+0x2f20>
    3098:	0c 94 ad 01 	jmp	0x35a	; 0x35a <main+0x1de>
    309c:	0c 94 94 01 	jmp	0x328	; 0x328 <main+0x1ac>
    30a0:	51 e0       	ldi	r21, 0x01	; 1
    30a2:	85 2e       	mov	r8, r21
    30a4:	91 2c       	mov	r9, r1
    30a6:	0c 94 c9 01 	jmp	0x392	; 0x392 <main+0x216>
    30aa:	81 e0       	ldi	r24, 0x01	; 1
    30ac:	90 e0       	ldi	r25, 0x00	; 0
    30ae:	9e 8f       	std	Y+30, r25	; 0x1e
    30b0:	8d 8f       	std	Y+29, r24	; 0x1d
    30b2:	0c 94 50 02 	jmp	0x4a0	; 0x4a0 <main+0x324>
    30b6:	e2 e0       	ldi	r30, 0x02	; 2
    30b8:	f0 e0       	ldi	r31, 0x00	; 0
    30ba:	fe 8f       	std	Y+30, r31	; 0x1e
    30bc:	ed 8f       	std	Y+29, r30	; 0x1d
    30be:	0c 94 64 02 	jmp	0x4c8	; 0x4c8 <main+0x34c>
    30c2:	23 e0       	ldi	r18, 0x03	; 3
    30c4:	30 e0       	ldi	r19, 0x00	; 0
    30c6:	3e 8f       	std	Y+30, r19	; 0x1e
    30c8:	2d 8f       	std	Y+29, r18	; 0x1d
    30ca:	0c 94 6d 02 	jmp	0x4da	; 0x4da <main+0x35e>
    30ce:	44 e0       	ldi	r20, 0x04	; 4
    30d0:	50 e0       	ldi	r21, 0x00	; 0
    30d2:	5e 8f       	std	Y+30, r21	; 0x1e
    30d4:	4d 8f       	std	Y+29, r20	; 0x1d
    30d6:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <main+0x382>
    30da:	85 e0       	ldi	r24, 0x05	; 5
    30dc:	90 e0       	ldi	r25, 0x00	; 0
    30de:	9e 8f       	std	Y+30, r25	; 0x1e
    30e0:	8d 8f       	std	Y+29, r24	; 0x1d
    30e2:	0c 94 8b 02 	jmp	0x516	; 0x516 <main+0x39a>
    30e6:	e6 e0       	ldi	r30, 0x06	; 6
    30e8:	f0 e0       	ldi	r31, 0x00	; 0
    30ea:	fe 8f       	std	Y+30, r31	; 0x1e
    30ec:	ed 8f       	std	Y+29, r30	; 0x1d
    30ee:	0c 94 9f 02 	jmp	0x53e	; 0x53e <main+0x3c2>
    30f2:	27 e0       	ldi	r18, 0x07	; 7
    30f4:	30 e0       	ldi	r19, 0x00	; 0
    30f6:	3e 8f       	std	Y+30, r19	; 0x1e
    30f8:	2d 8f       	std	Y+29, r18	; 0x1d
    30fa:	0c 94 aa 02 	jmp	0x554	; 0x554 <main+0x3d8>
    30fe:	48 e0       	ldi	r20, 0x08	; 8
    3100:	50 e0       	ldi	r21, 0x00	; 0
    3102:	5e 8f       	std	Y+30, r21	; 0x1e
    3104:	4d 8f       	std	Y+29, r20	; 0x1d
    3106:	0c 94 bd 02 	jmp	0x57a	; 0x57a <main+0x3fe>
    310a:	8a e0       	ldi	r24, 0x0A	; 10
    310c:	90 e0       	ldi	r25, 0x00	; 0
    310e:	9e 8f       	std	Y+30, r25	; 0x1e
    3110:	8d 8f       	std	Y+29, r24	; 0x1d
    3112:	0c 94 dd 02 	jmp	0x5ba	; 0x5ba <main+0x43e>
    3116:	56 01       	movw	r10, r12
    3118:	41 e0       	ldi	r20, 0x01	; 1
    311a:	e4 2e       	mov	r14, r20
    311c:	f1 2c       	mov	r15, r1
    311e:	00 e0       	ldi	r16, 0x00	; 0
    3120:	10 e0       	ldi	r17, 0x00	; 0
    3122:	eb e0       	ldi	r30, 0x0B	; 11
    3124:	f0 e0       	ldi	r31, 0x00	; 0
    3126:	fe 8f       	std	Y+30, r31	; 0x1e
    3128:	ed 8f       	std	Y+29, r30	; 0x1d
    312a:	0c 94 e8 02 	jmp	0x5d0	; 0x5d0 <main+0x454>
    312e:	2c e0       	ldi	r18, 0x0C	; 12
    3130:	30 e0       	ldi	r19, 0x00	; 0
    3132:	3e 8f       	std	Y+30, r19	; 0x1e
    3134:	2d 8f       	std	Y+29, r18	; 0x1d
    3136:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <main+0x47a>
    313a:	56 01       	movw	r10, r12
    313c:	31 e0       	ldi	r19, 0x01	; 1
    313e:	e3 2e       	mov	r14, r19
    3140:	f1 2c       	mov	r15, r1
    3142:	00 e0       	ldi	r16, 0x00	; 0
    3144:	10 e0       	ldi	r17, 0x00	; 0
    3146:	4d e0       	ldi	r20, 0x0D	; 13
    3148:	50 e0       	ldi	r21, 0x00	; 0
    314a:	5e 8f       	std	Y+30, r21	; 0x1e
    314c:	4d 8f       	std	Y+29, r20	; 0x1d
    314e:	0c 94 07 03 	jmp	0x60e	; 0x60e <main+0x492>
    3152:	8e e0       	ldi	r24, 0x0E	; 14
    3154:	90 e0       	ldi	r25, 0x00	; 0
    3156:	9e 8f       	std	Y+30, r25	; 0x1e
    3158:	8d 8f       	std	Y+29, r24	; 0x1d
    315a:	0c 94 1b 03 	jmp	0x636	; 0x636 <main+0x4ba>
    315e:	56 01       	movw	r10, r12
    3160:	21 e0       	ldi	r18, 0x01	; 1
    3162:	e2 2e       	mov	r14, r18
    3164:	f1 2c       	mov	r15, r1
    3166:	00 e0       	ldi	r16, 0x00	; 0
    3168:	10 e0       	ldi	r17, 0x00	; 0
    316a:	ef e0       	ldi	r30, 0x0F	; 15
    316c:	f0 e0       	ldi	r31, 0x00	; 0
    316e:	fe 8f       	std	Y+30, r31	; 0x1e
    3170:	ed 8f       	std	Y+29, r30	; 0x1d
    3172:	0c 94 26 03 	jmp	0x64c	; 0x64c <main+0x4d0>
    3176:	20 e1       	ldi	r18, 0x10	; 16
    3178:	30 e0       	ldi	r19, 0x00	; 0
    317a:	3e 8f       	std	Y+30, r19	; 0x1e
    317c:	2d 8f       	std	Y+29, r18	; 0x1d
    317e:	0c 94 39 03 	jmp	0x672	; 0x672 <main+0x4f6>
    3182:	56 01       	movw	r10, r12
    3184:	91 e0       	ldi	r25, 0x01	; 1
    3186:	e9 2e       	mov	r14, r25
    3188:	f1 2c       	mov	r15, r1
    318a:	00 e0       	ldi	r16, 0x00	; 0
    318c:	10 e0       	ldi	r17, 0x00	; 0
    318e:	41 e1       	ldi	r20, 0x11	; 17
    3190:	50 e0       	ldi	r21, 0x00	; 0
    3192:	5e 8f       	std	Y+30, r21	; 0x1e
    3194:	4d 8f       	std	Y+29, r20	; 0x1d
    3196:	0c 94 45 03 	jmp	0x68a	; 0x68a <main+0x50e>
    319a:	82 e1       	ldi	r24, 0x12	; 18
    319c:	90 e0       	ldi	r25, 0x00	; 0
    319e:	9e 8f       	std	Y+30, r25	; 0x1e
    31a0:	8d 8f       	std	Y+29, r24	; 0x1d
    31a2:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <main+0x536>
    31a6:	56 01       	movw	r10, r12
    31a8:	81 e0       	ldi	r24, 0x01	; 1
    31aa:	e8 2e       	mov	r14, r24
    31ac:	f1 2c       	mov	r15, r1
    31ae:	00 e0       	ldi	r16, 0x00	; 0
    31b0:	10 e0       	ldi	r17, 0x00	; 0
    31b2:	e3 e1       	ldi	r30, 0x13	; 19
    31b4:	f0 e0       	ldi	r31, 0x00	; 0
    31b6:	fe 8f       	std	Y+30, r31	; 0x1e
    31b8:	ed 8f       	std	Y+29, r30	; 0x1d
    31ba:	0c 94 64 03 	jmp	0x6c8	; 0x6c8 <main+0x54c>
    31be:	24 e1       	ldi	r18, 0x14	; 20
    31c0:	30 e0       	ldi	r19, 0x00	; 0
    31c2:	3e 8f       	std	Y+30, r19	; 0x1e
    31c4:	2d 8f       	std	Y+29, r18	; 0x1d
    31c6:	0c 94 77 03 	jmp	0x6ee	; 0x6ee <main+0x572>
    31ca:	56 01       	movw	r10, r12
    31cc:	01 e0       	ldi	r16, 0x01	; 1
    31ce:	e0 2e       	mov	r14, r16
    31d0:	f1 2c       	mov	r15, r1
    31d2:	00 e0       	ldi	r16, 0x00	; 0
    31d4:	10 e0       	ldi	r17, 0x00	; 0
    31d6:	45 e1       	ldi	r20, 0x15	; 21
    31d8:	50 e0       	ldi	r21, 0x00	; 0
    31da:	5e 8f       	std	Y+30, r21	; 0x1e
    31dc:	4d 8f       	std	Y+29, r20	; 0x1d
    31de:	0c 94 83 03 	jmp	0x706	; 0x706 <main+0x58a>
    31e2:	86 e1       	ldi	r24, 0x16	; 22
    31e4:	90 e0       	ldi	r25, 0x00	; 0
    31e6:	9e 8f       	std	Y+30, r25	; 0x1e
    31e8:	8d 8f       	std	Y+29, r24	; 0x1d
    31ea:	0c 94 97 03 	jmp	0x72e	; 0x72e <main+0x5b2>
    31ee:	56 01       	movw	r10, r12
    31f0:	11 e0       	ldi	r17, 0x01	; 1
    31f2:	e1 2e       	mov	r14, r17
    31f4:	f1 2c       	mov	r15, r1
    31f6:	00 e0       	ldi	r16, 0x00	; 0
    31f8:	10 e0       	ldi	r17, 0x00	; 0
    31fa:	e7 e1       	ldi	r30, 0x17	; 23
    31fc:	f0 e0       	ldi	r31, 0x00	; 0
    31fe:	fe 8f       	std	Y+30, r31	; 0x1e
    3200:	ed 8f       	std	Y+29, r30	; 0x1d
    3202:	0c 94 a2 03 	jmp	0x744	; 0x744 <main+0x5c8>
    3206:	28 e1       	ldi	r18, 0x18	; 24
    3208:	30 e0       	ldi	r19, 0x00	; 0
    320a:	3e 8f       	std	Y+30, r19	; 0x1e
    320c:	2d 8f       	std	Y+29, r18	; 0x1d
    320e:	0c 94 b5 03 	jmp	0x76a	; 0x76a <main+0x5ee>
    3212:	56 01       	movw	r10, r12
    3214:	b1 e0       	ldi	r27, 0x01	; 1
    3216:	eb 2e       	mov	r14, r27
    3218:	f1 2c       	mov	r15, r1
    321a:	00 e0       	ldi	r16, 0x00	; 0
    321c:	10 e0       	ldi	r17, 0x00	; 0
    321e:	49 e1       	ldi	r20, 0x19	; 25
    3220:	50 e0       	ldi	r21, 0x00	; 0
    3222:	5e 8f       	std	Y+30, r21	; 0x1e
    3224:	4d 8f       	std	Y+29, r20	; 0x1d
    3226:	0c 94 c1 03 	jmp	0x782	; 0x782 <main+0x606>
    322a:	8a e1       	ldi	r24, 0x1A	; 26
    322c:	90 e0       	ldi	r25, 0x00	; 0
    322e:	9e 8f       	std	Y+30, r25	; 0x1e
    3230:	8d 8f       	std	Y+29, r24	; 0x1d
    3232:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <main+0x638>
    3236:	56 01       	movw	r10, r12
    3238:	a1 e0       	ldi	r26, 0x01	; 1
    323a:	ea 2e       	mov	r14, r26
    323c:	f1 2c       	mov	r15, r1
    323e:	00 e0       	ldi	r16, 0x00	; 0
    3240:	10 e0       	ldi	r17, 0x00	; 0
    3242:	eb e1       	ldi	r30, 0x1B	; 27
    3244:	f0 e0       	ldi	r31, 0x00	; 0
    3246:	fe 8f       	std	Y+30, r31	; 0x1e
    3248:	ed 8f       	std	Y+29, r30	; 0x1d
    324a:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <main+0x64e>
    324e:	2c e1       	ldi	r18, 0x1C	; 28
    3250:	30 e0       	ldi	r19, 0x00	; 0
    3252:	3e 8f       	std	Y+30, r19	; 0x1e
    3254:	2d 8f       	std	Y+29, r18	; 0x1d
    3256:	0c 94 fe 03 	jmp	0x7fc	; 0x7fc <main+0x680>
    325a:	56 01       	movw	r10, r12
    325c:	f1 e0       	ldi	r31, 0x01	; 1
    325e:	ef 2e       	mov	r14, r31
    3260:	f1 2c       	mov	r15, r1
    3262:	00 e0       	ldi	r16, 0x00	; 0
    3264:	10 e0       	ldi	r17, 0x00	; 0
    3266:	4d e1       	ldi	r20, 0x1D	; 29
    3268:	50 e0       	ldi	r21, 0x00	; 0
    326a:	5e 8f       	std	Y+30, r21	; 0x1e
    326c:	4d 8f       	std	Y+29, r20	; 0x1d
    326e:	0c 94 0a 04 	jmp	0x814	; 0x814 <main+0x698>
    3272:	8e e1       	ldi	r24, 0x1E	; 30
    3274:	90 e0       	ldi	r25, 0x00	; 0
    3276:	9e 8f       	std	Y+30, r25	; 0x1e
    3278:	8d 8f       	std	Y+29, r24	; 0x1d
    327a:	0c 94 28 04 	jmp	0x850	; 0x850 <main+0x6d4>
    327e:	56 01       	movw	r10, r12
    3280:	e1 e0       	ldi	r30, 0x01	; 1
    3282:	ee 2e       	mov	r14, r30
    3284:	f1 2c       	mov	r15, r1
    3286:	00 e0       	ldi	r16, 0x00	; 0
    3288:	10 e0       	ldi	r17, 0x00	; 0
    328a:	ef e1       	ldi	r30, 0x1F	; 31
    328c:	f0 e0       	ldi	r31, 0x00	; 0
    328e:	fe 8f       	std	Y+30, r31	; 0x1e
    3290:	ed 8f       	std	Y+29, r30	; 0x1d
    3292:	0c 94 33 04 	jmp	0x866	; 0x866 <main+0x6ea>
    3296:	20 e2       	ldi	r18, 0x20	; 32
    3298:	30 e0       	ldi	r19, 0x00	; 0
    329a:	3e 8f       	std	Y+30, r19	; 0x1e
    329c:	2d 8f       	std	Y+29, r18	; 0x1d
    329e:	0c 94 4c 04 	jmp	0x898	; 0x898 <main+0x71c>
    32a2:	56 01       	movw	r10, r12
    32a4:	71 e0       	ldi	r23, 0x01	; 1
    32a6:	e7 2e       	mov	r14, r23
    32a8:	f1 2c       	mov	r15, r1
    32aa:	00 e0       	ldi	r16, 0x00	; 0
    32ac:	10 e0       	ldi	r17, 0x00	; 0
    32ae:	41 e2       	ldi	r20, 0x21	; 33
    32b0:	50 e0       	ldi	r21, 0x00	; 0
    32b2:	5e 8f       	std	Y+30, r21	; 0x1e
    32b4:	4d 8f       	std	Y+29, r20	; 0x1d
    32b6:	0c 94 58 04 	jmp	0x8b0	; 0x8b0 <main+0x734>
    32ba:	82 e2       	ldi	r24, 0x22	; 34
    32bc:	90 e0       	ldi	r25, 0x00	; 0
    32be:	9e 8f       	std	Y+30, r25	; 0x1e
    32c0:	8d 8f       	std	Y+29, r24	; 0x1d
    32c2:	0c 94 72 04 	jmp	0x8e4	; 0x8e4 <main+0x768>
    32c6:	56 01       	movw	r10, r12
    32c8:	61 e0       	ldi	r22, 0x01	; 1
    32ca:	e6 2e       	mov	r14, r22
    32cc:	f1 2c       	mov	r15, r1
    32ce:	00 e0       	ldi	r16, 0x00	; 0
    32d0:	10 e0       	ldi	r17, 0x00	; 0
    32d2:	e3 e2       	ldi	r30, 0x23	; 35
    32d4:	f0 e0       	ldi	r31, 0x00	; 0
    32d6:	fe 8f       	std	Y+30, r31	; 0x1e
    32d8:	ed 8f       	std	Y+29, r30	; 0x1d
    32da:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <main+0x77e>
    32de:	24 e2       	ldi	r18, 0x24	; 36
    32e0:	30 e0       	ldi	r19, 0x00	; 0
    32e2:	3e 8f       	std	Y+30, r19	; 0x1e
    32e4:	2d 8f       	std	Y+29, r18	; 0x1d
    32e6:	0c 94 af 04 	jmp	0x95e	; 0x95e <main+0x7e2>
    32ea:	56 01       	movw	r10, r12
    32ec:	51 e0       	ldi	r21, 0x01	; 1
    32ee:	e5 2e       	mov	r14, r21
    32f0:	f1 2c       	mov	r15, r1
    32f2:	00 e0       	ldi	r16, 0x00	; 0
    32f4:	10 e0       	ldi	r17, 0x00	; 0
    32f6:	45 e2       	ldi	r20, 0x25	; 37
    32f8:	50 e0       	ldi	r21, 0x00	; 0
    32fa:	5e 8f       	std	Y+30, r21	; 0x1e
    32fc:	4d 8f       	std	Y+29, r20	; 0x1d
    32fe:	0c 94 af 04 	jmp	0x95e	; 0x95e <main+0x7e2>
    3302:	86 e2       	ldi	r24, 0x26	; 38
    3304:	90 e0       	ldi	r25, 0x00	; 0
    3306:	9e 8f       	std	Y+30, r25	; 0x1e
    3308:	8d 8f       	std	Y+29, r24	; 0x1d
    330a:	0c 94 ca 04 	jmp	0x994	; 0x994 <main+0x818>
    330e:	56 01       	movw	r10, r12
    3310:	41 e0       	ldi	r20, 0x01	; 1
    3312:	e4 2e       	mov	r14, r20
    3314:	f1 2c       	mov	r15, r1
    3316:	00 e0       	ldi	r16, 0x00	; 0
    3318:	10 e0       	ldi	r17, 0x00	; 0
    331a:	e7 e2       	ldi	r30, 0x27	; 39
    331c:	f0 e0       	ldi	r31, 0x00	; 0
    331e:	fe 8f       	std	Y+30, r31	; 0x1e
    3320:	ed 8f       	std	Y+29, r30	; 0x1d
    3322:	0c 94 e6 04 	jmp	0x9cc	; 0x9cc <main+0x850>
    3326:	28 e2       	ldi	r18, 0x28	; 40
    3328:	30 e0       	ldi	r19, 0x00	; 0
    332a:	3e 8f       	std	Y+30, r19	; 0x1e
    332c:	2d 8f       	std	Y+29, r18	; 0x1d
    332e:	0c 94 04 05 	jmp	0xa08	; 0xa08 <main+0x88c>
    3332:	56 01       	movw	r10, r12
    3334:	49 e2       	ldi	r20, 0x29	; 41
    3336:	50 e0       	ldi	r21, 0x00	; 0
    3338:	5e 8f       	std	Y+30, r21	; 0x1e
    333a:	4d 8f       	std	Y+29, r20	; 0x1d
    333c:	31 e0       	ldi	r19, 0x01	; 1
    333e:	e3 2e       	mov	r14, r19
    3340:	f1 2c       	mov	r15, r1
    3342:	00 e0       	ldi	r16, 0x00	; 0
    3344:	10 e0       	ldi	r17, 0x00	; 0
    3346:	0c 94 af 04 	jmp	0x95e	; 0x95e <main+0x7e2>
    334a:	88 24       	eor	r8, r8
    334c:	99 24       	eor	r9, r9
    334e:	cc 24       	eor	r12, r12
    3350:	dd 24       	eor	r13, r13
    3352:	44 24       	eor	r4, r4
    3354:	55 24       	eor	r5, r5
    3356:	22 24       	eor	r2, r2
    3358:	33 24       	eor	r3, r3
    335a:	1e 8e       	std	Y+30, r1	; 0x1e
    335c:	1d 8e       	std	Y+29, r1	; 0x1d
    335e:	00 e0       	ldi	r16, 0x00	; 0
    3360:	10 e0       	ldi	r17, 0x00	; 0
    3362:	81 e0       	ldi	r24, 0x01	; 1
    3364:	90 e0       	ldi	r25, 0x00	; 0
    3366:	9a 8f       	std	Y+26, r25	; 0x1a
    3368:	89 8f       	std	Y+25, r24	; 0x19
    336a:	98 8f       	std	Y+24, r25	; 0x18
    336c:	8f 8b       	std	Y+23, r24	; 0x17
    336e:	9c 8b       	std	Y+20, r25	; 0x14
    3370:	8b 8b       	std	Y+19, r24	; 0x13
    3372:	9a 8b       	std	Y+18, r25	; 0x12
    3374:	89 8b       	std	Y+17, r24	; 0x11
    3376:	98 8b       	std	Y+16, r25	; 0x10
    3378:	8f 87       	std	Y+15, r24	; 0x0f
    337a:	ee 24       	eor	r14, r14
    337c:	ff 24       	eor	r15, r15
    337e:	1e 86       	std	Y+14, r1	; 0x0e
    3380:	1d 86       	std	Y+13, r1	; 0x0d
    3382:	98 87       	std	Y+8, r25	; 0x08
    3384:	8f 83       	std	Y+7, r24	; 0x07
    3386:	1e 82       	std	Y+6, r1	; 0x06
    3388:	1d 82       	std	Y+5, r1	; 0x05
    338a:	1c 82       	std	Y+4, r1	; 0x04
    338c:	1b 82       	std	Y+3, r1	; 0x03
    338e:	aa 24       	eor	r10, r10
    3390:	bb 24       	eor	r11, r11
    3392:	0c 94 37 0d 	jmp	0x1a6e	; 0x1a6e <main+0x18f2>

				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
    3396:	91 e0       	ldi	r25, 0x01	; 1
    3398:	a9 16       	cp	r10, r25
    339a:	b1 04       	cpc	r11, r1
    339c:	11 f0       	breq	.+4      	; 0x33a2 <main+0x3226>
    339e:	0c 94 c1 08 	jmp	0x1182	; 0x1182 <main+0x1006>
    33a2:	0c 94 a8 08 	jmp	0x1150	; 0x1150 <main+0xfd4>
    33a6:	21 e0       	ldi	r18, 0x01	; 1
    33a8:	a2 2e       	mov	r10, r18
    33aa:	b1 2c       	mov	r11, r1
    33ac:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <main+0x103e>
    33b0:	e3 e2       	ldi	r30, 0x23	; 35
    33b2:	f0 e0       	ldi	r31, 0x00	; 0
    33b4:	fe 8f       	std	Y+30, r31	; 0x1e
    33b6:	ed 8f       	std	Y+29, r30	; 0x1d
    33b8:	0c 94 dd 0a 	jmp	0x15ba	; 0x15ba <main+0x143e>
    33bc:	cc 24       	eor	r12, r12
    33be:	dd 24       	eor	r13, r13
    33c0:	1a 8e       	std	Y+26, r1	; 0x1a
    33c2:	19 8e       	std	Y+25, r1	; 0x19
    33c4:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <main+0x14e6>
    33c8:	cc 24       	eor	r12, r12
    33ca:	dd 24       	eor	r13, r13
    33cc:	0c 94 aa 0b 	jmp	0x1754	; 0x1754 <main+0x15d8>
    33d0:	cc 24       	eor	r12, r12
    33d2:	dd 24       	eor	r13, r13
    33d4:	0c 94 35 0c 	jmp	0x186a	; 0x186a <main+0x16ee>
    33d8:	66 24       	eor	r6, r6
    33da:	77 24       	eor	r7, r7
    33dc:	21 e0       	ldi	r18, 0x01	; 1
    33de:	30 e0       	ldi	r19, 0x00	; 0
    33e0:	3e 8b       	std	Y+22, r19	; 0x16
    33e2:	2d 8b       	std	Y+21, r18	; 0x15
    33e4:	3d c8       	rjmp	.-3974   	; 0x2460 <main+0x22e4>

				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
    33e6:	31 e0       	ldi	r19, 0x01	; 1
    33e8:	a3 16       	cp	r10, r19
    33ea:	b1 04       	cpc	r11, r1
    33ec:	11 f0       	breq	.+4      	; 0x33f2 <main+0x3276>
    33ee:	0c 94 9c 0d 	jmp	0x1b38	; 0x1b38 <main+0x19bc>
    33f2:	0c 94 83 0d 	jmp	0x1b06	; 0x1b06 <main+0x198a>
    33f6:	91 e0       	ldi	r25, 0x01	; 1
    33f8:	a9 2e       	mov	r10, r25
    33fa:	b1 2c       	mov	r11, r1
    33fc:	0c 94 b8 0d 	jmp	0x1b70	; 0x1b70 <main+0x19f4>
    3400:	43 e2       	ldi	r20, 0x23	; 35
    3402:	50 e0       	ldi	r21, 0x00	; 0
    3404:	5e 8f       	std	Y+30, r21	; 0x1e
    3406:	4d 8f       	std	Y+29, r20	; 0x1d
    3408:	0c 94 bc 0f 	jmp	0x1f78	; 0x1f78 <main+0x1dfc>
    340c:	cc 24       	eor	r12, r12
    340e:	dd 24       	eor	r13, r13
    3410:	1a 8e       	std	Y+26, r1	; 0x1a
    3412:	19 8e       	std	Y+25, r1	; 0x19
    3414:	0c 94 11 10 	jmp	0x2022	; 0x2022 <main+0x1ea6>
    3418:	cc 24       	eor	r12, r12
    341a:	dd 24       	eor	r13, r13
    341c:	0c 94 8e 10 	jmp	0x211c	; 0x211c <main+0x1fa0>
    3420:	cc 24       	eor	r12, r12
    3422:	dd 24       	eor	r13, r13
    3424:	0c 94 21 11 	jmp	0x2242	; 0x2242 <main+0x20c6>

				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
    3428:	51 e0       	ldi	r21, 0x01	; 1
    342a:	a5 16       	cp	r10, r21
    342c:	b1 04       	cpc	r11, r1
    342e:	09 f0       	breq	.+2      	; 0x3432 <main+0x32b6>
    3430:	72 c8       	rjmp	.-3868   	; 0x2516 <main+0x239a>
    3432:	5a c8       	rjmp	.-3916   	; 0x24e8 <main+0x236c>
    3434:	81 e0       	ldi	r24, 0x01	; 1
    3436:	a8 2e       	mov	r10, r24
    3438:	b1 2c       	mov	r11, r1
    343a:	88 c8       	rjmp	.-3824   	; 0x254c <main+0x23d0>
    343c:	83 e2       	ldi	r24, 0x23	; 35
    343e:	90 e0       	ldi	r25, 0x00	; 0
    3440:	9e 8f       	std	Y+30, r25	; 0x1e
    3442:	8d 8f       	std	Y+29, r24	; 0x1d
    3444:	10 cb       	rjmp	.-2528   	; 0x2a66 <main+0x28ea>
    3446:	cc 24       	eor	r12, r12
    3448:	dd 24       	eor	r13, r13
    344a:	62 cb       	rjmp	.-2364   	; 0x2b10 <main+0x2994>
    344c:	cc 24       	eor	r12, r12
    344e:	dd 24       	eor	r13, r13
    3450:	d6 cb       	rjmp	.-2132   	; 0x2bfe <main+0x2a82>
    3452:	cc 24       	eor	r12, r12
    3454:	dd 24       	eor	r13, r13
    3456:	5d cc       	rjmp	.-1862   	; 0x2d12 <main+0x2b96>
    3458:	cc 24       	eor	r12, r12
    345a:	dd 24       	eor	r13, r13
    345c:	ec cc       	rjmp	.-1576   	; 0x2e36 <main+0x2cba>

0000345e <_ZdlPv>:
  return malloc(size); 
} 

void operator delete(void * ptr) 
{ 
  free(ptr); 
    345e:	0e 94 62 21 	call	0x42c4	; 0x42c4 <free>
} 
    3462:	08 95       	ret

00003464 <_Znwj>:
void * operator new(size_t size); 
void operator delete(void * ptr); 

void * operator new(size_t size) 
{ 
  return malloc(size); 
    3464:	0e 94 b5 20 	call	0x416a	; 0x416a <malloc>
} 
    3468:	08 95       	ret

0000346a <_Z8i2c_initv>:
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR = 0;                         /* no prescaler */
    346a:	10 92 b9 00 	sts	0x00B9, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
    346e:	8c e0       	ldi	r24, 0x0C	; 12
    3470:	80 93 b8 00 	sts	0x00B8, r24

}/* i2c_init */
    3474:	08 95       	ret

00003476 <_Z9i2c_starth>:

/*************************************************************************	
  Issues a start condition and sends address and transfer direction.
  return 0 = device accessible, 1= failed to access device
*************************************************************************/
unsigned char i2c_start(unsigned char address)
    3476:	98 2f       	mov	r25, r24
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
    3478:	84 ea       	ldi	r24, 0xA4	; 164
    347a:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
    347e:	80 91 bc 00 	lds	r24, 0x00BC
    3482:	87 ff       	sbrs	r24, 7
    3484:	fc cf       	rjmp	.-8      	; 0x347e <_Z9i2c_starth+0x8>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
    3486:	80 91 b9 00 	lds	r24, 0x00B9
    348a:	88 7f       	andi	r24, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
    348c:	88 30       	cpi	r24, 0x08	; 8
    348e:	21 f0       	breq	.+8      	; 0x3498 <_Z9i2c_starth+0x22>
    3490:	80 31       	cpi	r24, 0x10	; 16
    3492:	11 f0       	breq	.+4      	; 0x3498 <_Z9i2c_starth+0x22>
    3494:	81 e0       	ldi	r24, 0x01	; 1
    3496:	08 95       	ret

	// send device address
	TWDR = address;
    3498:	90 93 bb 00 	sts	0x00BB, r25
	TWCR = (1<<TWINT) | (1<<TWEN);
    349c:	84 e8       	ldi	r24, 0x84	; 132
    349e:	80 93 bc 00 	sts	0x00BC, r24

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
    34a2:	80 91 bc 00 	lds	r24, 0x00BC
    34a6:	87 ff       	sbrs	r24, 7
    34a8:	fc cf       	rjmp	.-8      	; 0x34a2 <_Z9i2c_starth+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
    34aa:	90 91 b9 00 	lds	r25, 0x00B9
    34ae:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
    34b0:	98 31       	cpi	r25, 0x18	; 24
    34b2:	11 f4       	brne	.+4      	; 0x34b8 <_Z9i2c_starth+0x42>
    34b4:	80 e0       	ldi	r24, 0x00	; 0
    34b6:	08 95       	ret
    34b8:	80 e0       	ldi	r24, 0x00	; 0
    34ba:	90 34       	cpi	r25, 0x40	; 64
    34bc:	09 f0       	breq	.+2      	; 0x34c0 <_Z9i2c_starth+0x4a>
    34be:	81 e0       	ldi	r24, 0x01	; 1

	return 0;

}/* i2c_start */
    34c0:	08 95       	ret

000034c2 <_Z14i2c_start_waith>:
 Issues a start condition and sends address and transfer direction.
 If device is busy, use ack polling to wait until device is ready
 
 Input:   address and transfer direction of I2C device
*************************************************************************/
void i2c_start_wait(unsigned char address)
    34c2:	98 2f       	mov	r25, r24


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
    34c4:	44 ea       	ldi	r20, 0xA4	; 164
    	twst = TW_STATUS & 0xF8;
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
    
    	// send device address
    	TWDR = address;
    	TWCR = (1<<TWINT) | (1<<TWEN);
    34c6:	34 e8       	ldi	r19, 0x84	; 132
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    34c8:	24 e9       	ldi	r18, 0x94	; 148


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
    34ca:	40 93 bc 00 	sts	0x00BC, r20
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
    34ce:	80 91 bc 00 	lds	r24, 0x00BC
    34d2:	87 ff       	sbrs	r24, 7
    34d4:	fc cf       	rjmp	.-8      	; 0x34ce <_Z14i2c_start_waith+0xc>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    34d6:	80 91 b9 00 	lds	r24, 0x00B9
    34da:	88 7f       	andi	r24, 0xF8	; 248
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
    34dc:	88 30       	cpi	r24, 0x08	; 8
    34de:	11 f0       	breq	.+4      	; 0x34e4 <_Z14i2c_start_waith+0x22>
    34e0:	80 31       	cpi	r24, 0x10	; 16
    34e2:	99 f7       	brne	.-26     	; 0x34ca <_Z14i2c_start_waith+0x8>
    
    	// send device address
    	TWDR = address;
    34e4:	90 93 bb 00 	sts	0x00BB, r25
    	TWCR = (1<<TWINT) | (1<<TWEN);
    34e8:	30 93 bc 00 	sts	0x00BC, r19
    
    	// wail until transmission completed
    	while(!(TWCR & (1<<TWINT)));
    34ec:	80 91 bc 00 	lds	r24, 0x00BC
    34f0:	87 ff       	sbrs	r24, 7
    34f2:	fc cf       	rjmp	.-8      	; 0x34ec <_Z14i2c_start_waith+0x2a>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    34f4:	80 91 b9 00 	lds	r24, 0x00B9
    34f8:	88 7f       	andi	r24, 0xF8	; 248
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
    34fa:	80 32       	cpi	r24, 0x20	; 32
    34fc:	11 f0       	breq	.+4      	; 0x3502 <_Z14i2c_start_waith+0x40>
    34fe:	88 35       	cpi	r24, 0x58	; 88
    3500:	39 f4       	brne	.+14     	; 0x3510 <_Z14i2c_start_waith+0x4e>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    3502:	20 93 bc 00 	sts	0x00BC, r18
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR & (1<<TWSTO));
    3506:	80 91 bc 00 	lds	r24, 0x00BC
    350a:	84 fd       	sbrc	r24, 4
    350c:	fc cf       	rjmp	.-8      	; 0x3506 <_Z14i2c_start_waith+0x44>
    350e:	dd cf       	rjmp	.-70     	; 0x34ca <_Z14i2c_start_waith+0x8>
    3510:	08 95       	ret

00003512 <_Z13i2c_rep_starth>:
 Return:  0 device accessible
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );
    3512:	0e 94 3b 1a 	call	0x3476	; 0x3476 <_Z9i2c_starth>

}/* i2c_rep_start */
    3516:	08 95       	ret

00003518 <_Z8i2c_stopv>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    3518:	84 e9       	ldi	r24, 0x94	; 148
    351a:	80 93 bc 00 	sts	0x00BC, r24
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
    351e:	80 91 bc 00 	lds	r24, 0x00BC
    3522:	84 fd       	sbrc	r24, 4
    3524:	fc cf       	rjmp	.-8      	; 0x351e <_Z8i2c_stopv+0x6>

}/* i2c_stop */
    3526:	08 95       	ret

00003528 <_Z9i2c_writeh>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    3528:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
    352c:	84 e8       	ldi	r24, 0x84	; 132
    352e:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
    3532:	80 91 bc 00 	lds	r24, 0x00BC
    3536:	87 ff       	sbrs	r24, 7
    3538:	fc cf       	rjmp	.-8      	; 0x3532 <_Z9i2c_writeh+0xa>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    353a:	80 91 b9 00 	lds	r24, 0x00B9
    353e:	90 e0       	ldi	r25, 0x00	; 0
    3540:	88 7f       	andi	r24, 0xF8	; 248
    3542:	88 32       	cpi	r24, 0x28	; 40
    3544:	09 f0       	breq	.+2      	; 0x3548 <_Z9i2c_writeh+0x20>
    3546:	91 e0       	ldi	r25, 0x01	; 1
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    3548:	89 2f       	mov	r24, r25
    354a:	08 95       	ret

0000354c <_Z11i2c_readAckv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    354c:	84 ec       	ldi	r24, 0xC4	; 196
    354e:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));    
    3552:	80 91 bc 00 	lds	r24, 0x00BC
    3556:	87 ff       	sbrs	r24, 7
    3558:	fc cf       	rjmp	.-8      	; 0x3552 <_Z11i2c_readAckv+0x6>

    return TWDR;
    355a:	80 91 bb 00 	lds	r24, 0x00BB

}/* i2c_readAck */
    355e:	08 95       	ret

00003560 <_Z11i2c_readNakv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
    3560:	84 e8       	ldi	r24, 0x84	; 132
    3562:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
    3566:	80 91 bc 00 	lds	r24, 0x00BC
    356a:	87 ff       	sbrs	r24, 7
    356c:	fc cf       	rjmp	.-8      	; 0x3566 <_Z11i2c_readNakv+0x6>
	
    return TWDR;
    356e:	80 91 bb 00 	lds	r24, 0x00BB

}/* i2c_readNak */
    3572:	08 95       	ret

00003574 <_ZN12OrangutanLCDC2Ev>:
    3574:	08 95       	ret

00003576 <_ZN12OrangutanLCDC1Ev>:
    3576:	08 95       	ret

00003578 <void_getchar>:
    3578:	80 e0       	ldi	r24, 0x00	; 0
    357a:	90 e0       	ldi	r25, 0x00	; 0
    357c:	08 95       	ret

0000357e <_ZN12OrangutanLCD8busyWaitEv>:
    357e:	ef 92       	push	r14
    3580:	ff 92       	push	r15
    3582:	0f 93       	push	r16
    3584:	1f 93       	push	r17
    3586:	67 b1       	in	r22, 0x07	; 7
    3588:	3d 98       	cbi	0x07, 5	; 7
    358a:	28 98       	cbi	0x05, 0	; 5
    358c:	29 9a       	sbi	0x05, 1	; 5
    358e:	e0 90 24 03 	lds	r14, 0x0324
    3592:	f0 90 25 03 	lds	r15, 0x0325
    3596:	00 91 26 03 	lds	r16, 0x0326
    359a:	10 91 27 03 	lds	r17, 0x0327
    359e:	20 e0       	ldi	r18, 0x00	; 0
    35a0:	30 e0       	ldi	r19, 0x00	; 0
    35a2:	41 e0       	ldi	r20, 0x01	; 1
    35a4:	50 e0       	ldi	r21, 0x00	; 0
    35a6:	ca 01       	movw	r24, r20
    35a8:	6f 93       	push	r22
    35aa:	64 e0       	ldi	r22, 0x04	; 4
    35ac:	6a 95       	dec	r22
    35ae:	f1 f7       	brne	.-4      	; 0x35ac <_ZN12OrangutanLCD8busyWaitEv+0x2e>
    35b0:	6f 91       	pop	r22
    35b2:	01 97       	sbiw	r24, 0x01	; 1
    35b4:	c9 f7       	brne	.-14     	; 0x35a8 <_ZN12OrangutanLCD8busyWaitEv+0x2a>
    35b6:	2a 9a       	sbi	0x05, 2	; 5
    35b8:	ca 01       	movw	r24, r20
    35ba:	6f 93       	push	r22
    35bc:	64 e0       	ldi	r22, 0x04	; 4
    35be:	6a 95       	dec	r22
    35c0:	f1 f7       	brne	.-4      	; 0x35be <_ZN12OrangutanLCD8busyWaitEv+0x40>
    35c2:	6f 91       	pop	r22
    35c4:	01 97       	sbiw	r24, 0x01	; 1
    35c6:	c9 f7       	brne	.-14     	; 0x35ba <_ZN12OrangutanLCD8busyWaitEv+0x3c>
    35c8:	86 b1       	in	r24, 0x06	; 6
    35ca:	2a 98       	cbi	0x05, 2	; 5
    35cc:	fa 01       	movw	r30, r20
    35ce:	6f 93       	push	r22
    35d0:	64 e0       	ldi	r22, 0x04	; 4
    35d2:	6a 95       	dec	r22
    35d4:	f1 f7       	brne	.-4      	; 0x35d2 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    35d6:	6f 91       	pop	r22
    35d8:	31 97       	sbiw	r30, 0x01	; 1
    35da:	c9 f7       	brne	.-14     	; 0x35ce <_ZN12OrangutanLCD8busyWaitEv+0x50>
    35dc:	2a 9a       	sbi	0x05, 2	; 5
    35de:	fa 01       	movw	r30, r20
    35e0:	6f 93       	push	r22
    35e2:	64 e0       	ldi	r22, 0x04	; 4
    35e4:	6a 95       	dec	r22
    35e6:	f1 f7       	brne	.-4      	; 0x35e4 <_ZN12OrangutanLCD8busyWaitEv+0x66>
    35e8:	6f 91       	pop	r22
    35ea:	31 97       	sbiw	r30, 0x01	; 1
    35ec:	c9 f7       	brne	.-14     	; 0x35e0 <_ZN12OrangutanLCD8busyWaitEv+0x62>
    35ee:	2a 98       	cbi	0x05, 2	; 5
    35f0:	2c 5f       	subi	r18, 0xFC	; 252
    35f2:	3f 4f       	sbci	r19, 0xFF	; 255
    35f4:	85 ff       	sbrs	r24, 5
    35f6:	09 c0       	rjmp	.+18     	; 0x360a <_ZN12OrangutanLCD8busyWaitEv+0x8c>
    35f8:	c9 01       	movw	r24, r18
    35fa:	a0 e0       	ldi	r26, 0x00	; 0
    35fc:	b0 e0       	ldi	r27, 0x00	; 0
    35fe:	8e 15       	cp	r24, r14
    3600:	9f 05       	cpc	r25, r15
    3602:	a0 07       	cpc	r26, r16
    3604:	b1 07       	cpc	r27, r17
    3606:	08 f4       	brcc	.+2      	; 0x360a <_ZN12OrangutanLCD8busyWaitEv+0x8c>
    3608:	ce cf       	rjmp	.-100    	; 0x35a6 <_ZN12OrangutanLCD8busyWaitEv+0x28>
    360a:	c9 01       	movw	r24, r18
    360c:	a0 e0       	ldi	r26, 0x00	; 0
    360e:	b0 e0       	ldi	r27, 0x00	; 0
    3610:	8e 15       	cp	r24, r14
    3612:	9f 05       	cpc	r25, r15
    3614:	a0 07       	cpc	r26, r16
    3616:	b1 07       	cpc	r27, r17
    3618:	28 f0       	brcs	.+10     	; 0x3624 <_ZN12OrangutanLCD8busyWaitEv+0xa6>
    361a:	82 e3       	ldi	r24, 0x32	; 50
    361c:	90 e0       	ldi	r25, 0x00	; 0
    361e:	a0 e0       	ldi	r26, 0x00	; 0
    3620:	b0 e0       	ldi	r27, 0x00	; 0
    3622:	04 c0       	rjmp	.+8      	; 0x362c <_ZN12OrangutanLCD8busyWaitEv+0xae>
    3624:	80 e3       	ldi	r24, 0x30	; 48
    3626:	95 e7       	ldi	r25, 0x75	; 117
    3628:	a0 e0       	ldi	r26, 0x00	; 0
    362a:	b0 e0       	ldi	r27, 0x00	; 0
    362c:	80 93 24 03 	sts	0x0324, r24
    3630:	90 93 25 03 	sts	0x0325, r25
    3634:	a0 93 26 03 	sts	0x0326, r26
    3638:	b0 93 27 03 	sts	0x0327, r27
    363c:	67 b9       	out	0x07, r22	; 7
    363e:	1f 91       	pop	r17
    3640:	0f 91       	pop	r16
    3642:	ff 90       	pop	r15
    3644:	ef 90       	pop	r14
    3646:	08 95       	ret

00003648 <_ZN12OrangutanLCD8sendDataEh>:
    3648:	28 b1       	in	r18, 0x08	; 8
    364a:	90 e0       	ldi	r25, 0x00	; 0
    364c:	8f 70       	andi	r24, 0x0F	; 15
    364e:	90 70       	andi	r25, 0x00	; 0
    3650:	88 0f       	add	r24, r24
    3652:	99 1f       	adc	r25, r25
    3654:	88 0f       	add	r24, r24
    3656:	99 1f       	adc	r25, r25
    3658:	23 7c       	andi	r18, 0xC3	; 195
    365a:	28 2b       	or	r18, r24
    365c:	28 b9       	out	0x08, r18	; 8
    365e:	2a 9a       	sbi	0x05, 2	; 5
    3660:	81 e0       	ldi	r24, 0x01	; 1
    3662:	90 e0       	ldi	r25, 0x00	; 0
    3664:	fc 01       	movw	r30, r24
    3666:	6f 93       	push	r22
    3668:	64 e0       	ldi	r22, 0x04	; 4
    366a:	6a 95       	dec	r22
    366c:	f1 f7       	brne	.-4      	; 0x366a <_ZN12OrangutanLCD8sendDataEh+0x22>
    366e:	6f 91       	pop	r22
    3670:	31 97       	sbiw	r30, 0x01	; 1
    3672:	c9 f7       	brne	.-14     	; 0x3666 <_ZN12OrangutanLCD8sendDataEh+0x1e>
    3674:	2a 98       	cbi	0x05, 2	; 5
    3676:	6f 93       	push	r22
    3678:	64 e0       	ldi	r22, 0x04	; 4
    367a:	6a 95       	dec	r22
    367c:	f1 f7       	brne	.-4      	; 0x367a <_ZN12OrangutanLCD8sendDataEh+0x32>
    367e:	6f 91       	pop	r22
    3680:	01 97       	sbiw	r24, 0x01	; 1
    3682:	c9 f7       	brne	.-14     	; 0x3676 <_ZN12OrangutanLCD8sendDataEh+0x2e>
    3684:	08 95       	ret

00003686 <_ZN12OrangutanLCD10initPrintfEv>:
    3686:	80 91 20 03 	lds	r24, 0x0320
    368a:	90 91 21 03 	lds	r25, 0x0321
    368e:	00 97       	sbiw	r24, 0x00	; 0
    3690:	11 f0       	breq	.+4      	; 0x3696 <_ZN12OrangutanLCD10initPrintfEv+0x10>
    3692:	0e 94 62 21 	call	0x42c4	; 0x42c4 <free>
    3696:	80 91 12 03 	lds	r24, 0x0312
    369a:	90 e0       	ldi	r25, 0x00	; 0
    369c:	01 97       	sbiw	r24, 0x01	; 1
    369e:	20 91 13 03 	lds	r18, 0x0313
    36a2:	30 e0       	ldi	r19, 0x00	; 0
    36a4:	ac 01       	movw	r20, r24
    36a6:	42 9f       	mul	r20, r18
    36a8:	c0 01       	movw	r24, r0
    36aa:	43 9f       	mul	r20, r19
    36ac:	90 0d       	add	r25, r0
    36ae:	52 9f       	mul	r21, r18
    36b0:	90 0d       	add	r25, r0
    36b2:	11 24       	eor	r1, r1
    36b4:	0e 94 b5 20 	call	0x416a	; 0x416a <malloc>
    36b8:	90 93 21 03 	sts	0x0321, r25
    36bc:	80 93 20 03 	sts	0x0320, r24
    36c0:	00 97       	sbiw	r24, 0x00	; 0
    36c2:	29 f1       	breq	.+74     	; 0x370e <_ZN12OrangutanLCD10initPrintfEv+0x88>
    36c4:	60 e0       	ldi	r22, 0x00	; 0
    36c6:	70 e2       	ldi	r23, 0x20	; 32
    36c8:	08 c0       	rjmp	.+16     	; 0x36da <_ZN12OrangutanLCD10initPrintfEv+0x54>
    36ca:	e0 91 20 03 	lds	r30, 0x0320
    36ce:	f0 91 21 03 	lds	r31, 0x0321
    36d2:	e4 0f       	add	r30, r20
    36d4:	f5 1f       	adc	r31, r21
    36d6:	70 83       	st	Z, r23
    36d8:	6f 5f       	subi	r22, 0xFF	; 255
    36da:	46 2f       	mov	r20, r22
    36dc:	50 e0       	ldi	r21, 0x00	; 0
    36de:	80 91 12 03 	lds	r24, 0x0312
    36e2:	90 e0       	ldi	r25, 0x00	; 0
    36e4:	01 97       	sbiw	r24, 0x01	; 1
    36e6:	20 91 13 03 	lds	r18, 0x0313
    36ea:	30 e0       	ldi	r19, 0x00	; 0
    36ec:	fc 01       	movw	r30, r24
    36ee:	e2 9f       	mul	r30, r18
    36f0:	c0 01       	movw	r24, r0
    36f2:	e3 9f       	mul	r30, r19
    36f4:	90 0d       	add	r25, r0
    36f6:	f2 9f       	mul	r31, r18
    36f8:	90 0d       	add	r25, r0
    36fa:	11 24       	eor	r1, r1
    36fc:	48 17       	cp	r20, r24
    36fe:	59 07       	cpc	r21, r25
    3700:	24 f3       	brlt	.-56     	; 0x36ca <_ZN12OrangutanLCD10initPrintfEv+0x44>
    3702:	88 ea       	ldi	r24, 0xA8	; 168
    3704:	9d e1       	ldi	r25, 0x1D	; 29
    3706:	6c eb       	ldi	r22, 0xBC	; 188
    3708:	7a e1       	ldi	r23, 0x1A	; 26
    370a:	0e 94 ba 21 	call	0x4374	; 0x4374 <fdevopen>
    370e:	08 95       	ret

00003710 <_ZN12OrangutanLCD10initPrintfEhh>:
    3710:	80 93 13 03 	sts	0x0313, r24
    3714:	60 93 12 03 	sts	0x0312, r22
    3718:	0e 94 43 1b 	call	0x3686	; 0x3686 <_ZN12OrangutanLCD10initPrintfEv>
    371c:	08 95       	ret

0000371e <lcd_init_printf_with_dimensions>:
    371e:	80 93 13 03 	sts	0x0313, r24
    3722:	60 93 12 03 	sts	0x0312, r22
    3726:	0e 94 43 1b 	call	0x3686	; 0x3686 <_ZN12OrangutanLCD10initPrintfEv>
    372a:	08 95       	ret

0000372c <lcd_init_printf>:
    372c:	0e 94 43 1b 	call	0x3686	; 0x3686 <_ZN12OrangutanLCD10initPrintfEv>
    3730:	08 95       	ret

00003732 <_ZN12OrangutanLCD5init2Ev>:
    3732:	3d 98       	cbi	0x07, 5	; 7
    3734:	45 9a       	sbi	0x08, 5	; 8
    3736:	80 e3       	ldi	r24, 0x30	; 48
    3738:	95 e7       	ldi	r25, 0x75	; 117
    373a:	a0 e0       	ldi	r26, 0x00	; 0
    373c:	b0 e0       	ldi	r27, 0x00	; 0
    373e:	80 93 24 03 	sts	0x0324, r24
    3742:	90 93 25 03 	sts	0x0325, r25
    3746:	a0 93 26 03 	sts	0x0326, r26
    374a:	b0 93 27 03 	sts	0x0327, r27
    374e:	20 9a       	sbi	0x04, 0	; 4
    3750:	21 9a       	sbi	0x04, 1	; 4
    3752:	22 9a       	sbi	0x04, 2	; 4
    3754:	8e e1       	ldi	r24, 0x1E	; 30
    3756:	90 e0       	ldi	r25, 0x00	; 0
    3758:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>
    375c:	83 e0       	ldi	r24, 0x03	; 3
    375e:	0e 94 ee 1e 	call	0x3ddc	; 0x3ddc <_ZN12OrangutanLCD13send_4bit_cmdEh>
    3762:	86 e0       	ldi	r24, 0x06	; 6
    3764:	90 e0       	ldi	r25, 0x00	; 0
    3766:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>
    376a:	83 e0       	ldi	r24, 0x03	; 3
    376c:	0e 94 ee 1e 	call	0x3ddc	; 0x3ddc <_ZN12OrangutanLCD13send_4bit_cmdEh>
    3770:	82 e0       	ldi	r24, 0x02	; 2
    3772:	90 e0       	ldi	r25, 0x00	; 0
    3774:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>
    3778:	83 e0       	ldi	r24, 0x03	; 3
    377a:	0e 94 ee 1e 	call	0x3ddc	; 0x3ddc <_ZN12OrangutanLCD13send_4bit_cmdEh>
    377e:	82 e0       	ldi	r24, 0x02	; 2
    3780:	90 e0       	ldi	r25, 0x00	; 0
    3782:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>
    3786:	82 e0       	ldi	r24, 0x02	; 2
    3788:	0e 94 ee 1e 	call	0x3ddc	; 0x3ddc <_ZN12OrangutanLCD13send_4bit_cmdEh>
    378c:	82 e0       	ldi	r24, 0x02	; 2
    378e:	90 e0       	ldi	r25, 0x00	; 0
    3790:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>
    3794:	88 e2       	ldi	r24, 0x28	; 40
    3796:	0e 94 38 1c 	call	0x3870	; 0x3870 <_ZN12OrangutanLCD8send_cmdEh>
    379a:	88 e0       	ldi	r24, 0x08	; 8
    379c:	0e 94 38 1c 	call	0x3870	; 0x3870 <_ZN12OrangutanLCD8send_cmdEh>
    37a0:	81 e0       	ldi	r24, 0x01	; 1
    37a2:	0e 94 38 1c 	call	0x3870	; 0x3870 <_ZN12OrangutanLCD8send_cmdEh>
    37a6:	86 e0       	ldi	r24, 0x06	; 6
    37a8:	0e 94 38 1c 	call	0x3870	; 0x3870 <_ZN12OrangutanLCD8send_cmdEh>
    37ac:	8c e0       	ldi	r24, 0x0C	; 12
    37ae:	0e 94 38 1c 	call	0x3870	; 0x3870 <_ZN12OrangutanLCD8send_cmdEh>
    37b2:	08 95       	ret

000037b4 <_ZN12OrangutanLCD4initEv>:
    37b4:	80 91 28 03 	lds	r24, 0x0328
    37b8:	88 23       	and	r24, r24
    37ba:	29 f4       	brne	.+10     	; 0x37c6 <_ZN12OrangutanLCD4initEv+0x12>
    37bc:	81 e0       	ldi	r24, 0x01	; 1
    37be:	80 93 28 03 	sts	0x0328, r24
    37c2:	0e 94 99 1b 	call	0x3732	; 0x3732 <_ZN12OrangutanLCD5init2Ev>
    37c6:	08 95       	ret

000037c8 <_ZN12OrangutanLCD4sendEhhh>:
    37c8:	ff 92       	push	r15
    37ca:	0f 93       	push	r16
    37cc:	1f 93       	push	r17
    37ce:	08 2f       	mov	r16, r24
    37d0:	16 2f       	mov	r17, r22
    37d2:	f4 2e       	mov	r15, r20
    37d4:	0e 94 da 1b 	call	0x37b4	; 0x37b4 <_ZN12OrangutanLCD4initEv>
    37d8:	0e 94 bf 1a 	call	0x357e	; 0x357e <_ZN12OrangutanLCD8busyWaitEv>
    37dc:	37 b1       	in	r19, 0x07	; 7
    37de:	28 b1       	in	r18, 0x08	; 8
    37e0:	29 98       	cbi	0x05, 1	; 5
    37e2:	11 23       	and	r17, r17
    37e4:	11 f0       	breq	.+4      	; 0x37ea <_ZN12OrangutanLCD4sendEhhh+0x22>
    37e6:	28 9a       	sbi	0x05, 0	; 5
    37e8:	01 c0       	rjmp	.+2      	; 0x37ec <_ZN12OrangutanLCD4sendEhhh+0x24>
    37ea:	28 98       	cbi	0x05, 0	; 5
    37ec:	87 b1       	in	r24, 0x07	; 7
    37ee:	8c 63       	ori	r24, 0x3C	; 60
    37f0:	87 b9       	out	0x07, r24	; 7
    37f2:	81 e0       	ldi	r24, 0x01	; 1
    37f4:	f8 16       	cp	r15, r24
    37f6:	e1 f0       	breq	.+56     	; 0x3830 <_ZN12OrangutanLCD4sendEhhh+0x68>
    37f8:	88 b1       	in	r24, 0x08	; 8
    37fa:	90 2f       	mov	r25, r16
    37fc:	92 95       	swap	r25
    37fe:	9f 70       	andi	r25, 0x0F	; 15
    3800:	99 0f       	add	r25, r25
    3802:	99 0f       	add	r25, r25
    3804:	83 7c       	andi	r24, 0xC3	; 195
    3806:	98 2b       	or	r25, r24
    3808:	98 b9       	out	0x08, r25	; 8
    380a:	2a 9a       	sbi	0x05, 2	; 5
    380c:	81 e0       	ldi	r24, 0x01	; 1
    380e:	90 e0       	ldi	r25, 0x00	; 0
    3810:	fc 01       	movw	r30, r24
    3812:	6f 93       	push	r22
    3814:	64 e0       	ldi	r22, 0x04	; 4
    3816:	6a 95       	dec	r22
    3818:	f1 f7       	brne	.-4      	; 0x3816 <_ZN12OrangutanLCD4sendEhhh+0x4e>
    381a:	6f 91       	pop	r22
    381c:	31 97       	sbiw	r30, 0x01	; 1
    381e:	c9 f7       	brne	.-14     	; 0x3812 <_ZN12OrangutanLCD4sendEhhh+0x4a>
    3820:	2a 98       	cbi	0x05, 2	; 5
    3822:	6f 93       	push	r22
    3824:	64 e0       	ldi	r22, 0x04	; 4
    3826:	6a 95       	dec	r22
    3828:	f1 f7       	brne	.-4      	; 0x3826 <_ZN12OrangutanLCD4sendEhhh+0x5e>
    382a:	6f 91       	pop	r22
    382c:	01 97       	sbiw	r24, 0x01	; 1
    382e:	c9 f7       	brne	.-14     	; 0x3822 <_ZN12OrangutanLCD4sendEhhh+0x5a>
    3830:	88 b1       	in	r24, 0x08	; 8
    3832:	0f 70       	andi	r16, 0x0F	; 15
    3834:	00 0f       	add	r16, r16
    3836:	00 0f       	add	r16, r16
    3838:	83 7c       	andi	r24, 0xC3	; 195
    383a:	80 2b       	or	r24, r16
    383c:	88 b9       	out	0x08, r24	; 8
    383e:	2a 9a       	sbi	0x05, 2	; 5
    3840:	81 e0       	ldi	r24, 0x01	; 1
    3842:	90 e0       	ldi	r25, 0x00	; 0
    3844:	fc 01       	movw	r30, r24
    3846:	6f 93       	push	r22
    3848:	64 e0       	ldi	r22, 0x04	; 4
    384a:	6a 95       	dec	r22
    384c:	f1 f7       	brne	.-4      	; 0x384a <_ZN12OrangutanLCD4sendEhhh+0x82>
    384e:	6f 91       	pop	r22
    3850:	31 97       	sbiw	r30, 0x01	; 1
    3852:	c9 f7       	brne	.-14     	; 0x3846 <_ZN12OrangutanLCD4sendEhhh+0x7e>
    3854:	2a 98       	cbi	0x05, 2	; 5
    3856:	6f 93       	push	r22
    3858:	64 e0       	ldi	r22, 0x04	; 4
    385a:	6a 95       	dec	r22
    385c:	f1 f7       	brne	.-4      	; 0x385a <_ZN12OrangutanLCD4sendEhhh+0x92>
    385e:	6f 91       	pop	r22
    3860:	01 97       	sbiw	r24, 0x01	; 1
    3862:	c9 f7       	brne	.-14     	; 0x3856 <_ZN12OrangutanLCD4sendEhhh+0x8e>
    3864:	37 b9       	out	0x07, r19	; 7
    3866:	28 b9       	out	0x08, r18	; 8
    3868:	1f 91       	pop	r17
    386a:	0f 91       	pop	r16
    386c:	ff 90       	pop	r15
    386e:	08 95       	ret

00003870 <_ZN12OrangutanLCD8send_cmdEh>:
    3870:	60 e0       	ldi	r22, 0x00	; 0
    3872:	42 e0       	ldi	r20, 0x02	; 2
    3874:	0e 94 e4 1b 	call	0x37c8	; 0x37c8 <_ZN12OrangutanLCD4sendEhhh>
    3878:	08 95       	ret

0000387a <_ZN12OrangutanLCD10moveCursorEhh>:
    387a:	0f 93       	push	r16
    387c:	1f 93       	push	r17
    387e:	08 2f       	mov	r16, r24
    3880:	16 2f       	mov	r17, r22
    3882:	08 c0       	rjmp	.+16     	; 0x3894 <_ZN12OrangutanLCD10moveCursorEhh+0x1a>
    3884:	00 23       	and	r16, r16
    3886:	11 f4       	brne	.+4      	; 0x388c <_ZN12OrangutanLCD10moveCursorEhh+0x12>
    3888:	80 e1       	ldi	r24, 0x10	; 16
    388a:	01 c0       	rjmp	.+2      	; 0x388e <_ZN12OrangutanLCD10moveCursorEhh+0x14>
    388c:	84 e1       	ldi	r24, 0x14	; 20
    388e:	0e 94 38 1c 	call	0x3870	; 0x3870 <_ZN12OrangutanLCD8send_cmdEh>
    3892:	11 50       	subi	r17, 0x01	; 1
    3894:	11 23       	and	r17, r17
    3896:	b1 f7       	brne	.-20     	; 0x3884 <_ZN12OrangutanLCD10moveCursorEhh+0xa>
    3898:	1f 91       	pop	r17
    389a:	0f 91       	pop	r16
    389c:	08 95       	ret

0000389e <lcd_move_cursor>:
    389e:	0e 94 3d 1c 	call	0x387a	; 0x387a <_ZN12OrangutanLCD10moveCursorEhh>
    38a2:	08 95       	ret

000038a4 <_ZN12OrangutanLCD10hideCursorEv>:
    38a4:	8c e0       	ldi	r24, 0x0C	; 12
    38a6:	0e 94 38 1c 	call	0x3870	; 0x3870 <_ZN12OrangutanLCD8send_cmdEh>
    38aa:	08 95       	ret

000038ac <lcd_hide_cursor>:
    38ac:	0e 94 52 1c 	call	0x38a4	; 0x38a4 <_ZN12OrangutanLCD10hideCursorEv>
    38b0:	08 95       	ret

000038b2 <_ZN12OrangutanLCD10showCursorEh>:
    38b2:	81 30       	cpi	r24, 0x01	; 1
    38b4:	11 f4       	brne	.+4      	; 0x38ba <_ZN12OrangutanLCD10showCursorEh+0x8>
    38b6:	8f e0       	ldi	r24, 0x0F	; 15
    38b8:	01 c0       	rjmp	.+2      	; 0x38bc <_ZN12OrangutanLCD10showCursorEh+0xa>
    38ba:	8e e0       	ldi	r24, 0x0E	; 14
    38bc:	0e 94 38 1c 	call	0x3870	; 0x3870 <_ZN12OrangutanLCD8send_cmdEh>
    38c0:	08 95       	ret

000038c2 <lcd_show_cursor>:
    38c2:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <_ZN12OrangutanLCD10showCursorEh>
    38c6:	08 95       	ret

000038c8 <_ZN12OrangutanLCD6gotoXYEhh>:
    38c8:	a4 e0       	ldi	r26, 0x04	; 4
    38ca:	b0 e0       	ldi	r27, 0x00	; 0
    38cc:	ea e6       	ldi	r30, 0x6A	; 106
    38ce:	fc e1       	ldi	r31, 0x1C	; 28
    38d0:	0c 94 78 20 	jmp	0x40f0	; 0x40f0 <__prologue_saves__+0x1c>
    38d4:	18 2f       	mov	r17, r24
    38d6:	06 2f       	mov	r16, r22
    38d8:	80 e8       	ldi	r24, 0x80	; 128
    38da:	89 83       	std	Y+1, r24	; 0x01
    38dc:	80 ec       	ldi	r24, 0xC0	; 192
    38de:	8a 83       	std	Y+2, r24	; 0x02
    38e0:	84 e9       	ldi	r24, 0x94	; 148
    38e2:	8b 83       	std	Y+3, r24	; 0x03
    38e4:	84 ed       	ldi	r24, 0xD4	; 212
    38e6:	8c 83       	std	Y+4, r24	; 0x04
    38e8:	fe 01       	movw	r30, r28
    38ea:	e6 0f       	add	r30, r22
    38ec:	f1 1d       	adc	r31, r1
    38ee:	81 81       	ldd	r24, Z+1	; 0x01
    38f0:	81 0f       	add	r24, r17
    38f2:	0e 94 38 1c 	call	0x3870	; 0x3870 <_ZN12OrangutanLCD8send_cmdEh>
    38f6:	10 93 23 03 	sts	0x0323, r17
    38fa:	00 93 22 03 	sts	0x0322, r16
    38fe:	24 96       	adiw	r28, 0x04	; 4
    3900:	e4 e0       	ldi	r30, 0x04	; 4
    3902:	0c 94 94 20 	jmp	0x4128	; 0x4128 <__epilogue_restores__+0x1c>

00003906 <lcd_goto_xy>:
    3906:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
    390a:	08 95       	ret

0000390c <_ZN12OrangutanLCD5clearEv>:
    390c:	81 e0       	ldi	r24, 0x01	; 1
    390e:	0e 94 38 1c 	call	0x3870	; 0x3870 <_ZN12OrangutanLCD8send_cmdEh>
    3912:	80 91 20 03 	lds	r24, 0x0320
    3916:	90 91 21 03 	lds	r25, 0x0321
    391a:	89 2b       	or	r24, r25
    391c:	19 f1       	breq	.+70     	; 0x3964 <_ZN12OrangutanLCD5clearEv+0x58>
    391e:	60 e0       	ldi	r22, 0x00	; 0
    3920:	70 e2       	ldi	r23, 0x20	; 32
    3922:	08 c0       	rjmp	.+16     	; 0x3934 <_ZN12OrangutanLCD5clearEv+0x28>
    3924:	e0 91 20 03 	lds	r30, 0x0320
    3928:	f0 91 21 03 	lds	r31, 0x0321
    392c:	e4 0f       	add	r30, r20
    392e:	f5 1f       	adc	r31, r21
    3930:	70 83       	st	Z, r23
    3932:	6f 5f       	subi	r22, 0xFF	; 255
    3934:	46 2f       	mov	r20, r22
    3936:	50 e0       	ldi	r21, 0x00	; 0
    3938:	80 91 12 03 	lds	r24, 0x0312
    393c:	90 e0       	ldi	r25, 0x00	; 0
    393e:	01 97       	sbiw	r24, 0x01	; 1
    3940:	20 91 13 03 	lds	r18, 0x0313
    3944:	30 e0       	ldi	r19, 0x00	; 0
    3946:	fc 01       	movw	r30, r24
    3948:	e2 9f       	mul	r30, r18
    394a:	c0 01       	movw	r24, r0
    394c:	e3 9f       	mul	r30, r19
    394e:	90 0d       	add	r25, r0
    3950:	f2 9f       	mul	r31, r18
    3952:	90 0d       	add	r25, r0
    3954:	11 24       	eor	r1, r1
    3956:	48 17       	cp	r20, r24
    3958:	59 07       	cpc	r21, r25
    395a:	24 f3       	brlt	.-56     	; 0x3924 <_ZN12OrangutanLCD5clearEv+0x18>
    395c:	10 92 23 03 	sts	0x0323, r1
    3960:	10 92 22 03 	sts	0x0322, r1
    3964:	08 95       	ret

00003966 <clear>:
    3966:	0e 94 86 1c 	call	0x390c	; 0x390c <_ZN12OrangutanLCD5clearEv>
    396a:	08 95       	ret

0000396c <_ZN12OrangutanLCD9send_dataEh>:
    396c:	61 e0       	ldi	r22, 0x01	; 1
    396e:	42 e0       	ldi	r20, 0x02	; 2
    3970:	0e 94 e4 1b 	call	0x37c8	; 0x37c8 <_ZN12OrangutanLCD4sendEhhh>
    3974:	08 95       	ret

00003976 <_ZN12OrangutanLCD11printBinaryEh>:
    3976:	0f 93       	push	r16
    3978:	1f 93       	push	r17
    397a:	cf 93       	push	r28
    397c:	df 93       	push	r29
    397e:	00 e0       	ldi	r16, 0x00	; 0
    3980:	10 e8       	ldi	r17, 0x80	; 128
    3982:	c8 2f       	mov	r28, r24
    3984:	d0 e0       	ldi	r29, 0x00	; 0
    3986:	81 2f       	mov	r24, r17
    3988:	90 e0       	ldi	r25, 0x00	; 0
    398a:	8c 23       	and	r24, r28
    398c:	9d 23       	and	r25, r29
    398e:	89 2b       	or	r24, r25
    3990:	11 f0       	breq	.+4      	; 0x3996 <_ZN12OrangutanLCD11printBinaryEh+0x20>
    3992:	81 e3       	ldi	r24, 0x31	; 49
    3994:	01 c0       	rjmp	.+2      	; 0x3998 <_ZN12OrangutanLCD11printBinaryEh+0x22>
    3996:	80 e3       	ldi	r24, 0x30	; 48
    3998:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN12OrangutanLCD9send_dataEh>
    399c:	0f 5f       	subi	r16, 0xFF	; 255
    399e:	08 30       	cpi	r16, 0x08	; 8
    39a0:	11 f0       	breq	.+4      	; 0x39a6 <_ZN12OrangutanLCD11printBinaryEh+0x30>
    39a2:	16 95       	lsr	r17
    39a4:	f0 cf       	rjmp	.-32     	; 0x3986 <_ZN12OrangutanLCD11printBinaryEh+0x10>
    39a6:	df 91       	pop	r29
    39a8:	cf 91       	pop	r28
    39aa:	1f 91       	pop	r17
    39ac:	0f 91       	pop	r16
    39ae:	08 95       	ret

000039b0 <print_binary>:
    39b0:	0e 94 bb 1c 	call	0x3976	; 0x3976 <_ZN12OrangutanLCD11printBinaryEh>
    39b4:	08 95       	ret

000039b6 <_ZN12OrangutanLCD14printHexNibbleEh>:
    39b6:	8a 30       	cpi	r24, 0x0A	; 10
    39b8:	10 f4       	brcc	.+4      	; 0x39be <_ZN12OrangutanLCD14printHexNibbleEh+0x8>
    39ba:	80 5d       	subi	r24, 0xD0	; 208
    39bc:	01 c0       	rjmp	.+2      	; 0x39c0 <_ZN12OrangutanLCD14printHexNibbleEh+0xa>
    39be:	89 5c       	subi	r24, 0xC9	; 201
    39c0:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN12OrangutanLCD9send_dataEh>
    39c4:	08 95       	ret

000039c6 <_ZN12OrangutanLCD8printHexEh>:
    39c6:	1f 93       	push	r17
    39c8:	18 2f       	mov	r17, r24
    39ca:	82 95       	swap	r24
    39cc:	8f 70       	andi	r24, 0x0F	; 15
    39ce:	0e 94 db 1c 	call	0x39b6	; 0x39b6 <_ZN12OrangutanLCD14printHexNibbleEh>
    39d2:	81 2f       	mov	r24, r17
    39d4:	8f 70       	andi	r24, 0x0F	; 15
    39d6:	0e 94 db 1c 	call	0x39b6	; 0x39b6 <_ZN12OrangutanLCD14printHexNibbleEh>
    39da:	1f 91       	pop	r17
    39dc:	08 95       	ret

000039de <_ZN12OrangutanLCD8printHexEj>:
    39de:	1f 93       	push	r17
    39e0:	18 2f       	mov	r17, r24
    39e2:	89 2f       	mov	r24, r25
    39e4:	0e 94 e3 1c 	call	0x39c6	; 0x39c6 <_ZN12OrangutanLCD8printHexEh>
    39e8:	81 2f       	mov	r24, r17
    39ea:	0e 94 e3 1c 	call	0x39c6	; 0x39c6 <_ZN12OrangutanLCD8printHexEh>
    39ee:	1f 91       	pop	r17
    39f0:	08 95       	ret

000039f2 <print_hex>:
    39f2:	0e 94 ef 1c 	call	0x39de	; 0x39de <_ZN12OrangutanLCD8printHexEj>
    39f6:	08 95       	ret

000039f8 <print_hex_byte>:
    39f8:	0e 94 e3 1c 	call	0x39c6	; 0x39c6 <_ZN12OrangutanLCD8printHexEh>
    39fc:	08 95       	ret

000039fe <_ZN12OrangutanLCD5printEm>:
    39fe:	6f 92       	push	r6
    3a00:	7f 92       	push	r7
    3a02:	8f 92       	push	r8
    3a04:	9f 92       	push	r9
    3a06:	af 92       	push	r10
    3a08:	bf 92       	push	r11
    3a0a:	cf 92       	push	r12
    3a0c:	df 92       	push	r13
    3a0e:	ff 92       	push	r15
    3a10:	0f 93       	push	r16
    3a12:	df 93       	push	r29
    3a14:	cf 93       	push	r28
    3a16:	cd b7       	in	r28, 0x3d	; 61
    3a18:	de b7       	in	r29, 0x3e	; 62
    3a1a:	2a 97       	sbiw	r28, 0x0a	; 10
    3a1c:	0f b6       	in	r0, 0x3f	; 63
    3a1e:	f8 94       	cli
    3a20:	de bf       	out	0x3e, r29	; 62
    3a22:	0f be       	out	0x3f, r0	; 63
    3a24:	cd bf       	out	0x3d, r28	; 61
    3a26:	5b 01       	movw	r10, r22
    3a28:	6c 01       	movw	r12, r24
    3a2a:	0a e0       	ldi	r16, 0x0A	; 10
    3a2c:	3e 01       	movw	r6, r28
    3a2e:	08 94       	sec
    3a30:	61 1c       	adc	r6, r1
    3a32:	71 1c       	adc	r7, r1
    3a34:	fa 2c       	mov	r15, r10
    3a36:	c6 01       	movw	r24, r12
    3a38:	b5 01       	movw	r22, r10
    3a3a:	2a e0       	ldi	r18, 0x0A	; 10
    3a3c:	30 e0       	ldi	r19, 0x00	; 0
    3a3e:	40 e0       	ldi	r20, 0x00	; 0
    3a40:	50 e0       	ldi	r21, 0x00	; 0
    3a42:	0e 94 48 20 	call	0x4090	; 0x4090 <__udivmodsi4>
    3a46:	c9 01       	movw	r24, r18
    3a48:	da 01       	movw	r26, r20
    3a4a:	5c 01       	movw	r10, r24
    3a4c:	6d 01       	movw	r12, r26
    3a4e:	01 50       	subi	r16, 0x01	; 1
    3a50:	43 01       	movw	r8, r6
    3a52:	80 0e       	add	r8, r16
    3a54:	91 1c       	adc	r9, r1
    3a56:	80 e3       	ldi	r24, 0x30	; 48
    3a58:	f8 0e       	add	r15, r24
    3a5a:	c6 01       	movw	r24, r12
    3a5c:	b5 01       	movw	r22, r10
    3a5e:	2a e0       	ldi	r18, 0x0A	; 10
    3a60:	30 e0       	ldi	r19, 0x00	; 0
    3a62:	40 e0       	ldi	r20, 0x00	; 0
    3a64:	50 e0       	ldi	r21, 0x00	; 0
    3a66:	0e 94 16 20 	call	0x402c	; 0x402c <__mulsi3>
    3a6a:	f6 1a       	sub	r15, r22
    3a6c:	f4 01       	movw	r30, r8
    3a6e:	f0 82       	st	Z, r15
    3a70:	a1 14       	cp	r10, r1
    3a72:	b1 04       	cpc	r11, r1
    3a74:	c1 04       	cpc	r12, r1
    3a76:	d1 04       	cpc	r13, r1
    3a78:	e9 f6       	brne	.-70     	; 0x3a34 <_ZN12OrangutanLCD5printEm+0x36>
    3a7a:	08 c0       	rjmp	.+16     	; 0x3a8c <_ZN12OrangutanLCD5printEm+0x8e>
    3a7c:	f6 01       	movw	r30, r12
    3a7e:	e0 0f       	add	r30, r16
    3a80:	f1 1d       	adc	r31, r1
    3a82:	80 81       	ld	r24, Z
    3a84:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN12OrangutanLCD9send_dataEh>
    3a88:	0f 5f       	subi	r16, 0xFF	; 255
    3a8a:	04 c0       	rjmp	.+8      	; 0x3a94 <_ZN12OrangutanLCD5printEm+0x96>
    3a8c:	6e 01       	movw	r12, r28
    3a8e:	08 94       	sec
    3a90:	c1 1c       	adc	r12, r1
    3a92:	d1 1c       	adc	r13, r1
    3a94:	0a 30       	cpi	r16, 0x0A	; 10
    3a96:	90 f3       	brcs	.-28     	; 0x3a7c <_ZN12OrangutanLCD5printEm+0x7e>
    3a98:	2a 96       	adiw	r28, 0x0a	; 10
    3a9a:	0f b6       	in	r0, 0x3f	; 63
    3a9c:	f8 94       	cli
    3a9e:	de bf       	out	0x3e, r29	; 62
    3aa0:	0f be       	out	0x3f, r0	; 63
    3aa2:	cd bf       	out	0x3d, r28	; 61
    3aa4:	cf 91       	pop	r28
    3aa6:	df 91       	pop	r29
    3aa8:	0f 91       	pop	r16
    3aaa:	ff 90       	pop	r15
    3aac:	df 90       	pop	r13
    3aae:	cf 90       	pop	r12
    3ab0:	bf 90       	pop	r11
    3ab2:	af 90       	pop	r10
    3ab4:	9f 90       	pop	r9
    3ab6:	8f 90       	pop	r8
    3ab8:	7f 90       	pop	r7
    3aba:	6f 90       	pop	r6
    3abc:	08 95       	ret

00003abe <print_unsigned_long>:
    3abe:	0e 94 ff 1c 	call	0x39fe	; 0x39fe <_ZN12OrangutanLCD5printEm>
    3ac2:	08 95       	ret

00003ac4 <_ZN12OrangutanLCD5printEl>:
    3ac4:	ef 92       	push	r14
    3ac6:	ff 92       	push	r15
    3ac8:	0f 93       	push	r16
    3aca:	1f 93       	push	r17
    3acc:	7b 01       	movw	r14, r22
    3ace:	8c 01       	movw	r16, r24
    3ad0:	97 ff       	sbrs	r25, 7
    3ad2:	0b c0       	rjmp	.+22     	; 0x3aea <_ZN12OrangutanLCD5printEl+0x26>
    3ad4:	10 95       	com	r17
    3ad6:	00 95       	com	r16
    3ad8:	f0 94       	com	r15
    3ada:	e0 94       	com	r14
    3adc:	e1 1c       	adc	r14, r1
    3ade:	f1 1c       	adc	r15, r1
    3ae0:	01 1d       	adc	r16, r1
    3ae2:	11 1d       	adc	r17, r1
    3ae4:	8d e2       	ldi	r24, 0x2D	; 45
    3ae6:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN12OrangutanLCD9send_dataEh>
    3aea:	c8 01       	movw	r24, r16
    3aec:	b7 01       	movw	r22, r14
    3aee:	0e 94 ff 1c 	call	0x39fe	; 0x39fe <_ZN12OrangutanLCD5printEm>
    3af2:	1f 91       	pop	r17
    3af4:	0f 91       	pop	r16
    3af6:	ff 90       	pop	r15
    3af8:	ef 90       	pop	r14
    3afa:	08 95       	ret

00003afc <print_long>:
    3afc:	0e 94 62 1d 	call	0x3ac4	; 0x3ac4 <_ZN12OrangutanLCD5printEl>
    3b00:	08 95       	ret

00003b02 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>:
    3b02:	cf 93       	push	r28
    3b04:	df 93       	push	r29
    3b06:	ec 01       	movw	r28, r24
    3b08:	03 c0       	rjmp	.+6      	; 0x3b10 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0xe>
    3b0a:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN12OrangutanLCD9send_dataEh>
    3b0e:	21 96       	adiw	r28, 0x01	; 1
    3b10:	fe 01       	movw	r30, r28
    3b12:	84 91       	lpm	r24, Z+
    3b14:	88 23       	and	r24, r24
    3b16:	c9 f7       	brne	.-14     	; 0x3b0a <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0x8>
    3b18:	df 91       	pop	r29
    3b1a:	cf 91       	pop	r28
    3b1c:	08 95       	ret

00003b1e <print_from_program_space>:
    3b1e:	0e 94 81 1d 	call	0x3b02	; 0x3b02 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>
    3b22:	08 95       	ret

00003b24 <_ZN12OrangutanLCD5printEPKc>:
    3b24:	cf 93       	push	r28
    3b26:	df 93       	push	r29
    3b28:	ec 01       	movw	r28, r24
    3b2a:	03 c0       	rjmp	.+6      	; 0x3b32 <_ZN12OrangutanLCD5printEPKc+0xe>
    3b2c:	21 96       	adiw	r28, 0x01	; 1
    3b2e:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN12OrangutanLCD9send_dataEh>
    3b32:	88 81       	ld	r24, Y
    3b34:	88 23       	and	r24, r24
    3b36:	d1 f7       	brne	.-12     	; 0x3b2c <_ZN12OrangutanLCD5printEPKc+0x8>
    3b38:	df 91       	pop	r29
    3b3a:	cf 91       	pop	r28
    3b3c:	08 95       	ret

00003b3e <print>:
    3b3e:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <_ZN12OrangutanLCD5printEPKc>
    3b42:	08 95       	ret

00003b44 <_ZN12OrangutanLCD5printEc>:
    3b44:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN12OrangutanLCD9send_dataEh>
    3b48:	08 95       	ret

00003b4a <print_character>:
    3b4a:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN12OrangutanLCD9send_dataEh>
    3b4e:	08 95       	ret

00003b50 <lcd_putchar>:
    3b50:	a0 e0       	ldi	r26, 0x00	; 0
    3b52:	b0 e0       	ldi	r27, 0x00	; 0
    3b54:	ee ea       	ldi	r30, 0xAE	; 174
    3b56:	fd e1       	ldi	r31, 0x1D	; 29
    3b58:	0c 94 74 20 	jmp	0x40e8	; 0x40e8 <__prologue_saves__+0x14>
    3b5c:	e8 2e       	mov	r14, r24
    3b5e:	80 91 20 03 	lds	r24, 0x0320
    3b62:	90 91 21 03 	lds	r25, 0x0321
    3b66:	89 2b       	or	r24, r25
    3b68:	09 f4       	brne	.+2      	; 0x3b6c <lcd_putchar+0x1c>
    3b6a:	05 c1       	rjmp	.+522    	; 0x3d76 <lcd_putchar+0x226>
    3b6c:	2a e0       	ldi	r18, 0x0A	; 10
    3b6e:	e2 16       	cp	r14, r18
    3b70:	09 f4       	brne	.+2      	; 0x3b74 <lcd_putchar+0x24>
    3b72:	46 c0       	rjmp	.+140    	; 0x3c00 <lcd_putchar+0xb0>
    3b74:	38 e0       	ldi	r19, 0x08	; 8
    3b76:	e3 16       	cp	r14, r19
    3b78:	c9 f4       	brne	.+50     	; 0x3bac <lcd_putchar+0x5c>
    3b7a:	80 91 23 03 	lds	r24, 0x0323
    3b7e:	81 50       	subi	r24, 0x01	; 1
    3b80:	80 93 23 03 	sts	0x0323, r24
    3b84:	8f 3f       	cpi	r24, 0xFF	; 255
    3b86:	51 f4       	brne	.+20     	; 0x3b9c <lcd_putchar+0x4c>
    3b88:	80 91 22 03 	lds	r24, 0x0322
    3b8c:	81 50       	subi	r24, 0x01	; 1
    3b8e:	80 93 22 03 	sts	0x0322, r24
    3b92:	80 91 13 03 	lds	r24, 0x0313
    3b96:	81 50       	subi	r24, 0x01	; 1
    3b98:	80 93 23 03 	sts	0x0323, r24
    3b9c:	80 91 22 03 	lds	r24, 0x0322
    3ba0:	8f 3f       	cpi	r24, 0xFF	; 255
    3ba2:	09 f0       	breq	.+2      	; 0x3ba6 <lcd_putchar+0x56>
    3ba4:	e2 c0       	rjmp	.+452    	; 0x3d6a <lcd_putchar+0x21a>
    3ba6:	10 92 22 03 	sts	0x0322, r1
    3baa:	dd c0       	rjmp	.+442    	; 0x3d66 <lcd_putchar+0x216>
    3bac:	8e 2d       	mov	r24, r14
    3bae:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN12OrangutanLCD9send_dataEh>
    3bb2:	20 91 22 03 	lds	r18, 0x0322
    3bb6:	22 23       	and	r18, r18
    3bb8:	c9 f0       	breq	.+50     	; 0x3bec <lcd_putchar+0x9c>
    3bba:	30 e0       	ldi	r19, 0x00	; 0
    3bbc:	21 50       	subi	r18, 0x01	; 1
    3bbe:	30 40       	sbci	r19, 0x00	; 0
    3bc0:	80 91 13 03 	lds	r24, 0x0313
    3bc4:	90 e0       	ldi	r25, 0x00	; 0
    3bc6:	ac 01       	movw	r20, r24
    3bc8:	24 9f       	mul	r18, r20
    3bca:	c0 01       	movw	r24, r0
    3bcc:	25 9f       	mul	r18, r21
    3bce:	90 0d       	add	r25, r0
    3bd0:	34 9f       	mul	r19, r20
    3bd2:	90 0d       	add	r25, r0
    3bd4:	11 24       	eor	r1, r1
    3bd6:	20 91 23 03 	lds	r18, 0x0323
    3bda:	e0 91 20 03 	lds	r30, 0x0320
    3bde:	f0 91 21 03 	lds	r31, 0x0321
    3be2:	e8 0f       	add	r30, r24
    3be4:	f9 1f       	adc	r31, r25
    3be6:	e2 0f       	add	r30, r18
    3be8:	f1 1d       	adc	r31, r1
    3bea:	e0 82       	st	Z, r14
    3bec:	80 91 23 03 	lds	r24, 0x0323
    3bf0:	8f 5f       	subi	r24, 0xFF	; 255
    3bf2:	80 93 23 03 	sts	0x0323, r24
    3bf6:	90 91 13 03 	lds	r25, 0x0313
    3bfa:	89 17       	cp	r24, r25
    3bfc:	09 f0       	breq	.+2      	; 0x3c00 <lcd_putchar+0xb0>
    3bfe:	bb c0       	rjmp	.+374    	; 0x3d76 <lcd_putchar+0x226>
    3c00:	40 91 22 03 	lds	r20, 0x0322
    3c04:	24 2f       	mov	r18, r20
    3c06:	30 e0       	ldi	r19, 0x00	; 0
    3c08:	80 91 12 03 	lds	r24, 0x0312
    3c0c:	90 e0       	ldi	r25, 0x00	; 0
    3c0e:	01 97       	sbiw	r24, 0x01	; 1
    3c10:	28 17       	cp	r18, r24
    3c12:	39 07       	cpc	r19, r25
    3c14:	09 f0       	breq	.+2      	; 0x3c18 <lcd_putchar+0xc8>
    3c16:	a4 c0       	rjmp	.+328    	; 0x3d60 <lcd_putchar+0x210>
    3c18:	c0 e0       	ldi	r28, 0x00	; 0
    3c1a:	d0 e0       	ldi	r29, 0x00	; 0
    3c1c:	44 c0       	rjmp	.+136    	; 0x3ca6 <lcd_putchar+0x156>
    3c1e:	80 e0       	ldi	r24, 0x00	; 0
    3c20:	6c 2f       	mov	r22, r28
    3c22:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
    3c26:	ff 24       	eor	r15, r15
    3c28:	6e 01       	movw	r12, r28
    3c2a:	08 94       	sec
    3c2c:	c1 1c       	adc	r12, r1
    3c2e:	d1 1c       	adc	r13, r1
    3c30:	35 c0       	rjmp	.+106    	; 0x3c9c <lcd_putchar+0x14c>
    3c32:	0f 2d       	mov	r16, r15
    3c34:	10 e0       	ldi	r17, 0x00	; 0
    3c36:	90 e0       	ldi	r25, 0x00	; 0
    3c38:	9c 01       	movw	r18, r24
    3c3a:	c2 9f       	mul	r28, r18
    3c3c:	c0 01       	movw	r24, r0
    3c3e:	c3 9f       	mul	r28, r19
    3c40:	90 0d       	add	r25, r0
    3c42:	d2 9f       	mul	r29, r18
    3c44:	90 0d       	add	r25, r0
    3c46:	11 24       	eor	r1, r1
    3c48:	e0 91 20 03 	lds	r30, 0x0320
    3c4c:	f0 91 21 03 	lds	r31, 0x0321
    3c50:	e0 0f       	add	r30, r16
    3c52:	f1 1f       	adc	r31, r17
    3c54:	e8 0f       	add	r30, r24
    3c56:	f9 1f       	adc	r31, r25
    3c58:	80 81       	ld	r24, Z
    3c5a:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN12OrangutanLCD9send_dataEh>
    3c5e:	e0 91 20 03 	lds	r30, 0x0320
    3c62:	f0 91 21 03 	lds	r31, 0x0321
    3c66:	80 91 13 03 	lds	r24, 0x0313
    3c6a:	90 e0       	ldi	r25, 0x00	; 0
    3c6c:	c8 9f       	mul	r28, r24
    3c6e:	d0 01       	movw	r26, r0
    3c70:	c9 9f       	mul	r28, r25
    3c72:	b0 0d       	add	r27, r0
    3c74:	d8 9f       	mul	r29, r24
    3c76:	b0 0d       	add	r27, r0
    3c78:	11 24       	eor	r1, r1
    3c7a:	e0 0f       	add	r30, r16
    3c7c:	f1 1f       	adc	r31, r17
    3c7e:	ae 0f       	add	r26, r30
    3c80:	bf 1f       	adc	r27, r31
    3c82:	ac 01       	movw	r20, r24
    3c84:	c4 9e       	mul	r12, r20
    3c86:	c0 01       	movw	r24, r0
    3c88:	c5 9e       	mul	r12, r21
    3c8a:	90 0d       	add	r25, r0
    3c8c:	d4 9e       	mul	r13, r20
    3c8e:	90 0d       	add	r25, r0
    3c90:	11 24       	eor	r1, r1
    3c92:	e8 0f       	add	r30, r24
    3c94:	f9 1f       	adc	r31, r25
    3c96:	80 81       	ld	r24, Z
    3c98:	8c 93       	st	X, r24
    3c9a:	f3 94       	inc	r15
    3c9c:	80 91 13 03 	lds	r24, 0x0313
    3ca0:	f8 16       	cp	r15, r24
    3ca2:	38 f2       	brcs	.-114    	; 0x3c32 <lcd_putchar+0xe2>
    3ca4:	e6 01       	movw	r28, r12
    3ca6:	60 91 12 03 	lds	r22, 0x0312
    3caa:	86 2f       	mov	r24, r22
    3cac:	90 e0       	ldi	r25, 0x00	; 0
    3cae:	02 97       	sbiw	r24, 0x02	; 2
    3cb0:	c8 17       	cp	r28, r24
    3cb2:	d9 07       	cpc	r29, r25
    3cb4:	0c f4       	brge	.+2      	; 0x3cb8 <lcd_putchar+0x168>
    3cb6:	b3 cf       	rjmp	.-154    	; 0x3c1e <lcd_putchar+0xce>
    3cb8:	62 30       	cpi	r22, 0x02	; 2
    3cba:	08 f4       	brcc	.+2      	; 0x3cbe <lcd_putchar+0x16e>
    3cbc:	40 c0       	rjmp	.+128    	; 0x3d3e <lcd_putchar+0x1ee>
    3cbe:	62 50       	subi	r22, 0x02	; 2
    3cc0:	80 e0       	ldi	r24, 0x00	; 0
    3cc2:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
    3cc6:	ff 24       	eor	r15, r15
    3cc8:	40 e2       	ldi	r20, 0x20	; 32
    3cca:	d4 2e       	mov	r13, r20
    3ccc:	34 c0       	rjmp	.+104    	; 0x3d36 <lcd_putchar+0x1e6>
    3cce:	0f 2d       	mov	r16, r15
    3cd0:	10 e0       	ldi	r17, 0x00	; 0
    3cd2:	80 91 12 03 	lds	r24, 0x0312
    3cd6:	90 e0       	ldi	r25, 0x00	; 0
    3cd8:	02 97       	sbiw	r24, 0x02	; 2
    3cda:	30 e0       	ldi	r19, 0x00	; 0
    3cdc:	ac 01       	movw	r20, r24
    3cde:	42 9f       	mul	r20, r18
    3ce0:	c0 01       	movw	r24, r0
    3ce2:	43 9f       	mul	r20, r19
    3ce4:	90 0d       	add	r25, r0
    3ce6:	52 9f       	mul	r21, r18
    3ce8:	90 0d       	add	r25, r0
    3cea:	11 24       	eor	r1, r1
    3cec:	e0 91 20 03 	lds	r30, 0x0320
    3cf0:	f0 91 21 03 	lds	r31, 0x0321
    3cf4:	e0 0f       	add	r30, r16
    3cf6:	f1 1f       	adc	r31, r17
    3cf8:	e8 0f       	add	r30, r24
    3cfa:	f9 1f       	adc	r31, r25
    3cfc:	80 81       	ld	r24, Z
    3cfe:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN12OrangutanLCD9send_dataEh>
    3d02:	20 91 12 03 	lds	r18, 0x0312
    3d06:	30 e0       	ldi	r19, 0x00	; 0
    3d08:	22 50       	subi	r18, 0x02	; 2
    3d0a:	30 40       	sbci	r19, 0x00	; 0
    3d0c:	80 91 13 03 	lds	r24, 0x0313
    3d10:	90 e0       	ldi	r25, 0x00	; 0
    3d12:	ac 01       	movw	r20, r24
    3d14:	24 9f       	mul	r18, r20
    3d16:	c0 01       	movw	r24, r0
    3d18:	25 9f       	mul	r18, r21
    3d1a:	90 0d       	add	r25, r0
    3d1c:	34 9f       	mul	r19, r20
    3d1e:	90 0d       	add	r25, r0
    3d20:	11 24       	eor	r1, r1
    3d22:	e0 91 20 03 	lds	r30, 0x0320
    3d26:	f0 91 21 03 	lds	r31, 0x0321
    3d2a:	e0 0f       	add	r30, r16
    3d2c:	f1 1f       	adc	r31, r17
    3d2e:	e8 0f       	add	r30, r24
    3d30:	f9 1f       	adc	r31, r25
    3d32:	d0 82       	st	Z, r13
    3d34:	f3 94       	inc	r15
    3d36:	20 91 13 03 	lds	r18, 0x0313
    3d3a:	f2 16       	cp	r15, r18
    3d3c:	40 f2       	brcs	.-112    	; 0x3cce <lcd_putchar+0x17e>
    3d3e:	60 91 12 03 	lds	r22, 0x0312
    3d42:	61 50       	subi	r22, 0x01	; 1
    3d44:	80 e0       	ldi	r24, 0x00	; 0
    3d46:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
    3d4a:	00 e0       	ldi	r16, 0x00	; 0
    3d4c:	04 c0       	rjmp	.+8      	; 0x3d56 <lcd_putchar+0x206>
    3d4e:	80 e2       	ldi	r24, 0x20	; 32
    3d50:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN12OrangutanLCD9send_dataEh>
    3d54:	0f 5f       	subi	r16, 0xFF	; 255
    3d56:	80 91 13 03 	lds	r24, 0x0313
    3d5a:	08 17       	cp	r16, r24
    3d5c:	c0 f3       	brcs	.-16     	; 0x3d4e <lcd_putchar+0x1fe>
    3d5e:	03 c0       	rjmp	.+6      	; 0x3d66 <lcd_putchar+0x216>
    3d60:	4f 5f       	subi	r20, 0xFF	; 255
    3d62:	40 93 22 03 	sts	0x0322, r20
    3d66:	10 92 23 03 	sts	0x0323, r1
    3d6a:	80 91 23 03 	lds	r24, 0x0323
    3d6e:	60 91 22 03 	lds	r22, 0x0322
    3d72:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <_ZN12OrangutanLCD6gotoXYEhh>
    3d76:	2e 2d       	mov	r18, r14
    3d78:	33 27       	eor	r19, r19
    3d7a:	27 fd       	sbrc	r18, 7
    3d7c:	30 95       	com	r19
    3d7e:	c9 01       	movw	r24, r18
    3d80:	cd b7       	in	r28, 0x3d	; 61
    3d82:	de b7       	in	r29, 0x3e	; 62
    3d84:	e8 e0       	ldi	r30, 0x08	; 8
    3d86:	0c 94 90 20 	jmp	0x4120	; 0x4120 <__epilogue_restores__+0x14>

00003d8a <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
    3d8a:	ef 92       	push	r14
    3d8c:	ff 92       	push	r15
    3d8e:	0f 93       	push	r16
    3d90:	1f 93       	push	r17
    3d92:	cf 93       	push	r28
    3d94:	df 93       	push	r29
    3d96:	7c 01       	movw	r14, r24
    3d98:	06 2f       	mov	r16, r22
    3d9a:	10 e0       	ldi	r17, 0x00	; 0
    3d9c:	53 e0       	ldi	r21, 0x03	; 3
    3d9e:	00 0f       	add	r16, r16
    3da0:	11 1f       	adc	r17, r17
    3da2:	5a 95       	dec	r21
    3da4:	e1 f7       	brne	.-8      	; 0x3d9e <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x14>
    3da6:	c0 e0       	ldi	r28, 0x00	; 0
    3da8:	d0 e0       	ldi	r29, 0x00	; 0
    3daa:	9e 01       	movw	r18, r28
    3dac:	20 0f       	add	r18, r16
    3dae:	82 2f       	mov	r24, r18
    3db0:	80 64       	ori	r24, 0x40	; 64
    3db2:	0e 94 38 1c 	call	0x3870	; 0x3870 <_ZN12OrangutanLCD8send_cmdEh>
    3db6:	f7 01       	movw	r30, r14
    3db8:	ec 0f       	add	r30, r28
    3dba:	fd 1f       	adc	r31, r29
    3dbc:	e4 91       	lpm	r30, Z+
    3dbe:	8e 2f       	mov	r24, r30
    3dc0:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN12OrangutanLCD9send_dataEh>
    3dc4:	21 96       	adiw	r28, 0x01	; 1
    3dc6:	c8 30       	cpi	r28, 0x08	; 8
    3dc8:	d1 05       	cpc	r29, r1
    3dca:	79 f7       	brne	.-34     	; 0x3daa <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x20>
    3dcc:	cd b7       	in	r28, 0x3d	; 61
    3dce:	de b7       	in	r29, 0x3e	; 62
    3dd0:	e6 e0       	ldi	r30, 0x06	; 6
    3dd2:	0c 94 92 20 	jmp	0x4124	; 0x4124 <__epilogue_restores__+0x18>

00003dd6 <lcd_load_custom_character>:
    3dd6:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
    3dda:	08 95       	ret

00003ddc <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    3ddc:	60 e0       	ldi	r22, 0x00	; 0
    3dde:	41 e0       	ldi	r20, 0x01	; 1
    3de0:	0e 94 e4 1b 	call	0x37c8	; 0x37c8 <_ZN12OrangutanLCD4sendEhhh>
    3de4:	08 95       	ret

00003de6 <_ZN12OrangutanLCD6scrollEhhj>:
    3de6:	0f 93       	push	r16
    3de8:	1f 93       	push	r17
    3dea:	cf 93       	push	r28
    3dec:	df 93       	push	r29
    3dee:	08 2f       	mov	r16, r24
    3df0:	16 2f       	mov	r17, r22
    3df2:	ea 01       	movw	r28, r20
    3df4:	0b c0       	rjmp	.+22     	; 0x3e0c <_ZN12OrangutanLCD6scrollEhhj+0x26>
    3df6:	00 23       	and	r16, r16
    3df8:	11 f4       	brne	.+4      	; 0x3dfe <_ZN12OrangutanLCD6scrollEhhj+0x18>
    3dfa:	88 e1       	ldi	r24, 0x18	; 24
    3dfc:	01 c0       	rjmp	.+2      	; 0x3e00 <_ZN12OrangutanLCD6scrollEhhj+0x1a>
    3dfe:	8c e1       	ldi	r24, 0x1C	; 28
    3e00:	0e 94 38 1c 	call	0x3870	; 0x3870 <_ZN12OrangutanLCD8send_cmdEh>
    3e04:	ce 01       	movw	r24, r28
    3e06:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <_ZN13OrangutanTime17delayMillisecondsEj>
    3e0a:	11 50       	subi	r17, 0x01	; 1
    3e0c:	11 23       	and	r17, r17
    3e0e:	99 f7       	brne	.-26     	; 0x3df6 <_ZN12OrangutanLCD6scrollEhhj+0x10>
    3e10:	df 91       	pop	r29
    3e12:	cf 91       	pop	r28
    3e14:	1f 91       	pop	r17
    3e16:	0f 91       	pop	r16
    3e18:	08 95       	ret

00003e1a <lcd_scroll>:
    3e1a:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <_ZN12OrangutanLCD6scrollEhhj>
    3e1e:	08 95       	ret

00003e20 <__vector_11>:
    3e20:	2f 92       	push	r2
    3e22:	8f 93       	push	r24
    3e24:	9f 93       	push	r25
    3e26:	2f b6       	in	r2, 0x3f	; 63
    3e28:	80 91 2a 03 	lds	r24, 0x032A
    3e2c:	90 91 2b 03 	lds	r25, 0x032B
    3e30:	01 96       	adiw	r24, 0x01	; 1
    3e32:	80 93 2a 03 	sts	0x032A, r24
    3e36:	90 93 2b 03 	sts	0x032B, r25
    3e3a:	90 e0       	ldi	r25, 0x00	; 0
    3e3c:	80 91 2c 03 	lds	r24, 0x032C
    3e40:	89 1f       	adc	r24, r25
    3e42:	80 93 2c 03 	sts	0x032C, r24
    3e46:	90 91 32 03 	lds	r25, 0x0332
    3e4a:	9c 5f       	subi	r25, 0xFC	; 252
    3e4c:	90 93 32 03 	sts	0x0332, r25
    3e50:	80 91 31 03 	lds	r24, 0x0331
    3e54:	80 51       	subi	r24, 0x10	; 16
    3e56:	97 42       	sbci	r25, 0x27	; 39
    3e58:	c0 f0       	brcs	.+48     	; 0x3e8a <end>
    3e5a:	90 93 32 03 	sts	0x0332, r25
    3e5e:	80 93 31 03 	sts	0x0331, r24
    3e62:	80 91 2d 03 	lds	r24, 0x032D
    3e66:	90 91 2e 03 	lds	r25, 0x032E
    3e6a:	01 96       	adiw	r24, 0x01	; 1
    3e6c:	80 93 2d 03 	sts	0x032D, r24
    3e70:	90 93 2e 03 	sts	0x032E, r25
    3e74:	90 e0       	ldi	r25, 0x00	; 0
    3e76:	80 91 2f 03 	lds	r24, 0x032F
    3e7a:	89 1f       	adc	r24, r25
    3e7c:	80 93 2f 03 	sts	0x032F, r24
    3e80:	80 91 30 03 	lds	r24, 0x0330
    3e84:	89 1f       	adc	r24, r25
    3e86:	80 93 30 03 	sts	0x0330, r24

00003e8a <end>:
    3e8a:	2f be       	out	0x3f, r2	; 63
    3e8c:	9f 91       	pop	r25
    3e8e:	8f 91       	pop	r24
    3e90:	2f 90       	pop	r2
    3e92:	18 95       	reti

00003e94 <ticks_to_microseconds>:
    3e94:	6f 5f       	subi	r22, 0xFF	; 255
    3e96:	7f 4f       	sbci	r23, 0xFF	; 255
    3e98:	8f 4f       	sbci	r24, 0xFF	; 255
    3e9a:	9f 4f       	sbci	r25, 0xFF	; 255
    3e9c:	66 0f       	add	r22, r22
    3e9e:	77 1f       	adc	r23, r23
    3ea0:	88 1f       	adc	r24, r24
    3ea2:	99 1f       	adc	r25, r25
    3ea4:	25 e0       	ldi	r18, 0x05	; 5
    3ea6:	30 e0       	ldi	r19, 0x00	; 0
    3ea8:	40 e0       	ldi	r20, 0x00	; 0
    3eaa:	50 e0       	ldi	r21, 0x00	; 0
    3eac:	0e 94 48 20 	call	0x4090	; 0x4090 <__udivmodsi4>
    3eb0:	ca 01       	movw	r24, r20
    3eb2:	b9 01       	movw	r22, r18
    3eb4:	08 95       	ret

00003eb6 <delay_ms>:
    3eb6:	28 ee       	ldi	r18, 0xE8	; 232
    3eb8:	33 e0       	ldi	r19, 0x03	; 3
    3eba:	09 c0       	rjmp	.+18     	; 0x3ece <delay_ms+0x18>
    3ebc:	f9 01       	movw	r30, r18
    3ebe:	6f 93       	push	r22
    3ec0:	64 e0       	ldi	r22, 0x04	; 4
    3ec2:	6a 95       	dec	r22
    3ec4:	f1 f7       	brne	.-4      	; 0x3ec2 <delay_ms+0xc>
    3ec6:	6f 91       	pop	r22
    3ec8:	31 97       	sbiw	r30, 0x01	; 1
    3eca:	c9 f7       	brne	.-14     	; 0x3ebe <delay_ms+0x8>
    3ecc:	01 97       	sbiw	r24, 0x01	; 1
    3ece:	00 97       	sbiw	r24, 0x00	; 0
    3ed0:	a9 f7       	brne	.-22     	; 0x3ebc <delay_ms+0x6>
    3ed2:	08 95       	ret

00003ed4 <_ZN13OrangutanTime19ticksToMicrosecondsEm>:
    3ed4:	6f 5f       	subi	r22, 0xFF	; 255
    3ed6:	7f 4f       	sbci	r23, 0xFF	; 255
    3ed8:	8f 4f       	sbci	r24, 0xFF	; 255
    3eda:	9f 4f       	sbci	r25, 0xFF	; 255
    3edc:	66 0f       	add	r22, r22
    3ede:	77 1f       	adc	r23, r23
    3ee0:	88 1f       	adc	r24, r24
    3ee2:	99 1f       	adc	r25, r25
    3ee4:	25 e0       	ldi	r18, 0x05	; 5
    3ee6:	30 e0       	ldi	r19, 0x00	; 0
    3ee8:	40 e0       	ldi	r20, 0x00	; 0
    3eea:	50 e0       	ldi	r21, 0x00	; 0
    3eec:	0e 94 48 20 	call	0x4090	; 0x4090 <__udivmodsi4>
    3ef0:	ca 01       	movw	r24, r20
    3ef2:	b9 01       	movw	r22, r18
    3ef4:	08 95       	ret

00003ef6 <_ZN13OrangutanTime17delayMillisecondsEj>:
    3ef6:	28 ee       	ldi	r18, 0xE8	; 232
    3ef8:	33 e0       	ldi	r19, 0x03	; 3
    3efa:	09 c0       	rjmp	.+18     	; 0x3f0e <_ZN13OrangutanTime17delayMillisecondsEj+0x18>
    3efc:	f9 01       	movw	r30, r18
    3efe:	6f 93       	push	r22
    3f00:	64 e0       	ldi	r22, 0x04	; 4
    3f02:	6a 95       	dec	r22
    3f04:	f1 f7       	brne	.-4      	; 0x3f02 <_ZN13OrangutanTime17delayMillisecondsEj+0xc>
    3f06:	6f 91       	pop	r22
    3f08:	31 97       	sbiw	r30, 0x01	; 1
    3f0a:	c9 f7       	brne	.-14     	; 0x3efe <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
    3f0c:	01 97       	sbiw	r24, 0x01	; 1
    3f0e:	00 97       	sbiw	r24, 0x00	; 0
    3f10:	a9 f7       	brne	.-22     	; 0x3efc <_ZN13OrangutanTime17delayMillisecondsEj+0x6>
    3f12:	08 95       	ret

00003f14 <_ZN13OrangutanTime5init2Ev>:
    3f14:	a0 e7       	ldi	r26, 0x70	; 112
    3f16:	b0 e0       	ldi	r27, 0x00	; 0
    3f18:	8c 91       	ld	r24, X
    3f1a:	8e 7f       	andi	r24, 0xFE	; 254
    3f1c:	8c 93       	st	X, r24
    3f1e:	e0 eb       	ldi	r30, 0xB0	; 176
    3f20:	f0 e0       	ldi	r31, 0x00	; 0
    3f22:	80 81       	ld	r24, Z
    3f24:	83 60       	ori	r24, 0x03	; 3
    3f26:	80 83       	st	Z, r24
    3f28:	e1 eb       	ldi	r30, 0xB1	; 177
    3f2a:	f0 e0       	ldi	r31, 0x00	; 0
    3f2c:	80 81       	ld	r24, Z
    3f2e:	80 7f       	andi	r24, 0xF0	; 240
    3f30:	80 83       	st	Z, r24
    3f32:	80 81       	ld	r24, Z
    3f34:	82 60       	ori	r24, 0x02	; 2
    3f36:	80 83       	st	Z, r24
    3f38:	b8 9a       	sbi	0x17, 0	; 23
    3f3a:	8c 91       	ld	r24, X
    3f3c:	81 60       	ori	r24, 0x01	; 1
    3f3e:	8c 93       	st	X, r24
    3f40:	78 94       	sei
    3f42:	08 95       	ret

00003f44 <_ZN13OrangutanTime4initEv>:
    3f44:	80 91 33 03 	lds	r24, 0x0333
    3f48:	88 23       	and	r24, r24
    3f4a:	29 f4       	brne	.+10     	; 0x3f56 <_ZN13OrangutanTime4initEv+0x12>
    3f4c:	81 e0       	ldi	r24, 0x01	; 1
    3f4e:	80 93 33 03 	sts	0x0333, r24
    3f52:	0e 94 8a 1f 	call	0x3f14	; 0x3f14 <_ZN13OrangutanTime5init2Ev>
    3f56:	08 95       	ret

00003f58 <_ZN13OrangutanTime2msEv>:
    3f58:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <_ZN13OrangutanTime4initEv>
    3f5c:	e0 e7       	ldi	r30, 0x70	; 112
    3f5e:	f0 e0       	ldi	r31, 0x00	; 0
    3f60:	80 81       	ld	r24, Z
    3f62:	8e 7f       	andi	r24, 0xFE	; 254
    3f64:	80 83       	st	Z, r24
    3f66:	20 91 2d 03 	lds	r18, 0x032D
    3f6a:	30 91 2e 03 	lds	r19, 0x032E
    3f6e:	40 91 2f 03 	lds	r20, 0x032F
    3f72:	50 91 30 03 	lds	r21, 0x0330
    3f76:	80 81       	ld	r24, Z
    3f78:	81 60       	ori	r24, 0x01	; 1
    3f7a:	80 83       	st	Z, r24
    3f7c:	b9 01       	movw	r22, r18
    3f7e:	ca 01       	movw	r24, r20
    3f80:	08 95       	ret

00003f82 <get_ms>:
    3f82:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <_ZN13OrangutanTime2msEv>
    3f86:	08 95       	ret

00003f88 <_ZN13OrangutanTime5ticksEv>:
    3f88:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <_ZN13OrangutanTime4initEv>
    3f8c:	80 91 70 00 	lds	r24, 0x0070
    3f90:	8e 7f       	andi	r24, 0xFE	; 254
    3f92:	80 93 70 00 	sts	0x0070, r24
    3f96:	60 91 b2 00 	lds	r22, 0x00B2
    3f9a:	80 91 29 03 	lds	r24, 0x0329
    3f9e:	90 91 2a 03 	lds	r25, 0x032A
    3fa2:	a0 91 2b 03 	lds	r26, 0x032B
    3fa6:	b0 91 2c 03 	lds	r27, 0x032C
    3faa:	b8 99       	sbic	0x17, 0	; 23
    3fac:	05 c0       	rjmp	.+10     	; 0x3fb8 <_ZN13OrangutanTime5ticksEv+0x30>
    3fae:	26 2f       	mov	r18, r22
    3fb0:	30 e0       	ldi	r19, 0x00	; 0
    3fb2:	40 e0       	ldi	r20, 0x00	; 0
    3fb4:	50 e0       	ldi	r21, 0x00	; 0
    3fb6:	11 c0       	rjmp	.+34     	; 0x3fda <_ZN13OrangutanTime5ticksEv+0x52>
    3fb8:	80 91 b2 00 	lds	r24, 0x00B2
    3fbc:	20 91 29 03 	lds	r18, 0x0329
    3fc0:	30 91 2a 03 	lds	r19, 0x032A
    3fc4:	40 91 2b 03 	lds	r20, 0x032B
    3fc8:	50 91 2c 03 	lds	r21, 0x032C
    3fcc:	20 50       	subi	r18, 0x00	; 0
    3fce:	3f 4f       	sbci	r19, 0xFF	; 255
    3fd0:	4f 4f       	sbci	r20, 0xFF	; 255
    3fd2:	5f 4f       	sbci	r21, 0xFF	; 255
    3fd4:	90 e0       	ldi	r25, 0x00	; 0
    3fd6:	a0 e0       	ldi	r26, 0x00	; 0
    3fd8:	b0 e0       	ldi	r27, 0x00	; 0
    3fda:	28 2b       	or	r18, r24
    3fdc:	39 2b       	or	r19, r25
    3fde:	4a 2b       	or	r20, r26
    3fe0:	5b 2b       	or	r21, r27
    3fe2:	80 91 70 00 	lds	r24, 0x0070
    3fe6:	81 60       	ori	r24, 0x01	; 1
    3fe8:	80 93 70 00 	sts	0x0070, r24
    3fec:	b9 01       	movw	r22, r18
    3fee:	ca 01       	movw	r24, r20
    3ff0:	08 95       	ret

00003ff2 <get_ticks>:
    3ff2:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <_ZN13OrangutanTime5ticksEv>
    3ff6:	08 95       	ret

00003ff8 <_ZN13OrangutanTime5resetEv>:
    3ff8:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <_ZN13OrangutanTime4initEv>
    3ffc:	e0 e7       	ldi	r30, 0x70	; 112
    3ffe:	f0 e0       	ldi	r31, 0x00	; 0
    4000:	80 81       	ld	r24, Z
    4002:	8e 7f       	andi	r24, 0xFE	; 254
    4004:	80 83       	st	Z, r24
    4006:	10 92 2d 03 	sts	0x032D, r1
    400a:	10 92 2e 03 	sts	0x032E, r1
    400e:	10 92 2f 03 	sts	0x032F, r1
    4012:	10 92 30 03 	sts	0x0330, r1
    4016:	10 92 32 03 	sts	0x0332, r1
    401a:	10 92 31 03 	sts	0x0331, r1
    401e:	80 81       	ld	r24, Z
    4020:	81 60       	ori	r24, 0x01	; 1
    4022:	80 83       	st	Z, r24
    4024:	08 95       	ret

00004026 <time_reset>:
    4026:	0e 94 fc 1f 	call	0x3ff8	; 0x3ff8 <_ZN13OrangutanTime5resetEv>
    402a:	08 95       	ret

0000402c <__mulsi3>:
    402c:	62 9f       	mul	r22, r18
    402e:	d0 01       	movw	r26, r0
    4030:	73 9f       	mul	r23, r19
    4032:	f0 01       	movw	r30, r0
    4034:	82 9f       	mul	r24, r18
    4036:	e0 0d       	add	r30, r0
    4038:	f1 1d       	adc	r31, r1
    403a:	64 9f       	mul	r22, r20
    403c:	e0 0d       	add	r30, r0
    403e:	f1 1d       	adc	r31, r1
    4040:	92 9f       	mul	r25, r18
    4042:	f0 0d       	add	r31, r0
    4044:	83 9f       	mul	r24, r19
    4046:	f0 0d       	add	r31, r0
    4048:	74 9f       	mul	r23, r20
    404a:	f0 0d       	add	r31, r0
    404c:	65 9f       	mul	r22, r21
    404e:	f0 0d       	add	r31, r0
    4050:	99 27       	eor	r25, r25
    4052:	72 9f       	mul	r23, r18
    4054:	b0 0d       	add	r27, r0
    4056:	e1 1d       	adc	r30, r1
    4058:	f9 1f       	adc	r31, r25
    405a:	63 9f       	mul	r22, r19
    405c:	b0 0d       	add	r27, r0
    405e:	e1 1d       	adc	r30, r1
    4060:	f9 1f       	adc	r31, r25
    4062:	bd 01       	movw	r22, r26
    4064:	cf 01       	movw	r24, r30
    4066:	11 24       	eor	r1, r1
    4068:	08 95       	ret

0000406a <__divmodhi4>:
    406a:	97 fb       	bst	r25, 7
    406c:	09 2e       	mov	r0, r25
    406e:	07 26       	eor	r0, r23
    4070:	0a d0       	rcall	.+20     	; 0x4086 <__divmodhi4_neg1>
    4072:	77 fd       	sbrc	r23, 7
    4074:	04 d0       	rcall	.+8      	; 0x407e <__divmodhi4_neg2>
    4076:	65 d0       	rcall	.+202    	; 0x4142 <__udivmodhi4>
    4078:	06 d0       	rcall	.+12     	; 0x4086 <__divmodhi4_neg1>
    407a:	00 20       	and	r0, r0
    407c:	1a f4       	brpl	.+6      	; 0x4084 <__divmodhi4_exit>

0000407e <__divmodhi4_neg2>:
    407e:	70 95       	com	r23
    4080:	61 95       	neg	r22
    4082:	7f 4f       	sbci	r23, 0xFF	; 255

00004084 <__divmodhi4_exit>:
    4084:	08 95       	ret

00004086 <__divmodhi4_neg1>:
    4086:	f6 f7       	brtc	.-4      	; 0x4084 <__divmodhi4_exit>
    4088:	90 95       	com	r25
    408a:	81 95       	neg	r24
    408c:	9f 4f       	sbci	r25, 0xFF	; 255
    408e:	08 95       	ret

00004090 <__udivmodsi4>:
    4090:	a1 e2       	ldi	r26, 0x21	; 33
    4092:	1a 2e       	mov	r1, r26
    4094:	aa 1b       	sub	r26, r26
    4096:	bb 1b       	sub	r27, r27
    4098:	fd 01       	movw	r30, r26
    409a:	0d c0       	rjmp	.+26     	; 0x40b6 <__udivmodsi4_ep>

0000409c <__udivmodsi4_loop>:
    409c:	aa 1f       	adc	r26, r26
    409e:	bb 1f       	adc	r27, r27
    40a0:	ee 1f       	adc	r30, r30
    40a2:	ff 1f       	adc	r31, r31
    40a4:	a2 17       	cp	r26, r18
    40a6:	b3 07       	cpc	r27, r19
    40a8:	e4 07       	cpc	r30, r20
    40aa:	f5 07       	cpc	r31, r21
    40ac:	20 f0       	brcs	.+8      	; 0x40b6 <__udivmodsi4_ep>
    40ae:	a2 1b       	sub	r26, r18
    40b0:	b3 0b       	sbc	r27, r19
    40b2:	e4 0b       	sbc	r30, r20
    40b4:	f5 0b       	sbc	r31, r21

000040b6 <__udivmodsi4_ep>:
    40b6:	66 1f       	adc	r22, r22
    40b8:	77 1f       	adc	r23, r23
    40ba:	88 1f       	adc	r24, r24
    40bc:	99 1f       	adc	r25, r25
    40be:	1a 94       	dec	r1
    40c0:	69 f7       	brne	.-38     	; 0x409c <__udivmodsi4_loop>
    40c2:	60 95       	com	r22
    40c4:	70 95       	com	r23
    40c6:	80 95       	com	r24
    40c8:	90 95       	com	r25
    40ca:	9b 01       	movw	r18, r22
    40cc:	ac 01       	movw	r20, r24
    40ce:	bd 01       	movw	r22, r26
    40d0:	cf 01       	movw	r24, r30
    40d2:	08 95       	ret

000040d4 <__prologue_saves__>:
    40d4:	2f 92       	push	r2
    40d6:	3f 92       	push	r3
    40d8:	4f 92       	push	r4
    40da:	5f 92       	push	r5
    40dc:	6f 92       	push	r6
    40de:	7f 92       	push	r7
    40e0:	8f 92       	push	r8
    40e2:	9f 92       	push	r9
    40e4:	af 92       	push	r10
    40e6:	bf 92       	push	r11
    40e8:	cf 92       	push	r12
    40ea:	df 92       	push	r13
    40ec:	ef 92       	push	r14
    40ee:	ff 92       	push	r15
    40f0:	0f 93       	push	r16
    40f2:	1f 93       	push	r17
    40f4:	cf 93       	push	r28
    40f6:	df 93       	push	r29
    40f8:	cd b7       	in	r28, 0x3d	; 61
    40fa:	de b7       	in	r29, 0x3e	; 62
    40fc:	ca 1b       	sub	r28, r26
    40fe:	db 0b       	sbc	r29, r27
    4100:	0f b6       	in	r0, 0x3f	; 63
    4102:	f8 94       	cli
    4104:	de bf       	out	0x3e, r29	; 62
    4106:	0f be       	out	0x3f, r0	; 63
    4108:	cd bf       	out	0x3d, r28	; 61
    410a:	09 94       	ijmp

0000410c <__epilogue_restores__>:
    410c:	2a 88       	ldd	r2, Y+18	; 0x12
    410e:	39 88       	ldd	r3, Y+17	; 0x11
    4110:	48 88       	ldd	r4, Y+16	; 0x10
    4112:	5f 84       	ldd	r5, Y+15	; 0x0f
    4114:	6e 84       	ldd	r6, Y+14	; 0x0e
    4116:	7d 84       	ldd	r7, Y+13	; 0x0d
    4118:	8c 84       	ldd	r8, Y+12	; 0x0c
    411a:	9b 84       	ldd	r9, Y+11	; 0x0b
    411c:	aa 84       	ldd	r10, Y+10	; 0x0a
    411e:	b9 84       	ldd	r11, Y+9	; 0x09
    4120:	c8 84       	ldd	r12, Y+8	; 0x08
    4122:	df 80       	ldd	r13, Y+7	; 0x07
    4124:	ee 80       	ldd	r14, Y+6	; 0x06
    4126:	fd 80       	ldd	r15, Y+5	; 0x05
    4128:	0c 81       	ldd	r16, Y+4	; 0x04
    412a:	1b 81       	ldd	r17, Y+3	; 0x03
    412c:	aa 81       	ldd	r26, Y+2	; 0x02
    412e:	b9 81       	ldd	r27, Y+1	; 0x01
    4130:	ce 0f       	add	r28, r30
    4132:	d1 1d       	adc	r29, r1
    4134:	0f b6       	in	r0, 0x3f	; 63
    4136:	f8 94       	cli
    4138:	de bf       	out	0x3e, r29	; 62
    413a:	0f be       	out	0x3f, r0	; 63
    413c:	cd bf       	out	0x3d, r28	; 61
    413e:	ed 01       	movw	r28, r26
    4140:	08 95       	ret

00004142 <__udivmodhi4>:
    4142:	aa 1b       	sub	r26, r26
    4144:	bb 1b       	sub	r27, r27
    4146:	51 e1       	ldi	r21, 0x11	; 17
    4148:	07 c0       	rjmp	.+14     	; 0x4158 <__udivmodhi4_ep>

0000414a <__udivmodhi4_loop>:
    414a:	aa 1f       	adc	r26, r26
    414c:	bb 1f       	adc	r27, r27
    414e:	a6 17       	cp	r26, r22
    4150:	b7 07       	cpc	r27, r23
    4152:	10 f0       	brcs	.+4      	; 0x4158 <__udivmodhi4_ep>
    4154:	a6 1b       	sub	r26, r22
    4156:	b7 0b       	sbc	r27, r23

00004158 <__udivmodhi4_ep>:
    4158:	88 1f       	adc	r24, r24
    415a:	99 1f       	adc	r25, r25
    415c:	5a 95       	dec	r21
    415e:	a9 f7       	brne	.-22     	; 0x414a <__udivmodhi4_loop>
    4160:	80 95       	com	r24
    4162:	90 95       	com	r25
    4164:	bc 01       	movw	r22, r24
    4166:	cd 01       	movw	r24, r26
    4168:	08 95       	ret

0000416a <malloc>:
    416a:	cf 93       	push	r28
    416c:	df 93       	push	r29
    416e:	bc 01       	movw	r22, r24
    4170:	82 30       	cpi	r24, 0x02	; 2
    4172:	91 05       	cpc	r25, r1
    4174:	10 f4       	brcc	.+4      	; 0x417a <malloc+0x10>
    4176:	62 e0       	ldi	r22, 0x02	; 2
    4178:	70 e0       	ldi	r23, 0x00	; 0
    417a:	a0 91 36 03 	lds	r26, 0x0336
    417e:	b0 91 37 03 	lds	r27, 0x0337
    4182:	ed 01       	movw	r28, r26
    4184:	e0 e0       	ldi	r30, 0x00	; 0
    4186:	f0 e0       	ldi	r31, 0x00	; 0
    4188:	40 e0       	ldi	r20, 0x00	; 0
    418a:	50 e0       	ldi	r21, 0x00	; 0
    418c:	21 c0       	rjmp	.+66     	; 0x41d0 <malloc+0x66>
    418e:	88 81       	ld	r24, Y
    4190:	99 81       	ldd	r25, Y+1	; 0x01
    4192:	86 17       	cp	r24, r22
    4194:	97 07       	cpc	r25, r23
    4196:	69 f4       	brne	.+26     	; 0x41b2 <malloc+0x48>
    4198:	8a 81       	ldd	r24, Y+2	; 0x02
    419a:	9b 81       	ldd	r25, Y+3	; 0x03
    419c:	30 97       	sbiw	r30, 0x00	; 0
    419e:	19 f0       	breq	.+6      	; 0x41a6 <malloc+0x3c>
    41a0:	93 83       	std	Z+3, r25	; 0x03
    41a2:	82 83       	std	Z+2, r24	; 0x02
    41a4:	04 c0       	rjmp	.+8      	; 0x41ae <malloc+0x44>
    41a6:	90 93 37 03 	sts	0x0337, r25
    41aa:	80 93 36 03 	sts	0x0336, r24
    41ae:	fe 01       	movw	r30, r28
    41b0:	34 c0       	rjmp	.+104    	; 0x421a <malloc+0xb0>
    41b2:	68 17       	cp	r22, r24
    41b4:	79 07       	cpc	r23, r25
    41b6:	38 f4       	brcc	.+14     	; 0x41c6 <malloc+0x5c>
    41b8:	41 15       	cp	r20, r1
    41ba:	51 05       	cpc	r21, r1
    41bc:	19 f0       	breq	.+6      	; 0x41c4 <malloc+0x5a>
    41be:	84 17       	cp	r24, r20
    41c0:	95 07       	cpc	r25, r21
    41c2:	08 f4       	brcc	.+2      	; 0x41c6 <malloc+0x5c>
    41c4:	ac 01       	movw	r20, r24
    41c6:	fe 01       	movw	r30, r28
    41c8:	8a 81       	ldd	r24, Y+2	; 0x02
    41ca:	9b 81       	ldd	r25, Y+3	; 0x03
    41cc:	9c 01       	movw	r18, r24
    41ce:	e9 01       	movw	r28, r18
    41d0:	20 97       	sbiw	r28, 0x00	; 0
    41d2:	e9 f6       	brne	.-70     	; 0x418e <malloc+0x24>
    41d4:	41 15       	cp	r20, r1
    41d6:	51 05       	cpc	r21, r1
    41d8:	a9 f1       	breq	.+106    	; 0x4244 <malloc+0xda>
    41da:	ca 01       	movw	r24, r20
    41dc:	86 1b       	sub	r24, r22
    41de:	97 0b       	sbc	r25, r23
    41e0:	04 97       	sbiw	r24, 0x04	; 4
    41e2:	08 f4       	brcc	.+2      	; 0x41e6 <malloc+0x7c>
    41e4:	ba 01       	movw	r22, r20
    41e6:	e0 e0       	ldi	r30, 0x00	; 0
    41e8:	f0 e0       	ldi	r31, 0x00	; 0
    41ea:	2a c0       	rjmp	.+84     	; 0x4240 <malloc+0xd6>
    41ec:	8d 91       	ld	r24, X+
    41ee:	9c 91       	ld	r25, X
    41f0:	11 97       	sbiw	r26, 0x01	; 1
    41f2:	84 17       	cp	r24, r20
    41f4:	95 07       	cpc	r25, r21
    41f6:	f9 f4       	brne	.+62     	; 0x4236 <malloc+0xcc>
    41f8:	64 17       	cp	r22, r20
    41fa:	75 07       	cpc	r23, r21
    41fc:	81 f4       	brne	.+32     	; 0x421e <malloc+0xb4>
    41fe:	12 96       	adiw	r26, 0x02	; 2
    4200:	8d 91       	ld	r24, X+
    4202:	9c 91       	ld	r25, X
    4204:	13 97       	sbiw	r26, 0x03	; 3
    4206:	30 97       	sbiw	r30, 0x00	; 0
    4208:	19 f0       	breq	.+6      	; 0x4210 <malloc+0xa6>
    420a:	93 83       	std	Z+3, r25	; 0x03
    420c:	82 83       	std	Z+2, r24	; 0x02
    420e:	04 c0       	rjmp	.+8      	; 0x4218 <malloc+0xae>
    4210:	90 93 37 03 	sts	0x0337, r25
    4214:	80 93 36 03 	sts	0x0336, r24
    4218:	fd 01       	movw	r30, r26
    421a:	32 96       	adiw	r30, 0x02	; 2
    421c:	4f c0       	rjmp	.+158    	; 0x42bc <malloc+0x152>
    421e:	ca 01       	movw	r24, r20
    4220:	86 1b       	sub	r24, r22
    4222:	97 0b       	sbc	r25, r23
    4224:	fd 01       	movw	r30, r26
    4226:	e8 0f       	add	r30, r24
    4228:	f9 1f       	adc	r31, r25
    422a:	61 93       	st	Z+, r22
    422c:	71 93       	st	Z+, r23
    422e:	02 97       	sbiw	r24, 0x02	; 2
    4230:	8d 93       	st	X+, r24
    4232:	9c 93       	st	X, r25
    4234:	43 c0       	rjmp	.+134    	; 0x42bc <malloc+0x152>
    4236:	fd 01       	movw	r30, r26
    4238:	82 81       	ldd	r24, Z+2	; 0x02
    423a:	93 81       	ldd	r25, Z+3	; 0x03
    423c:	9c 01       	movw	r18, r24
    423e:	d9 01       	movw	r26, r18
    4240:	10 97       	sbiw	r26, 0x00	; 0
    4242:	a1 f6       	brne	.-88     	; 0x41ec <malloc+0x82>
    4244:	80 91 34 03 	lds	r24, 0x0334
    4248:	90 91 35 03 	lds	r25, 0x0335
    424c:	89 2b       	or	r24, r25
    424e:	41 f4       	brne	.+16     	; 0x4260 <malloc+0xf6>
    4250:	80 91 16 03 	lds	r24, 0x0316
    4254:	90 91 17 03 	lds	r25, 0x0317
    4258:	90 93 35 03 	sts	0x0335, r25
    425c:	80 93 34 03 	sts	0x0334, r24
    4260:	40 91 18 03 	lds	r20, 0x0318
    4264:	50 91 19 03 	lds	r21, 0x0319
    4268:	41 15       	cp	r20, r1
    426a:	51 05       	cpc	r21, r1
    426c:	41 f4       	brne	.+16     	; 0x427e <malloc+0x114>
    426e:	4d b7       	in	r20, 0x3d	; 61
    4270:	5e b7       	in	r21, 0x3e	; 62
    4272:	80 91 14 03 	lds	r24, 0x0314
    4276:	90 91 15 03 	lds	r25, 0x0315
    427a:	48 1b       	sub	r20, r24
    427c:	59 0b       	sbc	r21, r25
    427e:	20 91 34 03 	lds	r18, 0x0334
    4282:	30 91 35 03 	lds	r19, 0x0335
    4286:	24 17       	cp	r18, r20
    4288:	35 07       	cpc	r19, r21
    428a:	b0 f4       	brcc	.+44     	; 0x42b8 <malloc+0x14e>
    428c:	ca 01       	movw	r24, r20
    428e:	82 1b       	sub	r24, r18
    4290:	93 0b       	sbc	r25, r19
    4292:	86 17       	cp	r24, r22
    4294:	97 07       	cpc	r25, r23
    4296:	80 f0       	brcs	.+32     	; 0x42b8 <malloc+0x14e>
    4298:	ab 01       	movw	r20, r22
    429a:	4e 5f       	subi	r20, 0xFE	; 254
    429c:	5f 4f       	sbci	r21, 0xFF	; 255
    429e:	84 17       	cp	r24, r20
    42a0:	95 07       	cpc	r25, r21
    42a2:	50 f0       	brcs	.+20     	; 0x42b8 <malloc+0x14e>
    42a4:	42 0f       	add	r20, r18
    42a6:	53 1f       	adc	r21, r19
    42a8:	50 93 35 03 	sts	0x0335, r21
    42ac:	40 93 34 03 	sts	0x0334, r20
    42b0:	f9 01       	movw	r30, r18
    42b2:	61 93       	st	Z+, r22
    42b4:	71 93       	st	Z+, r23
    42b6:	02 c0       	rjmp	.+4      	; 0x42bc <malloc+0x152>
    42b8:	e0 e0       	ldi	r30, 0x00	; 0
    42ba:	f0 e0       	ldi	r31, 0x00	; 0
    42bc:	cf 01       	movw	r24, r30
    42be:	df 91       	pop	r29
    42c0:	cf 91       	pop	r28
    42c2:	08 95       	ret

000042c4 <free>:
    42c4:	cf 93       	push	r28
    42c6:	df 93       	push	r29
    42c8:	00 97       	sbiw	r24, 0x00	; 0
    42ca:	09 f4       	brne	.+2      	; 0x42ce <free+0xa>
    42cc:	50 c0       	rjmp	.+160    	; 0x436e <free+0xaa>
    42ce:	ec 01       	movw	r28, r24
    42d0:	22 97       	sbiw	r28, 0x02	; 2
    42d2:	1b 82       	std	Y+3, r1	; 0x03
    42d4:	1a 82       	std	Y+2, r1	; 0x02
    42d6:	a0 91 36 03 	lds	r26, 0x0336
    42da:	b0 91 37 03 	lds	r27, 0x0337
    42de:	10 97       	sbiw	r26, 0x00	; 0
    42e0:	09 f1       	breq	.+66     	; 0x4324 <free+0x60>
    42e2:	40 e0       	ldi	r20, 0x00	; 0
    42e4:	50 e0       	ldi	r21, 0x00	; 0
    42e6:	ac 17       	cp	r26, r28
    42e8:	bd 07       	cpc	r27, r29
    42ea:	08 f1       	brcs	.+66     	; 0x432e <free+0x6a>
    42ec:	bb 83       	std	Y+3, r27	; 0x03
    42ee:	aa 83       	std	Y+2, r26	; 0x02
    42f0:	fe 01       	movw	r30, r28
    42f2:	21 91       	ld	r18, Z+
    42f4:	31 91       	ld	r19, Z+
    42f6:	e2 0f       	add	r30, r18
    42f8:	f3 1f       	adc	r31, r19
    42fa:	ae 17       	cp	r26, r30
    42fc:	bf 07       	cpc	r27, r31
    42fe:	79 f4       	brne	.+30     	; 0x431e <free+0x5a>
    4300:	8d 91       	ld	r24, X+
    4302:	9c 91       	ld	r25, X
    4304:	11 97       	sbiw	r26, 0x01	; 1
    4306:	28 0f       	add	r18, r24
    4308:	39 1f       	adc	r19, r25
    430a:	2e 5f       	subi	r18, 0xFE	; 254
    430c:	3f 4f       	sbci	r19, 0xFF	; 255
    430e:	39 83       	std	Y+1, r19	; 0x01
    4310:	28 83       	st	Y, r18
    4312:	12 96       	adiw	r26, 0x02	; 2
    4314:	8d 91       	ld	r24, X+
    4316:	9c 91       	ld	r25, X
    4318:	13 97       	sbiw	r26, 0x03	; 3
    431a:	9b 83       	std	Y+3, r25	; 0x03
    431c:	8a 83       	std	Y+2, r24	; 0x02
    431e:	41 15       	cp	r20, r1
    4320:	51 05       	cpc	r21, r1
    4322:	71 f4       	brne	.+28     	; 0x4340 <free+0x7c>
    4324:	d0 93 37 03 	sts	0x0337, r29
    4328:	c0 93 36 03 	sts	0x0336, r28
    432c:	20 c0       	rjmp	.+64     	; 0x436e <free+0xaa>
    432e:	12 96       	adiw	r26, 0x02	; 2
    4330:	8d 91       	ld	r24, X+
    4332:	9c 91       	ld	r25, X
    4334:	13 97       	sbiw	r26, 0x03	; 3
    4336:	ad 01       	movw	r20, r26
    4338:	00 97       	sbiw	r24, 0x00	; 0
    433a:	11 f0       	breq	.+4      	; 0x4340 <free+0x7c>
    433c:	dc 01       	movw	r26, r24
    433e:	d3 cf       	rjmp	.-90     	; 0x42e6 <free+0x22>
    4340:	fa 01       	movw	r30, r20
    4342:	d3 83       	std	Z+3, r29	; 0x03
    4344:	c2 83       	std	Z+2, r28	; 0x02
    4346:	21 91       	ld	r18, Z+
    4348:	31 91       	ld	r19, Z+
    434a:	e2 0f       	add	r30, r18
    434c:	f3 1f       	adc	r31, r19
    434e:	ce 17       	cp	r28, r30
    4350:	df 07       	cpc	r29, r31
    4352:	69 f4       	brne	.+26     	; 0x436e <free+0xaa>
    4354:	88 81       	ld	r24, Y
    4356:	99 81       	ldd	r25, Y+1	; 0x01
    4358:	28 0f       	add	r18, r24
    435a:	39 1f       	adc	r19, r25
    435c:	2e 5f       	subi	r18, 0xFE	; 254
    435e:	3f 4f       	sbci	r19, 0xFF	; 255
    4360:	fa 01       	movw	r30, r20
    4362:	31 83       	std	Z+1, r19	; 0x01
    4364:	20 83       	st	Z, r18
    4366:	8a 81       	ldd	r24, Y+2	; 0x02
    4368:	9b 81       	ldd	r25, Y+3	; 0x03
    436a:	93 83       	std	Z+3, r25	; 0x03
    436c:	82 83       	std	Z+2, r24	; 0x02
    436e:	df 91       	pop	r29
    4370:	cf 91       	pop	r28
    4372:	08 95       	ret

00004374 <fdevopen>:
    4374:	0f 93       	push	r16
    4376:	1f 93       	push	r17
    4378:	cf 93       	push	r28
    437a:	df 93       	push	r29
    437c:	8c 01       	movw	r16, r24
    437e:	eb 01       	movw	r28, r22
    4380:	00 97       	sbiw	r24, 0x00	; 0
    4382:	31 f4       	brne	.+12     	; 0x4390 <fdevopen+0x1c>
    4384:	61 15       	cp	r22, r1
    4386:	71 05       	cpc	r23, r1
    4388:	19 f4       	brne	.+6      	; 0x4390 <fdevopen+0x1c>
    438a:	20 e0       	ldi	r18, 0x00	; 0
    438c:	30 e0       	ldi	r19, 0x00	; 0
    438e:	38 c0       	rjmp	.+112    	; 0x4400 <fdevopen+0x8c>
    4390:	81 e0       	ldi	r24, 0x01	; 1
    4392:	90 e0       	ldi	r25, 0x00	; 0
    4394:	6e e0       	ldi	r22, 0x0E	; 14
    4396:	70 e0       	ldi	r23, 0x00	; 0
    4398:	0e 94 06 22 	call	0x440c	; 0x440c <calloc>
    439c:	fc 01       	movw	r30, r24
    439e:	9c 01       	movw	r18, r24
    43a0:	00 97       	sbiw	r24, 0x00	; 0
    43a2:	71 f1       	breq	.+92     	; 0x4400 <fdevopen+0x8c>
    43a4:	80 e8       	ldi	r24, 0x80	; 128
    43a6:	83 83       	std	Z+3, r24	; 0x03
    43a8:	20 97       	sbiw	r28, 0x00	; 0
    43aa:	71 f0       	breq	.+28     	; 0x43c8 <fdevopen+0x54>
    43ac:	d3 87       	std	Z+11, r29	; 0x0b
    43ae:	c2 87       	std	Z+10, r28	; 0x0a
    43b0:	81 e8       	ldi	r24, 0x81	; 129
    43b2:	83 83       	std	Z+3, r24	; 0x03
    43b4:	80 91 38 03 	lds	r24, 0x0338
    43b8:	90 91 39 03 	lds	r25, 0x0339
    43bc:	89 2b       	or	r24, r25
    43be:	21 f4       	brne	.+8      	; 0x43c8 <fdevopen+0x54>
    43c0:	f0 93 39 03 	sts	0x0339, r31
    43c4:	e0 93 38 03 	sts	0x0338, r30
    43c8:	01 15       	cp	r16, r1
    43ca:	11 05       	cpc	r17, r1
    43cc:	c9 f0       	breq	.+50     	; 0x4400 <fdevopen+0x8c>
    43ce:	11 87       	std	Z+9, r17	; 0x09
    43d0:	00 87       	std	Z+8, r16	; 0x08
    43d2:	83 81       	ldd	r24, Z+3	; 0x03
    43d4:	82 60       	ori	r24, 0x02	; 2
    43d6:	83 83       	std	Z+3, r24	; 0x03
    43d8:	80 91 3a 03 	lds	r24, 0x033A
    43dc:	90 91 3b 03 	lds	r25, 0x033B
    43e0:	89 2b       	or	r24, r25
    43e2:	71 f4       	brne	.+28     	; 0x4400 <fdevopen+0x8c>
    43e4:	f0 93 3b 03 	sts	0x033B, r31
    43e8:	e0 93 3a 03 	sts	0x033A, r30
    43ec:	80 91 3c 03 	lds	r24, 0x033C
    43f0:	90 91 3d 03 	lds	r25, 0x033D
    43f4:	89 2b       	or	r24, r25
    43f6:	21 f4       	brne	.+8      	; 0x4400 <fdevopen+0x8c>
    43f8:	f0 93 3d 03 	sts	0x033D, r31
    43fc:	e0 93 3c 03 	sts	0x033C, r30
    4400:	c9 01       	movw	r24, r18
    4402:	df 91       	pop	r29
    4404:	cf 91       	pop	r28
    4406:	1f 91       	pop	r17
    4408:	0f 91       	pop	r16
    440a:	08 95       	ret

0000440c <calloc>:
    440c:	0f 93       	push	r16
    440e:	1f 93       	push	r17
    4410:	cf 93       	push	r28
    4412:	df 93       	push	r29
    4414:	68 9f       	mul	r22, r24
    4416:	80 01       	movw	r16, r0
    4418:	69 9f       	mul	r22, r25
    441a:	10 0d       	add	r17, r0
    441c:	78 9f       	mul	r23, r24
    441e:	10 0d       	add	r17, r0
    4420:	11 24       	eor	r1, r1
    4422:	c8 01       	movw	r24, r16
    4424:	0e 94 b5 20 	call	0x416a	; 0x416a <malloc>
    4428:	ec 01       	movw	r28, r24
    442a:	00 97       	sbiw	r24, 0x00	; 0
    442c:	29 f0       	breq	.+10     	; 0x4438 <calloc+0x2c>
    442e:	60 e0       	ldi	r22, 0x00	; 0
    4430:	70 e0       	ldi	r23, 0x00	; 0
    4432:	a8 01       	movw	r20, r16
    4434:	0e 94 22 22 	call	0x4444	; 0x4444 <memset>
    4438:	ce 01       	movw	r24, r28
    443a:	df 91       	pop	r29
    443c:	cf 91       	pop	r28
    443e:	1f 91       	pop	r17
    4440:	0f 91       	pop	r16
    4442:	08 95       	ret

00004444 <memset>:
    4444:	dc 01       	movw	r26, r24
    4446:	01 c0       	rjmp	.+2      	; 0x444a <memset+0x6>
    4448:	6d 93       	st	X+, r22
    444a:	41 50       	subi	r20, 0x01	; 1
    444c:	50 40       	sbci	r21, 0x00	; 0
    444e:	e0 f7       	brcc	.-8      	; 0x4448 <memset+0x4>
    4450:	08 95       	ret

00004452 <_exit>:
    4452:	f8 94       	cli

00004454 <__stop_program>:
    4454:	ff cf       	rjmp	.-2      	; 0x4454 <__stop_program>
