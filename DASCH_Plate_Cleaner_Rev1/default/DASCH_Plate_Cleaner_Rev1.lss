
DASCH_Plate_Cleaner_Rev1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000238  00800100  0000475e  000047f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000475e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  00800338  00800338  00004a2a  2**0
                  ALLOC
  3 .stab         000027c0  00000000  00000000  00004a2c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002591  00000000  00000000  000071ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000040  00000000  00000000  0000977d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001b4  00000000  00000000  000097bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000f48  00000000  00000000  00009971  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000003af  00000000  00000000  0000a8b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002361  00000000  00000000  0000ac68  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000120  00000000  00000000  0000cfcc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000008f8  00000000  00000000  0000d0ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000739  00000000  00000000  0000d9e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000048  00000000  00000000  0000e11d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 94 20 	jmp	0x4128	; 0x4128 <__vector_11>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	13 e0       	ldi	r17, 0x03	; 3
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ee e5       	ldi	r30, 0x5E	; 94
      a0:	f7 e4       	ldi	r31, 0x47	; 71
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a8 33       	cpi	r26, 0x38	; 56
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	13 e0       	ldi	r17, 0x03	; 3
      b4:	a8 e3       	ldi	r26, 0x38	; 56
      b6:	b3 e0       	ldi	r27, 0x03	; 3
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	ac 35       	cpi	r26, 0x5C	; 92
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 be 00 	call	0x17c	; 0x17c <main>
      c6:	0c 94 ad 23 	jmp	0x475a	; 0x475a <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <_ZN16OrangutanDigital11isInputHighEh>:


	// high-level method for reading the input value of the specified pin.  If the voltage on the pin is low,
	// this method will return 0.  Otherwise, it will return a non-zero result that depends on the value of
	// the pin.
	inline static unsigned char isInputHigh(unsigned char pin)
      ce:	48 2f       	mov	r20, r24
		io->pinRegister = 0;
		io->portRegister = 0;
		io->ddrRegister = 0;
		io->bitmask = 0;

		if (pin < 8)			// pin 0 = PD0, ..., 7 = PD7
      d0:	88 30       	cpi	r24, 0x08	; 8
      d2:	58 f4       	brcc	.+22     	; 0xea <_ZN16OrangutanDigital11isInputHighEh+0x1c>
		{
			io->pinRegister = (unsigned char*)&PIND;
			io->portRegister = (unsigned char*)&PORTD;
			io->ddrRegister = (unsigned char*)&DDRD;
			io->bitmask = 1 << pin;
      d4:	81 e0       	ldi	r24, 0x01	; 1
      d6:	90 e0       	ldi	r25, 0x00	; 0
      d8:	02 c0       	rjmp	.+4      	; 0xde <_ZN16OrangutanDigital11isInputHighEh+0x10>
      da:	88 0f       	add	r24, r24
      dc:	99 1f       	adc	r25, r25
      de:	4a 95       	dec	r20
      e0:	e2 f7       	brpl	.-8      	; 0xda <_ZN16OrangutanDigital11isInputHighEh+0xc>
      e2:	98 2f       	mov	r25, r24
      e4:	e9 e2       	ldi	r30, 0x29	; 41
      e6:	f0 e0       	ldi	r31, 0x00	; 0
      e8:	36 c0       	rjmp	.+108    	; 0x156 <_ZN16OrangutanDigital11isInputHighEh+0x88>
		}

#if defined(_ORANGUTAN_SVP) || defined(_ORANGUTAN_X2)

		else if (pin < 16)		// pin 8 = PB0, ..., 15 = PB7
      ea:	80 31       	cpi	r24, 0x10	; 16
      ec:	78 f4       	brcc	.+30     	; 0x10c <_ZN16OrangutanDigital11isInputHighEh+0x3e>
		{
			io->pinRegister = (unsigned char*)&PINB;
			io->portRegister = (unsigned char*)&PORTB;
			io->ddrRegister = (unsigned char*)&DDRB;
			io->bitmask = 1 << (pin - 8);
      ee:	28 2f       	mov	r18, r24
      f0:	30 e0       	ldi	r19, 0x00	; 0
      f2:	28 50       	subi	r18, 0x08	; 8
      f4:	30 40       	sbci	r19, 0x00	; 0
      f6:	81 e0       	ldi	r24, 0x01	; 1
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	02 c0       	rjmp	.+4      	; 0x100 <_ZN16OrangutanDigital11isInputHighEh+0x32>
      fc:	88 0f       	add	r24, r24
      fe:	99 1f       	adc	r25, r25
     100:	2a 95       	dec	r18
     102:	e2 f7       	brpl	.-8      	; 0xfc <_ZN16OrangutanDigital11isInputHighEh+0x2e>
     104:	98 2f       	mov	r25, r24
     106:	e3 e2       	ldi	r30, 0x23	; 35
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	25 c0       	rjmp	.+74     	; 0x156 <_ZN16OrangutanDigital11isInputHighEh+0x88>
		}
		else if (pin < 24)		// pin 16 = PC0, ..., 23 = PC7
     10c:	88 31       	cpi	r24, 0x18	; 24
     10e:	78 f4       	brcc	.+30     	; 0x12e <_ZN16OrangutanDigital11isInputHighEh+0x60>
		{
			io->pinRegister = (unsigned char*)&PINC;
			io->portRegister = (unsigned char*)&PORTC;
			io->ddrRegister = (unsigned char*)&DDRC;
			io->bitmask = 1 << (pin - 16);
     110:	28 2f       	mov	r18, r24
     112:	30 e0       	ldi	r19, 0x00	; 0
     114:	20 51       	subi	r18, 0x10	; 16
     116:	30 40       	sbci	r19, 0x00	; 0
     118:	81 e0       	ldi	r24, 0x01	; 1
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	02 c0       	rjmp	.+4      	; 0x122 <_ZN16OrangutanDigital11isInputHighEh+0x54>
     11e:	88 0f       	add	r24, r24
     120:	99 1f       	adc	r25, r25
     122:	2a 95       	dec	r18
     124:	e2 f7       	brpl	.-8      	; 0x11e <_ZN16OrangutanDigital11isInputHighEh+0x50>
     126:	98 2f       	mov	r25, r24
     128:	e6 e2       	ldi	r30, 0x26	; 38
     12a:	f0 e0       	ldi	r31, 0x00	; 0
     12c:	14 c0       	rjmp	.+40     	; 0x156 <_ZN16OrangutanDigital11isInputHighEh+0x88>
		}
		else if (pin < 32)		// pin 24 = PA7, ..., 31 = PA0
     12e:	80 32       	cpi	r24, 0x20	; 32
     130:	20 f0       	brcs	.+8      	; 0x13a <_ZN16OrangutanDigital11isInputHighEh+0x6c>
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	e0 e0       	ldi	r30, 0x00	; 0
     136:	f0 e0       	ldi	r31, 0x00	; 0
     138:	0e c0       	rjmp	.+28     	; 0x156 <_ZN16OrangutanDigital11isInputHighEh+0x88>
		{
			io->pinRegister = (unsigned char*)&PINA;
			io->portRegister = (unsigned char*)&PORTA;
			io->ddrRegister = (unsigned char*)&DDRA;
			io->bitmask = 1 << (31 - pin);
     13a:	2f e1       	ldi	r18, 0x1F	; 31
     13c:	30 e0       	ldi	r19, 0x00	; 0
     13e:	28 1b       	sub	r18, r24
     140:	31 09       	sbc	r19, r1
     142:	81 e0       	ldi	r24, 0x01	; 1
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	02 c0       	rjmp	.+4      	; 0x14c <_ZN16OrangutanDigital11isInputHighEh+0x7e>
     148:	88 0f       	add	r24, r24
     14a:	99 1f       	adc	r25, r25
     14c:	2a 95       	dec	r18
     14e:	e2 f7       	brpl	.-8      	; 0x148 <_ZN16OrangutanDigital11isInputHighEh+0x7a>
     150:	98 2f       	mov	r25, r24
     152:	e0 e2       	ldi	r30, 0x20	; 32
     154:	f0 e0       	ldi	r31, 0x00	; 0

	// low-level method for reading the value of the PIN register for an pin or set of pins
	// described by an IOStruct pointer.
	inline static unsigned char getInputValue(struct IOStruct* ioPin)
	{
		return *(ioPin->pinRegister) & ioPin->bitmask;
     156:	80 81       	ld	r24, Z
	inline static unsigned char isInputHigh(unsigned char pin)
	{
		struct IOStruct registers;
		getIORegisters(&registers, pin);
		return getInputValue(&registers);
	}
     158:	89 23       	and	r24, r25
     15a:	08 95       	ret

0000015c <__cxa_guard_acquire>:

extern "C" int __cxa_guard_acquire(__guard *); 
extern "C" void __cxa_guard_release (__guard *); 
extern "C" void __cxa_guard_abort (__guard *); 

int __cxa_guard_acquire(__guard *g) {return !*(char *)(g);}; 
     15c:	fc 01       	movw	r30, r24
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	80 81       	ld	r24, Z
     164:	88 23       	and	r24, r24
     166:	11 f4       	brne	.+4      	; 0x16c <__cxa_guard_acquire+0x10>
     168:	21 e0       	ldi	r18, 0x01	; 1
     16a:	30 e0       	ldi	r19, 0x00	; 0
     16c:	c9 01       	movw	r24, r18
     16e:	08 95       	ret

00000170 <__cxa_guard_release>:
void __cxa_guard_release (__guard *g) {*(char *)g = 1;}; 
     170:	fc 01       	movw	r30, r24
     172:	81 e0       	ldi	r24, 0x01	; 1
     174:	80 83       	st	Z, r24
     176:	08 95       	ret

00000178 <__cxa_guard_abort>:
void __cxa_guard_abort (__guard *) {}; 
     178:	08 95       	ret

0000017a <__cxa_pure_virtual>:

extern "C" void __cxa_pure_virtual(void); 
void __cxa_pure_virtual(void) {}; 
     17a:	08 95       	ret

0000017c <main>:
		unsigned int iNull17 : 1;
	} bits_in_inputByte1;
	char inputByte1;
} u_inputByte1;
  
int main()   
     17c:	2f 92       	push	r2
     17e:	3f 92       	push	r3
     180:	4f 92       	push	r4
     182:	5f 92       	push	r5
     184:	6f 92       	push	r6
     186:	7f 92       	push	r7
     188:	8f 92       	push	r8
     18a:	9f 92       	push	r9
     18c:	af 92       	push	r10
     18e:	bf 92       	push	r11
     190:	cf 92       	push	r12
     192:	df 92       	push	r13
     194:	ef 92       	push	r14
     196:	ff 92       	push	r15
     198:	0f 93       	push	r16
     19a:	1f 93       	push	r17
     19c:	df 93       	push	r29
     19e:	cf 93       	push	r28
     1a0:	cd b7       	in	r28, 0x3d	; 61
     1a2:	de b7       	in	r29, 0x3e	; 62
     1a4:	68 97       	sbiw	r28, 0x18	; 24
     1a6:	0f b6       	in	r0, 0x3f	; 63
     1a8:	f8 94       	cli
     1aa:	de bf       	out	0x3e, r29	; 62
     1ac:	0f be       	out	0x3f, r0	; 63
     1ae:	cd bf       	out	0x3d, r28	; 61
	int m2HalfPlate = 2000, m2WholePlate = 2000, m1LoadPlate = 2000, m2HomeFix = 2000;
	int m2Brush1Step = 2000, m2Brush2Step = 2000, m2Dry1Step = 2000, m2Dry2Step = 2000;
	int m2LoadBack = 2000, m2Dry1StepWhole = 2000, m2Brush2StepWhole = 2000;
    
	while(1){
	u_motorByte0.motorByte0 = 0;  // initialize motorByte0
     1b0:	10 92 38 03 	sts	0x0338, r1
	u_motorByte1.motorByte1 = 0;  // initialize motorByte1
     1b4:	10 92 39 03 	sts	0x0339, r1
	u_outputByte0.outputByte0 = 255;  // initialize outputByte0
     1b8:	8f ef       	ldi	r24, 0xFF	; 255
     1ba:	80 93 3a 03 	sts	0x033A, r24
	u_outputByte1.outputByte1 = 255;  // initialize outputByte1
     1be:	80 93 3b 03 	sts	0x033B, r24
	u_inputByte0.inputByte0 = 0;  // initialize inputByte0
     1c2:	10 92 3c 03 	sts	0x033C, r1
	u_inputByte1.inputByte1 = 0;  // initialize inputByte1
     1c6:	10 92 3d 03 	sts	0x033D, r1
	
	OrangutanLCD::clear();
     1ca:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
	OrangutanLCD::print("BEGIN ");
     1ce:	80 e0       	ldi	r24, 0x00	; 0
     1d0:	91 e0       	ldi	r25, 0x01	; 1
     1d2:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
// another C++ file.
inline unsigned long get_ms() { return OrangutanTime::ms(); }
inline unsigned long millis() { return OrangutanTime::ms(); }

inline void delay(unsigned int milliseconds) { OrangutanTime::delayMilliseconds(milliseconds); }
inline void delay_ms(unsigned int milliseconds) { OrangutanTime::delayMilliseconds(milliseconds); }
     1d6:	88 ee       	ldi	r24, 0xE8	; 232
     1d8:	93 e0       	ldi	r25, 0x03	; 3
     1da:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>
	
	delay_ms(1000);

    i2c_init();                                // init I2C interface
     1de:	0e 94 b9 1b 	call	0x3772	; 0x3772 <_Z8i2c_initv>
	
    OrangutanLCD::print("INIT ");
     1e2:	87 e0       	ldi	r24, 0x07	; 7
     1e4:	91 e0       	ldi	r25, 0x01	; 1
     1e6:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
	
    ret1 = i2c_start(I2C1+I2C_WRITE);       // set device address and write mode
     1ea:	80 e4       	ldi	r24, 0x40	; 64
     1ec:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
     1f0:	c8 2e       	mov	r12, r24
	i2c_stop();
     1f2:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>
	ret2 = i2c_start(I2C2+I2C_WRITE);
     1f6:	82 e4       	ldi	r24, 0x42	; 66
     1f8:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
     1fc:	08 2f       	mov	r16, r24
	i2c_stop();
     1fe:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>
	ret3 = i2c_start(I2C3+I2C_WRITE);
     202:	84 e4       	ldi	r24, 0x44	; 68
     204:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
     208:	e8 2e       	mov	r14, r24
	i2c_stop();
     20a:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>
    
	OrangutanLCD::clear();
     20e:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
	OrangutanLCD::print("START ");
     212:	8d e0       	ldi	r24, 0x0D	; 13
     214:	91 e0       	ldi	r25, 0x01	; 1
     216:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
	
	if ( ret1 | ret2 | ret3 ) {
     21a:	10 e0       	ldi	r17, 0x00	; 0
     21c:	dd 24       	eor	r13, r13
     21e:	0c 29       	or	r16, r12
     220:	1d 29       	or	r17, r13
     222:	ff 24       	eor	r15, r15
     224:	0e 29       	or	r16, r14
     226:	1f 29       	or	r17, r15
     228:	01 2b       	or	r16, r17
     22a:	61 f0       	breq	.+24     	; 0x244 <main+0xc8>
        /* failed to issue start condition, possibly no device found */
        
		OrangutanLCD::print("NAK ");
     22c:	84 e1       	ldi	r24, 0x14	; 20
     22e:	91 e0       	ldi	r25, 0x01	; 1
     230:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
		i2c_stop();
     234:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>
		OrangutanLCD::print("STOP ");
     238:	89 e1       	ldi	r24, 0x19	; 25
     23a:	91 e0       	ldi	r25, 0x01	; 1
     23c:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     240:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x3200>
    }
	else {
		OrangutanLCD::print("ACK ");
     244:	8f e1       	ldi	r24, 0x1F	; 31
     246:	91 e0       	ldi	r25, 0x01	; 1
     248:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
        /* issuing start condition ok, device accessible */
		OrangutanLCD::print("BINIT ");
     24c:	84 e2       	ldi	r24, 0x24	; 36
     24e:	91 e0       	ldi	r25, 0x01	; 1
     250:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
		i2c_start(I2C1+I2C_WRITE);
     254:	80 e4       	ldi	r24, 0x40	; 64
     256:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
		i2c_write(0x6);
     25a:	86 e0       	ldi	r24, 0x06	; 6
     25c:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
		i2c_write(0x0);
     260:	80 e0       	ldi	r24, 0x00	; 0
     262:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
		i2c_write(0x0);
     266:	80 e0       	ldi	r24, 0x00	; 0
     268:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
		i2c_stop();
     26c:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>
		
		i2c_start(I2C2+I2C_WRITE);
     270:	82 e4       	ldi	r24, 0x42	; 66
     272:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
		i2c_write(0x6);
     276:	86 e0       	ldi	r24, 0x06	; 6
     278:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
		i2c_write(0x0);
     27c:	80 e0       	ldi	r24, 0x00	; 0
     27e:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
		i2c_write(0x0);
     282:	80 e0       	ldi	r24, 0x00	; 0
     284:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
		i2c_stop();
     288:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>
     28c:	88 ee       	ldi	r24, 0xE8	; 232
     28e:	93 e0       	ldi	r25, 0x03	; 3
     290:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>


		delay_ms(1000);
		OrangutanLCD::clear();
     294:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
		int counter = 0;
		int print0 = 1, print6 = 1, print15 = 1, print24 = 1, print28 = 1, print35 = 1;
		int counterRef = 0, counterRef14 = 0, counterRef26 = 0, counterRefFive = 0, counterRef30 = 0;
		int pWait = 100, mWait = 100, kWait = 100;

		if(OrangutanDigital::isInputHigh(IO_D3))
     298:	83 e0       	ldi	r24, 0x03	; 3
     29a:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     29e:	88 23       	and	r24, r24
     2a0:	11 f4       	brne	.+4      	; 0x2a6 <main+0x12a>
     2a2:	0c 94 bd 09 	jmp	0x137a	; 0x137a <main+0x11fe>
		{
			OrangutanLCD::print("MAINTENANCE");
     2a6:	8b e2       	ldi	r24, 0x2B	; 43
     2a8:	91 e0       	ldi	r25, 0x01	; 1
     2aa:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     2ae:	88 ee       	ldi	r24, 0xE8	; 232
     2b0:	93 e0       	ldi	r25, 0x03	; 3
     2b2:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>
			//initialize
			int button = 1, counterRefPush = 0, counterRefRel = 0, stateButton = 0;
			int print = 0;
			int mode = 3;

			OrangutanLCD::clear();
     2b6:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
			OrangutanLCD::print("SELECT MODE");
     2ba:	87 e3       	ldi	r24, 0x37	; 55
     2bc:	91 e0       	ldi	r25, 0x01	; 1
     2be:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     2c2:	ee 24       	eor	r14, r14
     2c4:	ff 24       	eor	r15, r15
     2c6:	01 e0       	ldi	r16, 0x01	; 1
     2c8:	10 e0       	ldi	r17, 0x00	; 0
     2ca:	44 24       	eor	r4, r4
     2cc:	55 24       	eor	r5, r5
     2ce:	1e 86       	std	Y+14, r1	; 0x0e
     2d0:	1d 86       	std	Y+13, r1	; 0x0d
     2d2:	88 24       	eor	r8, r8
     2d4:	99 24       	eor	r9, r9
			while(button != 0){
				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
     2d6:	81 14       	cp	r8, r1
     2d8:	91 04       	cpc	r9, r1
     2da:	11 f0       	breq	.+4      	; 0x2e0 <main+0x164>
     2dc:	0c 94 c4 19 	jmp	0x3388	; 0x3388 <main+0x320c>
     2e0:	80 e0       	ldi	r24, 0x00	; 0
     2e2:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     2e6:	88 23       	and	r24, r24
     2e8:	99 f1       	breq	.+102    	; 0x350 <main+0x1d4>
     2ea:	27 01       	movw	r4, r14
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
					if(counter - counterRefPush > 15){
     2ec:	c7 01       	movw	r24, r14
     2ee:	84 19       	sub	r24, r4
     2f0:	95 09       	sbc	r25, r5
     2f2:	40 97       	sbiw	r24, 0x10	; 16
     2f4:	54 f0       	brlt	.+20     	; 0x30a <main+0x18e>
						if(!OrangutanDigital::isInputHigh(IO_D0)){
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     2fc:	88 23       	and	r24, r24
     2fe:	11 f0       	breq	.+4      	; 0x304 <main+0x188>
     300:	0c 94 cc 19 	jmp	0x3398	; 0x3398 <main+0x321c>
     304:	fe 86       	std	Y+14, r15	; 0x0e
     306:	ed 86       	std	Y+13, r14	; 0x0d
     308:	0c c0       	rjmp	.+24     	; 0x322 <main+0x1a6>
							counterRefRel = counter;
							stateButton = 2;
						}
					}
					else if(!OrangutanDigital::isInputHigh(IO_D0)){
     30a:	80 e0       	ldi	r24, 0x00	; 0
     30c:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     310:	88 23       	and	r24, r24
     312:	11 f0       	breq	.+4      	; 0x318 <main+0x19c>
     314:	0c 94 cc 19 	jmp	0x3398	; 0x3398 <main+0x321c>
     318:	15 c0       	rjmp	.+42     	; 0x344 <main+0x1c8>
						stateButton = 0;
					}
				}
				if(stateButton == 2){
     31a:	22 e0       	ldi	r18, 0x02	; 2
     31c:	82 16       	cp	r8, r18
     31e:	91 04       	cpc	r9, r1
     320:	b9 f4       	brne	.+46     	; 0x350 <main+0x1d4>
					if(OrangutanDigital::isInputHigh(IO_D0)){
     322:	80 e0       	ldi	r24, 0x00	; 0
     324:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     328:	88 23       	and	r24, r24
     32a:	19 f0       	breq	.+6      	; 0x332 <main+0x1b6>
     32c:	27 01       	movw	r4, r14
     32e:	0c 94 cc 19 	jmp	0x3398	; 0x3398 <main+0x321c>
						stateButton = 1;
						counterRefPush = counter;
					}
					else if(counter - counterRefRel > 15){
     332:	c7 01       	movw	r24, r14
     334:	4d 85       	ldd	r20, Y+13	; 0x0d
     336:	5e 85       	ldd	r21, Y+14	; 0x0e
     338:	84 1b       	sub	r24, r20
     33a:	95 0b       	sbc	r25, r21
     33c:	40 97       	sbiw	r24, 0x10	; 16
     33e:	2c f0       	brlt	.+10     	; 0x34a <main+0x1ce>
     340:	00 e0       	ldi	r16, 0x00	; 0
     342:	10 e0       	ldi	r17, 0x00	; 0
     344:	88 24       	eor	r8, r8
     346:	99 24       	eor	r9, r9
     348:	03 c0       	rjmp	.+6      	; 0x350 <main+0x1d4>
     34a:	62 e0       	ldi	r22, 0x02	; 2
     34c:	86 2e       	mov	r8, r22
     34e:	91 2c       	mov	r9, r1
     350:	81 e0       	ldi	r24, 0x01	; 1
     352:	90 e0       	ldi	r25, 0x00	; 0
     354:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>
			int print = 0;
			int mode = 3;

			OrangutanLCD::clear();
			OrangutanLCD::print("SELECT MODE");
			while(button != 0){
     358:	01 15       	cp	r16, r1
     35a:	11 05       	cpc	r17, r1
     35c:	21 f0       	breq	.+8      	; 0x366 <main+0x1ea>
					else if(counter - counterRefRel > 15){
						button = 0;
						stateButton = 0;
					}
				}
				counter++;
     35e:	08 94       	sec
     360:	e1 1c       	adc	r14, r1
     362:	f1 1c       	adc	r15, r1
     364:	b8 cf       	rjmp	.-144    	; 0x2d6 <main+0x15a>
				delay_ms(1);
			}
			button = 1;
			counter = 0;
			OrangutanLCD::clear();
     366:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
			if(OrangutanDigital::isInputHigh(IO_D1) && OrangutanDigital::isInputHigh(IO_D2)){
     36a:	81 e0       	ldi	r24, 0x01	; 1
     36c:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     370:	88 23       	and	r24, r24
     372:	79 f0       	breq	.+30     	; 0x392 <main+0x216>
     374:	82 e0       	ldi	r24, 0x02	; 2
     376:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     37a:	88 23       	and	r24, r24
     37c:	51 f0       	breq	.+20     	; 0x392 <main+0x216>
				state = 0;
				mode = 3;
				OrangutanLCD::clear();
     37e:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
				OrangutanLCD::print("INPUTS ");
     382:	83 e4       	ldi	r24, 0x43	; 67
     384:	91 e0       	ldi	r25, 0x01	; 1
     386:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
				OrangutanLCD::gotoXY(0,1);
     38a:	80 e0       	ldi	r24, 0x00	; 0
     38c:	61 e0       	ldi	r22, 0x01	; 1
     38e:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     392:	1e 82       	std	Y+6, r1	; 0x06
     394:	1d 82       	std	Y+5, r1	; 0x05
     396:	22 24       	eor	r2, r2
     398:	33 24       	eor	r3, r3
     39a:	1c 82       	std	Y+4, r1	; 0x04
     39c:	1b 82       	std	Y+3, r1	; 0x03
     39e:	1a 82       	std	Y+2, r1	; 0x02
     3a0:	19 82       	std	Y+1, r1	; 0x01
     3a2:	1e 8a       	std	Y+22, r1	; 0x16
     3a4:	1d 8a       	std	Y+21, r1	; 0x15
     3a6:	18 8e       	std	Y+24, r1	; 0x18
     3a8:	1f 8a       	std	Y+23, r1	; 0x17
     3aa:	cc 24       	eor	r12, r12
     3ac:	dd 24       	eor	r13, r13
     3ae:	aa 24       	eor	r10, r10
     3b0:	bb 24       	eor	r11, r11
     3b2:	51 e0       	ldi	r21, 0x01	; 1
     3b4:	e5 2e       	mov	r14, r21
     3b6:	f1 2c       	mov	r15, r1
     3b8:	00 e0       	ldi	r16, 0x00	; 0
     3ba:	10 e0       	ldi	r17, 0x00	; 0
     3bc:	43 e0       	ldi	r20, 0x03	; 3
     3be:	64 2e       	mov	r6, r20
     3c0:	71 2c       	mov	r7, r1
				print = 0;
			}
			
			while(state != -1){

				i2c_start(I2C3+I2C_WRITE);						// first start condition (write)
     3c2:	84 e4       	ldi	r24, 0x44	; 68
     3c4:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				i2c_write(0x0);								// write command byte
     3c8:	80 e0       	ldi	r24, 0x00	; 0
     3ca:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_start(I2C3+I2C_READ);						// second start condition (read)
     3ce:	85 e4       	ldi	r24, 0x45	; 69
     3d0:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				u_inputByte0.inputByte0 = i2c_readAck();				// read first byte and send Ack, requesting more
     3d4:	0e 94 2a 1c 	call	0x3854	; 0x3854 <_Z11i2c_readAckv>
     3d8:	80 93 3c 03 	sts	0x033C, r24
   		     	u_inputByte1.inputByte1 = i2c_readNak();				// read second byte and send stop condition
     3dc:	0e 94 34 1c 	call	0x3868	; 0x3868 <_Z11i2c_readNakv>
     3e0:	80 93 3d 03 	sts	0x033D, r24
  	 	     	i2c_stop();								// set stop conditon = release bus 		
     3e4:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>
				
				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
     3e8:	81 14       	cp	r8, r1
     3ea:	91 04       	cpc	r9, r1
     3ec:	11 f0       	breq	.+4      	; 0x3f2 <main+0x276>
     3ee:	0c 94 d1 19 	jmp	0x33a2	; 0x33a2 <main+0x3226>
     3f2:	80 e0       	ldi	r24, 0x00	; 0
     3f4:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     3f8:	88 23       	and	r24, r24
     3fa:	99 f1       	breq	.+102    	; 0x462 <main+0x2e6>
     3fc:	26 01       	movw	r4, r12
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
					if(counter - counterRefPush > 15){
     3fe:	c6 01       	movw	r24, r12
     400:	84 19       	sub	r24, r4
     402:	95 09       	sbc	r25, r5
     404:	40 97       	sbiw	r24, 0x10	; 16
     406:	54 f0       	brlt	.+20     	; 0x41c <main+0x2a0>
						if(!OrangutanDigital::isInputHigh(IO_D0)){
     408:	80 e0       	ldi	r24, 0x00	; 0
     40a:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     40e:	88 23       	and	r24, r24
     410:	11 f0       	breq	.+4      	; 0x416 <main+0x29a>
     412:	0c 94 d9 19 	jmp	0x33b2	; 0x33b2 <main+0x3236>
     416:	de 86       	std	Y+14, r13	; 0x0e
     418:	cd 86       	std	Y+13, r12	; 0x0d
     41a:	0c c0       	rjmp	.+24     	; 0x434 <main+0x2b8>
							counterRefRel = counter;
							stateButton = 2;
						}
					}
					else if(!OrangutanDigital::isInputHigh(IO_D0)){
     41c:	80 e0       	ldi	r24, 0x00	; 0
     41e:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     422:	88 23       	and	r24, r24
     424:	11 f0       	breq	.+4      	; 0x42a <main+0x2ae>
     426:	0c 94 d9 19 	jmp	0x33b2	; 0x33b2 <main+0x3236>
     42a:	15 c0       	rjmp	.+42     	; 0x456 <main+0x2da>
						stateButton = 0;
					}
				}
				if(stateButton == 2){
     42c:	52 e0       	ldi	r21, 0x02	; 2
     42e:	85 16       	cp	r8, r21
     430:	91 04       	cpc	r9, r1
     432:	b9 f4       	brne	.+46     	; 0x462 <main+0x2e6>
					if(OrangutanDigital::isInputHigh(IO_D0)){
     434:	80 e0       	ldi	r24, 0x00	; 0
     436:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     43a:	88 23       	and	r24, r24
     43c:	19 f0       	breq	.+6      	; 0x444 <main+0x2c8>
     43e:	26 01       	movw	r4, r12
     440:	0c 94 d9 19 	jmp	0x33b2	; 0x33b2 <main+0x3236>
						stateButton = 1;
						counterRefPush = counter;
					}
					else if(counter - counterRefRel > 15){
     444:	c6 01       	movw	r24, r12
     446:	ed 85       	ldd	r30, Y+13	; 0x0d
     448:	fe 85       	ldd	r31, Y+14	; 0x0e
     44a:	8e 1b       	sub	r24, r30
     44c:	9f 0b       	sbc	r25, r31
     44e:	40 97       	sbiw	r24, 0x10	; 16
     450:	2c f0       	brlt	.+10     	; 0x45c <main+0x2e0>
     452:	ee 24       	eor	r14, r14
     454:	ff 24       	eor	r15, r15
     456:	88 24       	eor	r8, r8
     458:	99 24       	eor	r9, r9
     45a:	03 c0       	rjmp	.+6      	; 0x462 <main+0x2e6>
     45c:	32 e0       	ldi	r19, 0x02	; 2
     45e:	83 2e       	mov	r8, r19
     460:	91 2c       	mov	r9, r1
						stateButton = 0;
					}
				}

				
				if(!OrangutanDigital::isInputHigh(IO_D1) && !OrangutanDigital::isInputHigh(IO_D2) && mode != 0){
     462:	81 e0       	ldi	r24, 0x01	; 1
     464:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     468:	88 23       	and	r24, r24
     46a:	c1 f4       	brne	.+48     	; 0x49c <main+0x320>
     46c:	82 e0       	ldi	r24, 0x02	; 2
     46e:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     472:	88 23       	and	r24, r24
     474:	99 f4       	brne	.+38     	; 0x49c <main+0x320>
     476:	61 14       	cp	r6, r1
     478:	71 04       	cpc	r7, r1
     47a:	81 f0       	breq	.+32     	; 0x49c <main+0x320>
					state = 0;
					mode = 0;
					OrangutanLCD::clear();
     47c:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
					OrangutanLCD::print("INPUTS ");
     480:	83 e4       	ldi	r24, 0x43	; 67
     482:	91 e0       	ldi	r25, 0x01	; 1
     484:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
					OrangutanLCD::gotoXY(0,1);
     488:	80 e0       	ldi	r24, 0x00	; 0
     48a:	61 e0       	ldi	r22, 0x01	; 1
     48c:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     490:	18 8e       	std	Y+24, r1	; 0x18
     492:	1f 8a       	std	Y+23, r1	; 0x17
     494:	00 e0       	ldi	r16, 0x00	; 0
     496:	10 e0       	ldi	r17, 0x00	; 0
     498:	66 24       	eor	r6, r6
     49a:	77 24       	eor	r7, r7
					print = 0;
				}
				if(OrangutanDigital::isInputHigh(IO_D1) && !OrangutanDigital::isInputHigh(IO_D2) && mode != 1){
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     4a2:	88 23       	and	r24, r24
     4a4:	e1 f0       	breq	.+56     	; 0x4de <main+0x362>
     4a6:	82 e0       	ldi	r24, 0x02	; 2
     4a8:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     4ac:	88 23       	and	r24, r24
     4ae:	b9 f4       	brne	.+46     	; 0x4de <main+0x362>
     4b0:	f1 e0       	ldi	r31, 0x01	; 1
     4b2:	6f 16       	cp	r6, r31
     4b4:	71 04       	cpc	r7, r1
     4b6:	99 f0       	breq	.+38     	; 0x4de <main+0x362>
					state = 8;
					mode = 1;
					OrangutanLCD::clear();
     4b8:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
					OrangutanLCD::print("OUTPUTS");
     4bc:	8b e4       	ldi	r24, 0x4B	; 75
     4be:	91 e0       	ldi	r25, 0x01	; 1
     4c0:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
					OrangutanLCD::gotoXY(0,1);
     4c4:	80 e0       	ldi	r24, 0x00	; 0
     4c6:	61 e0       	ldi	r22, 0x01	; 1
     4c8:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     4cc:	28 e0       	ldi	r18, 0x08	; 8
     4ce:	30 e0       	ldi	r19, 0x00	; 0
     4d0:	38 8f       	std	Y+24, r19	; 0x18
     4d2:	2f 8b       	std	Y+23, r18	; 0x17
     4d4:	00 e0       	ldi	r16, 0x00	; 0
     4d6:	10 e0       	ldi	r17, 0x00	; 0
     4d8:	21 e0       	ldi	r18, 0x01	; 1
     4da:	62 2e       	mov	r6, r18
     4dc:	71 2c       	mov	r7, r1
					print = 0;
				}
				if(!OrangutanDigital::isInputHigh(IO_D1) && OrangutanDigital::isInputHigh(IO_D2) && mode != 2){
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     4e4:	88 23       	and	r24, r24
     4e6:	e1 f4       	brne	.+56     	; 0x520 <main+0x3a4>
     4e8:	82 e0       	ldi	r24, 0x02	; 2
     4ea:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     4ee:	88 23       	and	r24, r24
     4f0:	b9 f0       	breq	.+46     	; 0x520 <main+0x3a4>
     4f2:	32 e0       	ldi	r19, 0x02	; 2
     4f4:	63 16       	cp	r6, r19
     4f6:	71 04       	cpc	r7, r1
     4f8:	99 f0       	breq	.+38     	; 0x520 <main+0x3a4>
					state = 32;
					mode = 2;
					OrangutanLCD::clear();
     4fa:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
					OrangutanLCD::print("MOTORS ");
     4fe:	83 e5       	ldi	r24, 0x53	; 83
     500:	91 e0       	ldi	r25, 0x01	; 1
     502:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
					OrangutanLCD::gotoXY(0,1);
     506:	80 e0       	ldi	r24, 0x00	; 0
     508:	61 e0       	ldi	r22, 0x01	; 1
     50a:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     50e:	40 e2       	ldi	r20, 0x20	; 32
     510:	50 e0       	ldi	r21, 0x00	; 0
     512:	58 8f       	std	Y+24, r21	; 0x18
     514:	4f 8b       	std	Y+23, r20	; 0x17
     516:	00 e0       	ldi	r16, 0x00	; 0
     518:	10 e0       	ldi	r17, 0x00	; 0
     51a:	92 e0       	ldi	r25, 0x02	; 2
     51c:	69 2e       	mov	r6, r25
     51e:	71 2c       	mov	r7, r1
					print = 0;
				}
				if(OrangutanDigital::isInputHigh(IO_D1) && OrangutanDigital::isInputHigh(IO_D2) && mode != 3){
     520:	81 e0       	ldi	r24, 0x01	; 1
     522:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     526:	88 23       	and	r24, r24
     528:	11 f4       	brne	.+4      	; 0x52e <main+0x3b2>
     52a:	0c 94 de 19 	jmp	0x33bc	; 0x33bc <main+0x3240>
     52e:	82 e0       	ldi	r24, 0x02	; 2
     530:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
     534:	88 23       	and	r24, r24
     536:	11 f4       	brne	.+4      	; 0x53c <main+0x3c0>
     538:	0c 94 de 19 	jmp	0x33bc	; 0x33bc <main+0x3240>
     53c:	53 e0       	ldi	r21, 0x03	; 3
     53e:	65 16       	cp	r6, r21
     540:	71 04       	cpc	r7, r1
     542:	11 f4       	brne	.+4      	; 0x548 <main+0x3cc>
     544:	0c 94 de 19 	jmp	0x33bc	; 0x33bc <main+0x3240>
					state = 0;
					mode = 3;
					OrangutanLCD::clear();
     548:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
					OrangutanLCD::print("INPUTS ");
     54c:	83 e4       	ldi	r24, 0x43	; 67
     54e:	91 e0       	ldi	r25, 0x01	; 1
     550:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
					OrangutanLCD::gotoXY(0,1);
     554:	80 e0       	ldi	r24, 0x00	; 0
     556:	61 e0       	ldi	r22, 0x01	; 1
     558:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     55c:	00 e0       	ldi	r16, 0x00	; 0
     55e:	10 e0       	ldi	r17, 0x00	; 0
     560:	83 e0       	ldi	r24, 0x03	; 3
     562:	68 2e       	mov	r6, r24
     564:	71 2c       	mov	r7, r1
					print = 0;
				}

				//state conversions

				if(state == 0 && button == 0){
     566:	ef 28       	or	r14, r15
     568:	09 f0       	breq	.+2      	; 0x56c <main+0x3f0>
     56a:	60 c0       	rjmp	.+192    	; 0x62c <main+0x4b0>
					OrangutanLCD::gotoXY(0,1);
     56c:	80 e0       	ldi	r24, 0x00	; 0
     56e:	61 e0       	ldi	r22, 0x01	; 1
     570:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     574:	56 01       	movw	r10, r12
     576:	00 e0       	ldi	r16, 0x00	; 0
     578:	10 e0       	ldi	r17, 0x00	; 0
     57a:	0c 94 e6 19 	jmp	0x33cc	; 0x33cc <main+0x3250>
					button = 1;
					state = 1;
					counterRef = counter;
					print = 0;
				}
				if(state == 1 && button == 0){
     57e:	8f 89       	ldd	r24, Y+23	; 0x17
     580:	98 8d       	ldd	r25, Y+24	; 0x18
     582:	01 97       	sbiw	r24, 0x01	; 1
     584:	69 f4       	brne	.+26     	; 0x5a0 <main+0x424>
     586:	ef 28       	or	r14, r15
     588:	11 f0       	breq	.+4      	; 0x58e <main+0x412>
     58a:	0c 94 e6 19 	jmp	0x33cc	; 0x33cc <main+0x3250>
					OrangutanLCD::gotoXY(0,1);
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	61 e0       	ldi	r22, 0x01	; 1
     592:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     596:	56 01       	movw	r10, r12
     598:	00 e0       	ldi	r16, 0x00	; 0
     59a:	10 e0       	ldi	r17, 0x00	; 0
     59c:	0c 94 ef 19 	jmp	0x33de	; 0x33de <main+0x3262>
					button = 1;
					state = 2;
					counterRef = counter;
					print = 0;
				}
				if(state == 2 && button == 0){
     5a0:	ef 89       	ldd	r30, Y+23	; 0x17
     5a2:	f8 8d       	ldd	r31, Y+24	; 0x18
     5a4:	32 97       	sbiw	r30, 0x02	; 2
     5a6:	69 f4       	brne	.+26     	; 0x5c2 <main+0x446>
     5a8:	ef 28       	or	r14, r15
     5aa:	11 f0       	breq	.+4      	; 0x5b0 <main+0x434>
     5ac:	0c 94 ef 19 	jmp	0x33de	; 0x33de <main+0x3262>
					OrangutanLCD::gotoXY(0,1);
     5b0:	80 e0       	ldi	r24, 0x00	; 0
     5b2:	61 e0       	ldi	r22, 0x01	; 1
     5b4:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     5b8:	56 01       	movw	r10, r12
     5ba:	00 e0       	ldi	r16, 0x00	; 0
     5bc:	10 e0       	ldi	r17, 0x00	; 0
     5be:	0c 94 f8 19 	jmp	0x33f0	; 0x33f0 <main+0x3274>
					button = 1;
					state = 3;
					counterRef = counter;
					print = 0;
				}
				if(state == 3 && button == 0){
     5c2:	2f 89       	ldd	r18, Y+23	; 0x17
     5c4:	38 8d       	ldd	r19, Y+24	; 0x18
     5c6:	23 30       	cpi	r18, 0x03	; 3
     5c8:	31 05       	cpc	r19, r1
     5ca:	69 f4       	brne	.+26     	; 0x5e6 <main+0x46a>
     5cc:	ef 28       	or	r14, r15
     5ce:	11 f0       	breq	.+4      	; 0x5d4 <main+0x458>
     5d0:	0c 94 f8 19 	jmp	0x33f0	; 0x33f0 <main+0x3274>
					OrangutanLCD::gotoXY(0,1);
     5d4:	80 e0       	ldi	r24, 0x00	; 0
     5d6:	61 e0       	ldi	r22, 0x01	; 1
     5d8:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     5dc:	56 01       	movw	r10, r12
     5de:	00 e0       	ldi	r16, 0x00	; 0
     5e0:	10 e0       	ldi	r17, 0x00	; 0
     5e2:	0c 94 01 1a 	jmp	0x3402	; 0x3402 <main+0x3286>
					button = 1;
					state = 4;
					counterRef = counter;
					print = 0;
				}
				if(state == 4 && button == 0){
     5e6:	4f 89       	ldd	r20, Y+23	; 0x17
     5e8:	58 8d       	ldd	r21, Y+24	; 0x18
     5ea:	44 30       	cpi	r20, 0x04	; 4
     5ec:	51 05       	cpc	r21, r1
     5ee:	69 f4       	brne	.+26     	; 0x60a <main+0x48e>
     5f0:	ef 28       	or	r14, r15
     5f2:	11 f0       	breq	.+4      	; 0x5f8 <main+0x47c>
     5f4:	0c 94 01 1a 	jmp	0x3402	; 0x3402 <main+0x3286>
					OrangutanLCD::gotoXY(0,1);
     5f8:	80 e0       	ldi	r24, 0x00	; 0
     5fa:	61 e0       	ldi	r22, 0x01	; 1
     5fc:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     600:	56 01       	movw	r10, r12
     602:	00 e0       	ldi	r16, 0x00	; 0
     604:	10 e0       	ldi	r17, 0x00	; 0
     606:	0c 94 06 1a 	jmp	0x340c	; 0x340c <main+0x3290>
					button = 1;
					state = 5;
					counterRef = counter;
					print = 0;
				}
				if(state == 5 && button == 0){
     60a:	8f 89       	ldd	r24, Y+23	; 0x17
     60c:	98 8d       	ldd	r25, Y+24	; 0x18
     60e:	05 97       	sbiw	r24, 0x05	; 5
     610:	91 f4       	brne	.+36     	; 0x636 <main+0x4ba>
     612:	ef 28       	or	r14, r15
     614:	11 f0       	breq	.+4      	; 0x61a <main+0x49e>
     616:	0c 94 06 1a 	jmp	0x340c	; 0x340c <main+0x3290>
					OrangutanLCD::gotoXY(0,1);
     61a:	80 e0       	ldi	r24, 0x00	; 0
     61c:	61 e0       	ldi	r22, 0x01	; 1
     61e:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     622:	56 01       	movw	r10, r12
     624:	00 e0       	ldi	r16, 0x00	; 0
     626:	10 e0       	ldi	r17, 0x00	; 0
     628:	0c 94 0f 1a 	jmp	0x341e	; 0x341e <main+0x32a2>
     62c:	18 8e       	std	Y+24, r1	; 0x18
     62e:	1f 8a       	std	Y+23, r1	; 0x17
     630:	b1 e0       	ldi	r27, 0x01	; 1
     632:	eb 2e       	mov	r14, r27
     634:	f1 2c       	mov	r15, r1
					button = 1;
					state = 6;
					counterRef = counter;
					print = 0;
				}
				if(state == 6 && button == 0){
     636:	ef 89       	ldd	r30, Y+23	; 0x17
     638:	f8 8d       	ldd	r31, Y+24	; 0x18
     63a:	36 97       	sbiw	r30, 0x06	; 6
     63c:	79 f4       	brne	.+30     	; 0x65c <main+0x4e0>
     63e:	ef 28       	or	r14, r15
     640:	11 f0       	breq	.+4      	; 0x646 <main+0x4ca>
     642:	0c 94 0f 1a 	jmp	0x341e	; 0x341e <main+0x32a2>
					OrangutanLCD::gotoXY(0,1);
     646:	80 e0       	ldi	r24, 0x00	; 0
     648:	61 e0       	ldi	r22, 0x01	; 1
     64a:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     64e:	56 01       	movw	r10, r12
     650:	27 e0       	ldi	r18, 0x07	; 7
     652:	30 e0       	ldi	r19, 0x00	; 0
     654:	38 8f       	std	Y+24, r19	; 0x18
     656:	2f 8b       	std	Y+23, r18	; 0x17
     658:	0c 94 1d 1a 	jmp	0x343a	; 0x343a <main+0x32be>
					button = 1;
					state = 7;
					counterRef = counter;
					print = 0;
				}
				if(state == 7 && button == 0){
     65c:	4f 89       	ldd	r20, Y+23	; 0x17
     65e:	58 8d       	ldd	r21, Y+24	; 0x18
     660:	47 30       	cpi	r20, 0x07	; 7
     662:	51 05       	cpc	r21, r1
     664:	b9 f4       	brne	.+46     	; 0x694 <main+0x518>
     666:	e1 14       	cp	r14, r1
     668:	f1 04       	cpc	r15, r1
     66a:	d1 f5       	brne	.+116    	; 0x6e0 <main+0x564>
					OrangutanLCD::clear();
     66c:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
					button = 1;
					if(mode == 0){
     670:	61 14       	cp	r6, r1
     672:	71 04       	cpc	r7, r1
     674:	11 f4       	brne	.+4      	; 0x67a <main+0x4fe>
     676:	0c 94 18 1a 	jmp	0x3430	; 0x3430 <main+0x32b4>
						state = -1;
					}
					else{
						state = 8;
						OrangutanLCD::print("OUTPUTS");
     67a:	8b e4       	ldi	r24, 0x4B	; 75
     67c:	91 e0       	ldi	r25, 0x01	; 1
     67e:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
						OrangutanLCD::gotoXY(0,1);
     682:	80 e0       	ldi	r24, 0x00	; 0
     684:	61 e0       	ldi	r22, 0x01	; 1
     686:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     68a:	56 01       	movw	r10, r12
     68c:	00 e0       	ldi	r16, 0x00	; 0
     68e:	10 e0       	ldi	r17, 0x00	; 0
     690:	0c 94 24 1a 	jmp	0x3448	; 0x3448 <main+0x32cc>
					}
					counterRef = counter;
					print = 0;
				}
				if(state == 8 && button == 0){
     694:	8f 89       	ldd	r24, Y+23	; 0x17
     696:	98 8d       	ldd	r25, Y+24	; 0x18
     698:	08 97       	sbiw	r24, 0x08	; 8
     69a:	89 f4       	brne	.+34     	; 0x6be <main+0x542>
     69c:	ef 28       	or	r14, r15
     69e:	11 f0       	breq	.+4      	; 0x6a4 <main+0x528>
     6a0:	0c 94 24 1a 	jmp	0x3448	; 0x3448 <main+0x32cc>
					OrangutanLCD::gotoXY(13,1);
     6a4:	8d e0       	ldi	r24, 0x0D	; 13
     6a6:	61 e0       	ldi	r22, 0x01	; 1
     6a8:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("OFF");
     6ac:	8b e5       	ldi	r24, 0x5B	; 91
     6ae:	91 e0       	ldi	r25, 0x01	; 1
     6b0:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     6b4:	56 01       	movw	r10, r12
     6b6:	00 e0       	ldi	r16, 0x00	; 0
     6b8:	10 e0       	ldi	r17, 0x00	; 0
     6ba:	0c 94 2d 1a 	jmp	0x345a	; 0x345a <main+0x32de>
					state = 9;
					button = 1;
					counterRef = counter;
					print = 0;
				}
				if(state == 9 && button == 0){
     6be:	ef 89       	ldd	r30, Y+23	; 0x17
     6c0:	f8 8d       	ldd	r31, Y+24	; 0x18
     6c2:	39 97       	sbiw	r30, 0x09	; 9
     6c4:	69 f4       	brne	.+26     	; 0x6e0 <main+0x564>
     6c6:	ef 28       	or	r14, r15
     6c8:	11 f0       	breq	.+4      	; 0x6ce <main+0x552>
     6ca:	0c 94 2d 1a 	jmp	0x345a	; 0x345a <main+0x32de>
					OrangutanLCD::gotoXY(0,1);
     6ce:	80 e0       	ldi	r24, 0x00	; 0
     6d0:	61 e0       	ldi	r22, 0x01	; 1
     6d2:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     6d6:	56 01       	movw	r10, r12
     6d8:	00 e0       	ldi	r16, 0x00	; 0
     6da:	10 e0       	ldi	r17, 0x00	; 0
     6dc:	0c 94 36 1a 	jmp	0x346c	; 0x346c <main+0x32f0>
					button = 1;
					state = 10;
					counterRef = counter;
					print = 0;
				}
				if(state == 10 && button == 0){
     6e0:	2f 89       	ldd	r18, Y+23	; 0x17
     6e2:	38 8d       	ldd	r19, Y+24	; 0x18
     6e4:	2a 30       	cpi	r18, 0x0A	; 10
     6e6:	31 05       	cpc	r19, r1
     6e8:	89 f4       	brne	.+34     	; 0x70c <main+0x590>
     6ea:	ef 28       	or	r14, r15
     6ec:	11 f0       	breq	.+4      	; 0x6f2 <main+0x576>
     6ee:	0c 94 36 1a 	jmp	0x346c	; 0x346c <main+0x32f0>
					OrangutanLCD::gotoXY(13,1);
     6f2:	8d e0       	ldi	r24, 0x0D	; 13
     6f4:	61 e0       	ldi	r22, 0x01	; 1
     6f6:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("OFF");
     6fa:	8b e5       	ldi	r24, 0x5B	; 91
     6fc:	91 e0       	ldi	r25, 0x01	; 1
     6fe:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     702:	56 01       	movw	r10, r12
     704:	00 e0       	ldi	r16, 0x00	; 0
     706:	10 e0       	ldi	r17, 0x00	; 0
     708:	0c 94 3f 1a 	jmp	0x347e	; 0x347e <main+0x3302>
					button = 1;
					state = 11;
					counterRef = counter;
					print = 0;
				}
				if(state == 11 && button == 0){
     70c:	4f 89       	ldd	r20, Y+23	; 0x17
     70e:	58 8d       	ldd	r21, Y+24	; 0x18
     710:	4b 30       	cpi	r20, 0x0B	; 11
     712:	51 05       	cpc	r21, r1
     714:	69 f4       	brne	.+26     	; 0x730 <main+0x5b4>
     716:	ef 28       	or	r14, r15
     718:	11 f0       	breq	.+4      	; 0x71e <main+0x5a2>
     71a:	0c 94 3f 1a 	jmp	0x347e	; 0x347e <main+0x3302>
					OrangutanLCD::gotoXY(0,1);
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	61 e0       	ldi	r22, 0x01	; 1
     722:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     726:	56 01       	movw	r10, r12
     728:	00 e0       	ldi	r16, 0x00	; 0
     72a:	10 e0       	ldi	r17, 0x00	; 0
     72c:	0c 94 48 1a 	jmp	0x3490	; 0x3490 <main+0x3314>
					button = 1;
					state = 12;
					counterRef = counter;
					print = 0;
				}
				if(state == 12 && button == 0){
     730:	8f 89       	ldd	r24, Y+23	; 0x17
     732:	98 8d       	ldd	r25, Y+24	; 0x18
     734:	0c 97       	sbiw	r24, 0x0c	; 12
     736:	89 f4       	brne	.+34     	; 0x75a <main+0x5de>
     738:	ef 28       	or	r14, r15
     73a:	11 f0       	breq	.+4      	; 0x740 <main+0x5c4>
     73c:	0c 94 48 1a 	jmp	0x3490	; 0x3490 <main+0x3314>
					OrangutanLCD::gotoXY(13,1);
     740:	8d e0       	ldi	r24, 0x0D	; 13
     742:	61 e0       	ldi	r22, 0x01	; 1
     744:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("OFF");
     748:	8b e5       	ldi	r24, 0x5B	; 91
     74a:	91 e0       	ldi	r25, 0x01	; 1
     74c:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     750:	56 01       	movw	r10, r12
     752:	00 e0       	ldi	r16, 0x00	; 0
     754:	10 e0       	ldi	r17, 0x00	; 0
     756:	0c 94 51 1a 	jmp	0x34a2	; 0x34a2 <main+0x3326>
					button = 1;
					state = 13;
					counterRef = counter;
					print = 0;
				}
				if(state == 13 && button == 0){
     75a:	ef 89       	ldd	r30, Y+23	; 0x17
     75c:	f8 8d       	ldd	r31, Y+24	; 0x18
     75e:	3d 97       	sbiw	r30, 0x0d	; 13
     760:	69 f4       	brne	.+26     	; 0x77c <main+0x600>
     762:	ef 28       	or	r14, r15
     764:	11 f0       	breq	.+4      	; 0x76a <main+0x5ee>
     766:	0c 94 51 1a 	jmp	0x34a2	; 0x34a2 <main+0x3326>
					OrangutanLCD::gotoXY(0,1);
     76a:	80 e0       	ldi	r24, 0x00	; 0
     76c:	61 e0       	ldi	r22, 0x01	; 1
     76e:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     772:	56 01       	movw	r10, r12
     774:	00 e0       	ldi	r16, 0x00	; 0
     776:	10 e0       	ldi	r17, 0x00	; 0
     778:	0c 94 5a 1a 	jmp	0x34b4	; 0x34b4 <main+0x3338>
					button = 1;
					state = 14;
					counterRef = counter;
					print = 0;
				}
				if(state == 14 && button == 0){
     77c:	2f 89       	ldd	r18, Y+23	; 0x17
     77e:	38 8d       	ldd	r19, Y+24	; 0x18
     780:	2e 30       	cpi	r18, 0x0E	; 14
     782:	31 05       	cpc	r19, r1
     784:	89 f4       	brne	.+34     	; 0x7a8 <main+0x62c>
     786:	ef 28       	or	r14, r15
     788:	11 f0       	breq	.+4      	; 0x78e <main+0x612>
     78a:	0c 94 5a 1a 	jmp	0x34b4	; 0x34b4 <main+0x3338>
					OrangutanLCD::gotoXY(13,1);
     78e:	8d e0       	ldi	r24, 0x0D	; 13
     790:	61 e0       	ldi	r22, 0x01	; 1
     792:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("OFF");
     796:	8b e5       	ldi	r24, 0x5B	; 91
     798:	91 e0       	ldi	r25, 0x01	; 1
     79a:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     79e:	56 01       	movw	r10, r12
     7a0:	00 e0       	ldi	r16, 0x00	; 0
     7a2:	10 e0       	ldi	r17, 0x00	; 0
     7a4:	0c 94 63 1a 	jmp	0x34c6	; 0x34c6 <main+0x334a>
					button = 1;
					state = 15;
					counterRef = counter;
					print = 0;
				}
				if(state == 15 && button == 0){
     7a8:	4f 89       	ldd	r20, Y+23	; 0x17
     7aa:	58 8d       	ldd	r21, Y+24	; 0x18
     7ac:	4f 30       	cpi	r20, 0x0F	; 15
     7ae:	51 05       	cpc	r21, r1
     7b0:	69 f4       	brne	.+26     	; 0x7cc <main+0x650>
     7b2:	ef 28       	or	r14, r15
     7b4:	11 f0       	breq	.+4      	; 0x7ba <main+0x63e>
     7b6:	0c 94 63 1a 	jmp	0x34c6	; 0x34c6 <main+0x334a>
					OrangutanLCD::gotoXY(0,1);
     7ba:	80 e0       	ldi	r24, 0x00	; 0
     7bc:	61 e0       	ldi	r22, 0x01	; 1
     7be:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     7c2:	56 01       	movw	r10, r12
     7c4:	00 e0       	ldi	r16, 0x00	; 0
     7c6:	10 e0       	ldi	r17, 0x00	; 0
     7c8:	0c 94 6c 1a 	jmp	0x34d8	; 0x34d8 <main+0x335c>
					button = 1;
					state = 16;
					counterRef = counter;
					print = 0;
				}
				if(state == 16 && button == 0){
     7cc:	8f 89       	ldd	r24, Y+23	; 0x17
     7ce:	98 8d       	ldd	r25, Y+24	; 0x18
     7d0:	40 97       	sbiw	r24, 0x10	; 16
     7d2:	89 f4       	brne	.+34     	; 0x7f6 <main+0x67a>
     7d4:	ef 28       	or	r14, r15
     7d6:	11 f0       	breq	.+4      	; 0x7dc <main+0x660>
     7d8:	0c 94 6c 1a 	jmp	0x34d8	; 0x34d8 <main+0x335c>
					OrangutanLCD::gotoXY(13,1);
     7dc:	8d e0       	ldi	r24, 0x0D	; 13
     7de:	61 e0       	ldi	r22, 0x01	; 1
     7e0:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("OFF");
     7e4:	8b e5       	ldi	r24, 0x5B	; 91
     7e6:	91 e0       	ldi	r25, 0x01	; 1
     7e8:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     7ec:	56 01       	movw	r10, r12
     7ee:	00 e0       	ldi	r16, 0x00	; 0
     7f0:	10 e0       	ldi	r17, 0x00	; 0
     7f2:	0c 94 75 1a 	jmp	0x34ea	; 0x34ea <main+0x336e>
					button = 1;
					state = 17;
					counterRef = counter;
					print = 0;
				}
				if(state == 17 && button == 0){
     7f6:	ef 89       	ldd	r30, Y+23	; 0x17
     7f8:	f8 8d       	ldd	r31, Y+24	; 0x18
     7fa:	71 97       	sbiw	r30, 0x11	; 17
     7fc:	69 f4       	brne	.+26     	; 0x818 <main+0x69c>
     7fe:	ef 28       	or	r14, r15
     800:	11 f0       	breq	.+4      	; 0x806 <main+0x68a>
     802:	0c 94 75 1a 	jmp	0x34ea	; 0x34ea <main+0x336e>
					OrangutanLCD::gotoXY(0,1);
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	61 e0       	ldi	r22, 0x01	; 1
     80a:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     80e:	56 01       	movw	r10, r12
     810:	00 e0       	ldi	r16, 0x00	; 0
     812:	10 e0       	ldi	r17, 0x00	; 0
     814:	0c 94 7e 1a 	jmp	0x34fc	; 0x34fc <main+0x3380>
					button = 1;
					state = 18;
					counterRef = counter;
					print = 0;
				}
				if(state == 18 && button == 0){
     818:	2f 89       	ldd	r18, Y+23	; 0x17
     81a:	38 8d       	ldd	r19, Y+24	; 0x18
     81c:	22 31       	cpi	r18, 0x12	; 18
     81e:	31 05       	cpc	r19, r1
     820:	89 f4       	brne	.+34     	; 0x844 <main+0x6c8>
     822:	ef 28       	or	r14, r15
     824:	11 f0       	breq	.+4      	; 0x82a <main+0x6ae>
     826:	0c 94 7e 1a 	jmp	0x34fc	; 0x34fc <main+0x3380>
					OrangutanLCD::gotoXY(13,1);
     82a:	8d e0       	ldi	r24, 0x0D	; 13
     82c:	61 e0       	ldi	r22, 0x01	; 1
     82e:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("OFF");
     832:	8b e5       	ldi	r24, 0x5B	; 91
     834:	91 e0       	ldi	r25, 0x01	; 1
     836:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     83a:	56 01       	movw	r10, r12
     83c:	00 e0       	ldi	r16, 0x00	; 0
     83e:	10 e0       	ldi	r17, 0x00	; 0
     840:	0c 94 87 1a 	jmp	0x350e	; 0x350e <main+0x3392>
					button = 1;
					state = 19;
					counterRef = counter;
					print = 0;
				}
				if(state == 19 && button == 0){
     844:	4f 89       	ldd	r20, Y+23	; 0x17
     846:	58 8d       	ldd	r21, Y+24	; 0x18
     848:	43 31       	cpi	r20, 0x13	; 19
     84a:	51 05       	cpc	r21, r1
     84c:	69 f4       	brne	.+26     	; 0x868 <main+0x6ec>
     84e:	ef 28       	or	r14, r15
     850:	11 f0       	breq	.+4      	; 0x856 <main+0x6da>
     852:	0c 94 87 1a 	jmp	0x350e	; 0x350e <main+0x3392>
					OrangutanLCD::gotoXY(0,1);
     856:	80 e0       	ldi	r24, 0x00	; 0
     858:	61 e0       	ldi	r22, 0x01	; 1
     85a:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     85e:	56 01       	movw	r10, r12
     860:	00 e0       	ldi	r16, 0x00	; 0
     862:	10 e0       	ldi	r17, 0x00	; 0
     864:	0c 94 90 1a 	jmp	0x3520	; 0x3520 <main+0x33a4>
					button = 1;
					state = 20;
					counterRef = counter;
					print = 0;
				}
				if(state == 20 && button == 0){
     868:	8f 89       	ldd	r24, Y+23	; 0x17
     86a:	98 8d       	ldd	r25, Y+24	; 0x18
     86c:	44 97       	sbiw	r24, 0x14	; 20
     86e:	89 f4       	brne	.+34     	; 0x892 <main+0x716>
     870:	ef 28       	or	r14, r15
     872:	11 f0       	breq	.+4      	; 0x878 <main+0x6fc>
     874:	0c 94 90 1a 	jmp	0x3520	; 0x3520 <main+0x33a4>
					OrangutanLCD::gotoXY(13,1);
     878:	8d e0       	ldi	r24, 0x0D	; 13
     87a:	61 e0       	ldi	r22, 0x01	; 1
     87c:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("OFF");
     880:	8b e5       	ldi	r24, 0x5B	; 91
     882:	91 e0       	ldi	r25, 0x01	; 1
     884:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     888:	56 01       	movw	r10, r12
     88a:	00 e0       	ldi	r16, 0x00	; 0
     88c:	10 e0       	ldi	r17, 0x00	; 0
     88e:	0c 94 99 1a 	jmp	0x3532	; 0x3532 <main+0x33b6>
					button = 1;
					state = 21;
					counterRef = counter;
					print = 0;
				}
				if(state == 21 && button == 0){
     892:	ef 89       	ldd	r30, Y+23	; 0x17
     894:	f8 8d       	ldd	r31, Y+24	; 0x18
     896:	75 97       	sbiw	r30, 0x15	; 21
     898:	69 f4       	brne	.+26     	; 0x8b4 <main+0x738>
     89a:	ef 28       	or	r14, r15
     89c:	11 f0       	breq	.+4      	; 0x8a2 <main+0x726>
     89e:	0c 94 99 1a 	jmp	0x3532	; 0x3532 <main+0x33b6>
					OrangutanLCD::gotoXY(0,1);
     8a2:	80 e0       	ldi	r24, 0x00	; 0
     8a4:	61 e0       	ldi	r22, 0x01	; 1
     8a6:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     8aa:	56 01       	movw	r10, r12
     8ac:	00 e0       	ldi	r16, 0x00	; 0
     8ae:	10 e0       	ldi	r17, 0x00	; 0
     8b0:	0c 94 a2 1a 	jmp	0x3544	; 0x3544 <main+0x33c8>
					button = 1;
					state = 22;
					counterRef = counter;
					print = 0;
				}
				if(state == 22 && button == 0){
     8b4:	2f 89       	ldd	r18, Y+23	; 0x17
     8b6:	38 8d       	ldd	r19, Y+24	; 0x18
     8b8:	26 31       	cpi	r18, 0x16	; 22
     8ba:	31 05       	cpc	r19, r1
     8bc:	89 f4       	brne	.+34     	; 0x8e0 <main+0x764>
     8be:	ef 28       	or	r14, r15
     8c0:	11 f0       	breq	.+4      	; 0x8c6 <main+0x74a>
     8c2:	0c 94 a2 1a 	jmp	0x3544	; 0x3544 <main+0x33c8>
					OrangutanLCD::gotoXY(13,1);
     8c6:	8d e0       	ldi	r24, 0x0D	; 13
     8c8:	61 e0       	ldi	r22, 0x01	; 1
     8ca:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("OFF");
     8ce:	8b e5       	ldi	r24, 0x5B	; 91
     8d0:	91 e0       	ldi	r25, 0x01	; 1
     8d2:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     8d6:	56 01       	movw	r10, r12
     8d8:	00 e0       	ldi	r16, 0x00	; 0
     8da:	10 e0       	ldi	r17, 0x00	; 0
     8dc:	0c 94 ab 1a 	jmp	0x3556	; 0x3556 <main+0x33da>
					button = 1;
					state = 23;
					counterRef = counter;
					print = 0;
				}
				if(state == 23 && button == 0){
     8e0:	4f 89       	ldd	r20, Y+23	; 0x17
     8e2:	58 8d       	ldd	r21, Y+24	; 0x18
     8e4:	47 31       	cpi	r20, 0x17	; 23
     8e6:	51 05       	cpc	r21, r1
     8e8:	69 f4       	brne	.+26     	; 0x904 <main+0x788>
     8ea:	ef 28       	or	r14, r15
     8ec:	11 f0       	breq	.+4      	; 0x8f2 <main+0x776>
     8ee:	0c 94 ab 1a 	jmp	0x3556	; 0x3556 <main+0x33da>
					OrangutanLCD::gotoXY(0,1);
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	61 e0       	ldi	r22, 0x01	; 1
     8f6:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     8fa:	56 01       	movw	r10, r12
     8fc:	00 e0       	ldi	r16, 0x00	; 0
     8fe:	10 e0       	ldi	r17, 0x00	; 0
     900:	0c 94 b4 1a 	jmp	0x3568	; 0x3568 <main+0x33ec>
					button = 1;
					state = 24;
					counterRef = counter;
					print = 0;
				}
				if(state == 24 && button == 0){
     904:	8f 89       	ldd	r24, Y+23	; 0x17
     906:	98 8d       	ldd	r25, Y+24	; 0x18
     908:	48 97       	sbiw	r24, 0x18	; 24
     90a:	89 f4       	brne	.+34     	; 0x92e <main+0x7b2>
     90c:	ef 28       	or	r14, r15
     90e:	11 f0       	breq	.+4      	; 0x914 <main+0x798>
     910:	0c 94 b4 1a 	jmp	0x3568	; 0x3568 <main+0x33ec>
					OrangutanLCD::gotoXY(13,1);
     914:	8d e0       	ldi	r24, 0x0D	; 13
     916:	61 e0       	ldi	r22, 0x01	; 1
     918:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("OFF");
     91c:	8b e5       	ldi	r24, 0x5B	; 91
     91e:	91 e0       	ldi	r25, 0x01	; 1
     920:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     924:	56 01       	movw	r10, r12
     926:	00 e0       	ldi	r16, 0x00	; 0
     928:	10 e0       	ldi	r17, 0x00	; 0
     92a:	0c 94 bd 1a 	jmp	0x357a	; 0x357a <main+0x33fe>
					button = 1;
					state = 25;
					counterRef = counter;
					print = 0;
				}
				if(state == 25 && button == 0){
     92e:	ef 89       	ldd	r30, Y+23	; 0x17
     930:	f8 8d       	ldd	r31, Y+24	; 0x18
     932:	79 97       	sbiw	r30, 0x19	; 25
     934:	69 f4       	brne	.+26     	; 0x950 <main+0x7d4>
     936:	ef 28       	or	r14, r15
     938:	11 f0       	breq	.+4      	; 0x93e <main+0x7c2>
     93a:	0c 94 bd 1a 	jmp	0x357a	; 0x357a <main+0x33fe>
					OrangutanLCD::gotoXY(0,1);
     93e:	80 e0       	ldi	r24, 0x00	; 0
     940:	61 e0       	ldi	r22, 0x01	; 1
     942:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     946:	56 01       	movw	r10, r12
     948:	00 e0       	ldi	r16, 0x00	; 0
     94a:	10 e0       	ldi	r17, 0x00	; 0
     94c:	0c 94 c6 1a 	jmp	0x358c	; 0x358c <main+0x3410>
					button = 1;
					state = 26;
					counterRef = counter;
					print = 0;
				}
				if(state == 26 && button == 0){
     950:	2f 89       	ldd	r18, Y+23	; 0x17
     952:	38 8d       	ldd	r19, Y+24	; 0x18
     954:	2a 31       	cpi	r18, 0x1A	; 26
     956:	31 05       	cpc	r19, r1
     958:	89 f4       	brne	.+34     	; 0x97c <main+0x800>
     95a:	ef 28       	or	r14, r15
     95c:	11 f0       	breq	.+4      	; 0x962 <main+0x7e6>
     95e:	0c 94 c6 1a 	jmp	0x358c	; 0x358c <main+0x3410>
					OrangutanLCD::gotoXY(13,1);
     962:	8d e0       	ldi	r24, 0x0D	; 13
     964:	61 e0       	ldi	r22, 0x01	; 1
     966:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("OFF");
     96a:	8b e5       	ldi	r24, 0x5B	; 91
     96c:	91 e0       	ldi	r25, 0x01	; 1
     96e:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     972:	56 01       	movw	r10, r12
     974:	00 e0       	ldi	r16, 0x00	; 0
     976:	10 e0       	ldi	r17, 0x00	; 0
     978:	0c 94 cf 1a 	jmp	0x359e	; 0x359e <main+0x3422>
					button = 1;
					state = 27;
					counterRef = counter;
					print = 0;
				}
				if(state == 27 && button == 0){
     97c:	4f 89       	ldd	r20, Y+23	; 0x17
     97e:	58 8d       	ldd	r21, Y+24	; 0x18
     980:	4b 31       	cpi	r20, 0x1B	; 27
     982:	51 05       	cpc	r21, r1
     984:	69 f4       	brne	.+26     	; 0x9a0 <main+0x824>
     986:	ef 28       	or	r14, r15
     988:	11 f0       	breq	.+4      	; 0x98e <main+0x812>
     98a:	0c 94 cf 1a 	jmp	0x359e	; 0x359e <main+0x3422>
					OrangutanLCD::gotoXY(0,1);
     98e:	80 e0       	ldi	r24, 0x00	; 0
     990:	61 e0       	ldi	r22, 0x01	; 1
     992:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     996:	56 01       	movw	r10, r12
     998:	00 e0       	ldi	r16, 0x00	; 0
     99a:	10 e0       	ldi	r17, 0x00	; 0
     99c:	0c 94 d8 1a 	jmp	0x35b0	; 0x35b0 <main+0x3434>
					button = 1;
					state = 28;
					counterRef = counter;
					print = 0;
				}
				if(state == 28 && button == 0){
     9a0:	8f 89       	ldd	r24, Y+23	; 0x17
     9a2:	98 8d       	ldd	r25, Y+24	; 0x18
     9a4:	4c 97       	sbiw	r24, 0x1c	; 28
     9a6:	89 f4       	brne	.+34     	; 0x9ca <main+0x84e>
     9a8:	ef 28       	or	r14, r15
     9aa:	11 f0       	breq	.+4      	; 0x9b0 <main+0x834>
     9ac:	0c 94 d8 1a 	jmp	0x35b0	; 0x35b0 <main+0x3434>
					OrangutanLCD::gotoXY(13,1);
     9b0:	8d e0       	ldi	r24, 0x0D	; 13
     9b2:	61 e0       	ldi	r22, 0x01	; 1
     9b4:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("OFF");
     9b8:	8b e5       	ldi	r24, 0x5B	; 91
     9ba:	91 e0       	ldi	r25, 0x01	; 1
     9bc:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     9c0:	56 01       	movw	r10, r12
     9c2:	00 e0       	ldi	r16, 0x00	; 0
     9c4:	10 e0       	ldi	r17, 0x00	; 0
     9c6:	0c 94 dd 1a 	jmp	0x35ba	; 0x35ba <main+0x343e>
					button = 1;
					state = 29;
					counterRef = counter;
					print = 0;
				}
				if(state == 29 && button == 0){
     9ca:	ef 89       	ldd	r30, Y+23	; 0x17
     9cc:	f8 8d       	ldd	r31, Y+24	; 0x18
     9ce:	7d 97       	sbiw	r30, 0x1d	; 29
     9d0:	69 f4       	brne	.+26     	; 0x9ec <main+0x870>
     9d2:	ef 28       	or	r14, r15
     9d4:	11 f0       	breq	.+4      	; 0x9da <main+0x85e>
     9d6:	0c 94 dd 1a 	jmp	0x35ba	; 0x35ba <main+0x343e>
					OrangutanLCD::gotoXY(0,1);
     9da:	80 e0       	ldi	r24, 0x00	; 0
     9dc:	61 e0       	ldi	r22, 0x01	; 1
     9de:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     9e2:	56 01       	movw	r10, r12
     9e4:	00 e0       	ldi	r16, 0x00	; 0
     9e6:	10 e0       	ldi	r17, 0x00	; 0
     9e8:	0c 94 e6 1a 	jmp	0x35cc	; 0x35cc <main+0x3450>
					button = 1;
					state = 30;
					counterRef = counter;
					print = 0;
				}
				if(state == 30 && button == 0){
     9ec:	2f 89       	ldd	r18, Y+23	; 0x17
     9ee:	38 8d       	ldd	r19, Y+24	; 0x18
     9f0:	2e 31       	cpi	r18, 0x1E	; 30
     9f2:	31 05       	cpc	r19, r1
     9f4:	89 f4       	brne	.+34     	; 0xa18 <main+0x89c>
     9f6:	ef 28       	or	r14, r15
     9f8:	11 f0       	breq	.+4      	; 0x9fe <main+0x882>
     9fa:	0c 94 e6 1a 	jmp	0x35cc	; 0x35cc <main+0x3450>
					OrangutanLCD::gotoXY(13,1);
     9fe:	8d e0       	ldi	r24, 0x0D	; 13
     a00:	61 e0       	ldi	r22, 0x01	; 1
     a02:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("OFF");
     a06:	8b e5       	ldi	r24, 0x5B	; 91
     a08:	91 e0       	ldi	r25, 0x01	; 1
     a0a:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     a0e:	56 01       	movw	r10, r12
     a10:	4f e1       	ldi	r20, 0x1F	; 31
     a12:	50 e0       	ldi	r21, 0x00	; 0
     a14:	0c 94 f2 1a 	jmp	0x35e4	; 0x35e4 <main+0x3468>
					button = 1;
					state = 31;
					counterRef = counter;
					print = 0;
				}
				if(state == 31 && button == 0){
     a18:	8f 89       	ldd	r24, Y+23	; 0x17
     a1a:	98 8d       	ldd	r25, Y+24	; 0x18
     a1c:	4f 97       	sbiw	r24, 0x1f	; 31
     a1e:	f1 f4       	brne	.+60     	; 0xa5c <main+0x8e0>
     a20:	e1 14       	cp	r14, r1
     a22:	f1 04       	cpc	r15, r1
     a24:	09 f0       	breq	.+2      	; 0xa28 <main+0x8ac>
     a26:	47 c0       	rjmp	.+142    	; 0xab6 <main+0x93a>
					OrangutanLCD::clear();
     a28:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
     a2c:	80 91 38 03 	lds	r24, 0x0338
     a30:	84 60       	ori	r24, 0x04	; 4
     a32:	80 93 38 03 	sts	0x0338, r24
					button = 1;
					if(mode == 1){
     a36:	91 e0       	ldi	r25, 0x01	; 1
     a38:	69 16       	cp	r6, r25
     a3a:	71 04       	cpc	r7, r1
     a3c:	11 f4       	brne	.+4      	; 0xa42 <main+0x8c6>
     a3e:	0c 94 ef 1a 	jmp	0x35de	; 0x35de <main+0x3462>
						state = -1;
					}
					else{
						state = 32;
						OrangutanLCD::print("MOTORS");
     a42:	8f e5       	ldi	r24, 0x5F	; 95
     a44:	91 e0       	ldi	r25, 0x01	; 1
     a46:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
						OrangutanLCD::gotoXY(0,1);
     a4a:	80 e0       	ldi	r24, 0x00	; 0
     a4c:	61 e0       	ldi	r22, 0x01	; 1
     a4e:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     a52:	56 01       	movw	r10, r12
     a54:	00 e0       	ldi	r16, 0x00	; 0
     a56:	10 e0       	ldi	r17, 0x00	; 0
     a58:	0c 94 fb 1a 	jmp	0x35f6	; 0x35f6 <main+0x347a>
					}
					counterRef = counter;
					print = 0;
				}
				if(state == 32 && button == 0){
     a5c:	ef 89       	ldd	r30, Y+23	; 0x17
     a5e:	f8 8d       	ldd	r31, Y+24	; 0x18
     a60:	b0 97       	sbiw	r30, 0x20	; 32
     a62:	89 f4       	brne	.+34     	; 0xa86 <main+0x90a>
     a64:	ef 28       	or	r14, r15
     a66:	11 f0       	breq	.+4      	; 0xa6c <main+0x8f0>
     a68:	0c 94 fb 1a 	jmp	0x35f6	; 0x35f6 <main+0x347a>
					OrangutanLCD::gotoXY(11,1);
     a6c:	8b e0       	ldi	r24, 0x0B	; 11
     a6e:	61 e0       	ldi	r22, 0x01	; 1
     a70:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("BACK ");
     a74:	86 e6       	ldi	r24, 0x66	; 102
     a76:	91 e0       	ldi	r25, 0x01	; 1
     a78:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     a7c:	56 01       	movw	r10, r12
     a7e:	00 e0       	ldi	r16, 0x00	; 0
     a80:	10 e0       	ldi	r17, 0x00	; 0
     a82:	0c 94 04 1b 	jmp	0x3608	; 0x3608 <main+0x348c>
					button = 1;
					state = 33;
					counterRef = counter;
					print = 0;
				}
				if(state == 33 && button == 0){
     a86:	2f 89       	ldd	r18, Y+23	; 0x17
     a88:	38 8d       	ldd	r19, Y+24	; 0x18
     a8a:	21 32       	cpi	r18, 0x21	; 33
     a8c:	31 05       	cpc	r19, r1
     a8e:	99 f4       	brne	.+38     	; 0xab6 <main+0x93a>
     a90:	ef 28       	or	r14, r15
     a92:	11 f0       	breq	.+4      	; 0xa98 <main+0x91c>
     a94:	0c 94 04 1b 	jmp	0x3608	; 0x3608 <main+0x348c>
					OrangutanLCD::gotoXY(0,1);
     a98:	80 e0       	ldi	r24, 0x00	; 0
     a9a:	61 e0       	ldi	r22, 0x01	; 1
     a9c:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
     aa0:	80 91 38 03 	lds	r24, 0x0338
     aa4:	8b 7f       	andi	r24, 0xFB	; 251
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
     aa6:	80 62       	ori	r24, 0x20	; 32
     aa8:	80 93 38 03 	sts	0x0338, r24
     aac:	56 01       	movw	r10, r12
     aae:	00 e0       	ldi	r16, 0x00	; 0
     ab0:	10 e0       	ldi	r17, 0x00	; 0
     ab2:	0c 94 0d 1b 	jmp	0x361a	; 0x361a <main+0x349e>
					button = 1;
					state = 34;
					counterRef = counter;
					print = 0;
				}
				if(state == 34 && button == 0){
     ab6:	4f 89       	ldd	r20, Y+23	; 0x17
     ab8:	58 8d       	ldd	r21, Y+24	; 0x18
     aba:	42 32       	cpi	r20, 0x22	; 34
     abc:	51 05       	cpc	r21, r1
     abe:	89 f4       	brne	.+34     	; 0xae2 <main+0x966>
     ac0:	ef 28       	or	r14, r15
     ac2:	11 f0       	breq	.+4      	; 0xac8 <main+0x94c>
     ac4:	0c 94 0d 1b 	jmp	0x361a	; 0x361a <main+0x349e>
					OrangutanLCD::gotoXY(11,1);
     ac8:	8b e0       	ldi	r24, 0x0B	; 11
     aca:	61 e0       	ldi	r22, 0x01	; 1
     acc:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("BACK ");
     ad0:	86 e6       	ldi	r24, 0x66	; 102
     ad2:	91 e0       	ldi	r25, 0x01	; 1
     ad4:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     ad8:	56 01       	movw	r10, r12
     ada:	00 e0       	ldi	r16, 0x00	; 0
     adc:	10 e0       	ldi	r17, 0x00	; 0
     ade:	0c 94 16 1b 	jmp	0x362c	; 0x362c <main+0x34b0>
					button = 1;
					state = 35;
					counterRef = counter;
					print = 0;
				}
				if(state == 35 && button == 0){
     ae2:	8f 89       	ldd	r24, Y+23	; 0x17
     ae4:	98 8d       	ldd	r25, Y+24	; 0x18
     ae6:	83 97       	sbiw	r24, 0x23	; 35
     ae8:	b9 f4       	brne	.+46     	; 0xb18 <main+0x99c>
     aea:	ef 28       	or	r14, r15
     aec:	11 f0       	breq	.+4      	; 0xaf2 <main+0x976>
     aee:	0c 94 16 1b 	jmp	0x362c	; 0x362c <main+0x34b0>
					OrangutanLCD::gotoXY(0,1);
     af2:	80 e0       	ldi	r24, 0x00	; 0
     af4:	61 e0       	ldi	r22, 0x01	; 1
     af6:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
     afa:	80 91 38 03 	lds	r24, 0x0338
     afe:	8f 7d       	andi	r24, 0xDF	; 223
     b00:	80 93 38 03 	sts	0x0338, r24
					u_motorByte1.bits_in_motorByte1.m3Drop = 1;
     b04:	80 91 39 03 	lds	r24, 0x0339
     b08:	81 60       	ori	r24, 0x01	; 1
     b0a:	80 93 39 03 	sts	0x0339, r24
     b0e:	56 01       	movw	r10, r12
     b10:	00 e0       	ldi	r16, 0x00	; 0
     b12:	10 e0       	ldi	r17, 0x00	; 0
     b14:	0c 94 1f 1b 	jmp	0x363e	; 0x363e <main+0x34c2>
					button = 1;
					state = 36;
					counterRef = counter;
					print = 0;
				}
				if(state == 36 && button == 0){
     b18:	ef 89       	ldd	r30, Y+23	; 0x17
     b1a:	f8 8d       	ldd	r31, Y+24	; 0x18
     b1c:	b4 97       	sbiw	r30, 0x24	; 36
     b1e:	89 f4       	brne	.+34     	; 0xb42 <main+0x9c6>
     b20:	ef 28       	or	r14, r15
     b22:	11 f0       	breq	.+4      	; 0xb28 <main+0x9ac>
     b24:	0c 94 1f 1b 	jmp	0x363e	; 0x363e <main+0x34c2>
					OrangutanLCD::gotoXY(11,1);
     b28:	8b e0       	ldi	r24, 0x0B	; 11
     b2a:	61 e0       	ldi	r22, 0x01	; 1
     b2c:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("BACK ");
     b30:	86 e6       	ldi	r24, 0x66	; 102
     b32:	91 e0       	ldi	r25, 0x01	; 1
     b34:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     b38:	56 01       	movw	r10, r12
     b3a:	00 e0       	ldi	r16, 0x00	; 0
     b3c:	10 e0       	ldi	r17, 0x00	; 0
     b3e:	0c 94 24 1b 	jmp	0x3648	; 0x3648 <main+0x34cc>
					button = 1;
					state = 37;
					counterRef = counter;
					print = 0;
				}
				if(state == 37 && button == 0){
     b42:	2f 89       	ldd	r18, Y+23	; 0x17
     b44:	38 8d       	ldd	r19, Y+24	; 0x18
     b46:	25 32       	cpi	r18, 0x25	; 37
     b48:	31 05       	cpc	r19, r1
     b4a:	99 f4       	brne	.+38     	; 0xb72 <main+0x9f6>
     b4c:	ef 28       	or	r14, r15
     b4e:	11 f0       	breq	.+4      	; 0xb54 <main+0x9d8>
     b50:	0c 94 24 1b 	jmp	0x3648	; 0x3648 <main+0x34cc>
					OrangutanLCD::gotoXY(0,1);
     b54:	80 e0       	ldi	r24, 0x00	; 0
     b56:	61 e0       	ldi	r22, 0x01	; 1
     b58:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					u_motorByte1.bits_in_motorByte1.m3Drop = 0;
     b5c:	80 91 39 03 	lds	r24, 0x0339
     b60:	8e 7f       	andi	r24, 0xFE	; 254
					u_motorByte1.bits_in_motorByte1.m4Drop = 1;
     b62:	88 60       	ori	r24, 0x08	; 8
     b64:	80 93 39 03 	sts	0x0339, r24
     b68:	56 01       	movw	r10, r12
     b6a:	00 e0       	ldi	r16, 0x00	; 0
     b6c:	10 e0       	ldi	r17, 0x00	; 0
     b6e:	0c 94 29 1b 	jmp	0x3652	; 0x3652 <main+0x34d6>
					button = 1;
					state = 38;
					counterRef = counter;
					print = 0;
				}
				if(state == 38 && button == 0){
     b72:	4f 89       	ldd	r20, Y+23	; 0x17
     b74:	58 8d       	ldd	r21, Y+24	; 0x18
     b76:	46 32       	cpi	r20, 0x26	; 38
     b78:	51 05       	cpc	r21, r1
     b7a:	89 f4       	brne	.+34     	; 0xb9e <main+0xa22>
     b7c:	ef 28       	or	r14, r15
     b7e:	11 f0       	breq	.+4      	; 0xb84 <main+0xa08>
     b80:	0c 94 29 1b 	jmp	0x3652	; 0x3652 <main+0x34d6>
					OrangutanLCD::gotoXY(11,1);
     b84:	8b e0       	ldi	r24, 0x0B	; 11
     b86:	61 e0       	ldi	r22, 0x01	; 1
     b88:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("BACK ");
     b8c:	86 e6       	ldi	r24, 0x66	; 102
     b8e:	91 e0       	ldi	r25, 0x01	; 1
     b90:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     b94:	56 01       	movw	r10, r12
     b96:	00 e0       	ldi	r16, 0x00	; 0
     b98:	10 e0       	ldi	r17, 0x00	; 0
     b9a:	0c 94 32 1b 	jmp	0x3664	; 0x3664 <main+0x34e8>
					button = 1;
					state = 39;
					counterRef = counter;
					print = 0;
				}
				if(state == 39 && button == 0){
     b9e:	8f 89       	ldd	r24, Y+23	; 0x17
     ba0:	98 8d       	ldd	r25, Y+24	; 0x18
     ba2:	87 97       	sbiw	r24, 0x27	; 39
     ba4:	99 f4       	brne	.+38     	; 0xbcc <main+0xa50>
     ba6:	ef 28       	or	r14, r15
     ba8:	11 f0       	breq	.+4      	; 0xbae <main+0xa32>
     baa:	0c 94 32 1b 	jmp	0x3664	; 0x3664 <main+0x34e8>
					OrangutanLCD::gotoXY(0,1);
     bae:	80 e0       	ldi	r24, 0x00	; 0
     bb0:	61 e0       	ldi	r22, 0x01	; 1
     bb2:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					u_motorByte1.bits_in_motorByte1.m4Drop = 0;
     bb6:	80 91 39 03 	lds	r24, 0x0339
     bba:	87 7f       	andi	r24, 0xF7	; 247
					u_motorByte1.bits_in_motorByte1.m5Drop = 1;
     bbc:	80 64       	ori	r24, 0x40	; 64
     bbe:	80 93 39 03 	sts	0x0339, r24
     bc2:	56 01       	movw	r10, r12
     bc4:	00 e0       	ldi	r16, 0x00	; 0
     bc6:	10 e0       	ldi	r17, 0x00	; 0
     bc8:	0c 94 3b 1b 	jmp	0x3676	; 0x3676 <main+0x34fa>
					button = 1;
					state = 40;
					counterRef = counter;
					print = 0;
				}
				if(state == 40 && button == 0){
     bcc:	ef 89       	ldd	r30, Y+23	; 0x17
     bce:	f8 8d       	ldd	r31, Y+24	; 0x18
     bd0:	b8 97       	sbiw	r30, 0x28	; 40
     bd2:	91 f4       	brne	.+36     	; 0xbf8 <main+0xa7c>
     bd4:	ef 28       	or	r14, r15
     bd6:	11 f0       	breq	.+4      	; 0xbdc <main+0xa60>
     bd8:	0c 94 3b 1b 	jmp	0x3676	; 0x3676 <main+0x34fa>
					OrangutanLCD::gotoXY(11,1);
     bdc:	8b e0       	ldi	r24, 0x0B	; 11
     bde:	61 e0       	ldi	r22, 0x01	; 1
     be0:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("BACK ");
     be4:	86 e6       	ldi	r24, 0x66	; 102
     be6:	91 e0       	ldi	r25, 0x01	; 1
     be8:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     bec:	56 01       	movw	r10, r12
     bee:	29 e2       	ldi	r18, 0x29	; 41
     bf0:	30 e0       	ldi	r19, 0x00	; 0
     bf2:	38 8f       	std	Y+24, r19	; 0x18
     bf4:	2f 8b       	std	Y+23, r18	; 0x17
     bf6:	16 c0       	rjmp	.+44     	; 0xc24 <main+0xaa8>
					button = 1;
					state = 41;
					counterRef = counter;
					print = 0;
				}
				if(state == 41 && button == 0){
     bf8:	4f 89       	ldd	r20, Y+23	; 0x17
     bfa:	58 8d       	ldd	r21, Y+24	; 0x18
     bfc:	49 32       	cpi	r20, 0x29	; 41
     bfe:	51 05       	cpc	r21, r1
     c00:	a9 f4       	brne	.+42     	; 0xc2c <main+0xab0>
     c02:	ef 28       	or	r14, r15
     c04:	11 f0       	breq	.+4      	; 0xc0a <main+0xa8e>
     c06:	0c 94 44 1b 	jmp	0x3688	; 0x3688 <main+0x350c>
					OrangutanLCD::clear();
     c0a:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
					u_motorByte1.bits_in_motorByte1.m5Drop = 0;
     c0e:	80 91 39 03 	lds	r24, 0x0339
     c12:	8f 7b       	andi	r24, 0xBF	; 191
     c14:	80 93 39 03 	sts	0x0339, r24
     c18:	1e 8a       	std	Y+22, r1	; 0x16
     c1a:	1d 8a       	std	Y+21, r1	; 0x15
     c1c:	8f ef       	ldi	r24, 0xFF	; 255
     c1e:	9f ef       	ldi	r25, 0xFF	; 255
     c20:	98 8f       	std	Y+24, r25	; 0x18
     c22:	8f 8b       	std	Y+23, r24	; 0x17
     c24:	00 e0       	ldi	r16, 0x00	; 0
     c26:	10 e0       	ldi	r17, 0x00	; 0
     c28:	0c 94 44 1b 	jmp	0x3688	; 0x3688 <main+0x350c>
					print = 0;
					m5 = 0;
				}

				//state actions
				if(state == 0){
     c2c:	ef 89       	ldd	r30, Y+23	; 0x17
     c2e:	f8 8d       	ldd	r31, Y+24	; 0x18
     c30:	ef 2b       	or	r30, r31
     c32:	b1 f4       	brne	.+44     	; 0xc60 <main+0xae4>
					if(print == 0){
     c34:	01 15       	cp	r16, r1
     c36:	11 05       	cpc	r17, r1
     c38:	31 f4       	brne	.+12     	; 0xc46 <main+0xaca>
						OrangutanLCD::print("SENSOR 0");
     c3a:	8c e6       	ldi	r24, 0x6C	; 108
     c3c:	91 e0       	ldi	r25, 0x01	; 1
     c3e:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     c42:	01 e0       	ldi	r16, 0x01	; 1
     c44:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(15,1);
     c46:	8f e0       	ldi	r24, 0x0F	; 15
     c48:	61 e0       	ldi	r22, 0x01	; 1
     c4a:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
	// position and will not span lines.
	static void print(unsigned long value);
	static void print(long value);
	static inline void print(unsigned int value)
	{
		print((unsigned long)value);
     c4e:	60 91 3c 03 	lds	r22, 0x033C
     c52:	61 70       	andi	r22, 0x01	; 1
     c54:	70 e0       	ldi	r23, 0x00	; 0
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	0e 94 83 1e 	call	0x3d06	; 0x3d06 <_ZN12OrangutanLCD5printEm>
     c5e:	71 c0       	rjmp	.+226    	; 0xd42 <main+0xbc6>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.plate);
				}
				if(state == 1){
     c60:	2f 89       	ldd	r18, Y+23	; 0x17
     c62:	38 8d       	ldd	r19, Y+24	; 0x18
     c64:	21 30       	cpi	r18, 0x01	; 1
     c66:	31 05       	cpc	r19, r1
     c68:	b9 f4       	brne	.+46     	; 0xc98 <main+0xb1c>
					if(print == 0){
     c6a:	01 15       	cp	r16, r1
     c6c:	11 05       	cpc	r17, r1
     c6e:	31 f4       	brne	.+12     	; 0xc7c <main+0xb00>
						OrangutanLCD::print("SENSOR 1");
     c70:	85 e7       	ldi	r24, 0x75	; 117
     c72:	91 e0       	ldi	r25, 0x01	; 1
     c74:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     c78:	01 e0       	ldi	r16, 0x01	; 1
     c7a:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(15,1);
     c7c:	8f e0       	ldi	r24, 0x0F	; 15
     c7e:	61 e0       	ldi	r22, 0x01	; 1
     c80:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     c84:	60 91 3c 03 	lds	r22, 0x033C
     c88:	66 95       	lsr	r22
     c8a:	61 70       	andi	r22, 0x01	; 1
     c8c:	70 e0       	ldi	r23, 0x00	; 0
     c8e:	80 e0       	ldi	r24, 0x00	; 0
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	0e 94 83 1e 	call	0x3d06	; 0x3d06 <_ZN12OrangutanLCD5printEm>
     c96:	72 c0       	rjmp	.+228    	; 0xd7c <main+0xc00>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixtureLift);
				}
				if(state == 2){
     c98:	4f 89       	ldd	r20, Y+23	; 0x17
     c9a:	58 8d       	ldd	r21, Y+24	; 0x18
     c9c:	42 30       	cpi	r20, 0x02	; 2
     c9e:	51 05       	cpc	r21, r1
     ca0:	c1 f4       	brne	.+48     	; 0xcd2 <main+0xb56>
					if(print == 0){
     ca2:	01 15       	cp	r16, r1
     ca4:	11 05       	cpc	r17, r1
     ca6:	31 f4       	brne	.+12     	; 0xcb4 <main+0xb38>
						OrangutanLCD::print("SENSOR 2");
     ca8:	8e e7       	ldi	r24, 0x7E	; 126
     caa:	91 e0       	ldi	r25, 0x01	; 1
     cac:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     cb0:	01 e0       	ldi	r16, 0x01	; 1
     cb2:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(15,1);
     cb4:	8f e0       	ldi	r24, 0x0F	; 15
     cb6:	61 e0       	ldi	r22, 0x01	; 1
     cb8:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     cbc:	60 91 3c 03 	lds	r22, 0x033C
     cc0:	66 95       	lsr	r22
     cc2:	66 95       	lsr	r22
     cc4:	61 70       	andi	r22, 0x01	; 1
     cc6:	70 e0       	ldi	r23, 0x00	; 0
     cc8:	80 e0       	ldi	r24, 0x00	; 0
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	0e 94 83 1e 	call	0x3d06	; 0x3d06 <_ZN12OrangutanLCD5printEm>
     cd0:	73 c0       	rjmp	.+230    	; 0xdb8 <main+0xc3c>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixtureHome);
				}
				if(state == 3){
     cd2:	8f 89       	ldd	r24, Y+23	; 0x17
     cd4:	98 8d       	ldd	r25, Y+24	; 0x18
     cd6:	03 97       	sbiw	r24, 0x03	; 3
     cd8:	c9 f4       	brne	.+50     	; 0xd0c <main+0xb90>
					if(print == 0){
     cda:	01 15       	cp	r16, r1
     cdc:	11 05       	cpc	r17, r1
     cde:	31 f4       	brne	.+12     	; 0xcec <main+0xb70>
						OrangutanLCD::print("SENSOR 3");
     ce0:	87 e8       	ldi	r24, 0x87	; 135
     ce2:	91 e0       	ldi	r25, 0x01	; 1
     ce4:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     ce8:	01 e0       	ldi	r16, 0x01	; 1
     cea:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(15,1);
     cec:	8f e0       	ldi	r24, 0x0F	; 15
     cee:	61 e0       	ldi	r22, 0x01	; 1
     cf0:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     cf4:	60 91 3c 03 	lds	r22, 0x033C
     cf8:	66 95       	lsr	r22
     cfa:	66 95       	lsr	r22
     cfc:	66 95       	lsr	r22
     cfe:	61 70       	andi	r22, 0x01	; 1
     d00:	70 e0       	ldi	r23, 0x00	; 0
     d02:	80 e0       	ldi	r24, 0x00	; 0
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	0e 94 83 1e 	call	0x3d06	; 0x3d06 <_ZN12OrangutanLCD5printEm>
     d0a:	72 c0       	rjmp	.+228    	; 0xdf0 <main+0xc74>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixturePlate);
				}
				if(state == 4){
     d0c:	ef 89       	ldd	r30, Y+23	; 0x17
     d0e:	f8 8d       	ldd	r31, Y+24	; 0x18
     d10:	34 97       	sbiw	r30, 0x04	; 4
     d12:	b9 f4       	brne	.+46     	; 0xd42 <main+0xbc6>
					if(print == 0){
     d14:	01 15       	cp	r16, r1
     d16:	11 05       	cpc	r17, r1
     d18:	31 f4       	brne	.+12     	; 0xd26 <main+0xbaa>
						OrangutanLCD::print("SENSOR 4");
     d1a:	80 e9       	ldi	r24, 0x90	; 144
     d1c:	91 e0       	ldi	r25, 0x01	; 1
     d1e:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     d22:	01 e0       	ldi	r16, 0x01	; 1
     d24:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(15,1);
     d26:	8f e0       	ldi	r24, 0x0F	; 15
     d28:	61 e0       	ldi	r22, 0x01	; 1
     d2a:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     d2e:	60 91 3c 03 	lds	r22, 0x033C
     d32:	62 95       	swap	r22
     d34:	61 70       	andi	r22, 0x01	; 1
     d36:	70 e0       	ldi	r23, 0x00	; 0
     d38:	80 e0       	ldi	r24, 0x00	; 0
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	0e 94 83 1e 	call	0x3d06	; 0x3d06 <_ZN12OrangutanLCD5printEm>
     d40:	6a c0       	rjmp	.+212    	; 0xe16 <main+0xc9a>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixtureBrush1);
				}
				if(state == 5){
     d42:	2f 89       	ldd	r18, Y+23	; 0x17
     d44:	38 8d       	ldd	r19, Y+24	; 0x18
     d46:	25 30       	cpi	r18, 0x05	; 5
     d48:	31 05       	cpc	r19, r1
     d4a:	c1 f4       	brne	.+48     	; 0xd7c <main+0xc00>
					if(print == 0){
     d4c:	01 15       	cp	r16, r1
     d4e:	11 05       	cpc	r17, r1
     d50:	31 f4       	brne	.+12     	; 0xd5e <main+0xbe2>
						OrangutanLCD::print("SENSOR 5");
     d52:	89 e9       	ldi	r24, 0x99	; 153
     d54:	91 e0       	ldi	r25, 0x01	; 1
     d56:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     d5a:	01 e0       	ldi	r16, 0x01	; 1
     d5c:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(15,1);
     d5e:	8f e0       	ldi	r24, 0x0F	; 15
     d60:	61 e0       	ldi	r22, 0x01	; 1
     d62:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     d66:	60 91 3c 03 	lds	r22, 0x033C
     d6a:	62 95       	swap	r22
     d6c:	66 95       	lsr	r22
     d6e:	61 70       	andi	r22, 0x01	; 1
     d70:	70 e0       	ldi	r23, 0x00	; 0
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	90 e0       	ldi	r25, 0x00	; 0
     d76:	0e 94 83 1e 	call	0x3d06	; 0x3d06 <_ZN12OrangutanLCD5printEm>
     d7a:	58 c0       	rjmp	.+176    	; 0xe2c <main+0xcb0>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixtureBrush2);
				}
				if(state == 6){
     d7c:	4f 89       	ldd	r20, Y+23	; 0x17
     d7e:	58 8d       	ldd	r21, Y+24	; 0x18
     d80:	46 30       	cpi	r20, 0x06	; 6
     d82:	51 05       	cpc	r21, r1
     d84:	c9 f4       	brne	.+50     	; 0xdb8 <main+0xc3c>
					if(print == 0){
     d86:	01 15       	cp	r16, r1
     d88:	11 05       	cpc	r17, r1
     d8a:	31 f4       	brne	.+12     	; 0xd98 <main+0xc1c>
						OrangutanLCD::print("SENSOR 6");
     d8c:	82 ea       	ldi	r24, 0xA2	; 162
     d8e:	91 e0       	ldi	r25, 0x01	; 1
     d90:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     d94:	01 e0       	ldi	r16, 0x01	; 1
     d96:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(15,1);
     d98:	8f e0       	ldi	r24, 0x0F	; 15
     d9a:	61 e0       	ldi	r22, 0x01	; 1
     d9c:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     da0:	60 91 3c 03 	lds	r22, 0x033C
     da4:	62 95       	swap	r22
     da6:	66 95       	lsr	r22
     da8:	66 95       	lsr	r22
     daa:	61 70       	andi	r22, 0x01	; 1
     dac:	70 e0       	ldi	r23, 0x00	; 0
     dae:	80 e0       	ldi	r24, 0x00	; 0
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	0e 94 83 1e 	call	0x3d06	; 0x3d06 <_ZN12OrangutanLCD5printEm>
     db6:	4e c0       	rjmp	.+156    	; 0xe54 <main+0xcd8>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixtureDry1);
				}
				if(state == 7){
     db8:	8f 89       	ldd	r24, Y+23	; 0x17
     dba:	98 8d       	ldd	r25, Y+24	; 0x18
     dbc:	07 97       	sbiw	r24, 0x07	; 7
     dbe:	c1 f4       	brne	.+48     	; 0xdf0 <main+0xc74>
					if(print == 0){
     dc0:	01 15       	cp	r16, r1
     dc2:	11 05       	cpc	r17, r1
     dc4:	31 f4       	brne	.+12     	; 0xdd2 <main+0xc56>
						OrangutanLCD::print("SENSOR 7");
     dc6:	8b ea       	ldi	r24, 0xAB	; 171
     dc8:	91 e0       	ldi	r25, 0x01	; 1
     dca:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     dce:	01 e0       	ldi	r16, 0x01	; 1
     dd0:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					OrangutanLCD::gotoXY(15,1);
     dd2:	8f e0       	ldi	r24, 0x0F	; 15
     dd4:	61 e0       	ldi	r22, 0x01	; 1
     dd6:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
     dda:	60 91 3c 03 	lds	r22, 0x033C
     dde:	66 1f       	adc	r22, r22
     de0:	66 27       	eor	r22, r22
     de2:	66 1f       	adc	r22, r22
     de4:	70 e0       	ldi	r23, 0x00	; 0
     de6:	80 e0       	ldi	r24, 0x00	; 0
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	0e 94 83 1e 	call	0x3d06	; 0x3d06 <_ZN12OrangutanLCD5printEm>
     dee:	3c c0       	rjmp	.+120    	; 0xe68 <main+0xcec>
					OrangutanLCD::print(u_inputByte0.bits_in_inputByte0.fixtureDry2);
				}
				if(state == 8){
     df0:	ef 89       	ldd	r30, Y+23	; 0x17
     df2:	f8 8d       	ldd	r31, Y+24	; 0x18
     df4:	38 97       	sbiw	r30, 0x08	; 8
     df6:	79 f4       	brne	.+30     	; 0xe16 <main+0xc9a>
					if(print == 0){
     df8:	01 15       	cp	r16, r1
     dfa:	11 05       	cpc	r17, r1
     dfc:	31 f4       	brne	.+12     	; 0xe0a <main+0xc8e>
						OrangutanLCD::print("AC POWER     ON ");
     dfe:	84 eb       	ldi	r24, 0xB4	; 180
     e00:	91 e0       	ldi	r25, 0x01	; 1
     e02:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     e06:	01 e0       	ldi	r16, 0x01	; 1
     e08:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.ACPower = 0;
     e0a:	80 91 3a 03 	lds	r24, 0x033A
     e0e:	8e 7f       	andi	r24, 0xFE	; 254
     e10:	80 93 3a 03 	sts	0x033A, r24
     e14:	3c c0       	rjmp	.+120    	; 0xe8e <main+0xd12>
				}
				if(state == 9){
     e16:	2f 89       	ldd	r18, Y+23	; 0x17
     e18:	38 8d       	ldd	r19, Y+24	; 0x18
     e1a:	29 30       	cpi	r18, 0x09	; 9
     e1c:	31 05       	cpc	r19, r1
     e1e:	31 f4       	brne	.+12     	; 0xe2c <main+0xcb0>
					u_outputByte0.bits_in_outputByte0.ACPower = 1;
     e20:	80 91 3a 03 	lds	r24, 0x033A
     e24:	81 60       	ori	r24, 0x01	; 1
     e26:	80 93 3a 03 	sts	0x033A, r24
     e2a:	3c c0       	rjmp	.+120    	; 0xea4 <main+0xd28>
				}
				if(state == 10){
     e2c:	4f 89       	ldd	r20, Y+23	; 0x17
     e2e:	58 8d       	ldd	r21, Y+24	; 0x18
     e30:	4a 30       	cpi	r20, 0x0A	; 10
     e32:	51 05       	cpc	r21, r1
     e34:	79 f4       	brne	.+30     	; 0xe54 <main+0xcd8>
					if(print == 0){
     e36:	01 15       	cp	r16, r1
     e38:	11 05       	cpc	r17, r1
     e3a:	31 f4       	brne	.+12     	; 0xe48 <main+0xccc>
						OrangutanLCD::print("BLOWER       ON  ");
     e3c:	85 ec       	ldi	r24, 0xC5	; 197
     e3e:	91 e0       	ldi	r25, 0x01	; 1
     e40:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     e44:	01 e0       	ldi	r16, 0x01	; 1
     e46:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.blowerPulse = 0;
     e48:	80 91 3a 03 	lds	r24, 0x033A
     e4c:	8d 7f       	andi	r24, 0xFD	; 253
     e4e:	80 93 3a 03 	sts	0x033A, r24
     e52:	3d c0       	rjmp	.+122    	; 0xece <main+0xd52>
				}
				if(state == 11){
     e54:	8f 89       	ldd	r24, Y+23	; 0x17
     e56:	98 8d       	ldd	r25, Y+24	; 0x18
     e58:	0b 97       	sbiw	r24, 0x0b	; 11
     e5a:	31 f4       	brne	.+12     	; 0xe68 <main+0xcec>
					u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
     e5c:	80 91 3a 03 	lds	r24, 0x033A
     e60:	82 60       	ori	r24, 0x02	; 2
     e62:	80 93 3a 03 	sts	0x033A, r24
     e66:	3d c0       	rjmp	.+122    	; 0xee2 <main+0xd66>
				}
				if(state == 12){
     e68:	ef 89       	ldd	r30, Y+23	; 0x17
     e6a:	f8 8d       	ldd	r31, Y+24	; 0x18
     e6c:	3c 97       	sbiw	r30, 0x0c	; 12
     e6e:	79 f4       	brne	.+30     	; 0xe8e <main+0xd12>
					if(print == 0){
     e70:	01 15       	cp	r16, r1
     e72:	11 05       	cpc	r17, r1
     e74:	31 f4       	brne	.+12     	; 0xe82 <main+0xd06>
						OrangutanLCD::print("PLATE STOP   ON ");
     e76:	87 ed       	ldi	r24, 0xD7	; 215
     e78:	91 e0       	ldi	r25, 0x01	; 1
     e7a:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     e7e:	01 e0       	ldi	r16, 0x01	; 1
     e80:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.plateStop = 0;
     e82:	80 91 3a 03 	lds	r24, 0x033A
     e86:	8b 7f       	andi	r24, 0xFB	; 251
     e88:	80 93 3a 03 	sts	0x033A, r24
     e8c:	3e c0       	rjmp	.+124    	; 0xf0a <main+0xd8e>
				}
				if(state == 13){
     e8e:	2f 89       	ldd	r18, Y+23	; 0x17
     e90:	38 8d       	ldd	r19, Y+24	; 0x18
     e92:	2d 30       	cpi	r18, 0x0D	; 13
     e94:	31 05       	cpc	r19, r1
     e96:	31 f4       	brne	.+12     	; 0xea4 <main+0xd28>
					u_outputByte0.bits_in_outputByte0.plateStop = 1;
     e98:	80 91 3a 03 	lds	r24, 0x033A
     e9c:	84 60       	ori	r24, 0x04	; 4
     e9e:	80 93 3a 03 	sts	0x033A, r24
     ea2:	3e c0       	rjmp	.+124    	; 0xf20 <main+0xda4>
				}
				if(state == 14){
     ea4:	4f 89       	ldd	r20, Y+23	; 0x17
     ea6:	58 8d       	ldd	r21, Y+24	; 0x18
     ea8:	4e 30       	cpi	r20, 0x0E	; 14
     eaa:	51 05       	cpc	r21, r1
     eac:	81 f4       	brne	.+32     	; 0xece <main+0xd52>
					if(print == 0){
     eae:	01 15       	cp	r16, r1
     eb0:	11 05       	cpc	r17, r1
     eb2:	31 f4       	brne	.+12     	; 0xec0 <main+0xd44>
						OrangutanLCD::print("PLATE RAISE  ON ");
     eb4:	88 ee       	ldi	r24, 0xE8	; 232
     eb6:	91 e0       	ldi	r25, 0x01	; 1
     eb8:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     ebc:	01 e0       	ldi	r16, 0x01	; 1
     ebe:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
     ec0:	80 91 3a 03 	lds	r24, 0x033A
     ec4:	87 7f       	andi	r24, 0xF7	; 247
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
     ec6:	80 61       	ori	r24, 0x10	; 16
     ec8:	80 93 3a 03 	sts	0x033A, r24
     ecc:	3e c0       	rjmp	.+124    	; 0xf4a <main+0xdce>
				}
				if(state == 15){
     ece:	8f 89       	ldd	r24, Y+23	; 0x17
     ed0:	98 8d       	ldd	r25, Y+24	; 0x18
     ed2:	0f 97       	sbiw	r24, 0x0f	; 15
     ed4:	31 f4       	brne	.+12     	; 0xee2 <main+0xd66>
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
     ed6:	80 91 3a 03 	lds	r24, 0x033A
     eda:	88 60       	ori	r24, 0x08	; 8
     edc:	80 93 3a 03 	sts	0x033A, r24
     ee0:	3e c0       	rjmp	.+124    	; 0xf5e <main+0xde2>
					//u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
				}
				if(state == 16){
     ee2:	ef 89       	ldd	r30, Y+23	; 0x17
     ee4:	f8 8d       	ldd	r31, Y+24	; 0x18
     ee6:	70 97       	sbiw	r30, 0x10	; 16
     ee8:	81 f4       	brne	.+32     	; 0xf0a <main+0xd8e>
					if(print == 0){
     eea:	01 15       	cp	r16, r1
     eec:	11 05       	cpc	r17, r1
     eee:	31 f4       	brne	.+12     	; 0xefc <main+0xd80>
						OrangutanLCD::print("PLATE LOWER  ON ");
     ef0:	89 ef       	ldi	r24, 0xF9	; 249
     ef2:	91 e0       	ldi	r25, 0x01	; 1
     ef4:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     ef8:	01 e0       	ldi	r16, 0x01	; 1
     efa:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
     efc:	80 91 3a 03 	lds	r24, 0x033A
     f00:	88 60       	ori	r24, 0x08	; 8
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
     f02:	8f 7e       	andi	r24, 0xEF	; 239
     f04:	80 93 3a 03 	sts	0x033A, r24
     f08:	3e c0       	rjmp	.+124    	; 0xf86 <main+0xe0a>
				}
				if(state == 17){
     f0a:	2f 89       	ldd	r18, Y+23	; 0x17
     f0c:	38 8d       	ldd	r19, Y+24	; 0x18
     f0e:	21 31       	cpi	r18, 0x11	; 17
     f10:	31 05       	cpc	r19, r1
     f12:	31 f4       	brne	.+12     	; 0xf20 <main+0xda4>
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
     f14:	80 91 3a 03 	lds	r24, 0x033A
     f18:	80 61       	ori	r24, 0x10	; 16
     f1a:	80 93 3a 03 	sts	0x033A, r24
     f1e:	3e c0       	rjmp	.+124    	; 0xf9c <main+0xe20>
				}
				if(state == 18){
     f20:	4f 89       	ldd	r20, Y+23	; 0x17
     f22:	58 8d       	ldd	r21, Y+24	; 0x18
     f24:	42 31       	cpi	r20, 0x12	; 18
     f26:	51 05       	cpc	r21, r1
     f28:	81 f4       	brne	.+32     	; 0xf4a <main+0xdce>
					if(print == 0){
     f2a:	01 15       	cp	r16, r1
     f2c:	11 05       	cpc	r17, r1
     f2e:	31 f4       	brne	.+12     	; 0xf3c <main+0xdc0>
						OrangutanLCD::print("BRUSH1 RAISE ON ");
     f30:	8a e0       	ldi	r24, 0x0A	; 10
     f32:	92 e0       	ldi	r25, 0x02	; 2
     f34:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     f38:	01 e0       	ldi	r16, 0x01	; 1
     f3a:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.brush1Raise = 0;
     f3c:	80 91 3a 03 	lds	r24, 0x033A
     f40:	8f 7d       	andi	r24, 0xDF	; 223
					u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
     f42:	80 64       	ori	r24, 0x40	; 64
     f44:	80 93 3a 03 	sts	0x033A, r24
     f48:	42 c0       	rjmp	.+132    	; 0xfce <main+0xe52>
				}
				if(state == 19){
     f4a:	8f 89       	ldd	r24, Y+23	; 0x17
     f4c:	98 8d       	ldd	r25, Y+24	; 0x18
     f4e:	43 97       	sbiw	r24, 0x13	; 19
     f50:	31 f4       	brne	.+12     	; 0xf5e <main+0xde2>
					u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
     f52:	80 91 3a 03 	lds	r24, 0x033A
     f56:	80 62       	ori	r24, 0x20	; 32
     f58:	80 93 3a 03 	sts	0x033A, r24
     f5c:	42 c0       	rjmp	.+132    	; 0xfe2 <main+0xe66>
					//u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
				}
				if(state == 20){
     f5e:	ef 89       	ldd	r30, Y+23	; 0x17
     f60:	f8 8d       	ldd	r31, Y+24	; 0x18
     f62:	74 97       	sbiw	r30, 0x14	; 20
     f64:	81 f4       	brne	.+32     	; 0xf86 <main+0xe0a>
					if(print == 0){
     f66:	01 15       	cp	r16, r1
     f68:	11 05       	cpc	r17, r1
     f6a:	31 f4       	brne	.+12     	; 0xf78 <main+0xdfc>
						OrangutanLCD::print("BRUSH1 LOWER ON ");
     f6c:	8b e1       	ldi	r24, 0x1B	; 27
     f6e:	92 e0       	ldi	r25, 0x02	; 2
     f70:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     f74:	01 e0       	ldi	r16, 0x01	; 1
     f76:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
     f78:	80 91 3a 03 	lds	r24, 0x033A
     f7c:	8f 7b       	andi	r24, 0xBF	; 191
					u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
     f7e:	80 62       	ori	r24, 0x20	; 32
     f80:	80 93 3a 03 	sts	0x033A, r24
     f84:	46 c0       	rjmp	.+140    	; 0x1012 <main+0xe96>
				}
				if(state == 21){
     f86:	2f 89       	ldd	r18, Y+23	; 0x17
     f88:	38 8d       	ldd	r19, Y+24	; 0x18
     f8a:	25 31       	cpi	r18, 0x15	; 21
     f8c:	31 05       	cpc	r19, r1
     f8e:	31 f4       	brne	.+12     	; 0xf9c <main+0xe20>
					u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
     f90:	80 91 3a 03 	lds	r24, 0x033A
     f94:	80 64       	ori	r24, 0x40	; 64
     f96:	80 93 3a 03 	sts	0x033A, r24
     f9a:	46 c0       	rjmp	.+140    	; 0x1028 <main+0xeac>
				}
				if(state == 22){
     f9c:	4f 89       	ldd	r20, Y+23	; 0x17
     f9e:	58 8d       	ldd	r21, Y+24	; 0x18
     fa0:	46 31       	cpi	r20, 0x16	; 22
     fa2:	51 05       	cpc	r21, r1
     fa4:	a1 f4       	brne	.+40     	; 0xfce <main+0xe52>
					if(print == 0){
     fa6:	01 15       	cp	r16, r1
     fa8:	11 05       	cpc	r17, r1
     faa:	31 f4       	brne	.+12     	; 0xfb8 <main+0xe3c>
						OrangutanLCD::print("BRUSH2 RAISE ON ");
     fac:	8c e2       	ldi	r24, 0x2C	; 44
     fae:	92 e0       	ldi	r25, 0x02	; 2
     fb0:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     fb4:	01 e0       	ldi	r16, 0x01	; 1
     fb6:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte0.bits_in_outputByte0.brush2Raise = 0;
     fb8:	80 91 3a 03 	lds	r24, 0x033A
     fbc:	8f 77       	andi	r24, 0x7F	; 127
     fbe:	80 93 3a 03 	sts	0x033A, r24
					u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
     fc2:	80 91 3b 03 	lds	r24, 0x033B
     fc6:	81 60       	ori	r24, 0x01	; 1
     fc8:	80 93 3b 03 	sts	0x033B, r24
     fcc:	42 c0       	rjmp	.+132    	; 0x1052 <main+0xed6>
				}
				if(state == 23){
     fce:	8f 89       	ldd	r24, Y+23	; 0x17
     fd0:	98 8d       	ldd	r25, Y+24	; 0x18
     fd2:	47 97       	sbiw	r24, 0x17	; 23
     fd4:	31 f4       	brne	.+12     	; 0xfe2 <main+0xe66>
					u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
     fd6:	80 91 3a 03 	lds	r24, 0x033A
     fda:	80 68       	ori	r24, 0x80	; 128
     fdc:	80 93 3a 03 	sts	0x033A, r24
     fe0:	42 c0       	rjmp	.+132    	; 0x1066 <main+0xeea>
					//u_outputByte0.bits_in_outputByte0.brush2Lower = 0;
				}
				if(state == 24){
     fe2:	ef 89       	ldd	r30, Y+23	; 0x17
     fe4:	f8 8d       	ldd	r31, Y+24	; 0x18
     fe6:	78 97       	sbiw	r30, 0x18	; 24
     fe8:	a1 f4       	brne	.+40     	; 0x1012 <main+0xe96>
					if(print == 0){
     fea:	01 15       	cp	r16, r1
     fec:	11 05       	cpc	r17, r1
     fee:	31 f4       	brne	.+12     	; 0xffc <main+0xe80>
						OrangutanLCD::print("BRUSH2 LOWER ON ");
     ff0:	8d e3       	ldi	r24, 0x3D	; 61
     ff2:	92 e0       	ldi	r25, 0x02	; 2
     ff4:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
     ff8:	01 e0       	ldi	r16, 0x01	; 1
     ffa:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte1.bits_in_outputByte1.brush2Lower = 0;
     ffc:	80 91 3b 03 	lds	r24, 0x033B
    1000:	8e 7f       	andi	r24, 0xFE	; 254
    1002:	80 93 3b 03 	sts	0x033B, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
    1006:	80 91 3a 03 	lds	r24, 0x033A
    100a:	80 68       	ori	r24, 0x80	; 128
    100c:	80 93 3a 03 	sts	0x033A, r24
    1010:	3e c0       	rjmp	.+124    	; 0x108e <main+0xf12>
				}
				if(state == 25){
    1012:	2f 89       	ldd	r18, Y+23	; 0x17
    1014:	38 8d       	ldd	r19, Y+24	; 0x18
    1016:	29 31       	cpi	r18, 0x19	; 25
    1018:	31 05       	cpc	r19, r1
    101a:	31 f4       	brne	.+12     	; 0x1028 <main+0xeac>
					u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
    101c:	80 91 3b 03 	lds	r24, 0x033B
    1020:	81 60       	ori	r24, 0x01	; 1
    1022:	80 93 3b 03 	sts	0x033B, r24
    1026:	3e c0       	rjmp	.+124    	; 0x10a4 <main+0xf28>
				}
				if(state == 26){
    1028:	4f 89       	ldd	r20, Y+23	; 0x17
    102a:	58 8d       	ldd	r21, Y+24	; 0x18
    102c:	4a 31       	cpi	r20, 0x1A	; 26
    102e:	51 05       	cpc	r21, r1
    1030:	81 f4       	brne	.+32     	; 0x1052 <main+0xed6>
					if(print == 0){
    1032:	01 15       	cp	r16, r1
    1034:	11 05       	cpc	r17, r1
    1036:	31 f4       	brne	.+12     	; 0x1044 <main+0xec8>
						OrangutanLCD::print("PAPER RAISE  ON ");
    1038:	8e e4       	ldi	r24, 0x4E	; 78
    103a:	92 e0       	ldi	r25, 0x02	; 2
    103c:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    1040:	01 e0       	ldi	r16, 0x01	; 1
    1042:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte1.bits_in_outputByte1.ptRaise = 0;
    1044:	80 91 3b 03 	lds	r24, 0x033B
    1048:	8d 7f       	andi	r24, 0xFD	; 253
					u_outputByte1.bits_in_outputByte1.ptLower = 1;
    104a:	84 60       	ori	r24, 0x04	; 4
    104c:	80 93 3b 03 	sts	0x033B, r24
    1050:	3d c0       	rjmp	.+122    	; 0x10cc <main+0xf50>
				}
				if(state == 27){
    1052:	8f 89       	ldd	r24, Y+23	; 0x17
    1054:	98 8d       	ldd	r25, Y+24	; 0x18
    1056:	4b 97       	sbiw	r24, 0x1b	; 27
    1058:	31 f4       	brne	.+12     	; 0x1066 <main+0xeea>
					u_outputByte1.bits_in_outputByte1.ptRaise = 1;
    105a:	80 91 3b 03 	lds	r24, 0x033B
    105e:	82 60       	ori	r24, 0x02	; 2
    1060:	80 93 3b 03 	sts	0x033B, r24
    1064:	3d c0       	rjmp	.+122    	; 0x10e0 <main+0xf64>
					//u_outputByte1.bits_in_outputByte1.ptLower = 0;
				}
				if(state == 28){
    1066:	ef 89       	ldd	r30, Y+23	; 0x17
    1068:	f8 8d       	ldd	r31, Y+24	; 0x18
    106a:	7c 97       	sbiw	r30, 0x1c	; 28
    106c:	81 f4       	brne	.+32     	; 0x108e <main+0xf12>
					if(print == 0){
    106e:	01 15       	cp	r16, r1
    1070:	11 05       	cpc	r17, r1
    1072:	31 f4       	brne	.+12     	; 0x1080 <main+0xf04>
						OrangutanLCD::print("PAPER LOWER  ON ");
    1074:	8f e5       	ldi	r24, 0x5F	; 95
    1076:	92 e0       	ldi	r25, 0x02	; 2
    1078:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    107c:	01 e0       	ldi	r16, 0x01	; 1
    107e:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte1.bits_in_outputByte1.ptLower = 0;
    1080:	80 91 3b 03 	lds	r24, 0x033B
    1084:	8b 7f       	andi	r24, 0xFB	; 251
					u_outputByte1.bits_in_outputByte1.ptRaise = 1;
    1086:	82 60       	ori	r24, 0x02	; 2
    1088:	80 93 3b 03 	sts	0x033B, r24
    108c:	40 c0       	rjmp	.+128    	; 0x110e <main+0xf92>
				}
				if(state == 29){
    108e:	2f 89       	ldd	r18, Y+23	; 0x17
    1090:	38 8d       	ldd	r19, Y+24	; 0x18
    1092:	2d 31       	cpi	r18, 0x1D	; 29
    1094:	31 05       	cpc	r19, r1
    1096:	31 f4       	brne	.+12     	; 0x10a4 <main+0xf28>
					u_outputByte1.bits_in_outputByte1.ptLower = 1;
    1098:	80 91 3b 03 	lds	r24, 0x033B
    109c:	84 60       	ori	r24, 0x04	; 4
    109e:	80 93 3b 03 	sts	0x033B, r24
    10a2:	44 c0       	rjmp	.+136    	; 0x112c <main+0xfb0>
				}
				if(state == 30){
    10a4:	4f 89       	ldd	r20, Y+23	; 0x17
    10a6:	58 8d       	ldd	r21, Y+24	; 0x18
    10a8:	4e 31       	cpi	r20, 0x1E	; 30
    10aa:	51 05       	cpc	r21, r1
    10ac:	79 f4       	brne	.+30     	; 0x10cc <main+0xf50>
					if(print == 0){
    10ae:	01 15       	cp	r16, r1
    10b0:	11 05       	cpc	r17, r1
    10b2:	31 f4       	brne	.+12     	; 0x10c0 <main+0xf44>
						OrangutanLCD::print("AIR KNIFE    ON ");
    10b4:	80 e7       	ldi	r24, 0x70	; 112
    10b6:	92 e0       	ldi	r25, 0x02	; 2
    10b8:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    10bc:	01 e0       	ldi	r16, 0x01	; 1
    10be:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_outputByte1.bits_in_outputByte1.airKnife = 0;
    10c0:	80 91 3b 03 	lds	r24, 0x033B
    10c4:	87 7f       	andi	r24, 0xF7	; 247
    10c6:	80 93 3b 03 	sts	0x033B, r24
    10ca:	48 c0       	rjmp	.+144    	; 0x115c <main+0xfe0>
				}
				if(state == 31){
    10cc:	8f 89       	ldd	r24, Y+23	; 0x17
    10ce:	98 8d       	ldd	r25, Y+24	; 0x18
    10d0:	4f 97       	sbiw	r24, 0x1f	; 31
    10d2:	31 f4       	brne	.+12     	; 0x10e0 <main+0xf64>
					u_outputByte1.bits_in_outputByte1.airKnife = 1;
    10d4:	80 91 3b 03 	lds	r24, 0x033B
    10d8:	88 60       	ori	r24, 0x08	; 8
    10da:	80 93 3b 03 	sts	0x033B, r24
    10de:	4c c0       	rjmp	.+152    	; 0x1178 <main+0xffc>
				}
				if(state == 32){
    10e0:	ef 89       	ldd	r30, Y+23	; 0x17
    10e2:	f8 8d       	ldd	r31, Y+24	; 0x18
    10e4:	b0 97       	sbiw	r30, 0x20	; 32
    10e6:	99 f4       	brne	.+38     	; 0x110e <main+0xf92>
					if(print == 0){
    10e8:	01 15       	cp	r16, r1
    10ea:	11 05       	cpc	r17, r1
    10ec:	31 f4       	brne	.+12     	; 0x10fa <main+0xf7e>
						OrangutanLCD::print("LOADING    FRONT");
    10ee:	81 e8       	ldi	r24, 0x81	; 129
    10f0:	92 e0       	ldi	r25, 0x02	; 2
    10f2:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    10f6:	01 e0       	ldi	r16, 0x01	; 1
    10f8:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_motorByte0.bits_in_motorByte0.m1Dir = 0;
    10fa:	80 91 38 03 	lds	r24, 0x0338
    10fe:	8d 7f       	andi	r24, 0xFD	; 253
    1100:	80 93 38 03 	sts	0x0338, r24
    1104:	21 e0       	ldi	r18, 0x01	; 1
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	3e 83       	std	Y+6, r19	; 0x06
    110a:	2d 83       	std	Y+5, r18	; 0x05
    110c:	4f c0       	rjmp	.+158    	; 0x11ac <main+0x1030>
					m1 =  1;
				}
				if(state == 33){
    110e:	4f 89       	ldd	r20, Y+23	; 0x17
    1110:	58 8d       	ldd	r21, Y+24	; 0x18
    1112:	41 32       	cpi	r20, 0x21	; 33
    1114:	51 05       	cpc	r21, r1
    1116:	51 f4       	brne	.+20     	; 0x112c <main+0xfb0>
					u_motorByte0.bits_in_motorByte0.m1Dir = 1;
    1118:	80 91 38 03 	lds	r24, 0x0338
    111c:	82 60       	ori	r24, 0x02	; 2
    111e:	80 93 38 03 	sts	0x0338, r24
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	9e 83       	std	Y+6, r25	; 0x06
    1128:	8d 83       	std	Y+5, r24	; 0x05
    112a:	4e c0       	rjmp	.+156    	; 0x11c8 <main+0x104c>
					m1 =  1;
				}
				if(state == 34){
    112c:	ef 89       	ldd	r30, Y+23	; 0x17
    112e:	f8 8d       	ldd	r31, Y+24	; 0x18
    1130:	b2 97       	sbiw	r30, 0x22	; 34
    1132:	a1 f4       	brne	.+40     	; 0x115c <main+0xfe0>
					if(print == 0){
    1134:	01 15       	cp	r16, r1
    1136:	11 05       	cpc	r17, r1
    1138:	31 f4       	brne	.+12     	; 0x1146 <main+0xfca>
						OrangutanLCD::print("DRIVE      FRONT");
    113a:	82 e9       	ldi	r24, 0x92	; 146
    113c:	92 e0       	ldi	r25, 0x02	; 2
    113e:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    1142:	01 e0       	ldi	r16, 0x01	; 1
    1144:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;
    1146:	80 91 38 03 	lds	r24, 0x0338
    114a:	8f 7e       	andi	r24, 0xEF	; 239
    114c:	80 93 38 03 	sts	0x0338, r24
    1150:	1e 82       	std	Y+6, r1	; 0x06
    1152:	1d 82       	std	Y+5, r1	; 0x05
    1154:	a1 e0       	ldi	r26, 0x01	; 1
    1156:	2a 2e       	mov	r2, r26
    1158:	31 2c       	mov	r3, r1
    115a:	50 c0       	rjmp	.+160    	; 0x11fc <main+0x1080>
					m2 =  1;
					m1 = 0;
				}
				if(state == 35){
    115c:	2f 89       	ldd	r18, Y+23	; 0x17
    115e:	38 8d       	ldd	r19, Y+24	; 0x18
    1160:	23 32       	cpi	r18, 0x23	; 35
    1162:	31 05       	cpc	r19, r1
    1164:	49 f4       	brne	.+18     	; 0x1178 <main+0xffc>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;
    1166:	80 91 38 03 	lds	r24, 0x0338
    116a:	80 61       	ori	r24, 0x10	; 16
    116c:	80 93 38 03 	sts	0x0338, r24
    1170:	f1 e0       	ldi	r31, 0x01	; 1
    1172:	2f 2e       	mov	r2, r31
    1174:	31 2c       	mov	r3, r1
    1176:	50 c0       	rjmp	.+160    	; 0x1218 <main+0x109c>
					m2 =  1;
				}
				if(state == 36){
    1178:	4f 89       	ldd	r20, Y+23	; 0x17
    117a:	58 8d       	ldd	r21, Y+24	; 0x18
    117c:	44 32       	cpi	r20, 0x24	; 36
    117e:	51 05       	cpc	r21, r1
    1180:	a9 f4       	brne	.+42     	; 0x11ac <main+0x1030>
					if(print == 0){
    1182:	01 15       	cp	r16, r1
    1184:	11 05       	cpc	r17, r1
    1186:	31 f4       	brne	.+12     	; 0x1194 <main+0x1018>
						OrangutanLCD::print("BRUSH1     FRONT");
    1188:	83 ea       	ldi	r24, 0xA3	; 163
    118a:	92 e0       	ldi	r25, 0x02	; 2
    118c:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    1190:	01 e0       	ldi	r16, 0x01	; 1
    1192:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_motorByte0.bits_in_motorByte0.m3Dir = 0;
    1194:	80 91 38 03 	lds	r24, 0x0338
    1198:	8f 77       	andi	r24, 0x7F	; 127
    119a:	80 93 38 03 	sts	0x0338, r24
    119e:	22 24       	eor	r2, r2
    11a0:	33 24       	eor	r3, r3
    11a2:	81 e0       	ldi	r24, 0x01	; 1
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	9c 83       	std	Y+4, r25	; 0x04
    11a8:	8b 83       	std	Y+3, r24	; 0x03
    11aa:	50 c0       	rjmp	.+160    	; 0x124c <main+0x10d0>
					m3 =  1;
					m2 = 0;
				}
				if(state == 37){
    11ac:	ef 89       	ldd	r30, Y+23	; 0x17
    11ae:	f8 8d       	ldd	r31, Y+24	; 0x18
    11b0:	b5 97       	sbiw	r30, 0x25	; 37
    11b2:	51 f4       	brne	.+20     	; 0x11c8 <main+0x104c>
					u_motorByte0.bits_in_motorByte0.m3Dir = 1;
    11b4:	80 91 38 03 	lds	r24, 0x0338
    11b8:	80 68       	ori	r24, 0x80	; 128
    11ba:	80 93 38 03 	sts	0x0338, r24
    11be:	21 e0       	ldi	r18, 0x01	; 1
    11c0:	30 e0       	ldi	r19, 0x00	; 0
    11c2:	3c 83       	std	Y+4, r19	; 0x04
    11c4:	2b 83       	std	Y+3, r18	; 0x03
    11c6:	4f c0       	rjmp	.+158    	; 0x1266 <main+0x10ea>
					m3 =  1;
				}
				if(state == 38){
    11c8:	4f 89       	ldd	r20, Y+23	; 0x17
    11ca:	58 8d       	ldd	r21, Y+24	; 0x18
    11cc:	46 32       	cpi	r20, 0x26	; 38
    11ce:	51 05       	cpc	r21, r1
    11d0:	a9 f4       	brne	.+42     	; 0x11fc <main+0x1080>
					if(print == 0){
    11d2:	01 15       	cp	r16, r1
    11d4:	11 05       	cpc	r17, r1
    11d6:	31 f4       	brne	.+12     	; 0x11e4 <main+0x1068>
						OrangutanLCD::print("BRUSH2     FRONT");
    11d8:	84 eb       	ldi	r24, 0xB4	; 180
    11da:	92 e0       	ldi	r25, 0x02	; 2
    11dc:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    11e0:	01 e0       	ldi	r16, 0x01	; 1
    11e2:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_motorByte1.bits_in_motorByte1.m4Dir = 0;
    11e4:	80 91 39 03 	lds	r24, 0x0339
    11e8:	8b 7f       	andi	r24, 0xFB	; 251
    11ea:	80 93 39 03 	sts	0x0339, r24
    11ee:	1c 82       	std	Y+4, r1	; 0x04
    11f0:	1b 82       	std	Y+3, r1	; 0x03
    11f2:	81 e0       	ldi	r24, 0x01	; 1
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	9a 83       	std	Y+2, r25	; 0x02
    11f8:	89 83       	std	Y+1, r24	; 0x01
    11fa:	35 c0       	rjmp	.+106    	; 0x1266 <main+0x10ea>
					m4 =  1;
					m3 = 0;
				}
				if(state == 39){
    11fc:	ef 89       	ldd	r30, Y+23	; 0x17
    11fe:	f8 8d       	ldd	r31, Y+24	; 0x18
    1200:	b7 97       	sbiw	r30, 0x27	; 39
    1202:	51 f4       	brne	.+20     	; 0x1218 <main+0x109c>
					u_motorByte1.bits_in_motorByte1.m4Dir = 1;
    1204:	80 91 39 03 	lds	r24, 0x0339
    1208:	84 60       	ori	r24, 0x04	; 4
    120a:	80 93 39 03 	sts	0x0339, r24
    120e:	21 e0       	ldi	r18, 0x01	; 1
    1210:	30 e0       	ldi	r19, 0x00	; 0
    1212:	3a 83       	std	Y+2, r19	; 0x02
    1214:	29 83       	std	Y+1, r18	; 0x01
    1216:	27 c0       	rjmp	.+78     	; 0x1266 <main+0x10ea>
					m4 =  1;
				}
				if(state == 40){
    1218:	4f 89       	ldd	r20, Y+23	; 0x17
    121a:	58 8d       	ldd	r21, Y+24	; 0x18
    121c:	48 32       	cpi	r20, 0x28	; 40
    121e:	51 05       	cpc	r21, r1
    1220:	a9 f4       	brne	.+42     	; 0x124c <main+0x10d0>
					if(print == 0){
    1222:	01 15       	cp	r16, r1
    1224:	11 05       	cpc	r17, r1
    1226:	31 f4       	brne	.+12     	; 0x1234 <main+0x10b8>
						OrangutanLCD::print("PAPER      FRONT");
    1228:	85 ec       	ldi	r24, 0xC5	; 197
    122a:	92 e0       	ldi	r25, 0x02	; 2
    122c:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    1230:	01 e0       	ldi	r16, 0x01	; 1
    1232:	10 e0       	ldi	r17, 0x00	; 0
						print = 1;
					}
					u_motorByte1.bits_in_motorByte1.m5Dir = 0;
    1234:	80 91 39 03 	lds	r24, 0x0339
    1238:	8f 7d       	andi	r24, 0xDF	; 223
    123a:	80 93 39 03 	sts	0x0339, r24
    123e:	81 e0       	ldi	r24, 0x01	; 1
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	9e 8b       	std	Y+22, r25	; 0x16
    1244:	8d 8b       	std	Y+21, r24	; 0x15
    1246:	1a 82       	std	Y+2, r1	; 0x02
    1248:	19 82       	std	Y+1, r1	; 0x01
    124a:	0d c0       	rjmp	.+26     	; 0x1266 <main+0x10ea>
					m5 =  1;
					m4 = 0;
				}
				if(state == 41){
    124c:	ef 89       	ldd	r30, Y+23	; 0x17
    124e:	f8 8d       	ldd	r31, Y+24	; 0x18
    1250:	b9 97       	sbiw	r30, 0x29	; 41
    1252:	49 f4       	brne	.+18     	; 0x1266 <main+0x10ea>
					u_motorByte1.bits_in_motorByte1.m5Dir = 1;
    1254:	80 91 39 03 	lds	r24, 0x0339
    1258:	80 62       	ori	r24, 0x20	; 32
    125a:	80 93 39 03 	sts	0x0339, r24
    125e:	21 e0       	ldi	r18, 0x01	; 1
    1260:	30 e0       	ldi	r19, 0x00	; 0
    1262:	3e 8b       	std	Y+22, r19	; 0x16
    1264:	2d 8b       	std	Y+21, r18	; 0x15
					m5 =  1;
				}

				//motor and write
				if( ((counter - counterRef) % (totallength1) ) < (steplength1) && m1)  //check if it is in the right period of the loop to send high
    1266:	c6 01       	movw	r24, r12
    1268:	8a 19       	sub	r24, r10
    126a:	9b 09       	sbc	r25, r11
    126c:	62 e0       	ldi	r22, 0x02	; 2
    126e:	70 e0       	ldi	r23, 0x00	; 0
    1270:	0e 94 b9 21 	call	0x4372	; 0x4372 <__divmodhi4>
    1274:	9c 01       	movw	r18, r24
    1276:	18 16       	cp	r1, r24
    1278:	19 06       	cpc	r1, r25
    127a:	54 f0       	brlt	.+20     	; 0x1290 <main+0x1114>
    127c:	4d 81       	ldd	r20, Y+5	; 0x05
    127e:	5e 81       	ldd	r21, Y+6	; 0x06
    1280:	45 2b       	or	r20, r21
    1282:	31 f0       	breq	.+12     	; 0x1290 <main+0x1114>
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 1; // set bit 0
    1284:	80 91 38 03 	lds	r24, 0x0338
    1288:	81 60       	ori	r24, 0x01	; 1
    128a:	80 93 38 03 	sts	0x0338, r24
    128e:	08 c0       	rjmp	.+16     	; 0x12a0 <main+0x1124>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 0; // set bit 0
    1290:	80 91 38 03 	lds	r24, 0x0338
    1294:	8e 7f       	andi	r24, 0xFE	; 254
    1296:	80 93 38 03 	sts	0x0338, r24
				}

				if( ((counter - counterRef) % (totallength2) ) < (steplength2) && m2)
    129a:	12 16       	cp	r1, r18
    129c:	13 06       	cpc	r1, r19
    129e:	4c f0       	brlt	.+18     	; 0x12b2 <main+0x1136>
    12a0:	21 14       	cp	r2, r1
    12a2:	31 04       	cpc	r3, r1
    12a4:	31 f0       	breq	.+12     	; 0x12b2 <main+0x1136>
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 1; // set bit 1
    12a6:	80 91 38 03 	lds	r24, 0x0338
    12aa:	88 60       	ori	r24, 0x08	; 8
    12ac:	80 93 38 03 	sts	0x0338, r24
    12b0:	08 c0       	rjmp	.+16     	; 0x12c2 <main+0x1146>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 0; // set bit 1
    12b2:	80 91 38 03 	lds	r24, 0x0338
    12b6:	87 7f       	andi	r24, 0xF7	; 247
    12b8:	80 93 38 03 	sts	0x0338, r24
				}

				if( ((counter - counterRef) % (totallength3) ) < (steplength3) && m3)
    12bc:	12 16       	cp	r1, r18
    12be:	13 06       	cpc	r1, r19
    12c0:	54 f0       	brlt	.+20     	; 0x12d6 <main+0x115a>
    12c2:	8b 81       	ldd	r24, Y+3	; 0x03
    12c4:	9c 81       	ldd	r25, Y+4	; 0x04
    12c6:	89 2b       	or	r24, r25
    12c8:	31 f0       	breq	.+12     	; 0x12d6 <main+0x115a>
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 1; // set bit 1
    12ca:	80 91 38 03 	lds	r24, 0x0338
    12ce:	80 64       	ori	r24, 0x40	; 64
    12d0:	80 93 38 03 	sts	0x0338, r24
    12d4:	08 c0       	rjmp	.+16     	; 0x12e6 <main+0x116a>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 0; // set bit 1
    12d6:	80 91 38 03 	lds	r24, 0x0338
    12da:	8f 7b       	andi	r24, 0xBF	; 191
    12dc:	80 93 38 03 	sts	0x0338, r24
				}

				if( ((counter - counterRef) % (totallength4) ) < (steplength4) && m4)
    12e0:	12 16       	cp	r1, r18
    12e2:	13 06       	cpc	r1, r19
    12e4:	44 f0       	brlt	.+16     	; 0x12f6 <main+0x117a>
    12e6:	e9 81       	ldd	r30, Y+1	; 0x01
    12e8:	fa 81       	ldd	r31, Y+2	; 0x02
    12ea:	ef 2b       	or	r30, r31
    12ec:	21 f0       	breq	.+8      	; 0x12f6 <main+0x117a>
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 1; // set bit 1
    12ee:	80 91 39 03 	lds	r24, 0x0339
    12f2:	82 60       	ori	r24, 0x02	; 2
    12f4:	03 c0       	rjmp	.+6      	; 0x12fc <main+0x1180>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 0; // set bit 1
    12f6:	80 91 39 03 	lds	r24, 0x0339
    12fa:	8d 7f       	andi	r24, 0xFD	; 253
    12fc:	80 93 39 03 	sts	0x0339, r24
				}

				if( ((counter - counterRefFive) % (totallength5) ) < (steplength5) && m5)
    1300:	c0 fc       	sbrc	r12, 0
    1302:	08 c0       	rjmp	.+16     	; 0x1314 <main+0x1198>
    1304:	2d 89       	ldd	r18, Y+21	; 0x15
    1306:	3e 89       	ldd	r19, Y+22	; 0x16
    1308:	23 2b       	or	r18, r19
    130a:	21 f0       	breq	.+8      	; 0x1314 <main+0x1198>
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 1; // set bit 1
    130c:	80 91 39 03 	lds	r24, 0x0339
    1310:	80 61       	ori	r24, 0x10	; 16
    1312:	03 c0       	rjmp	.+6      	; 0x131a <main+0x119e>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 0; // set bit 1
    1314:	80 91 39 03 	lds	r24, 0x0339
    1318:	8f 7e       	andi	r24, 0xEF	; 239
    131a:	80 93 39 03 	sts	0x0339, r24
				}

				i2c_start(I2C1+I2C_WRITE);
    131e:	80 e4       	ldi	r24, 0x40	; 64
    1320:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				i2c_write(0x2);									// write command byte
    1324:	82 e0       	ldi	r24, 0x02	; 2
    1326:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_write(u_motorByte0.motorByte0);                       // write first byte of output
    132a:	80 91 38 03 	lds	r24, 0x0338
    132e:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
       	 		i2c_write(u_motorByte1.motorByte1);                       // write second byte of output
    1332:	80 91 39 03 	lds	r24, 0x0339
    1336:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
       		 	i2c_stop();                            // set stop conditon = release bus
    133a:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>

				i2c_start(I2C2+I2C_WRITE);
    133e:	82 e4       	ldi	r24, 0x42	; 66
    1340:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				i2c_write(0x2);
    1344:	82 e0       	ldi	r24, 0x02	; 2
    1346:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_write(u_outputByte0.outputByte0);
    134a:	80 91 3a 03 	lds	r24, 0x033A
    134e:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_write(u_outputByte1.outputByte1);
    1352:	80 91 3b 03 	lds	r24, 0x033B
    1356:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
    135a:	81 e0       	ldi	r24, 0x01	; 1
    135c:	90 e0       	ldi	r25, 0x00	; 0
    135e:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>
				OrangutanLCD::print("INPUTS ");
				OrangutanLCD::gotoXY(0,1);
				print = 0;
			}
			
			while(state != -1){
    1362:	4f 89       	ldd	r20, Y+23	; 0x17
    1364:	58 8d       	ldd	r21, Y+24	; 0x18
    1366:	4f 5f       	subi	r20, 0xFF	; 255
    1368:	5f 4f       	sbci	r21, 0xFF	; 255
    136a:	11 f4       	brne	.+4      	; 0x1370 <main+0x11f4>
    136c:	0c 94 a4 19 	jmp	0x3348	; 0x3348 <main+0x31cc>
				i2c_start(I2C2+I2C_WRITE);
				i2c_write(0x2);
				i2c_write(u_outputByte0.outputByte0);
				i2c_write(u_outputByte1.outputByte1);

				counter ++;
    1370:	08 94       	sec
    1372:	c1 1c       	adc	r12, r1
    1374:	d1 1c       	adc	r13, r1
    1376:	0c 94 e1 01 	jmp	0x3c2	; 0x3c2 <main+0x246>
				delay_ms(1);
			}
		}
		else{
		
		OrangutanLCD::print("NORMAL");
    137a:	86 ed       	ldi	r24, 0xD6	; 214
    137c:	92 e0       	ldi	r25, 0x02	; 2
    137e:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    1382:	88 ee       	ldi	r24, 0xE8	; 232
    1384:	93 e0       	ldi	r25, 0x03	; 3
    1386:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>
		delay_ms(1000);

		int button = 1, counterRefPush = 0, counterRefRel = 0, stateButton = 0;
		
		OrangutanLCD::clear();
    138a:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
		OrangutanLCD::print("SELECT CYCLE");
    138e:	8d ed       	ldi	r24, 0xDD	; 221
    1390:	92 e0       	ldi	r25, 0x02	; 2
    1392:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    1396:	ee 24       	eor	r14, r14
    1398:	ff 24       	eor	r15, r15
    139a:	01 e0       	ldi	r16, 0x01	; 1
    139c:	10 e0       	ldi	r17, 0x00	; 0
    139e:	22 24       	eor	r2, r2
    13a0:	33 24       	eor	r3, r3
    13a2:	1c 86       	std	Y+12, r1	; 0x0c
    13a4:	1b 86       	std	Y+11, r1	; 0x0b
    13a6:	aa 24       	eor	r10, r10
    13a8:	bb 24       	eor	r11, r11
		while(button != 0){
			if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
    13aa:	a1 14       	cp	r10, r1
    13ac:	b1 04       	cpc	r11, r1
    13ae:	11 f0       	breq	.+4      	; 0x13b4 <main+0x1238>
    13b0:	0c 94 49 1b 	jmp	0x3692	; 0x3692 <main+0x3516>
    13b4:	80 e0       	ldi	r24, 0x00	; 0
    13b6:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    13ba:	88 23       	and	r24, r24
    13bc:	99 f1       	breq	.+102    	; 0x1424 <main+0x12a8>
    13be:	17 01       	movw	r2, r14
				counterRefPush = counter;
				stateButton = 1;
			}
			if(stateButton == 1){
				if(counter - counterRefPush > 15){
    13c0:	c7 01       	movw	r24, r14
    13c2:	82 19       	sub	r24, r2
    13c4:	93 09       	sbc	r25, r3
    13c6:	40 97       	sbiw	r24, 0x10	; 16
    13c8:	54 f0       	brlt	.+20     	; 0x13de <main+0x1262>
					if(!OrangutanDigital::isInputHigh(IO_D0)){
    13ca:	80 e0       	ldi	r24, 0x00	; 0
    13cc:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    13d0:	88 23       	and	r24, r24
    13d2:	11 f0       	breq	.+4      	; 0x13d8 <main+0x125c>
    13d4:	0c 94 51 1b 	jmp	0x36a2	; 0x36a2 <main+0x3526>
    13d8:	fc 86       	std	Y+12, r15	; 0x0c
    13da:	eb 86       	std	Y+11, r14	; 0x0b
    13dc:	0c c0       	rjmp	.+24     	; 0x13f6 <main+0x127a>
						counterRefRel = counter;
						stateButton = 2;
					}
				}
				else if(!OrangutanDigital::isInputHigh(IO_D0)){
    13de:	80 e0       	ldi	r24, 0x00	; 0
    13e0:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    13e4:	88 23       	and	r24, r24
    13e6:	11 f0       	breq	.+4      	; 0x13ec <main+0x1270>
    13e8:	0c 94 51 1b 	jmp	0x36a2	; 0x36a2 <main+0x3526>
    13ec:	15 c0       	rjmp	.+42     	; 0x1418 <main+0x129c>
					stateButton = 0;
				}
			}
			if(stateButton == 2){
    13ee:	92 e0       	ldi	r25, 0x02	; 2
    13f0:	a9 16       	cp	r10, r25
    13f2:	b1 04       	cpc	r11, r1
    13f4:	b9 f4       	brne	.+46     	; 0x1424 <main+0x12a8>
				if(OrangutanDigital::isInputHigh(IO_D0)){
    13f6:	80 e0       	ldi	r24, 0x00	; 0
    13f8:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    13fc:	88 23       	and	r24, r24
    13fe:	19 f0       	breq	.+6      	; 0x1406 <main+0x128a>
    1400:	17 01       	movw	r2, r14
    1402:	0c 94 51 1b 	jmp	0x36a2	; 0x36a2 <main+0x3526>
					stateButton = 1;
					counterRefPush = counter;
				}
				else if(counter - counterRefRel > 15){
    1406:	c7 01       	movw	r24, r14
    1408:	eb 85       	ldd	r30, Y+11	; 0x0b
    140a:	fc 85       	ldd	r31, Y+12	; 0x0c
    140c:	8e 1b       	sub	r24, r30
    140e:	9f 0b       	sbc	r25, r31
    1410:	40 97       	sbiw	r24, 0x10	; 16
    1412:	2c f0       	brlt	.+10     	; 0x141e <main+0x12a2>
    1414:	00 e0       	ldi	r16, 0x00	; 0
    1416:	10 e0       	ldi	r17, 0x00	; 0
    1418:	aa 24       	eor	r10, r10
    141a:	bb 24       	eor	r11, r11
    141c:	03 c0       	rjmp	.+6      	; 0x1424 <main+0x12a8>
    141e:	e2 e0       	ldi	r30, 0x02	; 2
    1420:	ae 2e       	mov	r10, r30
    1422:	b1 2c       	mov	r11, r1
    1424:	81 e0       	ldi	r24, 0x01	; 1
    1426:	90 e0       	ldi	r25, 0x00	; 0
    1428:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>

		int button = 1, counterRefPush = 0, counterRefRel = 0, stateButton = 0;
		
		OrangutanLCD::clear();
		OrangutanLCD::print("SELECT CYCLE");
		while(button != 0){
    142c:	01 15       	cp	r16, r1
    142e:	11 05       	cpc	r17, r1
    1430:	21 f0       	breq	.+8      	; 0x143a <main+0x12be>
				else if(counter - counterRefRel > 15){
					button = 0;
					stateButton = 0;
				}
			}
			counter++;
    1432:	08 94       	sec
    1434:	e1 1c       	adc	r14, r1
    1436:	f1 1c       	adc	r15, r1
    1438:	b8 cf       	rjmp	.-144    	; 0x13aa <main+0x122e>
			delay_ms(1);
		}
		button = 1;
		counter = 0;
		OrangutanLCD::clear();
    143a:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
		OrangutanLCD::print("CYCLE:");
    143e:	8a ee       	ldi	r24, 0xEA	; 234
    1440:	92 e0       	ldi	r25, 0x02	; 2
    1442:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>

		//u_motorByte0.bits_in_motorByte0.m1Drop = 1;
		u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    1446:	80 91 38 03 	lds	r24, 0x0338
    144a:	80 62       	ori	r24, 0x20	; 32
    144c:	80 93 38 03 	sts	0x0338, r24
		/*u_motorByte1.bits_in_motorByte1.m3Drop = 1;
		u_motorByte1.bits_in_motorByte1.m4Drop = 1;
		u_motorByte1.bits_in_motorByte1.m5Drop = 1;*/

		if(!OrangutanDigital::isInputHigh(IO_D1) && !OrangutanDigital::isInputHigh(IO_D2)){
    1450:	81 e0       	ldi	r24, 0x01	; 1
    1452:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1456:	88 23       	and	r24, r24
    1458:	11 f0       	breq	.+4      	; 0x145e <main+0x12e2>
    145a:	0c 94 56 1b 	jmp	0x36ac	; 0x36ac <main+0x3530>
    145e:	82 e0       	ldi	r24, 0x02	; 2
    1460:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1464:	88 23       	and	r24, r24
    1466:	11 f0       	breq	.+4      	; 0x146c <main+0x12f0>
    1468:	0c 94 56 1b 	jmp	0x36ac	; 0x36ac <main+0x3530>
			OrangutanLCD::gotoXY(7,0);
    146c:	87 e0       	ldi	r24, 0x07	; 7
    146e:	60 e0       	ldi	r22, 0x00	; 0
    1470:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
			OrangutanLCD::print("FIRST B");
    1474:	81 ef       	ldi	r24, 0xF1	; 241
    1476:	92 e0       	ldi	r25, 0x02	; 2
    1478:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    147c:	88 24       	eor	r8, r8
    147e:	99 24       	eor	r9, r9
    1480:	cc 24       	eor	r12, r12
    1482:	dd 24       	eor	r13, r13
    1484:	44 24       	eor	r4, r4
    1486:	55 24       	eor	r5, r5
    1488:	1a 86       	std	Y+10, r1	; 0x0a
    148a:	19 86       	std	Y+9, r1	; 0x09
    148c:	18 8e       	std	Y+24, r1	; 0x18
    148e:	1f 8a       	std	Y+23, r1	; 0x17
    1490:	00 e0       	ldi	r16, 0x00	; 0
    1492:	10 e0       	ldi	r17, 0x00	; 0
    1494:	21 e0       	ldi	r18, 0x01	; 1
    1496:	30 e0       	ldi	r19, 0x00	; 0
    1498:	3c 8b       	std	Y+20, r19	; 0x14
    149a:	2b 8b       	std	Y+19, r18	; 0x13
    149c:	3a 8b       	std	Y+18, r19	; 0x12
    149e:	29 8b       	std	Y+17, r18	; 0x11
    14a0:	ee 24       	eor	r14, r14
    14a2:	ff 24       	eor	r15, r15
    14a4:	18 8a       	std	Y+16, r1	; 0x10
    14a6:	1f 86       	std	Y+15, r1	; 0x0f
    14a8:	38 87       	std	Y+8, r19	; 0x08
    14aa:	2f 83       	std	Y+7, r18	; 0x07
			while(state != -1)
			{
				i2c_start(I2C3+I2C_WRITE);						// first start condition (write)
    14ac:	84 e4       	ldi	r24, 0x44	; 68
    14ae:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				i2c_write(0x0);								// write command byte
    14b2:	80 e0       	ldi	r24, 0x00	; 0
    14b4:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_start(I2C3+I2C_READ);						// second start condition (read)
    14b8:	85 e4       	ldi	r24, 0x45	; 69
    14ba:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				u_inputByte0.inputByte0 = i2c_readAck();				// read first byte and send Ack, requesting more
    14be:	0e 94 2a 1c 	call	0x3854	; 0x3854 <_Z11i2c_readAckv>
    14c2:	80 93 3c 03 	sts	0x033C, r24
   		     	u_inputByte1.inputByte1 = i2c_readNak();				// read second byte and send stop condition
    14c6:	0e 94 34 1c 	call	0x3868	; 0x3868 <_Z11i2c_readNakv>
    14ca:	80 93 3d 03 	sts	0x033D, r24
  	 	     	i2c_stop();								// set stop conditon = release bus 		
    14ce:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>
				if(state != 0){
    14d2:	4f 89       	ldd	r20, Y+23	; 0x17
    14d4:	58 8d       	ldd	r21, Y+24	; 0x18
    14d6:	45 2b       	or	r20, r21
    14d8:	89 f0       	breq	.+34     	; 0x14fc <main+0x1380>
					OrangutanLCD::gotoXY(0,1);
    14da:	80 e0       	ldi	r24, 0x00	; 0
    14dc:	61 e0       	ldi	r22, 0x01	; 1
    14de:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("STATE ");
    14e2:	89 ef       	ldi	r24, 0xF9	; 249
    14e4:	92 e0       	ldi	r25, 0x02	; 2
    14e6:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
	};
	static inline void print(int value)
	{
		print((long)value);
    14ea:	ef 89       	ldd	r30, Y+23	; 0x17
    14ec:	f8 8d       	ldd	r31, Y+24	; 0x18
    14ee:	bf 01       	movw	r22, r30
    14f0:	88 27       	eor	r24, r24
    14f2:	77 fd       	sbrc	r23, 7
    14f4:	80 95       	com	r24
    14f6:	98 2f       	mov	r25, r24
    14f8:	0e 94 e6 1e 	call	0x3dcc	; 0x3dcc <_ZN12OrangutanLCD5printEl>
					OrangutanLCD::print(state);
				}

				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
    14fc:	a1 14       	cp	r10, r1
    14fe:	b1 04       	cpc	r11, r1
    1500:	11 f0       	breq	.+4      	; 0x1506 <main+0x138a>
    1502:	0c 94 70 1b 	jmp	0x36e0	; 0x36e0 <main+0x3564>
    1506:	80 e0       	ldi	r24, 0x00	; 0
    1508:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    150c:	88 23       	and	r24, r24
    150e:	99 f1       	breq	.+102    	; 0x1576 <main+0x13fa>
    1510:	18 01       	movw	r2, r16
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
					if(counter - counterRefPush > 15){
    1512:	c8 01       	movw	r24, r16
    1514:	82 19       	sub	r24, r2
    1516:	93 09       	sbc	r25, r3
    1518:	40 97       	sbiw	r24, 0x10	; 16
    151a:	54 f0       	brlt	.+20     	; 0x1530 <main+0x13b4>
						if(!OrangutanDigital::isInputHigh(IO_D0)){
    151c:	80 e0       	ldi	r24, 0x00	; 0
    151e:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1522:	88 23       	and	r24, r24
    1524:	11 f0       	breq	.+4      	; 0x152a <main+0x13ae>
    1526:	0c 94 78 1b 	jmp	0x36f0	; 0x36f0 <main+0x3574>
    152a:	1c 87       	std	Y+12, r17	; 0x0c
    152c:	0b 87       	std	Y+11, r16	; 0x0b
    152e:	0c c0       	rjmp	.+24     	; 0x1548 <main+0x13cc>
							counterRefRel = counter;
							stateButton = 2;
						}
					}
					else if(!OrangutanDigital::isInputHigh(IO_D0)){
    1530:	80 e0       	ldi	r24, 0x00	; 0
    1532:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1536:	88 23       	and	r24, r24
    1538:	11 f0       	breq	.+4      	; 0x153e <main+0x13c2>
    153a:	0c 94 78 1b 	jmp	0x36f0	; 0x36f0 <main+0x3574>
    153e:	15 c0       	rjmp	.+42     	; 0x156a <main+0x13ee>
						stateButton = 0;
					}
				}
				if(stateButton == 2){
    1540:	f2 e0       	ldi	r31, 0x02	; 2
    1542:	af 16       	cp	r10, r31
    1544:	b1 04       	cpc	r11, r1
    1546:	b9 f4       	brne	.+46     	; 0x1576 <main+0x13fa>
					if(OrangutanDigital::isInputHigh(IO_D0)){
    1548:	80 e0       	ldi	r24, 0x00	; 0
    154a:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    154e:	88 23       	and	r24, r24
    1550:	19 f0       	breq	.+6      	; 0x1558 <main+0x13dc>
    1552:	18 01       	movw	r2, r16
    1554:	0c 94 78 1b 	jmp	0x36f0	; 0x36f0 <main+0x3574>
						stateButton = 1;
						counterRefPush = counter;
					}
					else if(counter - counterRefRel > 15){
    1558:	c8 01       	movw	r24, r16
    155a:	2b 85       	ldd	r18, Y+11	; 0x0b
    155c:	3c 85       	ldd	r19, Y+12	; 0x0c
    155e:	82 1b       	sub	r24, r18
    1560:	93 0b       	sbc	r25, r19
    1562:	40 97       	sbiw	r24, 0x10	; 16
    1564:	2c f0       	brlt	.+10     	; 0x1570 <main+0x13f4>
    1566:	18 86       	std	Y+8, r1	; 0x08
    1568:	1f 82       	std	Y+7, r1	; 0x07
    156a:	aa 24       	eor	r10, r10
    156c:	bb 24       	eor	r11, r11
    156e:	03 c0       	rjmp	.+6      	; 0x1576 <main+0x13fa>
    1570:	72 e0       	ldi	r23, 0x02	; 2
    1572:	a7 2e       	mov	r10, r23
    1574:	b1 2c       	mov	r11, r1
					}
				}

				//state conversions
	
				if(state == 0 && button == 0){
    1576:	4f 89       	ldd	r20, Y+23	; 0x17
    1578:	58 8d       	ldd	r21, Y+24	; 0x18
    157a:	45 2b       	or	r20, r21
    157c:	59 f4       	brne	.+22     	; 0x1594 <main+0x1418>
    157e:	8f 81       	ldd	r24, Y+7	; 0x07
    1580:	98 85       	ldd	r25, Y+8	; 0x08
    1582:	89 2b       	or	r24, r25
    1584:	09 f0       	breq	.+2      	; 0x1588 <main+0x140c>
    1586:	4b c0       	rjmp	.+150    	; 0x161e <main+0x14a2>
    1588:	78 01       	movw	r14, r16
    158a:	e1 e0       	ldi	r30, 0x01	; 1
    158c:	f0 e0       	ldi	r31, 0x00	; 0
    158e:	f8 87       	std	Y+8, r31	; 0x08
    1590:	ef 83       	std	Y+7, r30	; 0x07
    1592:	05 c0       	rjmp	.+10     	; 0x159e <main+0x1422>
					button = 1;
					state = 1;
					counterRef = counter;
				}
				if(state == 1 && counter - counterRef > totallength1*m1LoadPlate/*&& u_inputByte0.bits_in_inputByte0.plate == 0*/){
    1594:	2f 89       	ldd	r18, Y+23	; 0x17
    1596:	38 8d       	ldd	r19, Y+24	; 0x18
    1598:	21 30       	cpi	r18, 0x01	; 1
    159a:	31 05       	cpc	r19, r1
    159c:	49 f4       	brne	.+18     	; 0x15b0 <main+0x1434>
    159e:	c8 01       	movw	r24, r16
    15a0:	8e 19       	sub	r24, r14
    15a2:	9f 09       	sbc	r25, r15
    15a4:	81 5a       	subi	r24, 0xA1	; 161
    15a6:	9f 40       	sbci	r25, 0x0F	; 15
    15a8:	0c f4       	brge	.+2      	; 0x15ac <main+0x1430>
    15aa:	46 c0       	rjmp	.+140    	; 0x1638 <main+0x14bc>
    15ac:	78 01       	movw	r14, r16
    15ae:	05 c0       	rjmp	.+10     	; 0x15ba <main+0x143e>
					state = 2;
					counterRef = counter;
				}
				if(state == 2 && counter - counterRef > pWait){
    15b0:	4f 89       	ldd	r20, Y+23	; 0x17
    15b2:	58 8d       	ldd	r21, Y+24	; 0x18
    15b4:	42 30       	cpi	r20, 0x02	; 2
    15b6:	51 05       	cpc	r21, r1
    15b8:	49 f4       	brne	.+18     	; 0x15cc <main+0x1450>
    15ba:	c8 01       	movw	r24, r16
    15bc:	8e 19       	sub	r24, r14
    15be:	9f 09       	sbc	r25, r15
    15c0:	85 36       	cpi	r24, 0x65	; 101
    15c2:	91 05       	cpc	r25, r1
    15c4:	0c f4       	brge	.+2      	; 0x15c8 <main+0x144c>
    15c6:	4a c0       	rjmp	.+148    	; 0x165c <main+0x14e0>
    15c8:	78 01       	movw	r14, r16
    15ca:	04 c0       	rjmp	.+8      	; 0x15d4 <main+0x1458>
					state = 3;
					counterRef = counter;
				}
				if(state == 3 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
    15cc:	8f 89       	ldd	r24, Y+23	; 0x17
    15ce:	98 8d       	ldd	r25, Y+24	; 0x18
    15d0:	03 97       	sbiw	r24, 0x03	; 3
    15d2:	49 f4       	brne	.+18     	; 0x15e6 <main+0x146a>
    15d4:	c8 01       	movw	r24, r16
    15d6:	8e 19       	sub	r24, r14
    15d8:	9f 09       	sbc	r25, r15
    15da:	81 5a       	subi	r24, 0xA1	; 161
    15dc:	9f 40       	sbci	r25, 0x0F	; 15
    15de:	0c f4       	brge	.+2      	; 0x15e2 <main+0x1466>
    15e0:	4e c0       	rjmp	.+156    	; 0x167e <main+0x1502>
    15e2:	78 01       	movw	r14, r16
    15e4:	05 c0       	rjmp	.+10     	; 0x15f0 <main+0x1474>
					state = 4;
					counterRef = counter;
				}
				if(state == 4 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
    15e6:	2f 89       	ldd	r18, Y+23	; 0x17
    15e8:	38 8d       	ldd	r19, Y+24	; 0x18
    15ea:	24 30       	cpi	r18, 0x04	; 4
    15ec:	31 05       	cpc	r19, r1
    15ee:	49 f4       	brne	.+18     	; 0x1602 <main+0x1486>
    15f0:	c8 01       	movw	r24, r16
    15f2:	8e 19       	sub	r24, r14
    15f4:	9f 09       	sbc	r25, r15
    15f6:	89 5e       	subi	r24, 0xE9	; 233
    15f8:	93 40       	sbci	r25, 0x03	; 3
    15fa:	0c f4       	brge	.+2      	; 0x15fe <main+0x1482>
    15fc:	52 c0       	rjmp	.+164    	; 0x16a2 <main+0x1526>
    15fe:	78 01       	movw	r14, r16
    1600:	05 c0       	rjmp	.+10     	; 0x160c <main+0x1490>
					state = 5;
					counterRef = counter;
				}
				if(state == 5 && counter - counterRef > pWait){
    1602:	4f 89       	ldd	r20, Y+23	; 0x17
    1604:	58 8d       	ldd	r21, Y+24	; 0x18
    1606:	45 30       	cpi	r20, 0x05	; 5
    1608:	51 05       	cpc	r21, r1
    160a:	49 f4       	brne	.+18     	; 0x161e <main+0x14a2>
    160c:	c8 01       	movw	r24, r16
    160e:	8e 19       	sub	r24, r14
    1610:	9f 09       	sbc	r25, r15
    1612:	85 36       	cpi	r24, 0x65	; 101
    1614:	91 05       	cpc	r25, r1
    1616:	0c f4       	brge	.+2      	; 0x161a <main+0x149e>
    1618:	53 c0       	rjmp	.+166    	; 0x16c0 <main+0x1544>
    161a:	78 01       	movw	r14, r16
    161c:	04 c0       	rjmp	.+8      	; 0x1626 <main+0x14aa>
						state = 6;
					counterRef = counter;
				}
				if(state == 6 && counter - counterRef > totallength2*m2Brush1Step /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush1 == 0*/){
    161e:	8f 89       	ldd	r24, Y+23	; 0x17
    1620:	98 8d       	ldd	r25, Y+24	; 0x18
    1622:	06 97       	sbiw	r24, 0x06	; 6
    1624:	69 f4       	brne	.+26     	; 0x1640 <main+0x14c4>
    1626:	c8 01       	movw	r24, r16
    1628:	8e 19       	sub	r24, r14
    162a:	9f 09       	sbc	r25, r15
    162c:	81 5a       	subi	r24, 0xA1	; 161
    162e:	9f 40       	sbci	r25, 0x0F	; 15
    1630:	0c f4       	brge	.+2      	; 0x1634 <main+0x14b8>
    1632:	58 c0       	rjmp	.+176    	; 0x16e4 <main+0x1568>
    1634:	78 01       	movw	r14, r16
    1636:	09 c0       	rjmp	.+18     	; 0x164a <main+0x14ce>
    1638:	21 e0       	ldi	r18, 0x01	; 1
    163a:	30 e0       	ldi	r19, 0x00	; 0
    163c:	38 8f       	std	Y+24, r19	; 0x18
    163e:	2f 8b       	std	Y+23, r18	; 0x17
					state = 7;
					counterRef = counter;
				}
				if(state == 7 && counter - counterRef > mWait){
    1640:	4f 89       	ldd	r20, Y+23	; 0x17
    1642:	58 8d       	ldd	r21, Y+24	; 0x18
    1644:	47 30       	cpi	r20, 0x07	; 7
    1646:	51 05       	cpc	r21, r1
    1648:	69 f4       	brne	.+26     	; 0x1664 <main+0x14e8>
    164a:	c8 01       	movw	r24, r16
    164c:	8e 19       	sub	r24, r14
    164e:	9f 09       	sbc	r25, r15
    1650:	85 36       	cpi	r24, 0x65	; 101
    1652:	91 05       	cpc	r25, r1
    1654:	0c f4       	brge	.+2      	; 0x1658 <main+0x14dc>
    1656:	57 c0       	rjmp	.+174    	; 0x1706 <main+0x158a>
    1658:	78 01       	movw	r14, r16
    165a:	08 c0       	rjmp	.+16     	; 0x166c <main+0x14f0>
    165c:	82 e0       	ldi	r24, 0x02	; 2
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	98 8f       	std	Y+24, r25	; 0x18
    1662:	8f 8b       	std	Y+23, r24	; 0x17
					state = 8;
					counterRef = counter;
				}
				if(state == 8 && counter - counterRef > pWait){
    1664:	ef 89       	ldd	r30, Y+23	; 0x17
    1666:	f8 8d       	ldd	r31, Y+24	; 0x18
    1668:	38 97       	sbiw	r30, 0x08	; 8
    166a:	69 f4       	brne	.+26     	; 0x1686 <main+0x150a>
    166c:	c8 01       	movw	r24, r16
    166e:	8e 19       	sub	r24, r14
    1670:	9f 09       	sbc	r25, r15
    1672:	85 36       	cpi	r24, 0x65	; 101
    1674:	91 05       	cpc	r25, r1
    1676:	0c f4       	brge	.+2      	; 0x167a <main+0x14fe>
    1678:	56 c0       	rjmp	.+172    	; 0x1726 <main+0x15aa>
    167a:	78 01       	movw	r14, r16
    167c:	09 c0       	rjmp	.+18     	; 0x1690 <main+0x1514>
    167e:	23 e0       	ldi	r18, 0x03	; 3
    1680:	30 e0       	ldi	r19, 0x00	; 0
    1682:	38 8f       	std	Y+24, r19	; 0x18
    1684:	2f 8b       	std	Y+23, r18	; 0x17
					state = 9;
						counterRef = counter;
				}
					if(state == 9 && counter - counterRef > totallength2*m2HalfPlate){
    1686:	4f 89       	ldd	r20, Y+23	; 0x17
    1688:	58 8d       	ldd	r21, Y+24	; 0x18
    168a:	49 30       	cpi	r20, 0x09	; 9
    168c:	51 05       	cpc	r21, r1
    168e:	69 f4       	brne	.+26     	; 0x16aa <main+0x152e>
    1690:	c8 01       	movw	r24, r16
    1692:	8e 19       	sub	r24, r14
    1694:	9f 09       	sbc	r25, r15
    1696:	81 5a       	subi	r24, 0xA1	; 161
    1698:	9f 40       	sbci	r25, 0x0F	; 15
    169a:	0c f4       	brge	.+2      	; 0x169e <main+0x1522>
    169c:	55 c0       	rjmp	.+170    	; 0x1748 <main+0x15cc>
    169e:	78 01       	movw	r14, r16
    16a0:	08 c0       	rjmp	.+16     	; 0x16b2 <main+0x1536>
    16a2:	84 e0       	ldi	r24, 0x04	; 4
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	98 8f       	std	Y+24, r25	; 0x18
    16a8:	8f 8b       	std	Y+23, r24	; 0x17
					state = 10;
					counterRef = counter;
				}
				if(state == 10 && counter - counterRef > pWait){
    16aa:	ef 89       	ldd	r30, Y+23	; 0x17
    16ac:	f8 8d       	ldd	r31, Y+24	; 0x18
    16ae:	3a 97       	sbiw	r30, 0x0a	; 10
    16b0:	59 f4       	brne	.+22     	; 0x16c8 <main+0x154c>
    16b2:	c8 01       	movw	r24, r16
    16b4:	8e 19       	sub	r24, r14
    16b6:	9f 09       	sbc	r25, r15
    16b8:	85 36       	cpi	r24, 0x65	; 101
    16ba:	91 05       	cpc	r25, r1
    16bc:	54 f4       	brge	.+20     	; 0x16d2 <main+0x1556>
    16be:	56 c0       	rjmp	.+172    	; 0x176c <main+0x15f0>
    16c0:	25 e0       	ldi	r18, 0x05	; 5
    16c2:	30 e0       	ldi	r19, 0x00	; 0
    16c4:	38 8f       	std	Y+24, r19	; 0x18
    16c6:	2f 8b       	std	Y+23, r18	; 0x17
					state = 11;
				}
				if(state == 11 && counter - counterRef > totallength2*m2HalfPlate /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush1 == 0*/){
    16c8:	4f 89       	ldd	r20, Y+23	; 0x17
    16ca:	58 8d       	ldd	r21, Y+24	; 0x18
    16cc:	4b 30       	cpi	r20, 0x0B	; 11
    16ce:	51 05       	cpc	r21, r1
    16d0:	69 f4       	brne	.+26     	; 0x16ec <main+0x1570>
    16d2:	c8 01       	movw	r24, r16
    16d4:	8e 19       	sub	r24, r14
    16d6:	9f 09       	sbc	r25, r15
    16d8:	81 5a       	subi	r24, 0xA1	; 161
    16da:	9f 40       	sbci	r25, 0x0F	; 15
    16dc:	0c f4       	brge	.+2      	; 0x16e0 <main+0x1564>
    16de:	57 c0       	rjmp	.+174    	; 0x178e <main+0x1612>
    16e0:	78 01       	movw	r14, r16
    16e2:	08 c0       	rjmp	.+16     	; 0x16f4 <main+0x1578>
    16e4:	86 e0       	ldi	r24, 0x06	; 6
    16e6:	90 e0       	ldi	r25, 0x00	; 0
    16e8:	98 8f       	std	Y+24, r25	; 0x18
    16ea:	8f 8b       	std	Y+23, r24	; 0x17
					state = 12;
					counterRef = counter;
				}
				if(state == 12 && counter - counterRef > pWait){
    16ec:	ef 89       	ldd	r30, Y+23	; 0x17
    16ee:	f8 8d       	ldd	r31, Y+24	; 0x18
    16f0:	3c 97       	sbiw	r30, 0x0c	; 12
    16f2:	69 f4       	brne	.+26     	; 0x170e <main+0x1592>
    16f4:	c8 01       	movw	r24, r16
    16f6:	8e 19       	sub	r24, r14
    16f8:	9f 09       	sbc	r25, r15
    16fa:	85 36       	cpi	r24, 0x65	; 101
    16fc:	91 05       	cpc	r25, r1
    16fe:	0c f4       	brge	.+2      	; 0x1702 <main+0x1586>
    1700:	56 c0       	rjmp	.+172    	; 0x17ae <main+0x1632>
    1702:	78 01       	movw	r14, r16
    1704:	09 c0       	rjmp	.+18     	; 0x1718 <main+0x159c>
    1706:	27 e0       	ldi	r18, 0x07	; 7
    1708:	30 e0       	ldi	r19, 0x00	; 0
    170a:	38 8f       	std	Y+24, r19	; 0x18
    170c:	2f 8b       	std	Y+23, r18	; 0x17
					state = 13;
					counterRef = counter;
				}
				if(state == 13 && counter - counterRef > totallength2*m2HalfPlate){
    170e:	4f 89       	ldd	r20, Y+23	; 0x17
    1710:	58 8d       	ldd	r21, Y+24	; 0x18
    1712:	4d 30       	cpi	r20, 0x0D	; 13
    1714:	51 05       	cpc	r21, r1
    1716:	59 f4       	brne	.+22     	; 0x172e <main+0x15b2>
    1718:	c8 01       	movw	r24, r16
    171a:	8e 19       	sub	r24, r14
    171c:	9f 09       	sbc	r25, r15
    171e:	81 5a       	subi	r24, 0xA1	; 161
    1720:	9f 40       	sbci	r25, 0x0F	; 15
    1722:	4c f4       	brge	.+18     	; 0x1736 <main+0x15ba>
    1724:	56 c0       	rjmp	.+172    	; 0x17d2 <main+0x1656>
    1726:	88 e0       	ldi	r24, 0x08	; 8
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	98 8f       	std	Y+24, r25	; 0x18
    172c:	8f 8b       	std	Y+23, r24	; 0x17
					state = 14;
					counterRef14 = counter;
					}
				if(state == 14 && counter - counterRef > pWait){
    172e:	ef 89       	ldd	r30, Y+23	; 0x17
    1730:	f8 8d       	ldd	r31, Y+24	; 0x18
    1732:	3e 97       	sbiw	r30, 0x0e	; 14
    1734:	69 f4       	brne	.+26     	; 0x1750 <main+0x15d4>
    1736:	c8 01       	movw	r24, r16
    1738:	8e 19       	sub	r24, r14
    173a:	9f 09       	sbc	r25, r15
    173c:	85 36       	cpi	r24, 0x65	; 101
    173e:	91 05       	cpc	r25, r1
    1740:	0c f4       	brge	.+2      	; 0x1744 <main+0x15c8>
    1742:	5b c0       	rjmp	.+182    	; 0x17fa <main+0x167e>
    1744:	78 01       	movw	r14, r16
    1746:	09 c0       	rjmp	.+18     	; 0x175a <main+0x15de>
    1748:	29 e0       	ldi	r18, 0x09	; 9
    174a:	30 e0       	ldi	r19, 0x00	; 0
    174c:	38 8f       	std	Y+24, r19	; 0x18
    174e:	2f 8b       	std	Y+23, r18	; 0x17
					state = 23;
					counterRef = counter;
				}
				if(state == 23 && counter - counterRef > totallength2*m2Dry1StepWhole /*&& u_inputByte0.bits_in_inputByte0.fixtureDry1 == 0*/){
    1750:	4f 89       	ldd	r20, Y+23	; 0x17
    1752:	58 8d       	ldd	r21, Y+24	; 0x18
    1754:	47 31       	cpi	r20, 0x17	; 23
    1756:	51 05       	cpc	r21, r1
    1758:	69 f4       	brne	.+26     	; 0x1774 <main+0x15f8>
    175a:	c8 01       	movw	r24, r16
    175c:	8e 19       	sub	r24, r14
    175e:	9f 09       	sbc	r25, r15
    1760:	81 5a       	subi	r24, 0xA1	; 161
    1762:	9f 40       	sbci	r25, 0x0F	; 15
    1764:	0c f4       	brge	.+2      	; 0x1768 <main+0x15ec>
    1766:	5b c0       	rjmp	.+182    	; 0x181e <main+0x16a2>
    1768:	78 01       	movw	r14, r16
    176a:	08 c0       	rjmp	.+16     	; 0x177c <main+0x1600>
    176c:	8a e0       	ldi	r24, 0x0A	; 10
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	98 8f       	std	Y+24, r25	; 0x18
    1772:	8f 8b       	std	Y+23, r24	; 0x17
					state = 24;
					counterRef = counter;
				}
				if(state == 24 && counter - counterRef > kWait){
    1774:	ef 89       	ldd	r30, Y+23	; 0x17
    1776:	f8 8d       	ldd	r31, Y+24	; 0x18
    1778:	78 97       	sbiw	r30, 0x18	; 24
    177a:	69 f4       	brne	.+26     	; 0x1796 <main+0x161a>
    177c:	c8 01       	movw	r24, r16
    177e:	8e 19       	sub	r24, r14
    1780:	9f 09       	sbc	r25, r15
    1782:	85 36       	cpi	r24, 0x65	; 101
    1784:	91 05       	cpc	r25, r1
    1786:	0c f4       	brge	.+2      	; 0x178a <main+0x160e>
    1788:	59 c0       	rjmp	.+178    	; 0x183c <main+0x16c0>
    178a:	78 01       	movw	r14, r16
    178c:	09 c0       	rjmp	.+18     	; 0x17a0 <main+0x1624>
    178e:	2b e0       	ldi	r18, 0x0B	; 11
    1790:	30 e0       	ldi	r19, 0x00	; 0
    1792:	38 8f       	std	Y+24, r19	; 0x18
    1794:	2f 8b       	std	Y+23, r18	; 0x17
					state = 25;
					counterRef = counter;
				}
				if(state == 25 && counter - counterRef > totallength2*m2WholePlate){
    1796:	4f 89       	ldd	r20, Y+23	; 0x17
    1798:	58 8d       	ldd	r21, Y+24	; 0x18
    179a:	49 31       	cpi	r20, 0x19	; 25
    179c:	51 05       	cpc	r21, r1
    179e:	59 f4       	brne	.+22     	; 0x17b6 <main+0x163a>
    17a0:	c8 01       	movw	r24, r16
    17a2:	8e 19       	sub	r24, r14
    17a4:	9f 09       	sbc	r25, r15
    17a6:	81 5a       	subi	r24, 0xA1	; 161
    17a8:	9f 40       	sbci	r25, 0x0F	; 15
    17aa:	4c f4       	brge	.+18     	; 0x17be <main+0x1642>
    17ac:	59 c0       	rjmp	.+178    	; 0x1860 <main+0x16e4>
    17ae:	8c e0       	ldi	r24, 0x0C	; 12
    17b0:	90 e0       	ldi	r25, 0x00	; 0
    17b2:	98 8f       	std	Y+24, r25	; 0x18
    17b4:	8f 8b       	std	Y+23, r24	; 0x17
					state = 26;
					counterRef26 = counter;
				}
				if(state == 26 && counter - counterRef > totallength2*m2Dry2Step /*&& u_inputByte0.bits_in_inputByte0.fixtureDry2 == 0*/){
    17b6:	ef 89       	ldd	r30, Y+23	; 0x17
    17b8:	f8 8d       	ldd	r31, Y+24	; 0x18
    17ba:	7a 97       	sbiw	r30, 0x1a	; 26
    17bc:	71 f4       	brne	.+28     	; 0x17da <main+0x165e>
    17be:	c8 01       	movw	r24, r16
    17c0:	8e 19       	sub	r24, r14
    17c2:	9f 09       	sbc	r25, r15
    17c4:	81 5a       	subi	r24, 0xA1	; 161
    17c6:	9f 40       	sbci	r25, 0x0F	; 15
    17c8:	0c f4       	brge	.+2      	; 0x17cc <main+0x1650>
    17ca:	5b c0       	rjmp	.+182    	; 0x1882 <main+0x1706>
    17cc:	18 8b       	std	Y+16, r17	; 0x10
    17ce:	0f 87       	std	Y+15, r16	; 0x0f
    17d0:	09 c0       	rjmp	.+18     	; 0x17e4 <main+0x1668>
    17d2:	2d e0       	ldi	r18, 0x0D	; 13
    17d4:	30 e0       	ldi	r19, 0x00	; 0
    17d6:	38 8f       	std	Y+24, r19	; 0x18
    17d8:	2f 8b       	std	Y+23, r18	; 0x17
					state = 27;
					counterRefFive = counter;
				}
				if(state == 27 && counter - counterRefFive > mWait){
    17da:	4f 89       	ldd	r20, Y+23	; 0x17
    17dc:	58 8d       	ldd	r21, Y+24	; 0x18
    17de:	4b 31       	cpi	r20, 0x1B	; 27
    17e0:	51 05       	cpc	r21, r1
    17e2:	79 f4       	brne	.+30     	; 0x1802 <main+0x1686>
    17e4:	c8 01       	movw	r24, r16
    17e6:	ef 85       	ldd	r30, Y+15	; 0x0f
    17e8:	f8 89       	ldd	r31, Y+16	; 0x10
    17ea:	8e 1b       	sub	r24, r30
    17ec:	9f 0b       	sbc	r25, r31
    17ee:	85 36       	cpi	r24, 0x65	; 101
    17f0:	91 05       	cpc	r25, r1
    17f2:	0c f4       	brge	.+2      	; 0x17f6 <main+0x167a>
    17f4:	58 c0       	rjmp	.+176    	; 0x18a6 <main+0x172a>
    17f6:	78 01       	movw	r14, r16
    17f8:	09 c0       	rjmp	.+18     	; 0x180c <main+0x1690>
    17fa:	2e e0       	ldi	r18, 0x0E	; 14
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	38 8f       	std	Y+24, r19	; 0x18
    1800:	2f 8b       	std	Y+23, r18	; 0x17
					state = 28;
					counterRef = counter;
				}
				if(state == 28 && counter - counterRef > pWait){
    1802:	4f 89       	ldd	r20, Y+23	; 0x17
    1804:	58 8d       	ldd	r21, Y+24	; 0x18
    1806:	4c 31       	cpi	r20, 0x1C	; 28
    1808:	51 05       	cpc	r21, r1
    180a:	69 f4       	brne	.+26     	; 0x1826 <main+0x16aa>
    180c:	c8 01       	movw	r24, r16
    180e:	8e 19       	sub	r24, r14
    1810:	9f 09       	sbc	r25, r15
    1812:	85 36       	cpi	r24, 0x65	; 101
    1814:	91 05       	cpc	r25, r1
    1816:	0c f4       	brge	.+2      	; 0x181a <main+0x169e>
    1818:	57 c0       	rjmp	.+174    	; 0x18c8 <main+0x174c>
    181a:	78 01       	movw	r14, r16
    181c:	08 c0       	rjmp	.+16     	; 0x182e <main+0x16b2>
    181e:	87 e1       	ldi	r24, 0x17	; 23
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	98 8f       	std	Y+24, r25	; 0x18
    1824:	8f 8b       	std	Y+23, r24	; 0x17
					state = 29;
					counterRef = counter;
				}
				if(state == 29 && counter - counterRef > totallength2*m2WholePlate){
    1826:	ef 89       	ldd	r30, Y+23	; 0x17
    1828:	f8 8d       	ldd	r31, Y+24	; 0x18
    182a:	7d 97       	sbiw	r30, 0x1d	; 29
    182c:	59 f4       	brne	.+22     	; 0x1844 <main+0x16c8>
    182e:	c8 01       	movw	r24, r16
    1830:	8e 19       	sub	r24, r14
    1832:	9f 09       	sbc	r25, r15
    1834:	81 5a       	subi	r24, 0xA1	; 161
    1836:	9f 40       	sbci	r25, 0x0F	; 15
    1838:	54 f4       	brge	.+20     	; 0x184e <main+0x16d2>
    183a:	58 c0       	rjmp	.+176    	; 0x18ec <main+0x1770>
    183c:	28 e1       	ldi	r18, 0x18	; 24
    183e:	30 e0       	ldi	r19, 0x00	; 0
    1840:	38 8f       	std	Y+24, r19	; 0x18
    1842:	2f 8b       	std	Y+23, r18	; 0x17
					state = 30;
					counterRef30 = counter;
				}
				if(state == 30 && counter - counterRef > totallength2*m2LoadBack /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
    1844:	4f 89       	ldd	r20, Y+23	; 0x17
    1846:	58 8d       	ldd	r21, Y+24	; 0x18
    1848:	4e 31       	cpi	r20, 0x1E	; 30
    184a:	51 05       	cpc	r21, r1
    184c:	69 f4       	brne	.+26     	; 0x1868 <main+0x16ec>
    184e:	c8 01       	movw	r24, r16
    1850:	8e 19       	sub	r24, r14
    1852:	9f 09       	sbc	r25, r15
    1854:	81 5a       	subi	r24, 0xA1	; 161
    1856:	9f 40       	sbci	r25, 0x0F	; 15
    1858:	0c f4       	brge	.+2      	; 0x185c <main+0x16e0>
    185a:	5a c0       	rjmp	.+180    	; 0x1910 <main+0x1794>
    185c:	78 01       	movw	r14, r16
    185e:	08 c0       	rjmp	.+16     	; 0x1870 <main+0x16f4>
    1860:	89 e1       	ldi	r24, 0x19	; 25
    1862:	90 e0       	ldi	r25, 0x00	; 0
    1864:	98 8f       	std	Y+24, r25	; 0x18
    1866:	8f 8b       	std	Y+23, r24	; 0x17
					state = 31;
					counterRef = counter;
				}
					if(state == 31 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
    1868:	ef 89       	ldd	r30, Y+23	; 0x17
    186a:	f8 8d       	ldd	r31, Y+24	; 0x18
    186c:	7f 97       	sbiw	r30, 0x1f	; 31
    186e:	69 f4       	brne	.+26     	; 0x188a <main+0x170e>
    1870:	c8 01       	movw	r24, r16
    1872:	8e 19       	sub	r24, r14
    1874:	9f 09       	sbc	r25, r15
    1876:	89 5e       	subi	r24, 0xE9	; 233
    1878:	93 40       	sbci	r25, 0x03	; 3
    187a:	0c f4       	brge	.+2      	; 0x187e <main+0x1702>
    187c:	7b c0       	rjmp	.+246    	; 0x1974 <main+0x17f8>
    187e:	78 01       	movw	r14, r16
    1880:	09 c0       	rjmp	.+18     	; 0x1894 <main+0x1718>
    1882:	2a e1       	ldi	r18, 0x1A	; 26
    1884:	30 e0       	ldi	r19, 0x00	; 0
    1886:	38 8f       	std	Y+24, r19	; 0x18
    1888:	2f 8b       	std	Y+23, r18	; 0x17
					state = 32;
					counterRef = counter;
				}
				if(state == 32 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureHome == 0*/){
    188a:	4f 89       	ldd	r20, Y+23	; 0x17
    188c:	58 8d       	ldd	r21, Y+24	; 0x18
    188e:	40 32       	cpi	r20, 0x20	; 32
    1890:	51 05       	cpc	r21, r1
    1892:	69 f4       	brne	.+26     	; 0x18ae <main+0x1732>
    1894:	c8 01       	movw	r24, r16
    1896:	8e 19       	sub	r24, r14
    1898:	9f 09       	sbc	r25, r15
    189a:	81 5a       	subi	r24, 0xA1	; 161
    189c:	9f 40       	sbci	r25, 0x0F	; 15
    189e:	0c f4       	brge	.+2      	; 0x18a2 <main+0x1726>
    18a0:	93 c0       	rjmp	.+294    	; 0x19c8 <main+0x184c>
    18a2:	78 01       	movw	r14, r16
    18a4:	08 c0       	rjmp	.+16     	; 0x18b6 <main+0x173a>
    18a6:	8b e1       	ldi	r24, 0x1B	; 27
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	98 8f       	std	Y+24, r25	; 0x18
    18ac:	8f 8b       	std	Y+23, r24	; 0x17
					state = 33;
					counterRef = counter;
				}
				if(state == 33 && counter - counterRef > pWait){
    18ae:	ef 89       	ldd	r30, Y+23	; 0x17
    18b0:	f8 8d       	ldd	r31, Y+24	; 0x18
    18b2:	b1 97       	sbiw	r30, 0x21	; 33
    18b4:	69 f4       	brne	.+26     	; 0x18d0 <main+0x1754>
    18b6:	c8 01       	movw	r24, r16
    18b8:	8e 19       	sub	r24, r14
    18ba:	9f 09       	sbc	r25, r15
    18bc:	85 36       	cpi	r24, 0x65	; 101
    18be:	91 05       	cpc	r25, r1
    18c0:	0c f4       	brge	.+2      	; 0x18c4 <main+0x1748>
    18c2:	99 c0       	rjmp	.+306    	; 0x19f6 <main+0x187a>
    18c4:	78 01       	movw	r14, r16
    18c6:	09 c0       	rjmp	.+18     	; 0x18da <main+0x175e>
    18c8:	2c e1       	ldi	r18, 0x1C	; 28
    18ca:	30 e0       	ldi	r19, 0x00	; 0
    18cc:	38 8f       	std	Y+24, r19	; 0x18
    18ce:	2f 8b       	std	Y+23, r18	; 0x17
					state = 34;
					counterRef = counter;
				}
				if(state == 34 && counter - counterRef > totallength1*m1LoadPlate){
    18d0:	4f 89       	ldd	r20, Y+23	; 0x17
    18d2:	58 8d       	ldd	r21, Y+24	; 0x18
    18d4:	42 32       	cpi	r20, 0x22	; 34
    18d6:	51 05       	cpc	r21, r1
    18d8:	69 f4       	brne	.+26     	; 0x18f4 <main+0x1778>
    18da:	c8 01       	movw	r24, r16
    18dc:	8e 19       	sub	r24, r14
    18de:	9f 09       	sbc	r25, r15
    18e0:	81 5a       	subi	r24, 0xA1	; 161
    18e2:	9f 40       	sbci	r25, 0x0F	; 15
    18e4:	0c f4       	brge	.+2      	; 0x18e8 <main+0x176c>
    18e6:	99 c0       	rjmp	.+306    	; 0x1a1a <main+0x189e>
    18e8:	78 01       	movw	r14, r16
    18ea:	08 c0       	rjmp	.+16     	; 0x18fc <main+0x1780>
    18ec:	8d e1       	ldi	r24, 0x1D	; 29
    18ee:	90 e0       	ldi	r25, 0x00	; 0
    18f0:	98 8f       	std	Y+24, r25	; 0x18
    18f2:	8f 8b       	std	Y+23, r24	; 0x17
					state = 35;
					counterRef = counter;
				}
				if(state == 35 && counter - counterRef > 10){
    18f4:	ef 89       	ldd	r30, Y+23	; 0x17
    18f6:	f8 8d       	ldd	r31, Y+24	; 0x18
    18f8:	b3 97       	sbiw	r30, 0x23	; 35
    18fa:	79 f4       	brne	.+30     	; 0x191a <main+0x179e>
    18fc:	c8 01       	movw	r24, r16
    18fe:	8e 19       	sub	r24, r14
    1900:	9f 09       	sbc	r25, r15
    1902:	0b 97       	sbiw	r24, 0x0b	; 11
    1904:	14 f4       	brge	.+4      	; 0x190a <main+0x178e>
    1906:	0c 94 7d 1b 	jmp	0x36fa	; 0x36fa <main+0x357e>
    190a:	2f ef       	ldi	r18, 0xFF	; 255
    190c:	3f ef       	ldi	r19, 0xFF	; 255
    190e:	34 c0       	rjmp	.+104    	; 0x1978 <main+0x17fc>
    1910:	4e e1       	ldi	r20, 0x1E	; 30
    1912:	50 e0       	ldi	r21, 0x00	; 0
    1914:	58 8f       	std	Y+24, r21	; 0x18
    1916:	4f 8b       	std	Y+23, r20	; 0x17
    1918:	31 c0       	rjmp	.+98     	; 0x197c <main+0x1800>
				}


				//state actions
						
				if(state == 0){
    191a:	8f 89       	ldd	r24, Y+23	; 0x17
    191c:	98 8d       	ldd	r25, Y+24	; 0x18
    191e:	89 2b       	or	r24, r25
    1920:	69 f5       	brne	.+90     	; 0x197c <main+0x1800>
					if(u_inputByte0.bits_in_inputByte0.fixtureHome == 1){
    1922:	80 91 3c 03 	lds	r24, 0x033C
    1926:	90 91 38 03 	lds	r25, 0x0338
    192a:	20 91 3a 03 	lds	r18, 0x033A
    192e:	82 ff       	sbrs	r24, 2
    1930:	0a c0       	rjmp	.+20     	; 0x1946 <main+0x17ca>
						u_motorByte0.bits_in_motorByte0.m2Dir = 0;  //********* 0 is used as fixture backward ?cc?, 1 as forward ?c? **********
    1932:	9f 7e       	andi	r25, 0xEF	; 239
    1934:	90 93 38 03 	sts	0x0338, r25
						u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    1938:	27 7f       	andi	r18, 0xF7	; 247
    193a:	20 93 3a 03 	sts	0x033A, r18
    193e:	61 e0       	ldi	r22, 0x01	; 1
    1940:	c6 2e       	mov	r12, r22
    1942:	d1 2c       	mov	r13, r1
    1944:	6e c0       	rjmp	.+220    	; 0x1a22 <main+0x18a6>
						m2 = 1;
					}
					else{
						u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    1946:	9f 7d       	andi	r25, 0xDF	; 223
    1948:	90 93 38 03 	sts	0x0338, r25
						m2 = 0;
						u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    194c:	2f 7e       	andi	r18, 0xEF	; 239
						u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    194e:	28 60       	ori	r18, 0x08	; 8
    1950:	20 93 3a 03 	sts	0x033A, r18
						if(print0 == 1){
    1954:	eb 89       	ldd	r30, Y+19	; 0x13
    1956:	fc 89       	ldd	r31, Y+20	; 0x14
    1958:	31 97       	sbiw	r30, 0x01	; 1
    195a:	11 f0       	breq	.+4      	; 0x1960 <main+0x17e4>
    195c:	0c 94 81 1b 	jmp	0x3702	; 0x3702 <main+0x3586>
							OrangutanLCD::gotoXY(0,1);
    1960:	80 e0       	ldi	r24, 0x00	; 0
    1962:	61 e0       	ldi	r22, 0x01	; 1
    1964:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
							OrangutanLCD::print("PUSH TO START");
    1968:	80 e0       	ldi	r24, 0x00	; 0
    196a:	93 e0       	ldi	r25, 0x03	; 3
    196c:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    1970:	0c 94 81 1b 	jmp	0x3702	; 0x3702 <main+0x3586>
    1974:	2f e1       	ldi	r18, 0x1F	; 31
    1976:	30 e0       	ldi	r19, 0x00	; 0
    1978:	38 8f       	std	Y+24, r19	; 0x18
    197a:	2f 8b       	std	Y+23, r18	; 0x17
							print0 = 0;
						}
					}
				}
				if(state == 1){
    197c:	4f 89       	ldd	r20, Y+23	; 0x17
    197e:	58 8d       	ldd	r21, Y+24	; 0x18
    1980:	41 30       	cpi	r20, 0x01	; 1
    1982:	51 05       	cpc	r21, r1
    1984:	29 f5       	brne	.+74     	; 0x19d0 <main+0x1854>
					//OrangutanLCD::clear();
					u_outputByte0.bits_in_outputByte0.ACPower = 0;
    1986:	20 91 3a 03 	lds	r18, 0x033A
    198a:	32 2f       	mov	r19, r18
    198c:	3e 7f       	andi	r19, 0xFE	; 254
					if((counter % 200) < 100){
    198e:	c8 01       	movw	r24, r16
    1990:	68 ec       	ldi	r22, 0xC8	; 200
    1992:	70 e0       	ldi	r23, 0x00	; 0
    1994:	0e 94 b9 21 	call	0x4372	; 0x4372 <__divmodhi4>
    1998:	84 36       	cpi	r24, 0x64	; 100
    199a:	91 05       	cpc	r25, r1
    199c:	24 f4       	brge	.+8      	; 0x19a6 <main+0x182a>
						u_outputByte0.bits_in_outputByte0.blowerPulse = 0;
    199e:	2c 7f       	andi	r18, 0xFC	; 252
    19a0:	20 93 3a 03 	sts	0x033A, r18
    19a4:	03 c0       	rjmp	.+6      	; 0x19ac <main+0x1830>
					}
					else{
						u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
    19a6:	32 60       	ori	r19, 0x02	; 2
    19a8:	30 93 3a 03 	sts	0x033A, r19
					}
					m1 = 1;
					u_motorByte0.bits_in_motorByte0.m1Dir = 1;  //****** dir1 ******
    19ac:	80 91 38 03 	lds	r24, 0x0338
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
    19b0:	86 60       	ori	r24, 0x06	; 6
    19b2:	80 93 38 03 	sts	0x0338, r24
					u_outputByte0.bits_in_outputByte0.plateStop = 0;
    19b6:	80 91 3a 03 	lds	r24, 0x033A
    19ba:	8b 7f       	andi	r24, 0xFB	; 251
    19bc:	80 93 3a 03 	sts	0x033A, r24
    19c0:	51 e0       	ldi	r21, 0x01	; 1
    19c2:	85 2e       	mov	r8, r21
    19c4:	91 2c       	mov	r9, r1
    19c6:	2d c0       	rjmp	.+90     	; 0x1a22 <main+0x18a6>
    19c8:	80 e2       	ldi	r24, 0x20	; 32
    19ca:	90 e0       	ldi	r25, 0x00	; 0
    19cc:	98 8f       	std	Y+24, r25	; 0x18
    19ce:	8f 8b       	std	Y+23, r24	; 0x17
				}
				if(state == 2){
    19d0:	ef 89       	ldd	r30, Y+23	; 0x17
    19d2:	f8 8d       	ldd	r31, Y+24	; 0x18
    19d4:	32 97       	sbiw	r30, 0x02	; 2
    19d6:	99 f4       	brne	.+38     	; 0x19fe <main+0x1882>
					u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
    19d8:	80 91 3a 03 	lds	r24, 0x033A
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    19dc:	81 7e       	andi	r24, 0xE1	; 225
					u_outputByte0.bits_in_outputByte0.plateStop = 1;
    19de:	86 61       	ori	r24, 0x16	; 22
    19e0:	80 93 3a 03 	sts	0x033A, r24
						m1 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    19e4:	80 91 38 03 	lds	r24, 0x0338
    19e8:	80 62       	ori	r24, 0x20	; 32
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    19ea:	8b 7f       	andi	r24, 0xFB	; 251
    19ec:	80 93 38 03 	sts	0x0338, r24
    19f0:	88 24       	eor	r8, r8
    19f2:	99 24       	eor	r9, r9
    19f4:	45 c0       	rjmp	.+138    	; 0x1a80 <main+0x1904>
    19f6:	21 e2       	ldi	r18, 0x21	; 33
    19f8:	30 e0       	ldi	r19, 0x00	; 0
    19fa:	38 8f       	std	Y+24, r19	; 0x18
    19fc:	2f 8b       	std	Y+23, r18	; 0x17
				}	
				if(state == 3){
    19fe:	4f 89       	ldd	r20, Y+23	; 0x17
    1a00:	58 8d       	ldd	r21, Y+24	; 0x18
    1a02:	43 30       	cpi	r20, 0x03	; 3
    1a04:	51 05       	cpc	r21, r1
    1a06:	69 f4       	brne	.+26     	; 0x1a22 <main+0x18a6>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ****** dir2 *******
    1a08:	80 91 38 03 	lds	r24, 0x0338
    1a0c:	80 61       	ori	r24, 0x10	; 16
    1a0e:	80 93 38 03 	sts	0x0338, r24
    1a12:	41 e0       	ldi	r20, 0x01	; 1
    1a14:	c4 2e       	mov	r12, r20
    1a16:	d1 2c       	mov	r13, r1
    1a18:	44 c0       	rjmp	.+136    	; 0x1aa2 <main+0x1926>
    1a1a:	82 e2       	ldi	r24, 0x22	; 34
    1a1c:	90 e0       	ldi	r25, 0x00	; 0
    1a1e:	98 8f       	std	Y+24, r25	; 0x18
    1a20:	8f 8b       	std	Y+23, r24	; 0x17
					m2 = 1;
				}
				if(state == 4){
    1a22:	ef 89       	ldd	r30, Y+23	; 0x17
    1a24:	f8 8d       	ldd	r31, Y+24	; 0x18
    1a26:	34 97       	sbiw	r30, 0x04	; 4
    1a28:	69 f4       	brne	.+26     	; 0x1a44 <main+0x18c8>
						m2 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    1a2a:	80 91 38 03 	lds	r24, 0x0338
    1a2e:	8f 7d       	andi	r24, 0xDF	; 223
    1a30:	80 93 38 03 	sts	0x0338, r24
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    1a34:	80 91 3a 03 	lds	r24, 0x033A
    1a38:	88 60       	ori	r24, 0x08	; 8
    1a3a:	80 93 3a 03 	sts	0x033A, r24
    1a3e:	cc 24       	eor	r12, r12
    1a40:	dd 24       	eor	r13, r13
    1a42:	3d c0       	rjmp	.+122    	; 0x1abe <main+0x1942>
				}
				if(state == 5){
    1a44:	2f 89       	ldd	r18, Y+23	; 0x17
    1a46:	38 8d       	ldd	r19, Y+24	; 0x18
    1a48:	25 30       	cpi	r18, 0x05	; 5
    1a4a:	31 05       	cpc	r19, r1
    1a4c:	59 f4       	brne	.+22     	; 0x1a64 <main+0x18e8>
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    1a4e:	80 91 3a 03 	lds	r24, 0x033A
    1a52:	8f 7e       	andi	r24, 0xEF	; 239
    1a54:	80 93 3a 03 	sts	0x033A, r24
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    1a58:	80 91 38 03 	lds	r24, 0x0338
    1a5c:	80 62       	ori	r24, 0x20	; 32
    1a5e:	80 93 38 03 	sts	0x0338, r24
    1a62:	3b c0       	rjmp	.+118    	; 0x1ada <main+0x195e>
				}
				//*********************************************
				if(state == 6){
    1a64:	4f 89       	ldd	r20, Y+23	; 0x17
    1a66:	58 8d       	ldd	r21, Y+24	; 0x18
    1a68:	46 30       	cpi	r20, 0x06	; 6
    1a6a:	51 05       	cpc	r21, r1
    1a6c:	49 f4       	brne	.+18     	; 0x1a80 <main+0x1904>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    1a6e:	80 91 38 03 	lds	r24, 0x0338
    1a72:	80 61       	ori	r24, 0x10	; 16
    1a74:	80 93 38 03 	sts	0x0338, r24
    1a78:	31 e0       	ldi	r19, 0x01	; 1
    1a7a:	c3 2e       	mov	r12, r19
    1a7c:	d1 2c       	mov	r13, r1
    1a7e:	3d c0       	rjmp	.+122    	; 0x1afa <main+0x197e>
					m2 = 1;
				}
				if(state == 7){
    1a80:	8f 89       	ldd	r24, Y+23	; 0x17
    1a82:	98 8d       	ldd	r25, Y+24	; 0x18
    1a84:	07 97       	sbiw	r24, 0x07	; 7
    1a86:	69 f4       	brne	.+26     	; 0x1aa2 <main+0x1926>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m3Drop = 1;
    1a88:	80 91 39 03 	lds	r24, 0x0339
    1a8c:	81 60       	ori	r24, 0x01	; 1
    1a8e:	80 93 39 03 	sts	0x0339, r24
					u_motorByte0.bits_in_motorByte0.m3Dir = 0;  // ******* dir3 *******
    1a92:	80 91 38 03 	lds	r24, 0x0338
    1a96:	8f 77       	andi	r24, 0x7F	; 127
    1a98:	80 93 38 03 	sts	0x0338, r24
    1a9c:	cc 24       	eor	r12, r12
    1a9e:	dd 24       	eor	r13, r13
    1aa0:	39 c0       	rjmp	.+114    	; 0x1b14 <main+0x1998>
						OrangutanLCD::clear();
						OrangutanLCD::print("Clean 1");
						print6 = 0;
					}*/
				}
				if(state == 8){
    1aa2:	ef 89       	ldd	r30, Y+23	; 0x17
    1aa4:	f8 8d       	ldd	r31, Y+24	; 0x18
    1aa6:	38 97       	sbiw	r30, 0x08	; 8
    1aa8:	51 f4       	brne	.+20     	; 0x1abe <main+0x1942>
					m3 = 1;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
    1aaa:	80 91 3a 03 	lds	r24, 0x033A
    1aae:	80 64       	ori	r24, 0x40	; 64
					u_outputByte0.bits_in_outputByte0.brush1Raise = 0;
    1ab0:	8f 7d       	andi	r24, 0xDF	; 223
    1ab2:	80 93 3a 03 	sts	0x033A, r24
    1ab6:	21 e0       	ldi	r18, 0x01	; 1
    1ab8:	42 2e       	mov	r4, r18
    1aba:	51 2c       	mov	r5, r1
    1abc:	40 c0       	rjmp	.+128    	; 0x1b3e <main+0x19c2>
				}
				if(state == 9){
    1abe:	2f 89       	ldd	r18, Y+23	; 0x17
    1ac0:	38 8d       	ldd	r19, Y+24	; 0x18
    1ac2:	29 30       	cpi	r18, 0x09	; 9
    1ac4:	31 05       	cpc	r19, r1
    1ac6:	49 f4       	brne	.+18     	; 0x1ada <main+0x195e>
					m2 = 1;
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    1ac8:	80 91 38 03 	lds	r24, 0x0338
    1acc:	8f 7e       	andi	r24, 0xEF	; 239
    1ace:	80 93 38 03 	sts	0x0338, r24
    1ad2:	91 e0       	ldi	r25, 0x01	; 1
    1ad4:	c9 2e       	mov	r12, r25
    1ad6:	d1 2c       	mov	r13, r1
    1ad8:	37 c0       	rjmp	.+110    	; 0x1b48 <main+0x19cc>
				}
				if(state == 10){
    1ada:	4f 89       	ldd	r20, Y+23	; 0x17
    1adc:	58 8d       	ldd	r21, Y+24	; 0x18
    1ade:	4a 30       	cpi	r20, 0x0A	; 10
    1ae0:	51 05       	cpc	r21, r1
    1ae2:	59 f4       	brne	.+22     	; 0x1afa <main+0x197e>
					m2 = 0;
					m3 = 0;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
    1ae4:	80 91 3a 03 	lds	r24, 0x033A
    1ae8:	8f 7b       	andi	r24, 0xBF	; 191
					u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
    1aea:	80 62       	ori	r24, 0x20	; 32
    1aec:	80 93 3a 03 	sts	0x033A, r24
    1af0:	cc 24       	eor	r12, r12
    1af2:	dd 24       	eor	r13, r13
    1af4:	44 24       	eor	r4, r4
    1af6:	55 24       	eor	r5, r5
    1af8:	3c c0       	rjmp	.+120    	; 0x1b72 <main+0x19f6>
				}
				if(state == 11){
    1afa:	8f 89       	ldd	r24, Y+23	; 0x17
    1afc:	98 8d       	ldd	r25, Y+24	; 0x18
    1afe:	0b 97       	sbiw	r24, 0x0b	; 11
    1b00:	49 f4       	brne	.+18     	; 0x1b14 <main+0x1998>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    1b02:	80 91 38 03 	lds	r24, 0x0338
    1b06:	80 61       	ori	r24, 0x10	; 16
    1b08:	80 93 38 03 	sts	0x0338, r24
    1b0c:	81 e0       	ldi	r24, 0x01	; 1
    1b0e:	c8 2e       	mov	r12, r24
    1b10:	d1 2c       	mov	r13, r1
    1b12:	3c c0       	rjmp	.+120    	; 0x1b8c <main+0x1a10>
					m2 = 1;
				}
				if(state == 12){
    1b14:	ef 89       	ldd	r30, Y+23	; 0x17
    1b16:	f8 8d       	ldd	r31, Y+24	; 0x18
    1b18:	3c 97       	sbiw	r30, 0x0c	; 12
    1b1a:	89 f4       	brne	.+34     	; 0x1b3e <main+0x19c2>
					m2 = 0;
					u_motorByte0.bits_in_motorByte0.m3Dir = 0;  // ******* dir3 *******
    1b1c:	80 91 38 03 	lds	r24, 0x0338
    1b20:	8f 77       	andi	r24, 0x7F	; 127
    1b22:	80 93 38 03 	sts	0x0338, r24
					m3 = 1;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
    1b26:	80 91 3a 03 	lds	r24, 0x033A
    1b2a:	80 64       	ori	r24, 0x40	; 64
					u_outputByte0.bits_in_outputByte0.brush1Raise = 0;
    1b2c:	8f 7d       	andi	r24, 0xDF	; 223
    1b2e:	80 93 3a 03 	sts	0x033A, r24
    1b32:	cc 24       	eor	r12, r12
    1b34:	dd 24       	eor	r13, r13
    1b36:	b1 e0       	ldi	r27, 0x01	; 1
    1b38:	4b 2e       	mov	r4, r27
    1b3a:	51 2c       	mov	r5, r1
    1b3c:	33 c0       	rjmp	.+102    	; 0x1ba4 <main+0x1a28>
				}
				if(state == 13){
    1b3e:	2f 89       	ldd	r18, Y+23	; 0x17
    1b40:	38 8d       	ldd	r19, Y+24	; 0x18
    1b42:	2d 30       	cpi	r18, 0x0D	; 13
    1b44:	31 05       	cpc	r19, r1
    1b46:	e1 f1       	breq	.+120    	; 0x1bc0 <main+0x1a44>
					m2 = 1;
				}
				if(state == 14){
    1b48:	4f 89       	ldd	r20, Y+23	; 0x17
    1b4a:	58 8d       	ldd	r21, Y+24	; 0x18
    1b4c:	4e 30       	cpi	r20, 0x0E	; 14
    1b4e:	51 05       	cpc	r21, r1
    1b50:	81 f4       	brne	.+32     	; 0x1b72 <main+0x19f6>
					m3 = 0;
					m2 = 0;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
    1b52:	80 91 3a 03 	lds	r24, 0x033A
    1b56:	8f 7b       	andi	r24, 0xBF	; 191
					u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
    1b58:	80 62       	ori	r24, 0x20	; 32
    1b5a:	80 93 3a 03 	sts	0x033A, r24
					u_motorByte1.bits_in_motorByte1.m3Drop = 0;
    1b5e:	80 91 39 03 	lds	r24, 0x0339
    1b62:	8e 7f       	andi	r24, 0xFE	; 254
    1b64:	80 93 39 03 	sts	0x0339, r24
    1b68:	cc 24       	eor	r12, r12
    1b6a:	dd 24       	eor	r13, r13
    1b6c:	44 24       	eor	r4, r4
    1b6e:	55 24       	eor	r5, r5
    1b70:	35 c0       	rjmp	.+106    	; 0x1bdc <main+0x1a60>
				}
				
				//*************************************************
				if(state == 23){
    1b72:	8f 89       	ldd	r24, Y+23	; 0x17
    1b74:	98 8d       	ldd	r25, Y+24	; 0x18
    1b76:	47 97       	sbiw	r24, 0x17	; 23
    1b78:	49 f4       	brne	.+18     	; 0x1b8c <main+0x1a10>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    1b7a:	80 91 38 03 	lds	r24, 0x0338
    1b7e:	80 61       	ori	r24, 0x10	; 16
    1b80:	80 93 38 03 	sts	0x0338, r24
    1b84:	a1 e0       	ldi	r26, 0x01	; 1
    1b86:	ca 2e       	mov	r12, r26
    1b88:	d1 2c       	mov	r13, r1
    1b8a:	39 c0       	rjmp	.+114    	; 0x1bfe <main+0x1a82>
					m2 = 1;
				}
				if(state == 24){
    1b8c:	ef 89       	ldd	r30, Y+23	; 0x17
    1b8e:	f8 8d       	ldd	r31, Y+24	; 0x18
    1b90:	78 97       	sbiw	r30, 0x18	; 24
    1b92:	41 f4       	brne	.+16     	; 0x1ba4 <main+0x1a28>
					m2 = 0;
					u_outputByte1.bits_in_outputByte1.airKnife = 0;
    1b94:	80 91 3b 03 	lds	r24, 0x033B
    1b98:	87 7f       	andi	r24, 0xF7	; 247
    1b9a:	80 93 3b 03 	sts	0x033B, r24
    1b9e:	cc 24       	eor	r12, r12
    1ba0:	dd 24       	eor	r13, r13
    1ba2:	38 c0       	rjmp	.+112    	; 0x1c14 <main+0x1a98>
						OrangutanLCD::clear();
						OrangutanLCD::print("DRY AIR");
						print24 = 0;
					}*/
				}
				if(state == 25){
    1ba4:	2f 89       	ldd	r18, Y+23	; 0x17
    1ba6:	38 8d       	ldd	r19, Y+24	; 0x18
    1ba8:	29 31       	cpi	r18, 0x19	; 25
    1baa:	31 05       	cpc	r19, r1
    1bac:	61 f4       	brne	.+24     	; 0x1bc6 <main+0x1a4a>
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    1bae:	80 91 38 03 	lds	r24, 0x0338
    1bb2:	8f 7e       	andi	r24, 0xEF	; 239
    1bb4:	80 93 38 03 	sts	0x0338, r24
    1bb8:	f1 e0       	ldi	r31, 0x01	; 1
    1bba:	cf 2e       	mov	r12, r31
    1bbc:	d1 2c       	mov	r13, r1
    1bbe:	30 c0       	rjmp	.+96     	; 0x1c20 <main+0x1aa4>
    1bc0:	e1 e0       	ldi	r30, 0x01	; 1
    1bc2:	ce 2e       	mov	r12, r30
    1bc4:	d1 2c       	mov	r13, r1
					m2 = 1;
				}
				if(state == 26){
    1bc6:	4f 89       	ldd	r20, Y+23	; 0x17
    1bc8:	58 8d       	ldd	r21, Y+24	; 0x18
    1bca:	4a 31       	cpi	r20, 0x1A	; 26
    1bcc:	51 05       	cpc	r21, r1
    1bce:	31 f4       	brne	.+12     	; 0x1bdc <main+0x1a60>
					u_outputByte1.bits_in_outputByte1.airKnife = 1;
    1bd0:	80 91 3b 03 	lds	r24, 0x033B
    1bd4:	88 60       	ori	r24, 0x08	; 8
    1bd6:	80 93 3b 03 	sts	0x033B, r24
    1bda:	34 c0       	rjmp	.+104    	; 0x1c44 <main+0x1ac8>
				}
				if(state == 27){
    1bdc:	8f 89       	ldd	r24, Y+23	; 0x17
    1bde:	98 8d       	ldd	r25, Y+24	; 0x18
    1be0:	4b 97       	sbiw	r24, 0x1b	; 27
    1be2:	69 f4       	brne	.+26     	; 0x1bfe <main+0x1a82>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m5Drop = 1;
    1be4:	80 91 39 03 	lds	r24, 0x0339
    1be8:	80 64       	ori	r24, 0x40	; 64
					u_motorByte1.bits_in_motorByte1.m5Dir = 0;
    1bea:	8f 7d       	andi	r24, 0xDF	; 223
    1bec:	80 93 39 03 	sts	0x0339, r24
    1bf0:	cc 24       	eor	r12, r12
    1bf2:	dd 24       	eor	r13, r13
    1bf4:	e1 e0       	ldi	r30, 0x01	; 1
    1bf6:	f0 e0       	ldi	r31, 0x00	; 0
    1bf8:	fa 87       	std	Y+10, r31	; 0x0a
    1bfa:	e9 87       	std	Y+9, r30	; 0x09
    1bfc:	2c c0       	rjmp	.+88     	; 0x1c56 <main+0x1ada>
					m5 = 1;
				}
				if(state == 28){
    1bfe:	2f 89       	ldd	r18, Y+23	; 0x17
    1c00:	38 8d       	ldd	r19, Y+24	; 0x18
    1c02:	2c 31       	cpi	r18, 0x1C	; 28
    1c04:	31 05       	cpc	r19, r1
    1c06:	31 f4       	brne	.+12     	; 0x1c14 <main+0x1a98>
					/*if(print28 == 1){
							OrangutanLCD::clear();
						OrangutanLCD::print("FINAL DRY");
						print28 = 0;
						}*/
					u_outputByte1.bits_in_outputByte1.ptRaise = 0;
    1c08:	80 91 3b 03 	lds	r24, 0x033B
    1c0c:	8d 7f       	andi	r24, 0xFD	; 253
    1c0e:	80 93 3b 03 	sts	0x033B, r24
    1c12:	2f c0       	rjmp	.+94     	; 0x1c72 <main+0x1af6>
				}
				if(state == 29){
    1c14:	4f 89       	ldd	r20, Y+23	; 0x17
    1c16:	58 8d       	ldd	r21, Y+24	; 0x18
    1c18:	4d 31       	cpi	r20, 0x1D	; 29
    1c1a:	51 05       	cpc	r21, r1
    1c1c:	09 f4       	brne	.+2      	; 0x1c20 <main+0x1aa4>
    1c1e:	3d c0       	rjmp	.+122    	; 0x1c9a <main+0x1b1e>
					m2 = 1;
				}
				if(state == 30){
    1c20:	8f 89       	ldd	r24, Y+23	; 0x17
    1c22:	98 8d       	ldd	r25, Y+24	; 0x18
    1c24:	4e 97       	sbiw	r24, 0x1e	; 30
    1c26:	71 f4       	brne	.+28     	; 0x1c44 <main+0x1ac8>
					m5 = 0;
						u_motorByte1.bits_in_motorByte1.m5Drop = 0;
    1c28:	80 91 39 03 	lds	r24, 0x0339
    1c2c:	8f 7b       	andi	r24, 0xBF	; 191
    1c2e:	80 93 39 03 	sts	0x0339, r24
					u_outputByte1.bits_in_outputByte1.ptRaise = 1;
    1c32:	80 91 3b 03 	lds	r24, 0x033B
    1c36:	82 60       	ori	r24, 0x02	; 2
					u_outputByte1.bits_in_outputByte1.ptLower = 0;
    1c38:	8b 7f       	andi	r24, 0xFB	; 251
    1c3a:	80 93 3b 03 	sts	0x033B, r24
    1c3e:	1a 86       	std	Y+10, r1	; 0x0a
    1c40:	19 86       	std	Y+9, r1	; 0x09
    1c42:	3b c0       	rjmp	.+118    	; 0x1cba <main+0x1b3e>
				}
				if(state == 31){
    1c44:	ef 89       	ldd	r30, Y+23	; 0x17
    1c46:	f8 8d       	ldd	r31, Y+24	; 0x18
    1c48:	7f 97       	sbiw	r30, 0x1f	; 31
    1c4a:	29 f4       	brne	.+10     	; 0x1c56 <main+0x1ada>
					m2 = 0;
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    1c4c:	80 91 3a 03 	lds	r24, 0x033A
    1c50:	87 7f       	andi	r24, 0xF7	; 247
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
    1c52:	80 61       	ori	r24, 0x10	; 16
    1c54:	1d c0       	rjmp	.+58     	; 0x1c90 <main+0x1b14>
				}
				if(state == 32){
    1c56:	2f 89       	ldd	r18, Y+23	; 0x17
    1c58:	38 8d       	ldd	r19, Y+24	; 0x18
    1c5a:	20 32       	cpi	r18, 0x20	; 32
    1c5c:	31 05       	cpc	r19, r1
    1c5e:	49 f4       	brne	.+18     	; 0x1c72 <main+0x1af6>
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;
    1c60:	80 91 38 03 	lds	r24, 0x0338
    1c64:	8f 7e       	andi	r24, 0xEF	; 239
    1c66:	80 93 38 03 	sts	0x0338, r24
    1c6a:	71 e0       	ldi	r23, 0x01	; 1
    1c6c:	c7 2e       	mov	r12, r23
    1c6e:	d1 2c       	mov	r13, r1
    1c70:	3f c0       	rjmp	.+126    	; 0x1cf0 <main+0x1b74>
					m2 = 1;
				}
				if(state == 33){
    1c72:	4f 89       	ldd	r20, Y+23	; 0x17
    1c74:	58 8d       	ldd	r21, Y+24	; 0x18
    1c76:	41 32       	cpi	r20, 0x21	; 33
    1c78:	51 05       	cpc	r21, r1
    1c7a:	91 f4       	brne	.+36     	; 0x1ca0 <main+0x1b24>
					m2 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    1c7c:	80 91 38 03 	lds	r24, 0x0338
    1c80:	8f 7d       	andi	r24, 0xDF	; 223
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
    1c82:	84 60       	ori	r24, 0x04	; 4
    1c84:	80 93 38 03 	sts	0x0338, r24
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    1c88:	80 91 3a 03 	lds	r24, 0x033A
    1c8c:	88 60       	ori	r24, 0x08	; 8
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    1c8e:	8f 7e       	andi	r24, 0xEF	; 239
    1c90:	80 93 3a 03 	sts	0x033A, r24
    1c94:	cc 24       	eor	r12, r12
    1c96:	dd 24       	eor	r13, r13
    1c98:	2b c0       	rjmp	.+86     	; 0x1cf0 <main+0x1b74>
    1c9a:	61 e0       	ldi	r22, 0x01	; 1
    1c9c:	c6 2e       	mov	r12, r22
    1c9e:	d1 2c       	mov	r13, r1
				}
				if(state == 34){
    1ca0:	8f 89       	ldd	r24, Y+23	; 0x17
    1ca2:	98 8d       	ldd	r25, Y+24	; 0x18
    1ca4:	82 97       	sbiw	r24, 0x22	; 34
    1ca6:	49 f4       	brne	.+18     	; 0x1cba <main+0x1b3e>
					u_motorByte0.bits_in_motorByte0.m1Dir = 0;
    1ca8:	80 91 38 03 	lds	r24, 0x0338
    1cac:	8d 7f       	andi	r24, 0xFD	; 253
    1cae:	80 93 38 03 	sts	0x0338, r24
    1cb2:	51 e0       	ldi	r21, 0x01	; 1
    1cb4:	85 2e       	mov	r8, r21
    1cb6:	91 2c       	mov	r9, r1
    1cb8:	1b c0       	rjmp	.+54     	; 0x1cf0 <main+0x1b74>
					m1 = 1;
					}
				if(state == 35){
    1cba:	ef 89       	ldd	r30, Y+23	; 0x17
    1cbc:	f8 8d       	ldd	r31, Y+24	; 0x18
    1cbe:	b3 97       	sbiw	r30, 0x23	; 35
    1cc0:	b9 f4       	brne	.+46     	; 0x1cf0 <main+0x1b74>
					m1 = 0;
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    1cc2:	80 91 38 03 	lds	r24, 0x0338
    1cc6:	8b 7f       	andi	r24, 0xFB	; 251
    1cc8:	80 93 38 03 	sts	0x0338, r24
					if(print35 == 1){
    1ccc:	29 89       	ldd	r18, Y+17	; 0x11
    1cce:	3a 89       	ldd	r19, Y+18	; 0x12
    1cd0:	21 30       	cpi	r18, 0x01	; 1
    1cd2:	31 05       	cpc	r19, r1
    1cd4:	19 f0       	breq	.+6      	; 0x1cdc <main+0x1b60>
    1cd6:	88 24       	eor	r8, r8
    1cd8:	99 24       	eor	r9, r9
    1cda:	0a c0       	rjmp	.+20     	; 0x1cf0 <main+0x1b74>
						OrangutanLCD::clear();
    1cdc:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("END OF CYCLE");
    1ce0:	8e e0       	ldi	r24, 0x0E	; 14
    1ce2:	93 e0       	ldi	r25, 0x03	; 3
    1ce4:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    1ce8:	88 24       	eor	r8, r8
    1cea:	99 24       	eor	r9, r9
    1cec:	1a 8a       	std	Y+18, r1	; 0x12
    1cee:	19 8a       	std	Y+17, r1	; 0x11





				if( ((counter - counterRef) % (totallength1) ) < (steplength1) && m1)  //check if it is in the right period of the loop to send high
    1cf0:	c8 01       	movw	r24, r16
    1cf2:	8e 19       	sub	r24, r14
    1cf4:	9f 09       	sbc	r25, r15
    1cf6:	62 e0       	ldi	r22, 0x02	; 2
    1cf8:	70 e0       	ldi	r23, 0x00	; 0
    1cfa:	0e 94 b9 21 	call	0x4372	; 0x4372 <__divmodhi4>
    1cfe:	9c 01       	movw	r18, r24
    1d00:	18 16       	cp	r1, r24
    1d02:	19 06       	cpc	r1, r25
    1d04:	4c f0       	brlt	.+18     	; 0x1d18 <main+0x1b9c>
    1d06:	81 14       	cp	r8, r1
    1d08:	91 04       	cpc	r9, r1
    1d0a:	31 f0       	breq	.+12     	; 0x1d18 <main+0x1b9c>
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 1; // set bit 0
    1d0c:	80 91 38 03 	lds	r24, 0x0338
    1d10:	81 60       	ori	r24, 0x01	; 1
    1d12:	80 93 38 03 	sts	0x0338, r24
    1d16:	08 c0       	rjmp	.+16     	; 0x1d28 <main+0x1bac>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 0; // set bit 0
    1d18:	80 91 38 03 	lds	r24, 0x0338
    1d1c:	8e 7f       	andi	r24, 0xFE	; 254
    1d1e:	80 93 38 03 	sts	0x0338, r24
				}

				if( ((counter - counterRef) % (totallength2) ) < (steplength2) && m2)
    1d22:	12 16       	cp	r1, r18
    1d24:	13 06       	cpc	r1, r19
    1d26:	4c f0       	brlt	.+18     	; 0x1d3a <main+0x1bbe>
    1d28:	c1 14       	cp	r12, r1
    1d2a:	d1 04       	cpc	r13, r1
    1d2c:	31 f0       	breq	.+12     	; 0x1d3a <main+0x1bbe>
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 1; // set bit 1
    1d2e:	80 91 38 03 	lds	r24, 0x0338
    1d32:	88 60       	ori	r24, 0x08	; 8
    1d34:	80 93 38 03 	sts	0x0338, r24
    1d38:	08 c0       	rjmp	.+16     	; 0x1d4a <main+0x1bce>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 0; // set bit 1
    1d3a:	80 91 38 03 	lds	r24, 0x0338
    1d3e:	87 7f       	andi	r24, 0xF7	; 247
    1d40:	80 93 38 03 	sts	0x0338, r24
				}

				if( ((counter - counterRef) % (totallength3) ) < (steplength3) && m3)
    1d44:	12 16       	cp	r1, r18
    1d46:	13 06       	cpc	r1, r19
    1d48:	3c f0       	brlt	.+14     	; 0x1d58 <main+0x1bdc>
    1d4a:	41 14       	cp	r4, r1
    1d4c:	51 04       	cpc	r5, r1
    1d4e:	21 f0       	breq	.+8      	; 0x1d58 <main+0x1bdc>
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 1; // set bit 1
    1d50:	80 91 38 03 	lds	r24, 0x0338
    1d54:	80 64       	ori	r24, 0x40	; 64
    1d56:	03 c0       	rjmp	.+6      	; 0x1d5e <main+0x1be2>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 0; // set bit 1
    1d58:	80 91 38 03 	lds	r24, 0x0338
    1d5c:	8f 7b       	andi	r24, 0xBF	; 191
    1d5e:	80 93 38 03 	sts	0x0338, r24
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 1; // set bit 1
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 0; // set bit 1
    1d62:	20 91 39 03 	lds	r18, 0x0339
    1d66:	2d 7f       	andi	r18, 0xFD	; 253
    1d68:	20 93 39 03 	sts	0x0339, r18
				}

				if( ((counter - counterRefFive) % (totallength5) ) < (steplength5) && m5)
    1d6c:	c8 01       	movw	r24, r16
    1d6e:	4f 85       	ldd	r20, Y+15	; 0x0f
    1d70:	58 89       	ldd	r21, Y+16	; 0x10
    1d72:	84 1b       	sub	r24, r20
    1d74:	95 0b       	sbc	r25, r21
    1d76:	62 e0       	ldi	r22, 0x02	; 2
    1d78:	70 e0       	ldi	r23, 0x00	; 0
    1d7a:	0e 94 b9 21 	call	0x4372	; 0x4372 <__divmodhi4>
    1d7e:	18 16       	cp	r1, r24
    1d80:	19 06       	cpc	r1, r25
    1d82:	44 f0       	brlt	.+16     	; 0x1d94 <main+0x1c18>
    1d84:	89 85       	ldd	r24, Y+9	; 0x09
    1d86:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d88:	89 2b       	or	r24, r25
    1d8a:	21 f0       	breq	.+8      	; 0x1d94 <main+0x1c18>
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 1; // set bit 1
    1d8c:	20 61       	ori	r18, 0x10	; 16
    1d8e:	20 93 39 03 	sts	0x0339, r18
    1d92:	05 c0       	rjmp	.+10     	; 0x1d9e <main+0x1c22>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 0; // set bit 1
    1d94:	80 91 39 03 	lds	r24, 0x0339
    1d98:	8f 7e       	andi	r24, 0xEF	; 239
    1d9a:	80 93 39 03 	sts	0x0339, r24
				}

				i2c_start(I2C1+I2C_WRITE);
    1d9e:	80 e4       	ldi	r24, 0x40	; 64
    1da0:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				i2c_write(0x2);									// write command byte
    1da4:	82 e0       	ldi	r24, 0x02	; 2
    1da6:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_write(u_motorByte0.motorByte0);                       // write first byte of output
    1daa:	80 91 38 03 	lds	r24, 0x0338
    1dae:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
       	 		i2c_write(u_motorByte1.motorByte1);                       // write second byte of output
    1db2:	80 91 39 03 	lds	r24, 0x0339
    1db6:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
       		 	i2c_stop();                            // set stop conditon = release bus
    1dba:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>

				i2c_start(I2C2+I2C_WRITE);
    1dbe:	82 e4       	ldi	r24, 0x42	; 66
    1dc0:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				i2c_write(0x2);
    1dc4:	82 e0       	ldi	r24, 0x02	; 2
    1dc6:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_write(u_outputByte0.outputByte0);
    1dca:	80 91 3a 03 	lds	r24, 0x033A
    1dce:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_write(u_outputByte1.outputByte1);
    1dd2:	80 91 3b 03 	lds	r24, 0x033B
    1dd6:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>

				counter ++;
    1dda:	0f 5f       	subi	r16, 0xFF	; 255
    1ddc:	1f 4f       	sbci	r17, 0xFF	; 255
    1dde:	81 e0       	ldi	r24, 0x01	; 1
    1de0:	90 e0       	ldi	r25, 0x00	; 0
    1de2:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>
		u_motorByte1.bits_in_motorByte1.m5Drop = 1;*/

		if(!OrangutanDigital::isInputHigh(IO_D1) && !OrangutanDigital::isInputHigh(IO_D2)){
			OrangutanLCD::gotoXY(7,0);
			OrangutanLCD::print("FIRST B");
			while(state != -1)
    1de6:	ef 89       	ldd	r30, Y+23	; 0x17
    1de8:	f8 8d       	ldd	r31, Y+24	; 0x18
    1dea:	ef 5f       	subi	r30, 0xFF	; 255
    1dec:	ff 4f       	sbci	r31, 0xFF	; 255
    1dee:	09 f0       	breq	.+2      	; 0x1df2 <main+0x1c76>
    1df0:	5d cb       	rjmp	.-2374   	; 0x14ac <main+0x1330>
				delay_ms(1);
   		 	}
		}


		if(OrangutanDigital::isInputHigh(IO_D1) && !OrangutanDigital::isInputHigh(IO_D2)){
    1df2:	81 e0       	ldi	r24, 0x01	; 1
    1df4:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1df8:	88 23       	and	r24, r24
    1dfa:	11 f4       	brne	.+4      	; 0x1e00 <main+0x1c84>
    1dfc:	0c 94 87 1b 	jmp	0x370e	; 0x370e <main+0x3592>
    1e00:	82 e0       	ldi	r24, 0x02	; 2
    1e02:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1e06:	88 23       	and	r24, r24
    1e08:	11 f0       	breq	.+4      	; 0x1e0e <main+0x1c92>
    1e0a:	0c 94 87 1b 	jmp	0x370e	; 0x370e <main+0x3592>
			OrangutanLCD::gotoXY(7,0);
    1e0e:	87 e0       	ldi	r24, 0x07	; 7
    1e10:	60 e0       	ldi	r22, 0x00	; 0
    1e12:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
			OrangutanLCD::print("SECOND B");
    1e16:	8b e1       	ldi	r24, 0x1B	; 27
    1e18:	93 e0       	ldi	r25, 0x03	; 3
    1e1a:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    1e1e:	66 24       	eor	r6, r6
    1e20:	77 24       	eor	r7, r7
    1e22:	b8 c4       	rjmp	.+2416   	; 0x2794 <main+0x2618>
			while(state != -1)
			{
				i2c_start(I2C3+I2C_WRITE);						// first start condition (write)
    1e24:	84 e4       	ldi	r24, 0x44	; 68
    1e26:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				i2c_write(0x0);								// write command byte
    1e2a:	80 e0       	ldi	r24, 0x00	; 0
    1e2c:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_start(I2C3+I2C_READ);						// second start condition (read)
    1e30:	85 e4       	ldi	r24, 0x45	; 69
    1e32:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				u_inputByte0.inputByte0 = i2c_readAck();				// read first byte and send Ack, requesting more
    1e36:	0e 94 2a 1c 	call	0x3854	; 0x3854 <_Z11i2c_readAckv>
    1e3a:	80 93 3c 03 	sts	0x033C, r24
   		     	u_inputByte1.inputByte1 = i2c_readNak();				// read second byte and send stop condition
    1e3e:	0e 94 34 1c 	call	0x3868	; 0x3868 <_Z11i2c_readNakv>
    1e42:	80 93 3d 03 	sts	0x033D, r24
  	 	     	i2c_stop();								// set stop conditon = release bus 		
    1e46:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>
				if(state != 0){
    1e4a:	4f 89       	ldd	r20, Y+23	; 0x17
    1e4c:	58 8d       	ldd	r21, Y+24	; 0x18
    1e4e:	45 2b       	or	r20, r21
    1e50:	89 f0       	breq	.+34     	; 0x1e74 <main+0x1cf8>
					OrangutanLCD::gotoXY(0,1);
    1e52:	80 e0       	ldi	r24, 0x00	; 0
    1e54:	61 e0       	ldi	r22, 0x01	; 1
    1e56:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("STATE ");
    1e5a:	89 ef       	ldi	r24, 0xF9	; 249
    1e5c:	92 e0       	ldi	r25, 0x02	; 2
    1e5e:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    1e62:	ef 89       	ldd	r30, Y+23	; 0x17
    1e64:	f8 8d       	ldd	r31, Y+24	; 0x18
    1e66:	bf 01       	movw	r22, r30
    1e68:	88 27       	eor	r24, r24
    1e6a:	77 fd       	sbrc	r23, 7
    1e6c:	80 95       	com	r24
    1e6e:	98 2f       	mov	r25, r24
    1e70:	0e 94 e6 1e 	call	0x3dcc	; 0x3dcc <_ZN12OrangutanLCD5printEl>
					OrangutanLCD::print(state);
				}

				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
    1e74:	a1 14       	cp	r10, r1
    1e76:	b1 04       	cpc	r11, r1
    1e78:	11 f0       	breq	.+4      	; 0x1e7e <main+0x1d02>
    1e7a:	0c 94 8a 1b 	jmp	0x3714	; 0x3714 <main+0x3598>
    1e7e:	80 e0       	ldi	r24, 0x00	; 0
    1e80:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1e84:	88 23       	and	r24, r24
    1e86:	99 f1       	breq	.+102    	; 0x1eee <main+0x1d72>
    1e88:	18 01       	movw	r2, r16
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
					if(counter - counterRefPush > 15){
    1e8a:	c8 01       	movw	r24, r16
    1e8c:	82 19       	sub	r24, r2
    1e8e:	93 09       	sbc	r25, r3
    1e90:	40 97       	sbiw	r24, 0x10	; 16
    1e92:	54 f0       	brlt	.+20     	; 0x1ea8 <main+0x1d2c>
						if(!OrangutanDigital::isInputHigh(IO_D0)){
    1e94:	80 e0       	ldi	r24, 0x00	; 0
    1e96:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1e9a:	88 23       	and	r24, r24
    1e9c:	11 f0       	breq	.+4      	; 0x1ea2 <main+0x1d26>
    1e9e:	0c 94 92 1b 	jmp	0x3724	; 0x3724 <main+0x35a8>
    1ea2:	1c 87       	std	Y+12, r17	; 0x0c
    1ea4:	0b 87       	std	Y+11, r16	; 0x0b
    1ea6:	0c c0       	rjmp	.+24     	; 0x1ec0 <main+0x1d44>
							counterRefRel = counter;
							stateButton = 2;
						}
					}
					else if(!OrangutanDigital::isInputHigh(IO_D0)){
    1ea8:	80 e0       	ldi	r24, 0x00	; 0
    1eaa:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1eae:	88 23       	and	r24, r24
    1eb0:	11 f0       	breq	.+4      	; 0x1eb6 <main+0x1d3a>
    1eb2:	0c 94 92 1b 	jmp	0x3724	; 0x3724 <main+0x35a8>
    1eb6:	15 c0       	rjmp	.+42     	; 0x1ee2 <main+0x1d66>
						stateButton = 0;
					}
				}
				if(stateButton == 2){
    1eb8:	f2 e0       	ldi	r31, 0x02	; 2
    1eba:	af 16       	cp	r10, r31
    1ebc:	b1 04       	cpc	r11, r1
    1ebe:	b9 f4       	brne	.+46     	; 0x1eee <main+0x1d72>
					if(OrangutanDigital::isInputHigh(IO_D0)){
    1ec0:	80 e0       	ldi	r24, 0x00	; 0
    1ec2:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    1ec6:	88 23       	and	r24, r24
    1ec8:	19 f0       	breq	.+6      	; 0x1ed0 <main+0x1d54>
    1eca:	18 01       	movw	r2, r16
    1ecc:	0c 94 92 1b 	jmp	0x3724	; 0x3724 <main+0x35a8>
						stateButton = 1;
						counterRefPush = counter;
					}
					else if(counter - counterRefRel > 15){
    1ed0:	c8 01       	movw	r24, r16
    1ed2:	2b 85       	ldd	r18, Y+11	; 0x0b
    1ed4:	3c 85       	ldd	r19, Y+12	; 0x0c
    1ed6:	82 1b       	sub	r24, r18
    1ed8:	93 0b       	sbc	r25, r19
    1eda:	40 97       	sbiw	r24, 0x10	; 16
    1edc:	2c f0       	brlt	.+10     	; 0x1ee8 <main+0x1d6c>
    1ede:	18 86       	std	Y+8, r1	; 0x08
    1ee0:	1f 82       	std	Y+7, r1	; 0x07
    1ee2:	aa 24       	eor	r10, r10
    1ee4:	bb 24       	eor	r11, r11
    1ee6:	03 c0       	rjmp	.+6      	; 0x1eee <main+0x1d72>
    1ee8:	42 e0       	ldi	r20, 0x02	; 2
    1eea:	a4 2e       	mov	r10, r20
    1eec:	b1 2c       	mov	r11, r1
					}
				}

				//state conversions
	
				if(state == 0 && button == 0){
    1eee:	4f 89       	ldd	r20, Y+23	; 0x17
    1ef0:	58 8d       	ldd	r21, Y+24	; 0x18
    1ef2:	45 2b       	or	r20, r21
    1ef4:	59 f4       	brne	.+22     	; 0x1f0c <main+0x1d90>
    1ef6:	8f 81       	ldd	r24, Y+7	; 0x07
    1ef8:	98 85       	ldd	r25, Y+8	; 0x08
    1efa:	89 2b       	or	r24, r25
    1efc:	09 f0       	breq	.+2      	; 0x1f00 <main+0x1d84>
    1efe:	52 c0       	rjmp	.+164    	; 0x1fa4 <main+0x1e28>
    1f00:	78 01       	movw	r14, r16
    1f02:	e1 e0       	ldi	r30, 0x01	; 1
    1f04:	f0 e0       	ldi	r31, 0x00	; 0
    1f06:	f8 87       	std	Y+8, r31	; 0x08
    1f08:	ef 83       	std	Y+7, r30	; 0x07
    1f0a:	05 c0       	rjmp	.+10     	; 0x1f16 <main+0x1d9a>
					button = 1;
					state = 1;
					counterRef = counter;
				}
				if(state == 1 && counter - counterRef > totallength1*m1LoadPlate/*&& u_inputByte0.bits_in_inputByte0.plate == 0*/){
    1f0c:	2f 89       	ldd	r18, Y+23	; 0x17
    1f0e:	38 8d       	ldd	r19, Y+24	; 0x18
    1f10:	21 30       	cpi	r18, 0x01	; 1
    1f12:	31 05       	cpc	r19, r1
    1f14:	49 f4       	brne	.+18     	; 0x1f28 <main+0x1dac>
    1f16:	c8 01       	movw	r24, r16
    1f18:	8e 19       	sub	r24, r14
    1f1a:	9f 09       	sbc	r25, r15
    1f1c:	81 5a       	subi	r24, 0xA1	; 161
    1f1e:	9f 40       	sbci	r25, 0x0F	; 15
    1f20:	0c f4       	brge	.+2      	; 0x1f24 <main+0x1da8>
    1f22:	51 c0       	rjmp	.+162    	; 0x1fc6 <main+0x1e4a>
    1f24:	78 01       	movw	r14, r16
    1f26:	05 c0       	rjmp	.+10     	; 0x1f32 <main+0x1db6>
						state = 2;
					counterRef = counter;
				}
				if(state == 2 && counter - counterRef > pWait){
    1f28:	4f 89       	ldd	r20, Y+23	; 0x17
    1f2a:	58 8d       	ldd	r21, Y+24	; 0x18
    1f2c:	42 30       	cpi	r20, 0x02	; 2
    1f2e:	51 05       	cpc	r21, r1
    1f30:	89 f4       	brne	.+34     	; 0x1f54 <main+0x1dd8>
    1f32:	c8 01       	movw	r24, r16
    1f34:	8e 19       	sub	r24, r14
    1f36:	9f 09       	sbc	r25, r15
    1f38:	85 36       	cpi	r24, 0x65	; 101
    1f3a:	91 05       	cpc	r25, r1
    1f3c:	2c f4       	brge	.+10     	; 0x1f48 <main+0x1dcc>
    1f3e:	82 e0       	ldi	r24, 0x02	; 2
    1f40:	90 e0       	ldi	r25, 0x00	; 0
    1f42:	98 8f       	std	Y+24, r25	; 0x18
    1f44:	8f 8b       	std	Y+23, r24	; 0x17
    1f46:	4f c0       	rjmp	.+158    	; 0x1fe6 <main+0x1e6a>
    1f48:	78 01       	movw	r14, r16
    1f4a:	e3 e0       	ldi	r30, 0x03	; 3
    1f4c:	f0 e0       	ldi	r31, 0x00	; 0
    1f4e:	f8 8f       	std	Y+24, r31	; 0x18
    1f50:	ef 8b       	std	Y+23, r30	; 0x17
    1f52:	05 c0       	rjmp	.+10     	; 0x1f5e <main+0x1de2>
					state = 3;
					counterRef = counter;
				}
				if(state == 3 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
    1f54:	2f 89       	ldd	r18, Y+23	; 0x17
    1f56:	38 8d       	ldd	r19, Y+24	; 0x18
    1f58:	23 30       	cpi	r18, 0x03	; 3
    1f5a:	31 05       	cpc	r19, r1
    1f5c:	41 f4       	brne	.+16     	; 0x1f6e <main+0x1df2>
    1f5e:	c8 01       	movw	r24, r16
    1f60:	8e 19       	sub	r24, r14
    1f62:	9f 09       	sbc	r25, r15
    1f64:	81 5a       	subi	r24, 0xA1	; 161
    1f66:	9f 40       	sbci	r25, 0x0F	; 15
    1f68:	14 f0       	brlt	.+4      	; 0x1f6e <main+0x1df2>
    1f6a:	78 01       	movw	r14, r16
    1f6c:	05 c0       	rjmp	.+10     	; 0x1f78 <main+0x1dfc>
					state = 4;
					counterRef = counter;
				}
				if(state == 4 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
    1f6e:	4f 89       	ldd	r20, Y+23	; 0x17
    1f70:	58 8d       	ldd	r21, Y+24	; 0x18
    1f72:	44 30       	cpi	r20, 0x04	; 4
    1f74:	51 05       	cpc	r21, r1
    1f76:	49 f4       	brne	.+18     	; 0x1f8a <main+0x1e0e>
    1f78:	c8 01       	movw	r24, r16
    1f7a:	8e 19       	sub	r24, r14
    1f7c:	9f 09       	sbc	r25, r15
    1f7e:	89 5e       	subi	r24, 0xE9	; 233
    1f80:	93 40       	sbci	r25, 0x03	; 3
    1f82:	0c f4       	brge	.+2      	; 0x1f86 <main+0x1e0a>
    1f84:	4b c0       	rjmp	.+150    	; 0x201c <main+0x1ea0>
    1f86:	78 01       	movw	r14, r16
    1f88:	04 c0       	rjmp	.+8      	; 0x1f92 <main+0x1e16>
					state = 5;
					counterRef = counter;
				}
				if(state == 5 && counter - counterRef > pWait){
    1f8a:	8f 89       	ldd	r24, Y+23	; 0x17
    1f8c:	98 8d       	ldd	r25, Y+24	; 0x18
    1f8e:	05 97       	sbiw	r24, 0x05	; 5
    1f90:	49 f4       	brne	.+18     	; 0x1fa4 <main+0x1e28>
    1f92:	c8 01       	movw	r24, r16
    1f94:	8e 19       	sub	r24, r14
    1f96:	9f 09       	sbc	r25, r15
    1f98:	85 36       	cpi	r24, 0x65	; 101
    1f9a:	91 05       	cpc	r25, r1
    1f9c:	0c f4       	brge	.+2      	; 0x1fa0 <main+0x1e24>
    1f9e:	4f c0       	rjmp	.+158    	; 0x203e <main+0x1ec2>
    1fa0:	78 01       	movw	r14, r16
    1fa2:	04 c0       	rjmp	.+8      	; 0x1fac <main+0x1e30>
						state = 6;
					counterRef = counter;
				}
				if(state == 6 && counter - counterRef > totallength2*m2Brush2StepWhole /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush1 == 0*/){
    1fa4:	ef 89       	ldd	r30, Y+23	; 0x17
    1fa6:	f8 8d       	ldd	r31, Y+24	; 0x18
    1fa8:	36 97       	sbiw	r30, 0x06	; 6
    1faa:	89 f4       	brne	.+34     	; 0x1fce <main+0x1e52>
    1fac:	c8 01       	movw	r24, r16
    1fae:	8e 19       	sub	r24, r14
    1fb0:	9f 09       	sbc	r25, r15
    1fb2:	81 5a       	subi	r24, 0xA1	; 161
    1fb4:	9f 40       	sbci	r25, 0x0F	; 15
    1fb6:	0c f4       	brge	.+2      	; 0x1fba <main+0x1e3e>
    1fb8:	54 c0       	rjmp	.+168    	; 0x2062 <main+0x1ee6>
    1fba:	78 01       	movw	r14, r16
    1fbc:	2f e0       	ldi	r18, 0x0F	; 15
    1fbe:	30 e0       	ldi	r19, 0x00	; 0
    1fc0:	38 8f       	std	Y+24, r19	; 0x18
    1fc2:	2f 8b       	std	Y+23, r18	; 0x17
    1fc4:	08 c0       	rjmp	.+16     	; 0x1fd6 <main+0x1e5a>
    1fc6:	41 e0       	ldi	r20, 0x01	; 1
    1fc8:	50 e0       	ldi	r21, 0x00	; 0
    1fca:	58 8f       	std	Y+24, r21	; 0x18
    1fcc:	4f 8b       	std	Y+23, r20	; 0x17
					state = 15;
					counterRef = counter;
				}
				if(state == 15 && counter - counterRef > mWait){
    1fce:	8f 89       	ldd	r24, Y+23	; 0x17
    1fd0:	98 8d       	ldd	r25, Y+24	; 0x18
    1fd2:	0f 97       	sbiw	r24, 0x0f	; 15
    1fd4:	41 f4       	brne	.+16     	; 0x1fe6 <main+0x1e6a>
    1fd6:	c8 01       	movw	r24, r16
    1fd8:	8e 19       	sub	r24, r14
    1fda:	9f 09       	sbc	r25, r15
    1fdc:	85 36       	cpi	r24, 0x65	; 101
    1fde:	91 05       	cpc	r25, r1
    1fe0:	14 f0       	brlt	.+4      	; 0x1fe6 <main+0x1e6a>
    1fe2:	78 01       	movw	r14, r16
    1fe4:	04 c0       	rjmp	.+8      	; 0x1fee <main+0x1e72>
					state = 16;
					counterRef = counter;
				}
				if(state == 16 && counter - counterRef > pWait){
    1fe6:	ef 89       	ldd	r30, Y+23	; 0x17
    1fe8:	f8 8d       	ldd	r31, Y+24	; 0x18
    1fea:	70 97       	sbiw	r30, 0x10	; 16
    1fec:	49 f4       	brne	.+18     	; 0x2000 <main+0x1e84>
    1fee:	c8 01       	movw	r24, r16
    1ff0:	8e 19       	sub	r24, r14
    1ff2:	9f 09       	sbc	r25, r15
    1ff4:	85 36       	cpi	r24, 0x65	; 101
    1ff6:	91 05       	cpc	r25, r1
    1ff8:	0c f4       	brge	.+2      	; 0x1ffc <main+0x1e80>
    1ffa:	51 c0       	rjmp	.+162    	; 0x209e <main+0x1f22>
    1ffc:	78 01       	movw	r14, r16
    1ffe:	05 c0       	rjmp	.+10     	; 0x200a <main+0x1e8e>
					state = 17;
					counterRef = counter;
				}
				if(state == 17 && counter - counterRef > totallength2*m2HalfPlate){
    2000:	2f 89       	ldd	r18, Y+23	; 0x17
    2002:	38 8d       	ldd	r19, Y+24	; 0x18
    2004:	21 31       	cpi	r18, 0x11	; 17
    2006:	31 05       	cpc	r19, r1
    2008:	69 f4       	brne	.+26     	; 0x2024 <main+0x1ea8>
    200a:	c8 01       	movw	r24, r16
    200c:	8e 19       	sub	r24, r14
    200e:	9f 09       	sbc	r25, r15
    2010:	81 5a       	subi	r24, 0xA1	; 161
    2012:	9f 40       	sbci	r25, 0x0F	; 15
    2014:	0c f4       	brge	.+2      	; 0x2018 <main+0x1e9c>
    2016:	55 c0       	rjmp	.+170    	; 0x20c2 <main+0x1f46>
    2018:	78 01       	movw	r14, r16
    201a:	08 c0       	rjmp	.+16     	; 0x202c <main+0x1eb0>
    201c:	44 e0       	ldi	r20, 0x04	; 4
    201e:	50 e0       	ldi	r21, 0x00	; 0
    2020:	58 8f       	std	Y+24, r21	; 0x18
    2022:	4f 8b       	std	Y+23, r20	; 0x17
					state = 18;
					counterRef = counter;
				}
				if(state == 18 && counter - counterRef > pWait){
    2024:	8f 89       	ldd	r24, Y+23	; 0x17
    2026:	98 8d       	ldd	r25, Y+24	; 0x18
    2028:	42 97       	sbiw	r24, 0x12	; 18
    202a:	69 f4       	brne	.+26     	; 0x2046 <main+0x1eca>
    202c:	c8 01       	movw	r24, r16
    202e:	8e 19       	sub	r24, r14
    2030:	9f 09       	sbc	r25, r15
    2032:	85 36       	cpi	r24, 0x65	; 101
    2034:	91 05       	cpc	r25, r1
    2036:	0c f4       	brge	.+2      	; 0x203a <main+0x1ebe>
    2038:	55 c0       	rjmp	.+170    	; 0x20e4 <main+0x1f68>
    203a:	78 01       	movw	r14, r16
    203c:	09 c0       	rjmp	.+18     	; 0x2050 <main+0x1ed4>
    203e:	e5 e0       	ldi	r30, 0x05	; 5
    2040:	f0 e0       	ldi	r31, 0x00	; 0
    2042:	f8 8f       	std	Y+24, r31	; 0x18
    2044:	ef 8b       	std	Y+23, r30	; 0x17
					state = 19;
					counterRef = counter;
				}
				if(state == 19 && counter - counterRef > totallength2*m2HalfPlate /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush2 == 0*/){
    2046:	2f 89       	ldd	r18, Y+23	; 0x17
    2048:	38 8d       	ldd	r19, Y+24	; 0x18
    204a:	23 31       	cpi	r18, 0x13	; 19
    204c:	31 05       	cpc	r19, r1
    204e:	69 f4       	brne	.+26     	; 0x206a <main+0x1eee>
    2050:	c8 01       	movw	r24, r16
    2052:	8e 19       	sub	r24, r14
    2054:	9f 09       	sbc	r25, r15
    2056:	81 5a       	subi	r24, 0xA1	; 161
    2058:	9f 40       	sbci	r25, 0x0F	; 15
    205a:	0c f4       	brge	.+2      	; 0x205e <main+0x1ee2>
    205c:	55 c0       	rjmp	.+170    	; 0x2108 <main+0x1f8c>
    205e:	78 01       	movw	r14, r16
    2060:	08 c0       	rjmp	.+16     	; 0x2072 <main+0x1ef6>
    2062:	46 e0       	ldi	r20, 0x06	; 6
    2064:	50 e0       	ldi	r21, 0x00	; 0
    2066:	58 8f       	std	Y+24, r21	; 0x18
    2068:	4f 8b       	std	Y+23, r20	; 0x17
					state = 20;
					counterRef = counter;
				}
				if(state == 20 && counter - counterRef > pWait){
    206a:	8f 89       	ldd	r24, Y+23	; 0x17
    206c:	98 8d       	ldd	r25, Y+24	; 0x18
    206e:	44 97       	sbiw	r24, 0x14	; 20
    2070:	49 f4       	brne	.+18     	; 0x2084 <main+0x1f08>
    2072:	c8 01       	movw	r24, r16
    2074:	8e 19       	sub	r24, r14
    2076:	9f 09       	sbc	r25, r15
    2078:	85 36       	cpi	r24, 0x65	; 101
    207a:	91 05       	cpc	r25, r1
    207c:	0c f4       	brge	.+2      	; 0x2080 <main+0x1f04>
    207e:	53 c0       	rjmp	.+166    	; 0x2126 <main+0x1faa>
    2080:	78 01       	movw	r14, r16
    2082:	04 c0       	rjmp	.+8      	; 0x208c <main+0x1f10>
					state = 21;
					counterRef = counter;
				}
				if(state == 21 && counter - counterRef > totallength2*m2HalfPlate){
    2084:	ef 89       	ldd	r30, Y+23	; 0x17
    2086:	f8 8d       	ldd	r31, Y+24	; 0x18
    2088:	75 97       	sbiw	r30, 0x15	; 21
    208a:	69 f4       	brne	.+26     	; 0x20a6 <main+0x1f2a>
    208c:	c8 01       	movw	r24, r16
    208e:	8e 19       	sub	r24, r14
    2090:	9f 09       	sbc	r25, r15
    2092:	81 5a       	subi	r24, 0xA1	; 161
    2094:	9f 40       	sbci	r25, 0x0F	; 15
    2096:	0c f4       	brge	.+2      	; 0x209a <main+0x1f1e>
    2098:	59 c0       	rjmp	.+178    	; 0x214c <main+0x1fd0>
    209a:	78 01       	movw	r14, r16
    209c:	09 c0       	rjmp	.+18     	; 0x20b0 <main+0x1f34>
    209e:	20 e1       	ldi	r18, 0x10	; 16
    20a0:	30 e0       	ldi	r19, 0x00	; 0
    20a2:	38 8f       	std	Y+24, r19	; 0x18
    20a4:	2f 8b       	std	Y+23, r18	; 0x17
					state = 22;
					counterRef = counter;
				}
				if(state == 22 && counter - counterRef > pWait){
    20a6:	4f 89       	ldd	r20, Y+23	; 0x17
    20a8:	58 8d       	ldd	r21, Y+24	; 0x18
    20aa:	46 31       	cpi	r20, 0x16	; 22
    20ac:	51 05       	cpc	r21, r1
    20ae:	69 f4       	brne	.+26     	; 0x20ca <main+0x1f4e>
    20b0:	c8 01       	movw	r24, r16
    20b2:	8e 19       	sub	r24, r14
    20b4:	9f 09       	sbc	r25, r15
    20b6:	85 36       	cpi	r24, 0x65	; 101
    20b8:	91 05       	cpc	r25, r1
    20ba:	0c f4       	brge	.+2      	; 0x20be <main+0x1f42>
    20bc:	5a c0       	rjmp	.+180    	; 0x2172 <main+0x1ff6>
    20be:	78 01       	movw	r14, r16
    20c0:	08 c0       	rjmp	.+16     	; 0x20d2 <main+0x1f56>
    20c2:	81 e1       	ldi	r24, 0x11	; 17
    20c4:	90 e0       	ldi	r25, 0x00	; 0
    20c6:	98 8f       	std	Y+24, r25	; 0x18
    20c8:	8f 8b       	std	Y+23, r24	; 0x17
					state = 23;
					counterRef = counter;
				}
				if(state == 23 && counter - counterRef > totallength2*m2Dry1Step /*&& u_inputByte0.bits_in_inputByte0.fixtureDry1 == 0*/){
    20ca:	ef 89       	ldd	r30, Y+23	; 0x17
    20cc:	f8 8d       	ldd	r31, Y+24	; 0x18
    20ce:	77 97       	sbiw	r30, 0x17	; 23
    20d0:	69 f4       	brne	.+26     	; 0x20ec <main+0x1f70>
    20d2:	c8 01       	movw	r24, r16
    20d4:	8e 19       	sub	r24, r14
    20d6:	9f 09       	sbc	r25, r15
    20d8:	81 5a       	subi	r24, 0xA1	; 161
    20da:	9f 40       	sbci	r25, 0x0F	; 15
    20dc:	0c f4       	brge	.+2      	; 0x20e0 <main+0x1f64>
    20de:	5a c0       	rjmp	.+180    	; 0x2194 <main+0x2018>
    20e0:	78 01       	movw	r14, r16
    20e2:	09 c0       	rjmp	.+18     	; 0x20f6 <main+0x1f7a>
    20e4:	22 e1       	ldi	r18, 0x12	; 18
    20e6:	30 e0       	ldi	r19, 0x00	; 0
    20e8:	38 8f       	std	Y+24, r19	; 0x18
    20ea:	2f 8b       	std	Y+23, r18	; 0x17
					state = 24;
					counterRef = counter;
				}
				if(state == 24 && counter - counterRef > kWait){
    20ec:	4f 89       	ldd	r20, Y+23	; 0x17
    20ee:	58 8d       	ldd	r21, Y+24	; 0x18
    20f0:	48 31       	cpi	r20, 0x18	; 24
    20f2:	51 05       	cpc	r21, r1
    20f4:	69 f4       	brne	.+26     	; 0x2110 <main+0x1f94>
    20f6:	c8 01       	movw	r24, r16
    20f8:	8e 19       	sub	r24, r14
    20fa:	9f 09       	sbc	r25, r15
    20fc:	85 36       	cpi	r24, 0x65	; 101
    20fe:	91 05       	cpc	r25, r1
    2100:	0c f4       	brge	.+2      	; 0x2104 <main+0x1f88>
    2102:	58 c0       	rjmp	.+176    	; 0x21b4 <main+0x2038>
    2104:	78 01       	movw	r14, r16
    2106:	08 c0       	rjmp	.+16     	; 0x2118 <main+0x1f9c>
    2108:	83 e1       	ldi	r24, 0x13	; 19
    210a:	90 e0       	ldi	r25, 0x00	; 0
    210c:	98 8f       	std	Y+24, r25	; 0x18
    210e:	8f 8b       	std	Y+23, r24	; 0x17
					state = 25;
					counterRef = counter;
				}
				if(state == 25 && counter - counterRef > totallength2*m2WholePlate){
    2110:	ef 89       	ldd	r30, Y+23	; 0x17
    2112:	f8 8d       	ldd	r31, Y+24	; 0x18
    2114:	79 97       	sbiw	r30, 0x19	; 25
    2116:	59 f4       	brne	.+22     	; 0x212e <main+0x1fb2>
    2118:	c8 01       	movw	r24, r16
    211a:	8e 19       	sub	r24, r14
    211c:	9f 09       	sbc	r25, r15
    211e:	81 5a       	subi	r24, 0xA1	; 161
    2120:	9f 40       	sbci	r25, 0x0F	; 15
    2122:	54 f4       	brge	.+20     	; 0x2138 <main+0x1fbc>
    2124:	58 c0       	rjmp	.+176    	; 0x21d6 <main+0x205a>
    2126:	24 e1       	ldi	r18, 0x14	; 20
    2128:	30 e0       	ldi	r19, 0x00	; 0
    212a:	38 8f       	std	Y+24, r19	; 0x18
    212c:	2f 8b       	std	Y+23, r18	; 0x17
					state = 26;
					counterRef26 = counter;
				}
				if(state == 26 && counter - counterRef > totallength2*m2Dry2Step /*&& u_inputByte0.bits_in_inputByte0.fixtureDry2 == 0*/){
    212e:	4f 89       	ldd	r20, Y+23	; 0x17
    2130:	58 8d       	ldd	r21, Y+24	; 0x18
    2132:	4a 31       	cpi	r20, 0x1A	; 26
    2134:	51 05       	cpc	r21, r1
    2136:	71 f4       	brne	.+28     	; 0x2154 <main+0x1fd8>
    2138:	c8 01       	movw	r24, r16
    213a:	8e 19       	sub	r24, r14
    213c:	9f 09       	sbc	r25, r15
    213e:	81 5a       	subi	r24, 0xA1	; 161
    2140:	9f 40       	sbci	r25, 0x0F	; 15
    2142:	0c f4       	brge	.+2      	; 0x2146 <main+0x1fca>
    2144:	5a c0       	rjmp	.+180    	; 0x21fa <main+0x207e>
    2146:	18 8b       	std	Y+16, r17	; 0x10
    2148:	0f 87       	std	Y+15, r16	; 0x0f
    214a:	08 c0       	rjmp	.+16     	; 0x215c <main+0x1fe0>
    214c:	85 e1       	ldi	r24, 0x15	; 21
    214e:	90 e0       	ldi	r25, 0x00	; 0
    2150:	98 8f       	std	Y+24, r25	; 0x18
    2152:	8f 8b       	std	Y+23, r24	; 0x17
					state = 27;
					counterRefFive = counter;
				}
				if(state == 27 && counter - counterRefFive > mWait){
    2154:	ef 89       	ldd	r30, Y+23	; 0x17
    2156:	f8 8d       	ldd	r31, Y+24	; 0x18
    2158:	7b 97       	sbiw	r30, 0x1b	; 27
    215a:	79 f4       	brne	.+30     	; 0x217a <main+0x1ffe>
    215c:	c8 01       	movw	r24, r16
    215e:	2f 85       	ldd	r18, Y+15	; 0x0f
    2160:	38 89       	ldd	r19, Y+16	; 0x10
    2162:	82 1b       	sub	r24, r18
    2164:	93 0b       	sbc	r25, r19
    2166:	85 36       	cpi	r24, 0x65	; 101
    2168:	91 05       	cpc	r25, r1
    216a:	0c f4       	brge	.+2      	; 0x216e <main+0x1ff2>
    216c:	57 c0       	rjmp	.+174    	; 0x221c <main+0x20a0>
    216e:	78 01       	movw	r14, r16
    2170:	08 c0       	rjmp	.+16     	; 0x2182 <main+0x2006>
    2172:	46 e1       	ldi	r20, 0x16	; 22
    2174:	50 e0       	ldi	r21, 0x00	; 0
    2176:	58 8f       	std	Y+24, r21	; 0x18
    2178:	4f 8b       	std	Y+23, r20	; 0x17
					state = 28;
					counterRef = counter;
				}
				if(state == 28 && counter - counterRef > pWait){
    217a:	8f 89       	ldd	r24, Y+23	; 0x17
    217c:	98 8d       	ldd	r25, Y+24	; 0x18
    217e:	4c 97       	sbiw	r24, 0x1c	; 28
    2180:	69 f4       	brne	.+26     	; 0x219c <main+0x2020>
    2182:	c8 01       	movw	r24, r16
    2184:	8e 19       	sub	r24, r14
    2186:	9f 09       	sbc	r25, r15
    2188:	85 36       	cpi	r24, 0x65	; 101
    218a:	91 05       	cpc	r25, r1
    218c:	0c f4       	brge	.+2      	; 0x2190 <main+0x2014>
    218e:	58 c0       	rjmp	.+176    	; 0x2240 <main+0x20c4>
    2190:	78 01       	movw	r14, r16
    2192:	09 c0       	rjmp	.+18     	; 0x21a6 <main+0x202a>
    2194:	e7 e1       	ldi	r30, 0x17	; 23
    2196:	f0 e0       	ldi	r31, 0x00	; 0
    2198:	f8 8f       	std	Y+24, r31	; 0x18
    219a:	ef 8b       	std	Y+23, r30	; 0x17
					state = 29;
					counterRef = counter;
				}
				if(state == 29 && counter - counterRef > totallength2*m2WholePlate){
    219c:	2f 89       	ldd	r18, Y+23	; 0x17
    219e:	38 8d       	ldd	r19, Y+24	; 0x18
    21a0:	2d 31       	cpi	r18, 0x1D	; 29
    21a2:	31 05       	cpc	r19, r1
    21a4:	59 f4       	brne	.+22     	; 0x21bc <main+0x2040>
    21a6:	c8 01       	movw	r24, r16
    21a8:	8e 19       	sub	r24, r14
    21aa:	9f 09       	sbc	r25, r15
    21ac:	81 5a       	subi	r24, 0xA1	; 161
    21ae:	9f 40       	sbci	r25, 0x0F	; 15
    21b0:	4c f4       	brge	.+18     	; 0x21c4 <main+0x2048>
    21b2:	57 c0       	rjmp	.+174    	; 0x2262 <main+0x20e6>
    21b4:	48 e1       	ldi	r20, 0x18	; 24
    21b6:	50 e0       	ldi	r21, 0x00	; 0
    21b8:	58 8f       	std	Y+24, r21	; 0x18
    21ba:	4f 8b       	std	Y+23, r20	; 0x17
					state = 30;
					counterRef30 = counter;
				}
				if(state == 30 && counter - counterRef > totallength2*m2LoadBack /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
    21bc:	8f 89       	ldd	r24, Y+23	; 0x17
    21be:	98 8d       	ldd	r25, Y+24	; 0x18
    21c0:	4e 97       	sbiw	r24, 0x1e	; 30
    21c2:	69 f4       	brne	.+26     	; 0x21de <main+0x2062>
    21c4:	c8 01       	movw	r24, r16
    21c6:	8e 19       	sub	r24, r14
    21c8:	9f 09       	sbc	r25, r15
    21ca:	81 5a       	subi	r24, 0xA1	; 161
    21cc:	9f 40       	sbci	r25, 0x0F	; 15
    21ce:	0c f4       	brge	.+2      	; 0x21d2 <main+0x2056>
    21d0:	5b c0       	rjmp	.+182    	; 0x2288 <main+0x210c>
    21d2:	78 01       	movw	r14, r16
    21d4:	09 c0       	rjmp	.+18     	; 0x21e8 <main+0x206c>
    21d6:	29 e1       	ldi	r18, 0x19	; 25
    21d8:	30 e0       	ldi	r19, 0x00	; 0
    21da:	38 8f       	std	Y+24, r19	; 0x18
    21dc:	2f 8b       	std	Y+23, r18	; 0x17
					state = 31;
					counterRef = counter;
				}
					if(state == 31 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
    21de:	4f 89       	ldd	r20, Y+23	; 0x17
    21e0:	58 8d       	ldd	r21, Y+24	; 0x18
    21e2:	4f 31       	cpi	r20, 0x1F	; 31
    21e4:	51 05       	cpc	r21, r1
    21e6:	69 f4       	brne	.+26     	; 0x2202 <main+0x2086>
    21e8:	c8 01       	movw	r24, r16
    21ea:	8e 19       	sub	r24, r14
    21ec:	9f 09       	sbc	r25, r15
    21ee:	89 5e       	subi	r24, 0xE9	; 233
    21f0:	93 40       	sbci	r25, 0x03	; 3
    21f2:	0c f4       	brge	.+2      	; 0x21f6 <main+0x207a>
    21f4:	7f c0       	rjmp	.+254    	; 0x22f4 <main+0x2178>
    21f6:	78 01       	movw	r14, r16
    21f8:	08 c0       	rjmp	.+16     	; 0x220a <main+0x208e>
    21fa:	8a e1       	ldi	r24, 0x1A	; 26
    21fc:	90 e0       	ldi	r25, 0x00	; 0
    21fe:	98 8f       	std	Y+24, r25	; 0x18
    2200:	8f 8b       	std	Y+23, r24	; 0x17
					state = 32;
					counterRef = counter;
				}
				if(state == 32 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureHome == 0*/){
    2202:	ef 89       	ldd	r30, Y+23	; 0x17
    2204:	f8 8d       	ldd	r31, Y+24	; 0x18
    2206:	b0 97       	sbiw	r30, 0x20	; 32
    2208:	69 f4       	brne	.+26     	; 0x2224 <main+0x20a8>
    220a:	c8 01       	movw	r24, r16
    220c:	8e 19       	sub	r24, r14
    220e:	9f 09       	sbc	r25, r15
    2210:	81 5a       	subi	r24, 0xA1	; 161
    2212:	9f 40       	sbci	r25, 0x0F	; 15
    2214:	0c f4       	brge	.+2      	; 0x2218 <main+0x209c>
    2216:	97 c0       	rjmp	.+302    	; 0x2346 <main+0x21ca>
    2218:	78 01       	movw	r14, r16
    221a:	09 c0       	rjmp	.+18     	; 0x222e <main+0x20b2>
    221c:	2b e1       	ldi	r18, 0x1B	; 27
    221e:	30 e0       	ldi	r19, 0x00	; 0
    2220:	38 8f       	std	Y+24, r19	; 0x18
    2222:	2f 8b       	std	Y+23, r18	; 0x17
					state = 33;
					counterRef = counter;
				}
				if(state == 33 && counter - counterRef > pWait){
    2224:	4f 89       	ldd	r20, Y+23	; 0x17
    2226:	58 8d       	ldd	r21, Y+24	; 0x18
    2228:	41 32       	cpi	r20, 0x21	; 33
    222a:	51 05       	cpc	r21, r1
    222c:	69 f4       	brne	.+26     	; 0x2248 <main+0x20cc>
    222e:	c8 01       	movw	r24, r16
    2230:	8e 19       	sub	r24, r14
    2232:	9f 09       	sbc	r25, r15
    2234:	85 36       	cpi	r24, 0x65	; 101
    2236:	91 05       	cpc	r25, r1
    2238:	0c f4       	brge	.+2      	; 0x223c <main+0x20c0>
    223a:	9d c0       	rjmp	.+314    	; 0x2376 <main+0x21fa>
    223c:	78 01       	movw	r14, r16
    223e:	08 c0       	rjmp	.+16     	; 0x2250 <main+0x20d4>
    2240:	8c e1       	ldi	r24, 0x1C	; 28
    2242:	90 e0       	ldi	r25, 0x00	; 0
    2244:	98 8f       	std	Y+24, r25	; 0x18
    2246:	8f 8b       	std	Y+23, r24	; 0x17
					state = 34;
					counterRef = counter;
				}
				if(state == 34 && counter - counterRef > totallength1*m1LoadPlate){
    2248:	ef 89       	ldd	r30, Y+23	; 0x17
    224a:	f8 8d       	ldd	r31, Y+24	; 0x18
    224c:	b2 97       	sbiw	r30, 0x22	; 34
    224e:	69 f4       	brne	.+26     	; 0x226a <main+0x20ee>
    2250:	c8 01       	movw	r24, r16
    2252:	8e 19       	sub	r24, r14
    2254:	9f 09       	sbc	r25, r15
    2256:	81 5a       	subi	r24, 0xA1	; 161
    2258:	9f 40       	sbci	r25, 0x0F	; 15
    225a:	0c f4       	brge	.+2      	; 0x225e <main+0x20e2>
    225c:	9d c0       	rjmp	.+314    	; 0x2398 <main+0x221c>
    225e:	78 01       	movw	r14, r16
    2260:	09 c0       	rjmp	.+18     	; 0x2274 <main+0x20f8>
    2262:	2d e1       	ldi	r18, 0x1D	; 29
    2264:	30 e0       	ldi	r19, 0x00	; 0
    2266:	38 8f       	std	Y+24, r19	; 0x18
    2268:	2f 8b       	std	Y+23, r18	; 0x17
					state = 35;
					counterRef = counter;
				}
				if(state == 35 && counter - counterRef > 10){
    226a:	4f 89       	ldd	r20, Y+23	; 0x17
    226c:	58 8d       	ldd	r21, Y+24	; 0x18
    226e:	43 32       	cpi	r20, 0x23	; 35
    2270:	51 05       	cpc	r21, r1
    2272:	79 f4       	brne	.+30     	; 0x2292 <main+0x2116>
    2274:	c8 01       	movw	r24, r16
    2276:	8e 19       	sub	r24, r14
    2278:	9f 09       	sbc	r25, r15
    227a:	0b 97       	sbiw	r24, 0x0b	; 11
    227c:	14 f4       	brge	.+4      	; 0x2282 <main+0x2106>
    227e:	0c 94 97 1b 	jmp	0x372e	; 0x372e <main+0x35b2>
    2282:	8f ef       	ldi	r24, 0xFF	; 255
    2284:	9f ef       	ldi	r25, 0xFF	; 255
    2286:	38 c0       	rjmp	.+112    	; 0x22f8 <main+0x217c>
    2288:	ee e1       	ldi	r30, 0x1E	; 30
    228a:	f0 e0       	ldi	r31, 0x00	; 0
    228c:	f8 8f       	std	Y+24, r31	; 0x18
    228e:	ef 8b       	std	Y+23, r30	; 0x17
    2290:	35 c0       	rjmp	.+106    	; 0x22fc <main+0x2180>
				}


				//state actions
						
				if(state == 0){
    2292:	2f 89       	ldd	r18, Y+23	; 0x17
    2294:	38 8d       	ldd	r19, Y+24	; 0x18
    2296:	23 2b       	or	r18, r19
    2298:	89 f5       	brne	.+98     	; 0x22fc <main+0x2180>
					if(u_inputByte0.bits_in_inputByte0.fixtureHome == 1){
    229a:	80 91 3c 03 	lds	r24, 0x033C
    229e:	90 91 38 03 	lds	r25, 0x0338
    22a2:	20 91 3a 03 	lds	r18, 0x033A
    22a6:	82 ff       	sbrs	r24, 2
    22a8:	0a c0       	rjmp	.+20     	; 0x22be <main+0x2142>
						u_motorByte0.bits_in_motorByte0.m2Dir = 0;  //********* 0 is used as fixture backward ?cc?, 1 as forward ?c? **********
    22aa:	9f 7e       	andi	r25, 0xEF	; 239
    22ac:	90 93 38 03 	sts	0x0338, r25
						u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    22b0:	27 7f       	andi	r18, 0xF7	; 247
    22b2:	20 93 3a 03 	sts	0x033A, r18
    22b6:	31 e0       	ldi	r19, 0x01	; 1
    22b8:	c3 2e       	mov	r12, r19
    22ba:	d1 2c       	mov	r13, r1
    22bc:	71 c0       	rjmp	.+226    	; 0x23a0 <main+0x2224>
						m2 = 1;
					}
					else{
						u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    22be:	9f 7d       	andi	r25, 0xDF	; 223
    22c0:	90 93 38 03 	sts	0x0338, r25
						m2 = 0;
						u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    22c4:	2f 7e       	andi	r18, 0xEF	; 239
						u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    22c6:	28 60       	ori	r18, 0x08	; 8
    22c8:	20 93 3a 03 	sts	0x033A, r18
						if(print0 == 1){
    22cc:	4b 89       	ldd	r20, Y+19	; 0x13
    22ce:	5c 89       	ldd	r21, Y+20	; 0x14
    22d0:	41 30       	cpi	r20, 0x01	; 1
    22d2:	51 05       	cpc	r21, r1
    22d4:	11 f0       	breq	.+4      	; 0x22da <main+0x215e>
    22d6:	0c 94 9d 1b 	jmp	0x373a	; 0x373a <main+0x35be>
							OrangutanLCD::gotoXY(0,1);
    22da:	80 e0       	ldi	r24, 0x00	; 0
    22dc:	61 e0       	ldi	r22, 0x01	; 1
    22de:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
							OrangutanLCD::print("PUSH TO START");
    22e2:	80 e0       	ldi	r24, 0x00	; 0
    22e4:	93 e0       	ldi	r25, 0x03	; 3
    22e6:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    22ea:	cc 24       	eor	r12, r12
    22ec:	dd 24       	eor	r13, r13
    22ee:	1c 8a       	std	Y+20, r1	; 0x14
    22f0:	1b 8a       	std	Y+19, r1	; 0x13
    22f2:	56 c0       	rjmp	.+172    	; 0x23a0 <main+0x2224>
    22f4:	8f e1       	ldi	r24, 0x1F	; 31
    22f6:	90 e0       	ldi	r25, 0x00	; 0
    22f8:	98 8f       	std	Y+24, r25	; 0x18
    22fa:	8f 8b       	std	Y+23, r24	; 0x17
							print0 = 0;
						}
					}
				}
				if(state == 1){
    22fc:	ef 89       	ldd	r30, Y+23	; 0x17
    22fe:	f8 8d       	ldd	r31, Y+24	; 0x18
    2300:	31 97       	sbiw	r30, 0x01	; 1
    2302:	29 f5       	brne	.+74     	; 0x234e <main+0x21d2>
					//OrangutanLCD::clear();
					u_outputByte0.bits_in_outputByte0.ACPower = 0;
    2304:	20 91 3a 03 	lds	r18, 0x033A
    2308:	32 2f       	mov	r19, r18
    230a:	3e 7f       	andi	r19, 0xFE	; 254
					if((counter % 200) < 100){
    230c:	c8 01       	movw	r24, r16
    230e:	68 ec       	ldi	r22, 0xC8	; 200
    2310:	70 e0       	ldi	r23, 0x00	; 0
    2312:	0e 94 b9 21 	call	0x4372	; 0x4372 <__divmodhi4>
    2316:	84 36       	cpi	r24, 0x64	; 100
    2318:	91 05       	cpc	r25, r1
    231a:	24 f4       	brge	.+8      	; 0x2324 <main+0x21a8>
						u_outputByte0.bits_in_outputByte0.blowerPulse = 0;
    231c:	2c 7f       	andi	r18, 0xFC	; 252
    231e:	20 93 3a 03 	sts	0x033A, r18
    2322:	03 c0       	rjmp	.+6      	; 0x232a <main+0x21ae>
					}
					else{
						u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
    2324:	32 60       	ori	r19, 0x02	; 2
    2326:	30 93 3a 03 	sts	0x033A, r19
					}
					m1 = 1;
					u_motorByte0.bits_in_motorByte0.m1Dir = 1;  //****** dir1 ******
    232a:	80 91 38 03 	lds	r24, 0x0338
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
    232e:	86 60       	ori	r24, 0x06	; 6
    2330:	80 93 38 03 	sts	0x0338, r24
					u_outputByte0.bits_in_outputByte0.plateStop = 0;
    2334:	80 91 3a 03 	lds	r24, 0x033A
    2338:	8b 7f       	andi	r24, 0xFB	; 251
    233a:	80 93 3a 03 	sts	0x033A, r24
    233e:	21 e0       	ldi	r18, 0x01	; 1
    2340:	82 2e       	mov	r8, r18
    2342:	91 2c       	mov	r9, r1
    2344:	2d c0       	rjmp	.+90     	; 0x23a0 <main+0x2224>
    2346:	20 e2       	ldi	r18, 0x20	; 32
    2348:	30 e0       	ldi	r19, 0x00	; 0
    234a:	38 8f       	std	Y+24, r19	; 0x18
    234c:	2f 8b       	std	Y+23, r18	; 0x17
				}
				if(state == 2){
    234e:	4f 89       	ldd	r20, Y+23	; 0x17
    2350:	58 8d       	ldd	r21, Y+24	; 0x18
    2352:	42 30       	cpi	r20, 0x02	; 2
    2354:	51 05       	cpc	r21, r1
    2356:	99 f4       	brne	.+38     	; 0x237e <main+0x2202>
					u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
    2358:	80 91 3a 03 	lds	r24, 0x033A
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    235c:	81 7e       	andi	r24, 0xE1	; 225
					u_outputByte0.bits_in_outputByte0.plateStop = 1;
    235e:	86 61       	ori	r24, 0x16	; 22
    2360:	80 93 3a 03 	sts	0x033A, r24
						m1 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    2364:	80 91 38 03 	lds	r24, 0x0338
    2368:	80 62       	ori	r24, 0x20	; 32
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    236a:	8b 7f       	andi	r24, 0xFB	; 251
    236c:	80 93 38 03 	sts	0x0338, r24
    2370:	88 24       	eor	r8, r8
    2372:	99 24       	eor	r9, r9
    2374:	43 c0       	rjmp	.+134    	; 0x23fc <main+0x2280>
    2376:	81 e2       	ldi	r24, 0x21	; 33
    2378:	90 e0       	ldi	r25, 0x00	; 0
    237a:	98 8f       	std	Y+24, r25	; 0x18
    237c:	8f 8b       	std	Y+23, r24	; 0x17
				}	
				if(state == 3){
    237e:	ef 89       	ldd	r30, Y+23	; 0x17
    2380:	f8 8d       	ldd	r31, Y+24	; 0x18
    2382:	33 97       	sbiw	r30, 0x03	; 3
    2384:	69 f4       	brne	.+26     	; 0x23a0 <main+0x2224>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ****** dir2 *******
    2386:	80 91 38 03 	lds	r24, 0x0338
    238a:	80 61       	ori	r24, 0x10	; 16
    238c:	80 93 38 03 	sts	0x0338, r24
    2390:	91 e0       	ldi	r25, 0x01	; 1
    2392:	c9 2e       	mov	r12, r25
    2394:	d1 2c       	mov	r13, r1
    2396:	40 c0       	rjmp	.+128    	; 0x2418 <main+0x229c>
    2398:	22 e2       	ldi	r18, 0x22	; 34
    239a:	30 e0       	ldi	r19, 0x00	; 0
    239c:	38 8f       	std	Y+24, r19	; 0x18
    239e:	2f 8b       	std	Y+23, r18	; 0x17
					m2 = 1;
				}
				if(state == 4){
    23a0:	4f 89       	ldd	r20, Y+23	; 0x17
    23a2:	58 8d       	ldd	r21, Y+24	; 0x18
    23a4:	44 30       	cpi	r20, 0x04	; 4
    23a6:	51 05       	cpc	r21, r1
    23a8:	69 f4       	brne	.+26     	; 0x23c4 <main+0x2248>
						m2 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    23aa:	80 91 38 03 	lds	r24, 0x0338
    23ae:	8f 7d       	andi	r24, 0xDF	; 223
    23b0:	80 93 38 03 	sts	0x0338, r24
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    23b4:	80 91 3a 03 	lds	r24, 0x033A
    23b8:	88 60       	ori	r24, 0x08	; 8
    23ba:	80 93 3a 03 	sts	0x033A, r24
    23be:	cc 24       	eor	r12, r12
    23c0:	dd 24       	eor	r13, r13
    23c2:	3d c0       	rjmp	.+122    	; 0x243e <main+0x22c2>
				}
				if(state == 5){
    23c4:	8f 89       	ldd	r24, Y+23	; 0x17
    23c6:	98 8d       	ldd	r25, Y+24	; 0x18
    23c8:	05 97       	sbiw	r24, 0x05	; 5
    23ca:	59 f4       	brne	.+22     	; 0x23e2 <main+0x2266>
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    23cc:	80 91 3a 03 	lds	r24, 0x033A
    23d0:	8f 7e       	andi	r24, 0xEF	; 239
    23d2:	80 93 3a 03 	sts	0x033A, r24
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    23d6:	80 91 38 03 	lds	r24, 0x0338
    23da:	80 62       	ori	r24, 0x20	; 32
    23dc:	80 93 38 03 	sts	0x0338, r24
    23e0:	3b c0       	rjmp	.+118    	; 0x2458 <main+0x22dc>
				}
				//*********************************************
				if(state == 6){
    23e2:	ef 89       	ldd	r30, Y+23	; 0x17
    23e4:	f8 8d       	ldd	r31, Y+24	; 0x18
    23e6:	36 97       	sbiw	r30, 0x06	; 6
    23e8:	49 f4       	brne	.+18     	; 0x23fc <main+0x2280>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    23ea:	80 91 38 03 	lds	r24, 0x0338
    23ee:	80 61       	ori	r24, 0x10	; 16
    23f0:	80 93 38 03 	sts	0x0338, r24
    23f4:	81 e0       	ldi	r24, 0x01	; 1
    23f6:	c8 2e       	mov	r12, r24
    23f8:	d1 2c       	mov	r13, r1
    23fa:	41 c0       	rjmp	.+130    	; 0x247e <main+0x2302>
					m2 = 1;
				}
				
				//*************************** may need to reverse order depending on dry station 1 positioning ***************************
				if(state == 15){
    23fc:	2f 89       	ldd	r18, Y+23	; 0x17
    23fe:	38 8d       	ldd	r19, Y+24	; 0x18
    2400:	2f 30       	cpi	r18, 0x0F	; 15
    2402:	31 05       	cpc	r19, r1
    2404:	49 f4       	brne	.+18     	; 0x2418 <main+0x229c>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m4Drop = 1;
    2406:	80 91 39 03 	lds	r24, 0x0339
    240a:	88 60       	ori	r24, 0x08	; 8
					u_motorByte1.bits_in_motorByte1.m4Dir = 0;  // ******* dir4 *******
    240c:	8b 7f       	andi	r24, 0xFB	; 251
    240e:	80 93 39 03 	sts	0x0339, r24
    2412:	cc 24       	eor	r12, r12
    2414:	dd 24       	eor	r13, r13
    2416:	41 c0       	rjmp	.+130    	; 0x249a <main+0x231e>
						OrangutanLCD::clear();
						OrangutanLCD::print("Clean 2");
						print15 = 0;
					}*/
				}
				if(state == 16){
    2418:	4f 89       	ldd	r20, Y+23	; 0x17
    241a:	58 8d       	ldd	r21, Y+24	; 0x18
    241c:	40 31       	cpi	r20, 0x10	; 16
    241e:	51 05       	cpc	r21, r1
    2420:	71 f4       	brne	.+28     	; 0x243e <main+0x22c2>
					m4 = 1;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
    2422:	80 91 3b 03 	lds	r24, 0x033B
    2426:	81 60       	ori	r24, 0x01	; 1
    2428:	80 93 3b 03 	sts	0x033B, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 0;
    242c:	80 91 3a 03 	lds	r24, 0x033A
    2430:	8f 77       	andi	r24, 0x7F	; 127
    2432:	80 93 3a 03 	sts	0x033A, r24
    2436:	b1 e0       	ldi	r27, 0x01	; 1
    2438:	6b 2e       	mov	r6, r27
    243a:	71 2c       	mov	r7, r1
    243c:	48 c0       	rjmp	.+144    	; 0x24ce <main+0x2352>
				}
				if(state == 17){
    243e:	8f 89       	ldd	r24, Y+23	; 0x17
    2440:	98 8d       	ldd	r25, Y+24	; 0x18
    2442:	41 97       	sbiw	r24, 0x11	; 17
    2444:	49 f4       	brne	.+18     	; 0x2458 <main+0x22dc>
					m2 = 1;
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    2446:	80 91 38 03 	lds	r24, 0x0338
    244a:	8f 7e       	andi	r24, 0xEF	; 239
    244c:	80 93 38 03 	sts	0x0338, r24
    2450:	a1 e0       	ldi	r26, 0x01	; 1
    2452:	ca 2e       	mov	r12, r26
    2454:	d1 2c       	mov	r13, r1
    2456:	40 c0       	rjmp	.+128    	; 0x24d8 <main+0x235c>
				}
				if(state == 18){
    2458:	ef 89       	ldd	r30, Y+23	; 0x17
    245a:	f8 8d       	ldd	r31, Y+24	; 0x18
    245c:	72 97       	sbiw	r30, 0x12	; 18
    245e:	79 f4       	brne	.+30     	; 0x247e <main+0x2302>
					m2 = 0;
					m4 = 0;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 0;
    2460:	80 91 3b 03 	lds	r24, 0x033B
    2464:	8e 7f       	andi	r24, 0xFE	; 254
    2466:	80 93 3b 03 	sts	0x033B, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
    246a:	80 91 3a 03 	lds	r24, 0x033A
    246e:	80 68       	ori	r24, 0x80	; 128
    2470:	80 93 3a 03 	sts	0x033A, r24
    2474:	cc 24       	eor	r12, r12
    2476:	dd 24       	eor	r13, r13
    2478:	66 24       	eor	r6, r6
    247a:	77 24       	eor	r7, r7
    247c:	45 c0       	rjmp	.+138    	; 0x2508 <main+0x238c>
				}
				if(state == 19){
    247e:	2f 89       	ldd	r18, Y+23	; 0x17
    2480:	38 8d       	ldd	r19, Y+24	; 0x18
    2482:	23 31       	cpi	r18, 0x13	; 19
    2484:	31 05       	cpc	r19, r1
    2486:	49 f4       	brne	.+18     	; 0x249a <main+0x231e>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    2488:	80 91 38 03 	lds	r24, 0x0338
    248c:	80 61       	ori	r24, 0x10	; 16
    248e:	80 93 38 03 	sts	0x0338, r24
    2492:	f1 e0       	ldi	r31, 0x01	; 1
    2494:	cf 2e       	mov	r12, r31
    2496:	d1 2c       	mov	r13, r1
    2498:	45 c0       	rjmp	.+138    	; 0x2524 <main+0x23a8>
					m2 = 1;
				}
				if(state == 20){
    249a:	4f 89       	ldd	r20, Y+23	; 0x17
    249c:	58 8d       	ldd	r21, Y+24	; 0x18
    249e:	44 31       	cpi	r20, 0x14	; 20
    24a0:	51 05       	cpc	r21, r1
    24a2:	a9 f4       	brne	.+42     	; 0x24ce <main+0x2352>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m4Dir = 0;  // ******* dir4 *******
    24a4:	80 91 39 03 	lds	r24, 0x0339
    24a8:	8b 7f       	andi	r24, 0xFB	; 251
    24aa:	80 93 39 03 	sts	0x0339, r24
					m4 = 1;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
    24ae:	80 91 3b 03 	lds	r24, 0x033B
    24b2:	81 60       	ori	r24, 0x01	; 1
    24b4:	80 93 3b 03 	sts	0x033B, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 0;
    24b8:	80 91 3a 03 	lds	r24, 0x033A
    24bc:	8f 77       	andi	r24, 0x7F	; 127
    24be:	80 93 3a 03 	sts	0x033A, r24
    24c2:	cc 24       	eor	r12, r12
    24c4:	dd 24       	eor	r13, r13
    24c6:	e1 e0       	ldi	r30, 0x01	; 1
    24c8:	6e 2e       	mov	r6, r30
    24ca:	71 2c       	mov	r7, r1
    24cc:	38 c0       	rjmp	.+112    	; 0x253e <main+0x23c2>
				}
				if(state == 21){
    24ce:	8f 89       	ldd	r24, Y+23	; 0x17
    24d0:	98 8d       	ldd	r25, Y+24	; 0x18
    24d2:	45 97       	sbiw	r24, 0x15	; 21
    24d4:	09 f4       	brne	.+2      	; 0x24d8 <main+0x235c>
    24d6:	40 c0       	rjmp	.+128    	; 0x2558 <main+0x23dc>
					m2 = 1;
				}
				if(state == 22){
    24d8:	ef 89       	ldd	r30, Y+23	; 0x17
    24da:	f8 8d       	ldd	r31, Y+24	; 0x18
    24dc:	76 97       	sbiw	r30, 0x16	; 22
    24de:	a1 f4       	brne	.+40     	; 0x2508 <main+0x238c>
					m4 = 0;
					m2 = 0;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 0;
    24e0:	80 91 3b 03 	lds	r24, 0x033B
    24e4:	8e 7f       	andi	r24, 0xFE	; 254
    24e6:	80 93 3b 03 	sts	0x033B, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
    24ea:	80 91 3a 03 	lds	r24, 0x033A
    24ee:	80 68       	ori	r24, 0x80	; 128
    24f0:	80 93 3a 03 	sts	0x033A, r24
					u_motorByte1.bits_in_motorByte1.m4Drop = 0;
    24f4:	80 91 39 03 	lds	r24, 0x0339
    24f8:	87 7f       	andi	r24, 0xF7	; 247
    24fa:	80 93 39 03 	sts	0x0339, r24
    24fe:	cc 24       	eor	r12, r12
    2500:	dd 24       	eor	r13, r13
    2502:	66 24       	eor	r6, r6
    2504:	77 24       	eor	r7, r7
    2506:	35 c0       	rjmp	.+106    	; 0x2572 <main+0x23f6>
				}
				//*************************************************
				if(state == 23){
    2508:	2f 89       	ldd	r18, Y+23	; 0x17
    250a:	38 8d       	ldd	r19, Y+24	; 0x18
    250c:	27 31       	cpi	r18, 0x17	; 23
    250e:	31 05       	cpc	r19, r1
    2510:	49 f4       	brne	.+18     	; 0x2524 <main+0x23a8>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    2512:	80 91 38 03 	lds	r24, 0x0338
    2516:	80 61       	ori	r24, 0x10	; 16
    2518:	80 93 38 03 	sts	0x0338, r24
    251c:	71 e0       	ldi	r23, 0x01	; 1
    251e:	c7 2e       	mov	r12, r23
    2520:	d1 2c       	mov	r13, r1
    2522:	39 c0       	rjmp	.+114    	; 0x2596 <main+0x241a>
					m2 = 1;
				}
				if(state == 24){
    2524:	4f 89       	ldd	r20, Y+23	; 0x17
    2526:	58 8d       	ldd	r21, Y+24	; 0x18
    2528:	48 31       	cpi	r20, 0x18	; 24
    252a:	51 05       	cpc	r21, r1
    252c:	41 f4       	brne	.+16     	; 0x253e <main+0x23c2>
					m2 = 0;
					u_outputByte1.bits_in_outputByte1.airKnife = 0;
    252e:	80 91 3b 03 	lds	r24, 0x033B
    2532:	87 7f       	andi	r24, 0xF7	; 247
    2534:	80 93 3b 03 	sts	0x033B, r24
    2538:	cc 24       	eor	r12, r12
    253a:	dd 24       	eor	r13, r13
    253c:	36 c0       	rjmp	.+108    	; 0x25aa <main+0x242e>
						OrangutanLCD::clear();
						OrangutanLCD::print("DRY AIR");
						print24 = 0;
					}*/
				}
				if(state == 25){
    253e:	8f 89       	ldd	r24, Y+23	; 0x17
    2540:	98 8d       	ldd	r25, Y+24	; 0x18
    2542:	49 97       	sbiw	r24, 0x19	; 25
    2544:	61 f4       	brne	.+24     	; 0x255e <main+0x23e2>
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    2546:	80 91 38 03 	lds	r24, 0x0338
    254a:	8f 7e       	andi	r24, 0xEF	; 239
    254c:	80 93 38 03 	sts	0x0338, r24
    2550:	61 e0       	ldi	r22, 0x01	; 1
    2552:	c6 2e       	mov	r12, r22
    2554:	d1 2c       	mov	r13, r1
    2556:	2e c0       	rjmp	.+92     	; 0x25b4 <main+0x2438>
    2558:	51 e0       	ldi	r21, 0x01	; 1
    255a:	c5 2e       	mov	r12, r21
    255c:	d1 2c       	mov	r13, r1
					m2 = 1;
				}
				if(state == 26){
    255e:	ef 89       	ldd	r30, Y+23	; 0x17
    2560:	f8 8d       	ldd	r31, Y+24	; 0x18
    2562:	7a 97       	sbiw	r30, 0x1a	; 26
    2564:	31 f4       	brne	.+12     	; 0x2572 <main+0x23f6>
					u_outputByte1.bits_in_outputByte1.airKnife = 1;
    2566:	80 91 3b 03 	lds	r24, 0x033B
    256a:	88 60       	ori	r24, 0x08	; 8
    256c:	80 93 3b 03 	sts	0x033B, r24
    2570:	34 c0       	rjmp	.+104    	; 0x25da <main+0x245e>
				}
				if(state == 27){
    2572:	2f 89       	ldd	r18, Y+23	; 0x17
    2574:	38 8d       	ldd	r19, Y+24	; 0x18
    2576:	2b 31       	cpi	r18, 0x1B	; 27
    2578:	31 05       	cpc	r19, r1
    257a:	69 f4       	brne	.+26     	; 0x2596 <main+0x241a>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m5Drop = 1;
    257c:	80 91 39 03 	lds	r24, 0x0339
    2580:	80 64       	ori	r24, 0x40	; 64
					u_motorByte1.bits_in_motorByte1.m5Dir = 0;
    2582:	8f 7d       	andi	r24, 0xDF	; 223
    2584:	80 93 39 03 	sts	0x0339, r24
    2588:	cc 24       	eor	r12, r12
    258a:	dd 24       	eor	r13, r13
    258c:	41 e0       	ldi	r20, 0x01	; 1
    258e:	50 e0       	ldi	r21, 0x00	; 0
    2590:	5a 87       	std	Y+10, r21	; 0x0a
    2592:	49 87       	std	Y+9, r20	; 0x09
    2594:	2c c0       	rjmp	.+88     	; 0x25ee <main+0x2472>
					m5 = 1;
				}
				if(state == 28){
    2596:	8f 89       	ldd	r24, Y+23	; 0x17
    2598:	98 8d       	ldd	r25, Y+24	; 0x18
    259a:	4c 97       	sbiw	r24, 0x1c	; 28
    259c:	31 f4       	brne	.+12     	; 0x25aa <main+0x242e>
					/*if(print28 == 1){
							OrangutanLCD::clear();
						OrangutanLCD::print("FINAL DRY");
						print28 = 0;
						}*/
					u_outputByte1.bits_in_outputByte1.ptRaise = 0;
    259e:	80 91 3b 03 	lds	r24, 0x033B
    25a2:	8d 7f       	andi	r24, 0xFD	; 253
    25a4:	80 93 3b 03 	sts	0x033B, r24
    25a8:	2f c0       	rjmp	.+94     	; 0x2608 <main+0x248c>
				}
				if(state == 29){
    25aa:	ef 89       	ldd	r30, Y+23	; 0x17
    25ac:	f8 8d       	ldd	r31, Y+24	; 0x18
    25ae:	7d 97       	sbiw	r30, 0x1d	; 29
    25b0:	09 f4       	brne	.+2      	; 0x25b4 <main+0x2438>
    25b2:	3d c0       	rjmp	.+122    	; 0x262e <main+0x24b2>
					m2 = 1;
				}
				if(state == 30){
    25b4:	2f 89       	ldd	r18, Y+23	; 0x17
    25b6:	38 8d       	ldd	r19, Y+24	; 0x18
    25b8:	2e 31       	cpi	r18, 0x1E	; 30
    25ba:	31 05       	cpc	r19, r1
    25bc:	71 f4       	brne	.+28     	; 0x25da <main+0x245e>
					m5 = 0;
						u_motorByte1.bits_in_motorByte1.m5Drop = 0;
    25be:	80 91 39 03 	lds	r24, 0x0339
    25c2:	8f 7b       	andi	r24, 0xBF	; 191
    25c4:	80 93 39 03 	sts	0x0339, r24
					u_outputByte1.bits_in_outputByte1.ptRaise = 1;
    25c8:	80 91 3b 03 	lds	r24, 0x033B
    25cc:	82 60       	ori	r24, 0x02	; 2
					u_outputByte1.bits_in_outputByte1.ptLower = 0;
    25ce:	8b 7f       	andi	r24, 0xFB	; 251
    25d0:	80 93 3b 03 	sts	0x033B, r24
    25d4:	1a 86       	std	Y+10, r1	; 0x0a
    25d6:	19 86       	std	Y+9, r1	; 0x09
    25d8:	3b c0       	rjmp	.+118    	; 0x2650 <main+0x24d4>
				}
				if(state == 31){
    25da:	4f 89       	ldd	r20, Y+23	; 0x17
    25dc:	58 8d       	ldd	r21, Y+24	; 0x18
    25de:	4f 31       	cpi	r20, 0x1F	; 31
    25e0:	51 05       	cpc	r21, r1
    25e2:	29 f4       	brne	.+10     	; 0x25ee <main+0x2472>
					m2 = 0;
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    25e4:	80 91 3a 03 	lds	r24, 0x033A
    25e8:	87 7f       	andi	r24, 0xF7	; 247
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
    25ea:	80 61       	ori	r24, 0x10	; 16
    25ec:	1b c0       	rjmp	.+54     	; 0x2624 <main+0x24a8>
				}
				if(state == 32){
    25ee:	8f 89       	ldd	r24, Y+23	; 0x17
    25f0:	98 8d       	ldd	r25, Y+24	; 0x18
    25f2:	80 97       	sbiw	r24, 0x20	; 32
    25f4:	49 f4       	brne	.+18     	; 0x2608 <main+0x248c>
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;
    25f6:	80 91 38 03 	lds	r24, 0x0338
    25fa:	8f 7e       	andi	r24, 0xEF	; 239
    25fc:	80 93 38 03 	sts	0x0338, r24
    2600:	41 e0       	ldi	r20, 0x01	; 1
    2602:	c4 2e       	mov	r12, r20
    2604:	d1 2c       	mov	r13, r1
    2606:	3f c0       	rjmp	.+126    	; 0x2686 <main+0x250a>
					m2 = 1;
				}
				if(state == 33){
    2608:	ef 89       	ldd	r30, Y+23	; 0x17
    260a:	f8 8d       	ldd	r31, Y+24	; 0x18
    260c:	b1 97       	sbiw	r30, 0x21	; 33
    260e:	91 f4       	brne	.+36     	; 0x2634 <main+0x24b8>
					m2 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    2610:	80 91 38 03 	lds	r24, 0x0338
    2614:	8f 7d       	andi	r24, 0xDF	; 223
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
    2616:	84 60       	ori	r24, 0x04	; 4
    2618:	80 93 38 03 	sts	0x0338, r24
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    261c:	80 91 3a 03 	lds	r24, 0x033A
    2620:	88 60       	ori	r24, 0x08	; 8
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    2622:	8f 7e       	andi	r24, 0xEF	; 239
    2624:	80 93 3a 03 	sts	0x033A, r24
    2628:	cc 24       	eor	r12, r12
    262a:	dd 24       	eor	r13, r13
    262c:	2c c0       	rjmp	.+88     	; 0x2686 <main+0x250a>
    262e:	31 e0       	ldi	r19, 0x01	; 1
    2630:	c3 2e       	mov	r12, r19
    2632:	d1 2c       	mov	r13, r1
				}
				if(state == 34){
    2634:	2f 89       	ldd	r18, Y+23	; 0x17
    2636:	38 8d       	ldd	r19, Y+24	; 0x18
    2638:	22 32       	cpi	r18, 0x22	; 34
    263a:	31 05       	cpc	r19, r1
    263c:	49 f4       	brne	.+18     	; 0x2650 <main+0x24d4>
					u_motorByte0.bits_in_motorByte0.m1Dir = 0;
    263e:	80 91 38 03 	lds	r24, 0x0338
    2642:	8d 7f       	andi	r24, 0xFD	; 253
    2644:	80 93 38 03 	sts	0x0338, r24
    2648:	21 e0       	ldi	r18, 0x01	; 1
    264a:	82 2e       	mov	r8, r18
    264c:	91 2c       	mov	r9, r1
    264e:	1b c0       	rjmp	.+54     	; 0x2686 <main+0x250a>
					m1 = 1;
					}
				if(state == 35){
    2650:	4f 89       	ldd	r20, Y+23	; 0x17
    2652:	58 8d       	ldd	r21, Y+24	; 0x18
    2654:	43 32       	cpi	r20, 0x23	; 35
    2656:	51 05       	cpc	r21, r1
    2658:	b1 f4       	brne	.+44     	; 0x2686 <main+0x250a>
					m1 = 0;
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    265a:	80 91 38 03 	lds	r24, 0x0338
    265e:	8b 7f       	andi	r24, 0xFB	; 251
    2660:	80 93 38 03 	sts	0x0338, r24
					if(print35 == 1){
    2664:	89 89       	ldd	r24, Y+17	; 0x11
    2666:	9a 89       	ldd	r25, Y+18	; 0x12
    2668:	01 97       	sbiw	r24, 0x01	; 1
    266a:	19 f0       	breq	.+6      	; 0x2672 <main+0x24f6>
    266c:	88 24       	eor	r8, r8
    266e:	99 24       	eor	r9, r9
    2670:	0a c0       	rjmp	.+20     	; 0x2686 <main+0x250a>
						OrangutanLCD::clear();
    2672:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("END OF CYCLE");
    2676:	8e e0       	ldi	r24, 0x0E	; 14
    2678:	93 e0       	ldi	r25, 0x03	; 3
    267a:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    267e:	88 24       	eor	r8, r8
    2680:	99 24       	eor	r9, r9
    2682:	1a 8a       	std	Y+18, r1	; 0x12
    2684:	19 8a       	std	Y+17, r1	; 0x11





				if( ((counter - counterRef) % (totallength1) ) < (steplength1) && m1)  //check if it is in the right period of the loop to send high
    2686:	c8 01       	movw	r24, r16
    2688:	8e 19       	sub	r24, r14
    268a:	9f 09       	sbc	r25, r15
    268c:	62 e0       	ldi	r22, 0x02	; 2
    268e:	70 e0       	ldi	r23, 0x00	; 0
    2690:	0e 94 b9 21 	call	0x4372	; 0x4372 <__divmodhi4>
    2694:	9c 01       	movw	r18, r24
    2696:	18 16       	cp	r1, r24
    2698:	19 06       	cpc	r1, r25
    269a:	4c f0       	brlt	.+18     	; 0x26ae <main+0x2532>
    269c:	81 14       	cp	r8, r1
    269e:	91 04       	cpc	r9, r1
    26a0:	31 f0       	breq	.+12     	; 0x26ae <main+0x2532>
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 1; // set bit 0
    26a2:	80 91 38 03 	lds	r24, 0x0338
    26a6:	81 60       	ori	r24, 0x01	; 1
    26a8:	80 93 38 03 	sts	0x0338, r24
    26ac:	08 c0       	rjmp	.+16     	; 0x26be <main+0x2542>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 0; // set bit 0
    26ae:	80 91 38 03 	lds	r24, 0x0338
    26b2:	8e 7f       	andi	r24, 0xFE	; 254
    26b4:	80 93 38 03 	sts	0x0338, r24
				}

				if( ((counter - counterRef) % (totallength2) ) < (steplength2) && m2)
    26b8:	12 16       	cp	r1, r18
    26ba:	13 06       	cpc	r1, r19
    26bc:	4c f0       	brlt	.+18     	; 0x26d0 <main+0x2554>
    26be:	c1 14       	cp	r12, r1
    26c0:	d1 04       	cpc	r13, r1
    26c2:	31 f0       	breq	.+12     	; 0x26d0 <main+0x2554>
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 1; // set bit 1
    26c4:	80 91 38 03 	lds	r24, 0x0338
    26c8:	88 60       	ori	r24, 0x08	; 8
    26ca:	80 93 38 03 	sts	0x0338, r24
    26ce:	08 c0       	rjmp	.+16     	; 0x26e0 <main+0x2564>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 0; // set bit 1
    26d0:	80 91 38 03 	lds	r24, 0x0338
    26d4:	87 7f       	andi	r24, 0xF7	; 247
    26d6:	80 93 38 03 	sts	0x0338, r24
				}

				if( ((counter - counterRef) % (totallength3) ) < (steplength3) && m3)
    26da:	12 16       	cp	r1, r18
    26dc:	13 06       	cpc	r1, r19
    26de:	4c f0       	brlt	.+18     	; 0x26f2 <main+0x2576>
    26e0:	41 14       	cp	r4, r1
    26e2:	51 04       	cpc	r5, r1
    26e4:	31 f0       	breq	.+12     	; 0x26f2 <main+0x2576>
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 1; // set bit 1
    26e6:	80 91 38 03 	lds	r24, 0x0338
    26ea:	80 64       	ori	r24, 0x40	; 64
    26ec:	80 93 38 03 	sts	0x0338, r24
    26f0:	08 c0       	rjmp	.+16     	; 0x2702 <main+0x2586>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 0; // set bit 1
    26f2:	80 91 38 03 	lds	r24, 0x0338
    26f6:	8f 7b       	andi	r24, 0xBF	; 191
    26f8:	80 93 38 03 	sts	0x0338, r24
				}

				if( ((counter - counterRef) % (totallength4) ) < (steplength4) && m4)
    26fc:	12 16       	cp	r1, r18
    26fe:	13 06       	cpc	r1, r19
    2700:	3c f0       	brlt	.+14     	; 0x2710 <main+0x2594>
    2702:	61 14       	cp	r6, r1
    2704:	71 04       	cpc	r7, r1
    2706:	21 f0       	breq	.+8      	; 0x2710 <main+0x2594>
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 1; // set bit 1
    2708:	80 91 39 03 	lds	r24, 0x0339
    270c:	82 60       	ori	r24, 0x02	; 2
    270e:	03 c0       	rjmp	.+6      	; 0x2716 <main+0x259a>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 0; // set bit 1
    2710:	80 91 39 03 	lds	r24, 0x0339
    2714:	8d 7f       	andi	r24, 0xFD	; 253
    2716:	80 93 39 03 	sts	0x0339, r24
				}

				if( ((counter - counterRefFive) % (totallength5) ) < (steplength5) && m5)
    271a:	c8 01       	movw	r24, r16
    271c:	ef 85       	ldd	r30, Y+15	; 0x0f
    271e:	f8 89       	ldd	r31, Y+16	; 0x10
    2720:	8e 1b       	sub	r24, r30
    2722:	9f 0b       	sbc	r25, r31
    2724:	62 e0       	ldi	r22, 0x02	; 2
    2726:	70 e0       	ldi	r23, 0x00	; 0
    2728:	0e 94 b9 21 	call	0x4372	; 0x4372 <__divmodhi4>
    272c:	18 16       	cp	r1, r24
    272e:	19 06       	cpc	r1, r25
    2730:	44 f0       	brlt	.+16     	; 0x2742 <main+0x25c6>
    2732:	29 85       	ldd	r18, Y+9	; 0x09
    2734:	3a 85       	ldd	r19, Y+10	; 0x0a
    2736:	23 2b       	or	r18, r19
    2738:	21 f0       	breq	.+8      	; 0x2742 <main+0x25c6>
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 1; // set bit 1
    273a:	80 91 39 03 	lds	r24, 0x0339
    273e:	80 61       	ori	r24, 0x10	; 16
    2740:	03 c0       	rjmp	.+6      	; 0x2748 <main+0x25cc>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 0; // set bit 1
    2742:	80 91 39 03 	lds	r24, 0x0339
    2746:	8f 7e       	andi	r24, 0xEF	; 239
    2748:	80 93 39 03 	sts	0x0339, r24
				}

				i2c_start(I2C1+I2C_WRITE);
    274c:	80 e4       	ldi	r24, 0x40	; 64
    274e:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				i2c_write(0x2);									// write command byte
    2752:	82 e0       	ldi	r24, 0x02	; 2
    2754:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_write(u_motorByte0.motorByte0);                       // write first byte of output
    2758:	80 91 38 03 	lds	r24, 0x0338
    275c:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
       	 		i2c_write(u_motorByte1.motorByte1);                       // write second byte of output
    2760:	80 91 39 03 	lds	r24, 0x0339
    2764:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
       		 	i2c_stop();                            // set stop conditon = release bus
    2768:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>

				i2c_start(I2C2+I2C_WRITE);
    276c:	82 e4       	ldi	r24, 0x42	; 66
    276e:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				i2c_write(0x2);
    2772:	82 e0       	ldi	r24, 0x02	; 2
    2774:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_write(u_outputByte0.outputByte0);
    2778:	80 91 3a 03 	lds	r24, 0x033A
    277c:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_write(u_outputByte1.outputByte1);
    2780:	80 91 3b 03 	lds	r24, 0x033B
    2784:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>

				counter ++;
    2788:	0f 5f       	subi	r16, 0xFF	; 255
    278a:	1f 4f       	sbci	r17, 0xFF	; 255
    278c:	81 e0       	ldi	r24, 0x01	; 1
    278e:	90 e0       	ldi	r25, 0x00	; 0
    2790:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>


		if(OrangutanDigital::isInputHigh(IO_D1) && !OrangutanDigital::isInputHigh(IO_D2)){
			OrangutanLCD::gotoXY(7,0);
			OrangutanLCD::print("SECOND B");
			while(state != -1)
    2794:	4f 89       	ldd	r20, Y+23	; 0x17
    2796:	58 8d       	ldd	r21, Y+24	; 0x18
    2798:	4f 5f       	subi	r20, 0xFF	; 255
    279a:	5f 4f       	sbci	r21, 0xFF	; 255
    279c:	09 f0       	breq	.+2      	; 0x27a0 <main+0x2624>
    279e:	42 cb       	rjmp	.-2428   	; 0x1e24 <main+0x1ca8>
				delay_ms(1);
   		 	}
		}


		if(!OrangutanDigital::isInputHigh(IO_D1) && OrangutanDigital::isInputHigh(IO_D2)){
    27a0:	81 e0       	ldi	r24, 0x01	; 1
    27a2:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    27a6:	88 23       	and	r24, r24
    27a8:	09 f0       	breq	.+2      	; 0x27ac <main+0x2630>
    27aa:	ce c5       	rjmp	.+2972   	; 0x3348 <main+0x31cc>
    27ac:	82 e0       	ldi	r24, 0x02	; 2
    27ae:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    27b2:	88 23       	and	r24, r24
    27b4:	09 f4       	brne	.+2      	; 0x27b8 <main+0x263c>
    27b6:	c8 c5       	rjmp	.+2960   	; 0x3348 <main+0x31cc>
			OrangutanLCD::gotoXY(7,0);
    27b8:	87 e0       	ldi	r24, 0x07	; 7
    27ba:	60 e0       	ldi	r22, 0x00	; 0
    27bc:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
			OrangutanLCD::print("BOTH B");
    27c0:	84 e2       	ldi	r24, 0x24	; 36
    27c2:	93 e0       	ldi	r25, 0x03	; 3
    27c4:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    27c8:	b9 c5       	rjmp	.+2930   	; 0x333c <main+0x31c0>
			while(state != -1)
			{
				i2c_start(I2C3+I2C_WRITE);						// first start condition (write)
    27ca:	84 e4       	ldi	r24, 0x44	; 68
    27cc:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				i2c_write(0x0);								// write command byte
    27d0:	80 e0       	ldi	r24, 0x00	; 0
    27d2:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_start(I2C3+I2C_READ);						// second start condition (read)
    27d6:	85 e4       	ldi	r24, 0x45	; 69
    27d8:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				u_inputByte0.inputByte0 = i2c_readAck();				// read first byte and send Ack, requesting more
    27dc:	0e 94 2a 1c 	call	0x3854	; 0x3854 <_Z11i2c_readAckv>
    27e0:	80 93 3c 03 	sts	0x033C, r24
   		     	u_inputByte1.inputByte1 = i2c_readNak();				// read second byte and send stop condition
    27e4:	0e 94 34 1c 	call	0x3868	; 0x3868 <_Z11i2c_readNakv>
    27e8:	80 93 3d 03 	sts	0x033D, r24
  	 	     	i2c_stop();								// set stop conditon = release bus 		
    27ec:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>
				if(state != 0){
    27f0:	ef 89       	ldd	r30, Y+23	; 0x17
    27f2:	f8 8d       	ldd	r31, Y+24	; 0x18
    27f4:	ef 2b       	or	r30, r31
    27f6:	89 f0       	breq	.+34     	; 0x281a <main+0x269e>
					OrangutanLCD::gotoXY(0,1);
    27f8:	80 e0       	ldi	r24, 0x00	; 0
    27fa:	61 e0       	ldi	r22, 0x01	; 1
    27fc:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
					OrangutanLCD::print("STATE ");
    2800:	89 ef       	ldi	r24, 0xF9	; 249
    2802:	92 e0       	ldi	r25, 0x02	; 2
    2804:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    2808:	2f 89       	ldd	r18, Y+23	; 0x17
    280a:	38 8d       	ldd	r19, Y+24	; 0x18
    280c:	b9 01       	movw	r22, r18
    280e:	88 27       	eor	r24, r24
    2810:	77 fd       	sbrc	r23, 7
    2812:	80 95       	com	r24
    2814:	98 2f       	mov	r25, r24
    2816:	0e 94 e6 1e 	call	0x3dcc	; 0x3dcc <_ZN12OrangutanLCD5printEl>
					OrangutanLCD::print(state);
				}

				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
    281a:	a1 14       	cp	r10, r1
    281c:	b1 04       	cpc	r11, r1
    281e:	09 f0       	breq	.+2      	; 0x2822 <main+0x26a6>
    2820:	90 c7       	rjmp	.+3872   	; 0x3742 <main+0x35c6>
    2822:	80 e0       	ldi	r24, 0x00	; 0
    2824:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    2828:	88 23       	and	r24, r24
    282a:	81 f1       	breq	.+96     	; 0x288c <main+0x2710>
    282c:	18 01       	movw	r2, r16
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
					if(counter - counterRefPush > 15){
    282e:	c8 01       	movw	r24, r16
    2830:	82 19       	sub	r24, r2
    2832:	93 09       	sbc	r25, r3
    2834:	40 97       	sbiw	r24, 0x10	; 16
    2836:	4c f0       	brlt	.+18     	; 0x284a <main+0x26ce>
						if(!OrangutanDigital::isInputHigh(IO_D0)){
    2838:	80 e0       	ldi	r24, 0x00	; 0
    283a:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    283e:	88 23       	and	r24, r24
    2840:	09 f0       	breq	.+2      	; 0x2844 <main+0x26c8>
    2842:	85 c7       	rjmp	.+3850   	; 0x374e <main+0x35d2>
    2844:	1c 87       	std	Y+12, r17	; 0x0c
    2846:	0b 87       	std	Y+11, r16	; 0x0b
    2848:	0b c0       	rjmp	.+22     	; 0x2860 <main+0x26e4>
							counterRefRel = counter;
							stateButton = 2;
						}
					}
					else if(!OrangutanDigital::isInputHigh(IO_D0)){
    284a:	80 e0       	ldi	r24, 0x00	; 0
    284c:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    2850:	88 23       	and	r24, r24
    2852:	09 f0       	breq	.+2      	; 0x2856 <main+0x26da>
    2854:	7c c7       	rjmp	.+3832   	; 0x374e <main+0x35d2>
    2856:	14 c0       	rjmp	.+40     	; 0x2880 <main+0x2704>
						stateButton = 0;
					}
				}
				if(stateButton == 2){
    2858:	32 e0       	ldi	r19, 0x02	; 2
    285a:	a3 16       	cp	r10, r19
    285c:	b1 04       	cpc	r11, r1
    285e:	b1 f4       	brne	.+44     	; 0x288c <main+0x2710>
					if(OrangutanDigital::isInputHigh(IO_D0)){
    2860:	80 e0       	ldi	r24, 0x00	; 0
    2862:	0e 94 67 00 	call	0xce	; 0xce <_ZN16OrangutanDigital11isInputHighEh>
    2866:	88 23       	and	r24, r24
    2868:	11 f0       	breq	.+4      	; 0x286e <main+0x26f2>
    286a:	18 01       	movw	r2, r16
    286c:	70 c7       	rjmp	.+3808   	; 0x374e <main+0x35d2>
						stateButton = 1;
						counterRefPush = counter;
					}
					else if(counter - counterRefRel > 15){
    286e:	c8 01       	movw	r24, r16
    2870:	4b 85       	ldd	r20, Y+11	; 0x0b
    2872:	5c 85       	ldd	r21, Y+12	; 0x0c
    2874:	84 1b       	sub	r24, r20
    2876:	95 0b       	sbc	r25, r21
    2878:	40 97       	sbiw	r24, 0x10	; 16
    287a:	2c f0       	brlt	.+10     	; 0x2886 <main+0x270a>
    287c:	18 86       	std	Y+8, r1	; 0x08
    287e:	1f 82       	std	Y+7, r1	; 0x07
    2880:	aa 24       	eor	r10, r10
    2882:	bb 24       	eor	r11, r11
    2884:	03 c0       	rjmp	.+6      	; 0x288c <main+0x2710>
    2886:	92 e0       	ldi	r25, 0x02	; 2
    2888:	a9 2e       	mov	r10, r25
    288a:	b1 2c       	mov	r11, r1
					}
				}

				//state conversions
	
				if(state == 0 && button == 0){
    288c:	8f 89       	ldd	r24, Y+23	; 0x17
    288e:	98 8d       	ldd	r25, Y+24	; 0x18
    2890:	89 2b       	or	r24, r25
    2892:	59 f4       	brne	.+22     	; 0x28aa <main+0x272e>
    2894:	ef 81       	ldd	r30, Y+7	; 0x07
    2896:	f8 85       	ldd	r31, Y+8	; 0x08
    2898:	ef 2b       	or	r30, r31
    289a:	09 f0       	breq	.+2      	; 0x289e <main+0x2722>
    289c:	4a c0       	rjmp	.+148    	; 0x2932 <main+0x27b6>
    289e:	78 01       	movw	r14, r16
    28a0:	21 e0       	ldi	r18, 0x01	; 1
    28a2:	30 e0       	ldi	r19, 0x00	; 0
    28a4:	38 87       	std	Y+8, r19	; 0x08
    28a6:	2f 83       	std	Y+7, r18	; 0x07
    28a8:	05 c0       	rjmp	.+10     	; 0x28b4 <main+0x2738>
					button = 1;
					state = 1;
					counterRef = counter;
				}
				if(state == 1 && counter - counterRef > totallength1*m1LoadPlate/*&& u_inputByte0.bits_in_inputByte0.plate == 0*/){
    28aa:	4f 89       	ldd	r20, Y+23	; 0x17
    28ac:	58 8d       	ldd	r21, Y+24	; 0x18
    28ae:	41 30       	cpi	r20, 0x01	; 1
    28b0:	51 05       	cpc	r21, r1
    28b2:	49 f4       	brne	.+18     	; 0x28c6 <main+0x274a>
    28b4:	c8 01       	movw	r24, r16
    28b6:	8e 19       	sub	r24, r14
    28b8:	9f 09       	sbc	r25, r15
    28ba:	81 5a       	subi	r24, 0xA1	; 161
    28bc:	9f 40       	sbci	r25, 0x0F	; 15
    28be:	0c f4       	brge	.+2      	; 0x28c2 <main+0x2746>
    28c0:	45 c0       	rjmp	.+138    	; 0x294c <main+0x27d0>
    28c2:	78 01       	movw	r14, r16
    28c4:	04 c0       	rjmp	.+8      	; 0x28ce <main+0x2752>
						state = 2;
					counterRef = counter;
				}
				if(state == 2 && counter - counterRef > pWait){
    28c6:	8f 89       	ldd	r24, Y+23	; 0x17
    28c8:	98 8d       	ldd	r25, Y+24	; 0x18
    28ca:	02 97       	sbiw	r24, 0x02	; 2
    28cc:	49 f4       	brne	.+18     	; 0x28e0 <main+0x2764>
    28ce:	c8 01       	movw	r24, r16
    28d0:	8e 19       	sub	r24, r14
    28d2:	9f 09       	sbc	r25, r15
    28d4:	85 36       	cpi	r24, 0x65	; 101
    28d6:	91 05       	cpc	r25, r1
    28d8:	0c f4       	brge	.+2      	; 0x28dc <main+0x2760>
    28da:	4a c0       	rjmp	.+148    	; 0x2970 <main+0x27f4>
    28dc:	78 01       	movw	r14, r16
    28de:	04 c0       	rjmp	.+8      	; 0x28e8 <main+0x276c>
					state = 3;
					counterRef = counter;
				}
				if(state == 3 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
    28e0:	ef 89       	ldd	r30, Y+23	; 0x17
    28e2:	f8 8d       	ldd	r31, Y+24	; 0x18
    28e4:	33 97       	sbiw	r30, 0x03	; 3
    28e6:	49 f4       	brne	.+18     	; 0x28fa <main+0x277e>
    28e8:	c8 01       	movw	r24, r16
    28ea:	8e 19       	sub	r24, r14
    28ec:	9f 09       	sbc	r25, r15
    28ee:	81 5a       	subi	r24, 0xA1	; 161
    28f0:	9f 40       	sbci	r25, 0x0F	; 15
    28f2:	0c f4       	brge	.+2      	; 0x28f6 <main+0x277a>
    28f4:	4e c0       	rjmp	.+156    	; 0x2992 <main+0x2816>
    28f6:	78 01       	movw	r14, r16
    28f8:	05 c0       	rjmp	.+10     	; 0x2904 <main+0x2788>
					state = 4;
					counterRef = counter;
				}
				if(state == 4 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
    28fa:	2f 89       	ldd	r18, Y+23	; 0x17
    28fc:	38 8d       	ldd	r19, Y+24	; 0x18
    28fe:	24 30       	cpi	r18, 0x04	; 4
    2900:	31 05       	cpc	r19, r1
    2902:	49 f4       	brne	.+18     	; 0x2916 <main+0x279a>
    2904:	c8 01       	movw	r24, r16
    2906:	8e 19       	sub	r24, r14
    2908:	9f 09       	sbc	r25, r15
    290a:	89 5e       	subi	r24, 0xE9	; 233
    290c:	93 40       	sbci	r25, 0x03	; 3
    290e:	0c f4       	brge	.+2      	; 0x2912 <main+0x2796>
    2910:	52 c0       	rjmp	.+164    	; 0x29b6 <main+0x283a>
    2912:	78 01       	movw	r14, r16
    2914:	05 c0       	rjmp	.+10     	; 0x2920 <main+0x27a4>
					state = 5;
					counterRef = counter;
				}
				if(state == 5 && counter - counterRef > pWait){
    2916:	4f 89       	ldd	r20, Y+23	; 0x17
    2918:	58 8d       	ldd	r21, Y+24	; 0x18
    291a:	45 30       	cpi	r20, 0x05	; 5
    291c:	51 05       	cpc	r21, r1
    291e:	49 f4       	brne	.+18     	; 0x2932 <main+0x27b6>
    2920:	c8 01       	movw	r24, r16
    2922:	8e 19       	sub	r24, r14
    2924:	9f 09       	sbc	r25, r15
    2926:	85 36       	cpi	r24, 0x65	; 101
    2928:	91 05       	cpc	r25, r1
    292a:	0c f4       	brge	.+2      	; 0x292e <main+0x27b2>
    292c:	53 c0       	rjmp	.+166    	; 0x29d4 <main+0x2858>
    292e:	78 01       	movw	r14, r16
    2930:	04 c0       	rjmp	.+8      	; 0x293a <main+0x27be>
						state = 6;
					counterRef = counter;
				}
				if(state == 6 && counter - counterRef > totallength2*m2Brush1Step /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush1 == 0*/){
    2932:	8f 89       	ldd	r24, Y+23	; 0x17
    2934:	98 8d       	ldd	r25, Y+24	; 0x18
    2936:	06 97       	sbiw	r24, 0x06	; 6
    2938:	69 f4       	brne	.+26     	; 0x2954 <main+0x27d8>
    293a:	c8 01       	movw	r24, r16
    293c:	8e 19       	sub	r24, r14
    293e:	9f 09       	sbc	r25, r15
    2940:	81 5a       	subi	r24, 0xA1	; 161
    2942:	9f 40       	sbci	r25, 0x0F	; 15
    2944:	0c f4       	brge	.+2      	; 0x2948 <main+0x27cc>
    2946:	58 c0       	rjmp	.+176    	; 0x29f8 <main+0x287c>
    2948:	78 01       	movw	r14, r16
    294a:	09 c0       	rjmp	.+18     	; 0x295e <main+0x27e2>
    294c:	21 e0       	ldi	r18, 0x01	; 1
    294e:	30 e0       	ldi	r19, 0x00	; 0
    2950:	38 8f       	std	Y+24, r19	; 0x18
    2952:	2f 8b       	std	Y+23, r18	; 0x17
					state = 7;
					counterRef = counter;
				}
				if(state == 7 && counter - counterRef > mWait){
    2954:	4f 89       	ldd	r20, Y+23	; 0x17
    2956:	58 8d       	ldd	r21, Y+24	; 0x18
    2958:	47 30       	cpi	r20, 0x07	; 7
    295a:	51 05       	cpc	r21, r1
    295c:	69 f4       	brne	.+26     	; 0x2978 <main+0x27fc>
    295e:	c8 01       	movw	r24, r16
    2960:	8e 19       	sub	r24, r14
    2962:	9f 09       	sbc	r25, r15
    2964:	85 36       	cpi	r24, 0x65	; 101
    2966:	91 05       	cpc	r25, r1
    2968:	0c f4       	brge	.+2      	; 0x296c <main+0x27f0>
    296a:	57 c0       	rjmp	.+174    	; 0x2a1a <main+0x289e>
    296c:	78 01       	movw	r14, r16
    296e:	08 c0       	rjmp	.+16     	; 0x2980 <main+0x2804>
    2970:	82 e0       	ldi	r24, 0x02	; 2
    2972:	90 e0       	ldi	r25, 0x00	; 0
    2974:	98 8f       	std	Y+24, r25	; 0x18
    2976:	8f 8b       	std	Y+23, r24	; 0x17
					state = 8;
					counterRef = counter;
				}
				if(state == 8 && counter - counterRef > pWait){
    2978:	ef 89       	ldd	r30, Y+23	; 0x17
    297a:	f8 8d       	ldd	r31, Y+24	; 0x18
    297c:	38 97       	sbiw	r30, 0x08	; 8
    297e:	69 f4       	brne	.+26     	; 0x299a <main+0x281e>
    2980:	c8 01       	movw	r24, r16
    2982:	8e 19       	sub	r24, r14
    2984:	9f 09       	sbc	r25, r15
    2986:	85 36       	cpi	r24, 0x65	; 101
    2988:	91 05       	cpc	r25, r1
    298a:	0c f4       	brge	.+2      	; 0x298e <main+0x2812>
    298c:	56 c0       	rjmp	.+172    	; 0x2a3a <main+0x28be>
    298e:	78 01       	movw	r14, r16
    2990:	09 c0       	rjmp	.+18     	; 0x29a4 <main+0x2828>
    2992:	23 e0       	ldi	r18, 0x03	; 3
    2994:	30 e0       	ldi	r19, 0x00	; 0
    2996:	38 8f       	std	Y+24, r19	; 0x18
    2998:	2f 8b       	std	Y+23, r18	; 0x17
					state = 9;
						counterRef = counter;
				}
					if(state == 9 && counter - counterRef > totallength2*m2HalfPlate){
    299a:	4f 89       	ldd	r20, Y+23	; 0x17
    299c:	58 8d       	ldd	r21, Y+24	; 0x18
    299e:	49 30       	cpi	r20, 0x09	; 9
    29a0:	51 05       	cpc	r21, r1
    29a2:	69 f4       	brne	.+26     	; 0x29be <main+0x2842>
    29a4:	c8 01       	movw	r24, r16
    29a6:	8e 19       	sub	r24, r14
    29a8:	9f 09       	sbc	r25, r15
    29aa:	81 5a       	subi	r24, 0xA1	; 161
    29ac:	9f 40       	sbci	r25, 0x0F	; 15
    29ae:	0c f4       	brge	.+2      	; 0x29b2 <main+0x2836>
    29b0:	55 c0       	rjmp	.+170    	; 0x2a5c <main+0x28e0>
    29b2:	78 01       	movw	r14, r16
    29b4:	08 c0       	rjmp	.+16     	; 0x29c6 <main+0x284a>
    29b6:	84 e0       	ldi	r24, 0x04	; 4
    29b8:	90 e0       	ldi	r25, 0x00	; 0
    29ba:	98 8f       	std	Y+24, r25	; 0x18
    29bc:	8f 8b       	std	Y+23, r24	; 0x17
					state = 10;
					counterRef = counter;
				}
				if(state == 10 && counter - counterRef > pWait){
    29be:	ef 89       	ldd	r30, Y+23	; 0x17
    29c0:	f8 8d       	ldd	r31, Y+24	; 0x18
    29c2:	3a 97       	sbiw	r30, 0x0a	; 10
    29c4:	59 f4       	brne	.+22     	; 0x29dc <main+0x2860>
    29c6:	c8 01       	movw	r24, r16
    29c8:	8e 19       	sub	r24, r14
    29ca:	9f 09       	sbc	r25, r15
    29cc:	85 36       	cpi	r24, 0x65	; 101
    29ce:	91 05       	cpc	r25, r1
    29d0:	54 f4       	brge	.+20     	; 0x29e6 <main+0x286a>
    29d2:	56 c0       	rjmp	.+172    	; 0x2a80 <main+0x2904>
    29d4:	25 e0       	ldi	r18, 0x05	; 5
    29d6:	30 e0       	ldi	r19, 0x00	; 0
    29d8:	38 8f       	std	Y+24, r19	; 0x18
    29da:	2f 8b       	std	Y+23, r18	; 0x17
					state = 11;
				}
				if(state == 11 && counter - counterRef > totallength2*m2HalfPlate /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush1 == 0*/){
    29dc:	4f 89       	ldd	r20, Y+23	; 0x17
    29de:	58 8d       	ldd	r21, Y+24	; 0x18
    29e0:	4b 30       	cpi	r20, 0x0B	; 11
    29e2:	51 05       	cpc	r21, r1
    29e4:	69 f4       	brne	.+26     	; 0x2a00 <main+0x2884>
    29e6:	c8 01       	movw	r24, r16
    29e8:	8e 19       	sub	r24, r14
    29ea:	9f 09       	sbc	r25, r15
    29ec:	81 5a       	subi	r24, 0xA1	; 161
    29ee:	9f 40       	sbci	r25, 0x0F	; 15
    29f0:	0c f4       	brge	.+2      	; 0x29f4 <main+0x2878>
    29f2:	57 c0       	rjmp	.+174    	; 0x2aa2 <main+0x2926>
    29f4:	78 01       	movw	r14, r16
    29f6:	08 c0       	rjmp	.+16     	; 0x2a08 <main+0x288c>
    29f8:	86 e0       	ldi	r24, 0x06	; 6
    29fa:	90 e0       	ldi	r25, 0x00	; 0
    29fc:	98 8f       	std	Y+24, r25	; 0x18
    29fe:	8f 8b       	std	Y+23, r24	; 0x17
					state = 12;
					counterRef = counter;
				}
				if(state == 12 && counter - counterRef > pWait){
    2a00:	ef 89       	ldd	r30, Y+23	; 0x17
    2a02:	f8 8d       	ldd	r31, Y+24	; 0x18
    2a04:	3c 97       	sbiw	r30, 0x0c	; 12
    2a06:	69 f4       	brne	.+26     	; 0x2a22 <main+0x28a6>
    2a08:	c8 01       	movw	r24, r16
    2a0a:	8e 19       	sub	r24, r14
    2a0c:	9f 09       	sbc	r25, r15
    2a0e:	85 36       	cpi	r24, 0x65	; 101
    2a10:	91 05       	cpc	r25, r1
    2a12:	0c f4       	brge	.+2      	; 0x2a16 <main+0x289a>
    2a14:	58 c0       	rjmp	.+176    	; 0x2ac6 <main+0x294a>
    2a16:	78 01       	movw	r14, r16
    2a18:	09 c0       	rjmp	.+18     	; 0x2a2c <main+0x28b0>
    2a1a:	27 e0       	ldi	r18, 0x07	; 7
    2a1c:	30 e0       	ldi	r19, 0x00	; 0
    2a1e:	38 8f       	std	Y+24, r19	; 0x18
    2a20:	2f 8b       	std	Y+23, r18	; 0x17
					state = 13;
					counterRef = counter;
				}
				if(state == 13 && counter - counterRef > totallength2*m2HalfPlate){
    2a22:	4f 89       	ldd	r20, Y+23	; 0x17
    2a24:	58 8d       	ldd	r21, Y+24	; 0x18
    2a26:	4d 30       	cpi	r20, 0x0D	; 13
    2a28:	51 05       	cpc	r21, r1
    2a2a:	59 f4       	brne	.+22     	; 0x2a42 <main+0x28c6>
    2a2c:	c8 01       	movw	r24, r16
    2a2e:	8e 19       	sub	r24, r14
    2a30:	9f 09       	sbc	r25, r15
    2a32:	81 5a       	subi	r24, 0xA1	; 161
    2a34:	9f 40       	sbci	r25, 0x0F	; 15
    2a36:	4c f4       	brge	.+18     	; 0x2a4a <main+0x28ce>
    2a38:	57 c0       	rjmp	.+174    	; 0x2ae8 <main+0x296c>
    2a3a:	88 e0       	ldi	r24, 0x08	; 8
    2a3c:	90 e0       	ldi	r25, 0x00	; 0
    2a3e:	98 8f       	std	Y+24, r25	; 0x18
    2a40:	8f 8b       	std	Y+23, r24	; 0x17
					state = 14;
					counterRef14 = counter;
					}
				if(state == 14 && counter - counterRef > totallength2*m2Brush2Step /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush2*/){
    2a42:	ef 89       	ldd	r30, Y+23	; 0x17
    2a44:	f8 8d       	ldd	r31, Y+24	; 0x18
    2a46:	3e 97       	sbiw	r30, 0x0e	; 14
    2a48:	69 f4       	brne	.+26     	; 0x2a64 <main+0x28e8>
    2a4a:	c8 01       	movw	r24, r16
    2a4c:	8e 19       	sub	r24, r14
    2a4e:	9f 09       	sbc	r25, r15
    2a50:	81 5a       	subi	r24, 0xA1	; 161
    2a52:	9f 40       	sbci	r25, 0x0F	; 15
    2a54:	0c f4       	brge	.+2      	; 0x2a58 <main+0x28dc>
    2a56:	5a c0       	rjmp	.+180    	; 0x2b0c <main+0x2990>
    2a58:	78 01       	movw	r14, r16
    2a5a:	09 c0       	rjmp	.+18     	; 0x2a6e <main+0x28f2>
    2a5c:	29 e0       	ldi	r18, 0x09	; 9
    2a5e:	30 e0       	ldi	r19, 0x00	; 0
    2a60:	38 8f       	std	Y+24, r19	; 0x18
    2a62:	2f 8b       	std	Y+23, r18	; 0x17
					state = 15;
					counterRef = counter;
				}
				if(state == 15 && counter - counterRef > mWait){
    2a64:	4f 89       	ldd	r20, Y+23	; 0x17
    2a66:	58 8d       	ldd	r21, Y+24	; 0x18
    2a68:	4f 30       	cpi	r20, 0x0F	; 15
    2a6a:	51 05       	cpc	r21, r1
    2a6c:	69 f4       	brne	.+26     	; 0x2a88 <main+0x290c>
    2a6e:	c8 01       	movw	r24, r16
    2a70:	8e 19       	sub	r24, r14
    2a72:	9f 09       	sbc	r25, r15
    2a74:	85 36       	cpi	r24, 0x65	; 101
    2a76:	91 05       	cpc	r25, r1
    2a78:	0c f4       	brge	.+2      	; 0x2a7c <main+0x2900>
    2a7a:	59 c0       	rjmp	.+178    	; 0x2b2e <main+0x29b2>
    2a7c:	78 01       	movw	r14, r16
    2a7e:	08 c0       	rjmp	.+16     	; 0x2a90 <main+0x2914>
    2a80:	8a e0       	ldi	r24, 0x0A	; 10
    2a82:	90 e0       	ldi	r25, 0x00	; 0
    2a84:	98 8f       	std	Y+24, r25	; 0x18
    2a86:	8f 8b       	std	Y+23, r24	; 0x17
					state = 16;
					counterRef = counter;
				}
				if(state == 16 && counter - counterRef > pWait){
    2a88:	ef 89       	ldd	r30, Y+23	; 0x17
    2a8a:	f8 8d       	ldd	r31, Y+24	; 0x18
    2a8c:	70 97       	sbiw	r30, 0x10	; 16
    2a8e:	69 f4       	brne	.+26     	; 0x2aaa <main+0x292e>
    2a90:	c8 01       	movw	r24, r16
    2a92:	8e 19       	sub	r24, r14
    2a94:	9f 09       	sbc	r25, r15
    2a96:	85 36       	cpi	r24, 0x65	; 101
    2a98:	91 05       	cpc	r25, r1
    2a9a:	0c f4       	brge	.+2      	; 0x2a9e <main+0x2922>
    2a9c:	5a c0       	rjmp	.+180    	; 0x2b52 <main+0x29d6>
    2a9e:	78 01       	movw	r14, r16
    2aa0:	09 c0       	rjmp	.+18     	; 0x2ab4 <main+0x2938>
    2aa2:	2b e0       	ldi	r18, 0x0B	; 11
    2aa4:	30 e0       	ldi	r19, 0x00	; 0
    2aa6:	38 8f       	std	Y+24, r19	; 0x18
    2aa8:	2f 8b       	std	Y+23, r18	; 0x17
					state = 17;
					counterRef = counter;
				}
				if(state == 17 && counter - counterRef > totallength2*m2HalfPlate){
    2aaa:	4f 89       	ldd	r20, Y+23	; 0x17
    2aac:	58 8d       	ldd	r21, Y+24	; 0x18
    2aae:	41 31       	cpi	r20, 0x11	; 17
    2ab0:	51 05       	cpc	r21, r1
    2ab2:	69 f4       	brne	.+26     	; 0x2ace <main+0x2952>
    2ab4:	c8 01       	movw	r24, r16
    2ab6:	8e 19       	sub	r24, r14
    2ab8:	9f 09       	sbc	r25, r15
    2aba:	81 5a       	subi	r24, 0xA1	; 161
    2abc:	9f 40       	sbci	r25, 0x0F	; 15
    2abe:	0c f4       	brge	.+2      	; 0x2ac2 <main+0x2946>
    2ac0:	59 c0       	rjmp	.+178    	; 0x2b74 <main+0x29f8>
    2ac2:	78 01       	movw	r14, r16
    2ac4:	08 c0       	rjmp	.+16     	; 0x2ad6 <main+0x295a>
    2ac6:	8c e0       	ldi	r24, 0x0C	; 12
    2ac8:	90 e0       	ldi	r25, 0x00	; 0
    2aca:	98 8f       	std	Y+24, r25	; 0x18
    2acc:	8f 8b       	std	Y+23, r24	; 0x17
					state = 18;
					counterRef = counter;
				}
				if(state == 18 && counter - counterRef > pWait){
    2ace:	ef 89       	ldd	r30, Y+23	; 0x17
    2ad0:	f8 8d       	ldd	r31, Y+24	; 0x18
    2ad2:	72 97       	sbiw	r30, 0x12	; 18
    2ad4:	69 f4       	brne	.+26     	; 0x2af0 <main+0x2974>
    2ad6:	c8 01       	movw	r24, r16
    2ad8:	8e 19       	sub	r24, r14
    2ada:	9f 09       	sbc	r25, r15
    2adc:	85 36       	cpi	r24, 0x65	; 101
    2ade:	91 05       	cpc	r25, r1
    2ae0:	0c f4       	brge	.+2      	; 0x2ae4 <main+0x2968>
    2ae2:	5a c0       	rjmp	.+180    	; 0x2b98 <main+0x2a1c>
    2ae4:	78 01       	movw	r14, r16
    2ae6:	09 c0       	rjmp	.+18     	; 0x2afa <main+0x297e>
    2ae8:	2d e0       	ldi	r18, 0x0D	; 13
    2aea:	30 e0       	ldi	r19, 0x00	; 0
    2aec:	38 8f       	std	Y+24, r19	; 0x18
    2aee:	2f 8b       	std	Y+23, r18	; 0x17
					state = 19;
					counterRef = counter;
				}
				if(state == 19 && counter - counterRef > totallength2*m2HalfPlate /*&& u_inputByte0.bits_in_inputByte0.fixtureBrush2 == 0*/){
    2af0:	4f 89       	ldd	r20, Y+23	; 0x17
    2af2:	58 8d       	ldd	r21, Y+24	; 0x18
    2af4:	43 31       	cpi	r20, 0x13	; 19
    2af6:	51 05       	cpc	r21, r1
    2af8:	69 f4       	brne	.+26     	; 0x2b14 <main+0x2998>
    2afa:	c8 01       	movw	r24, r16
    2afc:	8e 19       	sub	r24, r14
    2afe:	9f 09       	sbc	r25, r15
    2b00:	81 5a       	subi	r24, 0xA1	; 161
    2b02:	9f 40       	sbci	r25, 0x0F	; 15
    2b04:	0c f4       	brge	.+2      	; 0x2b08 <main+0x298c>
    2b06:	59 c0       	rjmp	.+178    	; 0x2bba <main+0x2a3e>
    2b08:	78 01       	movw	r14, r16
    2b0a:	08 c0       	rjmp	.+16     	; 0x2b1c <main+0x29a0>
    2b0c:	8e e0       	ldi	r24, 0x0E	; 14
    2b0e:	90 e0       	ldi	r25, 0x00	; 0
    2b10:	98 8f       	std	Y+24, r25	; 0x18
    2b12:	8f 8b       	std	Y+23, r24	; 0x17
					state = 20;
					counterRef = counter;
				}
				if(state == 20 && counter - counterRef > pWait){
    2b14:	ef 89       	ldd	r30, Y+23	; 0x17
    2b16:	f8 8d       	ldd	r31, Y+24	; 0x18
    2b18:	74 97       	sbiw	r30, 0x14	; 20
    2b1a:	69 f4       	brne	.+26     	; 0x2b36 <main+0x29ba>
    2b1c:	c8 01       	movw	r24, r16
    2b1e:	8e 19       	sub	r24, r14
    2b20:	9f 09       	sbc	r25, r15
    2b22:	85 36       	cpi	r24, 0x65	; 101
    2b24:	91 05       	cpc	r25, r1
    2b26:	0c f4       	brge	.+2      	; 0x2b2a <main+0x29ae>
    2b28:	58 c0       	rjmp	.+176    	; 0x2bda <main+0x2a5e>
    2b2a:	78 01       	movw	r14, r16
    2b2c:	09 c0       	rjmp	.+18     	; 0x2b40 <main+0x29c4>
    2b2e:	2f e0       	ldi	r18, 0x0F	; 15
    2b30:	30 e0       	ldi	r19, 0x00	; 0
    2b32:	38 8f       	std	Y+24, r19	; 0x18
    2b34:	2f 8b       	std	Y+23, r18	; 0x17
					state = 21;
					counterRef = counter;
				}
				if(state == 21 && counter - counterRef > totallength2*m2HalfPlate){
    2b36:	4f 89       	ldd	r20, Y+23	; 0x17
    2b38:	58 8d       	ldd	r21, Y+24	; 0x18
    2b3a:	45 31       	cpi	r20, 0x15	; 21
    2b3c:	51 05       	cpc	r21, r1
    2b3e:	69 f4       	brne	.+26     	; 0x2b5a <main+0x29de>
    2b40:	c8 01       	movw	r24, r16
    2b42:	8e 19       	sub	r24, r14
    2b44:	9f 09       	sbc	r25, r15
    2b46:	81 5a       	subi	r24, 0xA1	; 161
    2b48:	9f 40       	sbci	r25, 0x0F	; 15
    2b4a:	0c f4       	brge	.+2      	; 0x2b4e <main+0x29d2>
    2b4c:	58 c0       	rjmp	.+176    	; 0x2bfe <main+0x2a82>
    2b4e:	78 01       	movw	r14, r16
    2b50:	08 c0       	rjmp	.+16     	; 0x2b62 <main+0x29e6>
    2b52:	80 e1       	ldi	r24, 0x10	; 16
    2b54:	90 e0       	ldi	r25, 0x00	; 0
    2b56:	98 8f       	std	Y+24, r25	; 0x18
    2b58:	8f 8b       	std	Y+23, r24	; 0x17
					state = 22;
					counterRef = counter;
				}
				if(state == 22 && counter - counterRef > pWait){
    2b5a:	ef 89       	ldd	r30, Y+23	; 0x17
    2b5c:	f8 8d       	ldd	r31, Y+24	; 0x18
    2b5e:	76 97       	sbiw	r30, 0x16	; 22
    2b60:	69 f4       	brne	.+26     	; 0x2b7c <main+0x2a00>
    2b62:	c8 01       	movw	r24, r16
    2b64:	8e 19       	sub	r24, r14
    2b66:	9f 09       	sbc	r25, r15
    2b68:	85 36       	cpi	r24, 0x65	; 101
    2b6a:	91 05       	cpc	r25, r1
    2b6c:	0c f4       	brge	.+2      	; 0x2b70 <main+0x29f4>
    2b6e:	5b c0       	rjmp	.+182    	; 0x2c26 <main+0x2aaa>
    2b70:	78 01       	movw	r14, r16
    2b72:	09 c0       	rjmp	.+18     	; 0x2b86 <main+0x2a0a>
    2b74:	21 e1       	ldi	r18, 0x11	; 17
    2b76:	30 e0       	ldi	r19, 0x00	; 0
    2b78:	38 8f       	std	Y+24, r19	; 0x18
    2b7a:	2f 8b       	std	Y+23, r18	; 0x17
					state = 23;
					counterRef = counter;
				}
				if(state == 23 && counter - counterRef > totallength2*m2Dry1Step /*&& u_inputByte0.bits_in_inputByte0.fixtureDry1 == 0*/){
    2b7c:	4f 89       	ldd	r20, Y+23	; 0x17
    2b7e:	58 8d       	ldd	r21, Y+24	; 0x18
    2b80:	47 31       	cpi	r20, 0x17	; 23
    2b82:	51 05       	cpc	r21, r1
    2b84:	69 f4       	brne	.+26     	; 0x2ba0 <main+0x2a24>
    2b86:	c8 01       	movw	r24, r16
    2b88:	8e 19       	sub	r24, r14
    2b8a:	9f 09       	sbc	r25, r15
    2b8c:	81 5a       	subi	r24, 0xA1	; 161
    2b8e:	9f 40       	sbci	r25, 0x0F	; 15
    2b90:	0c f4       	brge	.+2      	; 0x2b94 <main+0x2a18>
    2b92:	5b c0       	rjmp	.+182    	; 0x2c4a <main+0x2ace>
    2b94:	78 01       	movw	r14, r16
    2b96:	08 c0       	rjmp	.+16     	; 0x2ba8 <main+0x2a2c>
    2b98:	82 e1       	ldi	r24, 0x12	; 18
    2b9a:	90 e0       	ldi	r25, 0x00	; 0
    2b9c:	98 8f       	std	Y+24, r25	; 0x18
    2b9e:	8f 8b       	std	Y+23, r24	; 0x17
					state = 24;
					counterRef = counter;
				}
				if(state == 24 && counter - counterRef > kWait){
    2ba0:	ef 89       	ldd	r30, Y+23	; 0x17
    2ba2:	f8 8d       	ldd	r31, Y+24	; 0x18
    2ba4:	78 97       	sbiw	r30, 0x18	; 24
    2ba6:	69 f4       	brne	.+26     	; 0x2bc2 <main+0x2a46>
    2ba8:	c8 01       	movw	r24, r16
    2baa:	8e 19       	sub	r24, r14
    2bac:	9f 09       	sbc	r25, r15
    2bae:	85 36       	cpi	r24, 0x65	; 101
    2bb0:	91 05       	cpc	r25, r1
    2bb2:	0c f4       	brge	.+2      	; 0x2bb6 <main+0x2a3a>
    2bb4:	59 c0       	rjmp	.+178    	; 0x2c68 <main+0x2aec>
    2bb6:	78 01       	movw	r14, r16
    2bb8:	09 c0       	rjmp	.+18     	; 0x2bcc <main+0x2a50>
    2bba:	23 e1       	ldi	r18, 0x13	; 19
    2bbc:	30 e0       	ldi	r19, 0x00	; 0
    2bbe:	38 8f       	std	Y+24, r19	; 0x18
    2bc0:	2f 8b       	std	Y+23, r18	; 0x17
					state = 25;
					counterRef = counter;
				}
				if(state == 25 && counter - counterRef > totallength2*m2WholePlate){
    2bc2:	4f 89       	ldd	r20, Y+23	; 0x17
    2bc4:	58 8d       	ldd	r21, Y+24	; 0x18
    2bc6:	49 31       	cpi	r20, 0x19	; 25
    2bc8:	51 05       	cpc	r21, r1
    2bca:	59 f4       	brne	.+22     	; 0x2be2 <main+0x2a66>
    2bcc:	c8 01       	movw	r24, r16
    2bce:	8e 19       	sub	r24, r14
    2bd0:	9f 09       	sbc	r25, r15
    2bd2:	81 5a       	subi	r24, 0xA1	; 161
    2bd4:	9f 40       	sbci	r25, 0x0F	; 15
    2bd6:	4c f4       	brge	.+18     	; 0x2bea <main+0x2a6e>
    2bd8:	59 c0       	rjmp	.+178    	; 0x2c8c <main+0x2b10>
    2bda:	84 e1       	ldi	r24, 0x14	; 20
    2bdc:	90 e0       	ldi	r25, 0x00	; 0
    2bde:	98 8f       	std	Y+24, r25	; 0x18
    2be0:	8f 8b       	std	Y+23, r24	; 0x17
					state = 26;
					counterRef26 = counter;
				}
				if(state == 26 && counter - counterRef > totallength2*m2Dry2Step /*&& u_inputByte0.bits_in_inputByte0.fixtureDry2 == 0*/){
    2be2:	ef 89       	ldd	r30, Y+23	; 0x17
    2be4:	f8 8d       	ldd	r31, Y+24	; 0x18
    2be6:	7a 97       	sbiw	r30, 0x1a	; 26
    2be8:	71 f4       	brne	.+28     	; 0x2c06 <main+0x2a8a>
    2bea:	c8 01       	movw	r24, r16
    2bec:	8e 19       	sub	r24, r14
    2bee:	9f 09       	sbc	r25, r15
    2bf0:	81 5a       	subi	r24, 0xA1	; 161
    2bf2:	9f 40       	sbci	r25, 0x0F	; 15
    2bf4:	0c f4       	brge	.+2      	; 0x2bf8 <main+0x2a7c>
    2bf6:	5b c0       	rjmp	.+182    	; 0x2cae <main+0x2b32>
    2bf8:	18 8b       	std	Y+16, r17	; 0x10
    2bfa:	0f 87       	std	Y+15, r16	; 0x0f
    2bfc:	09 c0       	rjmp	.+18     	; 0x2c10 <main+0x2a94>
    2bfe:	25 e1       	ldi	r18, 0x15	; 21
    2c00:	30 e0       	ldi	r19, 0x00	; 0
    2c02:	38 8f       	std	Y+24, r19	; 0x18
    2c04:	2f 8b       	std	Y+23, r18	; 0x17
					state = 27;
					counterRefFive = counter;
				}
				if(state == 27 && counter - counterRefFive > mWait){
    2c06:	4f 89       	ldd	r20, Y+23	; 0x17
    2c08:	58 8d       	ldd	r21, Y+24	; 0x18
    2c0a:	4b 31       	cpi	r20, 0x1B	; 27
    2c0c:	51 05       	cpc	r21, r1
    2c0e:	79 f4       	brne	.+30     	; 0x2c2e <main+0x2ab2>
    2c10:	c8 01       	movw	r24, r16
    2c12:	ef 85       	ldd	r30, Y+15	; 0x0f
    2c14:	f8 89       	ldd	r31, Y+16	; 0x10
    2c16:	8e 1b       	sub	r24, r30
    2c18:	9f 0b       	sbc	r25, r31
    2c1a:	85 36       	cpi	r24, 0x65	; 101
    2c1c:	91 05       	cpc	r25, r1
    2c1e:	0c f4       	brge	.+2      	; 0x2c22 <main+0x2aa6>
    2c20:	58 c0       	rjmp	.+176    	; 0x2cd2 <main+0x2b56>
    2c22:	78 01       	movw	r14, r16
    2c24:	09 c0       	rjmp	.+18     	; 0x2c38 <main+0x2abc>
    2c26:	26 e1       	ldi	r18, 0x16	; 22
    2c28:	30 e0       	ldi	r19, 0x00	; 0
    2c2a:	38 8f       	std	Y+24, r19	; 0x18
    2c2c:	2f 8b       	std	Y+23, r18	; 0x17
					state = 28;
					counterRef = counter;
				}
				if(state == 28 && counter - counterRef > pWait){
    2c2e:	4f 89       	ldd	r20, Y+23	; 0x17
    2c30:	58 8d       	ldd	r21, Y+24	; 0x18
    2c32:	4c 31       	cpi	r20, 0x1C	; 28
    2c34:	51 05       	cpc	r21, r1
    2c36:	69 f4       	brne	.+26     	; 0x2c52 <main+0x2ad6>
    2c38:	c8 01       	movw	r24, r16
    2c3a:	8e 19       	sub	r24, r14
    2c3c:	9f 09       	sbc	r25, r15
    2c3e:	85 36       	cpi	r24, 0x65	; 101
    2c40:	91 05       	cpc	r25, r1
    2c42:	0c f4       	brge	.+2      	; 0x2c46 <main+0x2aca>
    2c44:	57 c0       	rjmp	.+174    	; 0x2cf4 <main+0x2b78>
    2c46:	78 01       	movw	r14, r16
    2c48:	08 c0       	rjmp	.+16     	; 0x2c5a <main+0x2ade>
    2c4a:	87 e1       	ldi	r24, 0x17	; 23
    2c4c:	90 e0       	ldi	r25, 0x00	; 0
    2c4e:	98 8f       	std	Y+24, r25	; 0x18
    2c50:	8f 8b       	std	Y+23, r24	; 0x17
					state = 29;
					counterRef = counter;
				}
				if(state == 29 && counter - counterRef > totallength2*m2WholePlate){
    2c52:	ef 89       	ldd	r30, Y+23	; 0x17
    2c54:	f8 8d       	ldd	r31, Y+24	; 0x18
    2c56:	7d 97       	sbiw	r30, 0x1d	; 29
    2c58:	59 f4       	brne	.+22     	; 0x2c70 <main+0x2af4>
    2c5a:	c8 01       	movw	r24, r16
    2c5c:	8e 19       	sub	r24, r14
    2c5e:	9f 09       	sbc	r25, r15
    2c60:	81 5a       	subi	r24, 0xA1	; 161
    2c62:	9f 40       	sbci	r25, 0x0F	; 15
    2c64:	54 f4       	brge	.+20     	; 0x2c7a <main+0x2afe>
    2c66:	58 c0       	rjmp	.+176    	; 0x2d18 <main+0x2b9c>
    2c68:	28 e1       	ldi	r18, 0x18	; 24
    2c6a:	30 e0       	ldi	r19, 0x00	; 0
    2c6c:	38 8f       	std	Y+24, r19	; 0x18
    2c6e:	2f 8b       	std	Y+23, r18	; 0x17
					state = 30;
					counterRef30 = counter;
				}
				if(state == 30 && counter - counterRef > totallength2*m2LoadBack /*&& u_inputByte0.bits_in_inputByte0.fixturePlate == 0*/){
    2c70:	4f 89       	ldd	r20, Y+23	; 0x17
    2c72:	58 8d       	ldd	r21, Y+24	; 0x18
    2c74:	4e 31       	cpi	r20, 0x1E	; 30
    2c76:	51 05       	cpc	r21, r1
    2c78:	69 f4       	brne	.+26     	; 0x2c94 <main+0x2b18>
    2c7a:	c8 01       	movw	r24, r16
    2c7c:	8e 19       	sub	r24, r14
    2c7e:	9f 09       	sbc	r25, r15
    2c80:	81 5a       	subi	r24, 0xA1	; 161
    2c82:	9f 40       	sbci	r25, 0x0F	; 15
    2c84:	0c f4       	brge	.+2      	; 0x2c88 <main+0x2b0c>
    2c86:	59 c0       	rjmp	.+178    	; 0x2d3a <main+0x2bbe>
    2c88:	78 01       	movw	r14, r16
    2c8a:	08 c0       	rjmp	.+16     	; 0x2c9c <main+0x2b20>
    2c8c:	89 e1       	ldi	r24, 0x19	; 25
    2c8e:	90 e0       	ldi	r25, 0x00	; 0
    2c90:	98 8f       	std	Y+24, r25	; 0x18
    2c92:	8f 8b       	std	Y+23, r24	; 0x17
					state = 31;
					counterRef = counter;
				}
					if(state == 31 && counter - counterRef > 1000 /*&& u_inputByte0.bits_in_inputByte0.fixtureLift == 0*/){
    2c94:	ef 89       	ldd	r30, Y+23	; 0x17
    2c96:	f8 8d       	ldd	r31, Y+24	; 0x18
    2c98:	7f 97       	sbiw	r30, 0x1f	; 31
    2c9a:	69 f4       	brne	.+26     	; 0x2cb6 <main+0x2b3a>
    2c9c:	c8 01       	movw	r24, r16
    2c9e:	8e 19       	sub	r24, r14
    2ca0:	9f 09       	sbc	r25, r15
    2ca2:	89 5e       	subi	r24, 0xE9	; 233
    2ca4:	93 40       	sbci	r25, 0x03	; 3
    2ca6:	0c f4       	brge	.+2      	; 0x2caa <main+0x2b2e>
    2ca8:	7c c0       	rjmp	.+248    	; 0x2da2 <main+0x2c26>
    2caa:	78 01       	movw	r14, r16
    2cac:	09 c0       	rjmp	.+18     	; 0x2cc0 <main+0x2b44>
    2cae:	2a e1       	ldi	r18, 0x1A	; 26
    2cb0:	30 e0       	ldi	r19, 0x00	; 0
    2cb2:	38 8f       	std	Y+24, r19	; 0x18
    2cb4:	2f 8b       	std	Y+23, r18	; 0x17
					state = 32;
					counterRef = counter;
				}
				if(state == 32 && counter - counterRef > totallength2*m2HomeFix /*&& u_inputByte0.bits_in_inputByte0.fixtureHome == 0*/){
    2cb6:	4f 89       	ldd	r20, Y+23	; 0x17
    2cb8:	58 8d       	ldd	r21, Y+24	; 0x18
    2cba:	40 32       	cpi	r20, 0x20	; 32
    2cbc:	51 05       	cpc	r21, r1
    2cbe:	69 f4       	brne	.+26     	; 0x2cda <main+0x2b5e>
    2cc0:	c8 01       	movw	r24, r16
    2cc2:	8e 19       	sub	r24, r14
    2cc4:	9f 09       	sbc	r25, r15
    2cc6:	81 5a       	subi	r24, 0xA1	; 161
    2cc8:	9f 40       	sbci	r25, 0x0F	; 15
    2cca:	0c f4       	brge	.+2      	; 0x2cce <main+0x2b52>
    2ccc:	94 c0       	rjmp	.+296    	; 0x2df6 <main+0x2c7a>
    2cce:	78 01       	movw	r14, r16
    2cd0:	08 c0       	rjmp	.+16     	; 0x2ce2 <main+0x2b66>
    2cd2:	8b e1       	ldi	r24, 0x1B	; 27
    2cd4:	90 e0       	ldi	r25, 0x00	; 0
    2cd6:	98 8f       	std	Y+24, r25	; 0x18
    2cd8:	8f 8b       	std	Y+23, r24	; 0x17
					state = 33;
					counterRef = counter;
				}
				if(state == 33 && counter - counterRef > pWait){
    2cda:	ef 89       	ldd	r30, Y+23	; 0x17
    2cdc:	f8 8d       	ldd	r31, Y+24	; 0x18
    2cde:	b1 97       	sbiw	r30, 0x21	; 33
    2ce0:	69 f4       	brne	.+26     	; 0x2cfc <main+0x2b80>
    2ce2:	c8 01       	movw	r24, r16
    2ce4:	8e 19       	sub	r24, r14
    2ce6:	9f 09       	sbc	r25, r15
    2ce8:	85 36       	cpi	r24, 0x65	; 101
    2cea:	91 05       	cpc	r25, r1
    2cec:	0c f4       	brge	.+2      	; 0x2cf0 <main+0x2b74>
    2cee:	9a c0       	rjmp	.+308    	; 0x2e24 <main+0x2ca8>
    2cf0:	78 01       	movw	r14, r16
    2cf2:	09 c0       	rjmp	.+18     	; 0x2d06 <main+0x2b8a>
    2cf4:	2c e1       	ldi	r18, 0x1C	; 28
    2cf6:	30 e0       	ldi	r19, 0x00	; 0
    2cf8:	38 8f       	std	Y+24, r19	; 0x18
    2cfa:	2f 8b       	std	Y+23, r18	; 0x17
					state = 34;
					counterRef = counter;
				}
				if(state == 34 && counter - counterRef > totallength1*m1LoadPlate){
    2cfc:	4f 89       	ldd	r20, Y+23	; 0x17
    2cfe:	58 8d       	ldd	r21, Y+24	; 0x18
    2d00:	42 32       	cpi	r20, 0x22	; 34
    2d02:	51 05       	cpc	r21, r1
    2d04:	69 f4       	brne	.+26     	; 0x2d20 <main+0x2ba4>
    2d06:	c8 01       	movw	r24, r16
    2d08:	8e 19       	sub	r24, r14
    2d0a:	9f 09       	sbc	r25, r15
    2d0c:	81 5a       	subi	r24, 0xA1	; 161
    2d0e:	9f 40       	sbci	r25, 0x0F	; 15
    2d10:	0c f4       	brge	.+2      	; 0x2d14 <main+0x2b98>
    2d12:	9a c0       	rjmp	.+308    	; 0x2e48 <main+0x2ccc>
    2d14:	78 01       	movw	r14, r16
    2d16:	08 c0       	rjmp	.+16     	; 0x2d28 <main+0x2bac>
    2d18:	8d e1       	ldi	r24, 0x1D	; 29
    2d1a:	90 e0       	ldi	r25, 0x00	; 0
    2d1c:	98 8f       	std	Y+24, r25	; 0x18
    2d1e:	8f 8b       	std	Y+23, r24	; 0x17
					state = 35;
					counterRef = counter;
				}
				if(state == 35 && counter - counterRef > 10){
    2d20:	ef 89       	ldd	r30, Y+23	; 0x17
    2d22:	f8 8d       	ldd	r31, Y+24	; 0x18
    2d24:	b3 97       	sbiw	r30, 0x23	; 35
    2d26:	71 f4       	brne	.+28     	; 0x2d44 <main+0x2bc8>
    2d28:	c8 01       	movw	r24, r16
    2d2a:	8e 19       	sub	r24, r14
    2d2c:	9f 09       	sbc	r25, r15
    2d2e:	0b 97       	sbiw	r24, 0x0b	; 11
    2d30:	0c f4       	brge	.+2      	; 0x2d34 <main+0x2bb8>
    2d32:	11 c5       	rjmp	.+2594   	; 0x3756 <main+0x35da>
    2d34:	2f ef       	ldi	r18, 0xFF	; 255
    2d36:	3f ef       	ldi	r19, 0xFF	; 255
    2d38:	36 c0       	rjmp	.+108    	; 0x2da6 <main+0x2c2a>
    2d3a:	4e e1       	ldi	r20, 0x1E	; 30
    2d3c:	50 e0       	ldi	r21, 0x00	; 0
    2d3e:	58 8f       	std	Y+24, r21	; 0x18
    2d40:	4f 8b       	std	Y+23, r20	; 0x17
    2d42:	33 c0       	rjmp	.+102    	; 0x2daa <main+0x2c2e>
				}


				//state actions
						
				if(state == 0){
    2d44:	8f 89       	ldd	r24, Y+23	; 0x17
    2d46:	98 8d       	ldd	r25, Y+24	; 0x18
    2d48:	89 2b       	or	r24, r25
    2d4a:	79 f5       	brne	.+94     	; 0x2daa <main+0x2c2e>
					if(u_inputByte0.bits_in_inputByte0.fixtureHome == 1){
    2d4c:	80 91 3c 03 	lds	r24, 0x033C
    2d50:	90 91 38 03 	lds	r25, 0x0338
    2d54:	20 91 3a 03 	lds	r18, 0x033A
    2d58:	82 ff       	sbrs	r24, 2
    2d5a:	0a c0       	rjmp	.+20     	; 0x2d70 <main+0x2bf4>
						u_motorByte0.bits_in_motorByte0.m2Dir = 0;  //********* 0 is used as fixture backward ?cc?, 1 as forward ?c? **********
    2d5c:	9f 7e       	andi	r25, 0xEF	; 239
    2d5e:	90 93 38 03 	sts	0x0338, r25
						u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    2d62:	27 7f       	andi	r18, 0xF7	; 247
    2d64:	20 93 3a 03 	sts	0x033A, r18
    2d68:	81 e0       	ldi	r24, 0x01	; 1
    2d6a:	c8 2e       	mov	r12, r24
    2d6c:	d1 2c       	mov	r13, r1
    2d6e:	70 c0       	rjmp	.+224    	; 0x2e50 <main+0x2cd4>
						m2 = 1;
					}
					else{
						u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    2d70:	9f 7d       	andi	r25, 0xDF	; 223
    2d72:	90 93 38 03 	sts	0x0338, r25
						m2 = 0;
						u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    2d76:	2f 7e       	andi	r18, 0xEF	; 239
						u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    2d78:	28 60       	ori	r18, 0x08	; 8
    2d7a:	20 93 3a 03 	sts	0x033A, r18
						if(print0 == 1){
    2d7e:	eb 89       	ldd	r30, Y+19	; 0x13
    2d80:	fc 89       	ldd	r31, Y+20	; 0x14
    2d82:	31 97       	sbiw	r30, 0x01	; 1
    2d84:	09 f0       	breq	.+2      	; 0x2d88 <main+0x2c0c>
    2d86:	ec c4       	rjmp	.+2520   	; 0x3760 <main+0x35e4>
							OrangutanLCD::gotoXY(0,1);
    2d88:	80 e0       	ldi	r24, 0x00	; 0
    2d8a:	61 e0       	ldi	r22, 0x01	; 1
    2d8c:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
							OrangutanLCD::print("PUSH TO START");
    2d90:	80 e0       	ldi	r24, 0x00	; 0
    2d92:	93 e0       	ldi	r25, 0x03	; 3
    2d94:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    2d98:	cc 24       	eor	r12, r12
    2d9a:	dd 24       	eor	r13, r13
    2d9c:	1c 8a       	std	Y+20, r1	; 0x14
    2d9e:	1b 8a       	std	Y+19, r1	; 0x13
    2da0:	57 c0       	rjmp	.+174    	; 0x2e50 <main+0x2cd4>
    2da2:	2f e1       	ldi	r18, 0x1F	; 31
    2da4:	30 e0       	ldi	r19, 0x00	; 0
    2da6:	38 8f       	std	Y+24, r19	; 0x18
    2da8:	2f 8b       	std	Y+23, r18	; 0x17
							print0 = 0;
						}
					}
				}
				if(state == 1){
    2daa:	4f 89       	ldd	r20, Y+23	; 0x17
    2dac:	58 8d       	ldd	r21, Y+24	; 0x18
    2dae:	41 30       	cpi	r20, 0x01	; 1
    2db0:	51 05       	cpc	r21, r1
    2db2:	29 f5       	brne	.+74     	; 0x2dfe <main+0x2c82>
					//OrangutanLCD::clear();
					u_outputByte0.bits_in_outputByte0.ACPower = 0;
    2db4:	20 91 3a 03 	lds	r18, 0x033A
    2db8:	32 2f       	mov	r19, r18
    2dba:	3e 7f       	andi	r19, 0xFE	; 254
					if((counter % 200) < 100){
    2dbc:	c8 01       	movw	r24, r16
    2dbe:	68 ec       	ldi	r22, 0xC8	; 200
    2dc0:	70 e0       	ldi	r23, 0x00	; 0
    2dc2:	0e 94 b9 21 	call	0x4372	; 0x4372 <__divmodhi4>
    2dc6:	84 36       	cpi	r24, 0x64	; 100
    2dc8:	91 05       	cpc	r25, r1
    2dca:	24 f4       	brge	.+8      	; 0x2dd4 <main+0x2c58>
						u_outputByte0.bits_in_outputByte0.blowerPulse = 0;
    2dcc:	2c 7f       	andi	r18, 0xFC	; 252
    2dce:	20 93 3a 03 	sts	0x033A, r18
    2dd2:	03 c0       	rjmp	.+6      	; 0x2dda <main+0x2c5e>
					}
					else{
						u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
    2dd4:	32 60       	ori	r19, 0x02	; 2
    2dd6:	30 93 3a 03 	sts	0x033A, r19
					}
					m1 = 1;
					u_motorByte0.bits_in_motorByte0.m1Dir = 1;  //****** dir1 ******
    2dda:	80 91 38 03 	lds	r24, 0x0338
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
    2dde:	86 60       	ori	r24, 0x06	; 6
    2de0:	80 93 38 03 	sts	0x0338, r24
					u_outputByte0.bits_in_outputByte0.plateStop = 0;
    2de4:	80 91 3a 03 	lds	r24, 0x033A
    2de8:	8b 7f       	andi	r24, 0xFB	; 251
    2dea:	80 93 3a 03 	sts	0x033A, r24
    2dee:	b1 e0       	ldi	r27, 0x01	; 1
    2df0:	8b 2e       	mov	r8, r27
    2df2:	91 2c       	mov	r9, r1
    2df4:	2d c0       	rjmp	.+90     	; 0x2e50 <main+0x2cd4>
    2df6:	80 e2       	ldi	r24, 0x20	; 32
    2df8:	90 e0       	ldi	r25, 0x00	; 0
    2dfa:	98 8f       	std	Y+24, r25	; 0x18
    2dfc:	8f 8b       	std	Y+23, r24	; 0x17
				}
				if(state == 2){
    2dfe:	ef 89       	ldd	r30, Y+23	; 0x17
    2e00:	f8 8d       	ldd	r31, Y+24	; 0x18
    2e02:	32 97       	sbiw	r30, 0x02	; 2
    2e04:	99 f4       	brne	.+38     	; 0x2e2c <main+0x2cb0>
					u_outputByte0.bits_in_outputByte0.blowerPulse = 1;
    2e06:	80 91 3a 03 	lds	r24, 0x033A
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    2e0a:	81 7e       	andi	r24, 0xE1	; 225
					u_outputByte0.bits_in_outputByte0.plateStop = 1;
    2e0c:	86 61       	ori	r24, 0x16	; 22
    2e0e:	80 93 3a 03 	sts	0x033A, r24
						m1 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    2e12:	80 91 38 03 	lds	r24, 0x0338
    2e16:	80 62       	ori	r24, 0x20	; 32
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    2e18:	8b 7f       	andi	r24, 0xFB	; 251
    2e1a:	80 93 38 03 	sts	0x0338, r24
    2e1e:	88 24       	eor	r8, r8
    2e20:	99 24       	eor	r9, r9
    2e22:	45 c0       	rjmp	.+138    	; 0x2eae <main+0x2d32>
    2e24:	21 e2       	ldi	r18, 0x21	; 33
    2e26:	30 e0       	ldi	r19, 0x00	; 0
    2e28:	38 8f       	std	Y+24, r19	; 0x18
    2e2a:	2f 8b       	std	Y+23, r18	; 0x17
				}	
				if(state == 3){
    2e2c:	4f 89       	ldd	r20, Y+23	; 0x17
    2e2e:	58 8d       	ldd	r21, Y+24	; 0x18
    2e30:	43 30       	cpi	r20, 0x03	; 3
    2e32:	51 05       	cpc	r21, r1
    2e34:	69 f4       	brne	.+26     	; 0x2e50 <main+0x2cd4>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ****** dir2 *******
    2e36:	80 91 38 03 	lds	r24, 0x0338
    2e3a:	80 61       	ori	r24, 0x10	; 16
    2e3c:	80 93 38 03 	sts	0x0338, r24
    2e40:	a1 e0       	ldi	r26, 0x01	; 1
    2e42:	ca 2e       	mov	r12, r26
    2e44:	d1 2c       	mov	r13, r1
    2e46:	44 c0       	rjmp	.+136    	; 0x2ed0 <main+0x2d54>
    2e48:	82 e2       	ldi	r24, 0x22	; 34
    2e4a:	90 e0       	ldi	r25, 0x00	; 0
    2e4c:	98 8f       	std	Y+24, r25	; 0x18
    2e4e:	8f 8b       	std	Y+23, r24	; 0x17
					m2 = 1;
				}
				if(state == 4){
    2e50:	ef 89       	ldd	r30, Y+23	; 0x17
    2e52:	f8 8d       	ldd	r31, Y+24	; 0x18
    2e54:	34 97       	sbiw	r30, 0x04	; 4
    2e56:	69 f4       	brne	.+26     	; 0x2e72 <main+0x2cf6>
						m2 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    2e58:	80 91 38 03 	lds	r24, 0x0338
    2e5c:	8f 7d       	andi	r24, 0xDF	; 223
    2e5e:	80 93 38 03 	sts	0x0338, r24
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    2e62:	80 91 3a 03 	lds	r24, 0x033A
    2e66:	88 60       	ori	r24, 0x08	; 8
    2e68:	80 93 3a 03 	sts	0x033A, r24
    2e6c:	cc 24       	eor	r12, r12
    2e6e:	dd 24       	eor	r13, r13
    2e70:	3d c0       	rjmp	.+122    	; 0x2eec <main+0x2d70>
				}
				if(state == 5){
    2e72:	2f 89       	ldd	r18, Y+23	; 0x17
    2e74:	38 8d       	ldd	r19, Y+24	; 0x18
    2e76:	25 30       	cpi	r18, 0x05	; 5
    2e78:	31 05       	cpc	r19, r1
    2e7a:	59 f4       	brne	.+22     	; 0x2e92 <main+0x2d16>
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    2e7c:	80 91 3a 03 	lds	r24, 0x033A
    2e80:	8f 7e       	andi	r24, 0xEF	; 239
    2e82:	80 93 3a 03 	sts	0x033A, r24
					u_motorByte0.bits_in_motorByte0.m2Drop = 1;
    2e86:	80 91 38 03 	lds	r24, 0x0338
    2e8a:	80 62       	ori	r24, 0x20	; 32
    2e8c:	80 93 38 03 	sts	0x0338, r24
    2e90:	3b c0       	rjmp	.+118    	; 0x2f08 <main+0x2d8c>
				}
				//*********************************************
				if(state == 6){
    2e92:	4f 89       	ldd	r20, Y+23	; 0x17
    2e94:	58 8d       	ldd	r21, Y+24	; 0x18
    2e96:	46 30       	cpi	r20, 0x06	; 6
    2e98:	51 05       	cpc	r21, r1
    2e9a:	49 f4       	brne	.+18     	; 0x2eae <main+0x2d32>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    2e9c:	80 91 38 03 	lds	r24, 0x0338
    2ea0:	80 61       	ori	r24, 0x10	; 16
    2ea2:	80 93 38 03 	sts	0x0338, r24
    2ea6:	f1 e0       	ldi	r31, 0x01	; 1
    2ea8:	cf 2e       	mov	r12, r31
    2eaa:	d1 2c       	mov	r13, r1
    2eac:	3d c0       	rjmp	.+122    	; 0x2f28 <main+0x2dac>
					m2 = 1;
				}
				if(state == 7){
    2eae:	8f 89       	ldd	r24, Y+23	; 0x17
    2eb0:	98 8d       	ldd	r25, Y+24	; 0x18
    2eb2:	07 97       	sbiw	r24, 0x07	; 7
    2eb4:	69 f4       	brne	.+26     	; 0x2ed0 <main+0x2d54>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m3Drop = 1;
    2eb6:	80 91 39 03 	lds	r24, 0x0339
    2eba:	81 60       	ori	r24, 0x01	; 1
    2ebc:	80 93 39 03 	sts	0x0339, r24
					u_motorByte0.bits_in_motorByte0.m3Dir = 0;  // ******* dir3 *******
    2ec0:	80 91 38 03 	lds	r24, 0x0338
    2ec4:	8f 77       	andi	r24, 0x7F	; 127
    2ec6:	80 93 38 03 	sts	0x0338, r24
    2eca:	cc 24       	eor	r12, r12
    2ecc:	dd 24       	eor	r13, r13
    2ece:	39 c0       	rjmp	.+114    	; 0x2f42 <main+0x2dc6>
						OrangutanLCD::clear();
						OrangutanLCD::print("Clean 1");
						print6 = 0;
					}*/
				}
				if(state == 8){
    2ed0:	ef 89       	ldd	r30, Y+23	; 0x17
    2ed2:	f8 8d       	ldd	r31, Y+24	; 0x18
    2ed4:	38 97       	sbiw	r30, 0x08	; 8
    2ed6:	51 f4       	brne	.+20     	; 0x2eec <main+0x2d70>
					m3 = 1;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
    2ed8:	80 91 3a 03 	lds	r24, 0x033A
    2edc:	80 64       	ori	r24, 0x40	; 64
					u_outputByte0.bits_in_outputByte0.brush1Raise = 0;
    2ede:	8f 7d       	andi	r24, 0xDF	; 223
    2ee0:	80 93 3a 03 	sts	0x033A, r24
    2ee4:	e1 e0       	ldi	r30, 0x01	; 1
    2ee6:	4e 2e       	mov	r4, r30
    2ee8:	51 2c       	mov	r5, r1
    2eea:	40 c0       	rjmp	.+128    	; 0x2f6c <main+0x2df0>
				}
				if(state == 9){
    2eec:	2f 89       	ldd	r18, Y+23	; 0x17
    2eee:	38 8d       	ldd	r19, Y+24	; 0x18
    2ef0:	29 30       	cpi	r18, 0x09	; 9
    2ef2:	31 05       	cpc	r19, r1
    2ef4:	49 f4       	brne	.+18     	; 0x2f08 <main+0x2d8c>
					m2 = 1;
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    2ef6:	80 91 38 03 	lds	r24, 0x0338
    2efa:	8f 7e       	andi	r24, 0xEF	; 239
    2efc:	80 93 38 03 	sts	0x0338, r24
    2f00:	71 e0       	ldi	r23, 0x01	; 1
    2f02:	c7 2e       	mov	r12, r23
    2f04:	d1 2c       	mov	r13, r1
    2f06:	38 c0       	rjmp	.+112    	; 0x2f78 <main+0x2dfc>
				}
				if(state == 10){
    2f08:	4f 89       	ldd	r20, Y+23	; 0x17
    2f0a:	58 8d       	ldd	r21, Y+24	; 0x18
    2f0c:	4a 30       	cpi	r20, 0x0A	; 10
    2f0e:	51 05       	cpc	r21, r1
    2f10:	59 f4       	brne	.+22     	; 0x2f28 <main+0x2dac>
					m2 = 0;
					m3 = 0;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
    2f12:	80 91 3a 03 	lds	r24, 0x033A
    2f16:	8f 7b       	andi	r24, 0xBF	; 191
					u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
    2f18:	80 62       	ori	r24, 0x20	; 32
    2f1a:	80 93 3a 03 	sts	0x033A, r24
    2f1e:	44 24       	eor	r4, r4
    2f20:	55 24       	eor	r5, r5
    2f22:	cc 24       	eor	r12, r12
    2f24:	dd 24       	eor	r13, r13
    2f26:	3b c0       	rjmp	.+118    	; 0x2f9e <main+0x2e22>
				}
				if(state == 11){
    2f28:	8f 89       	ldd	r24, Y+23	; 0x17
    2f2a:	98 8d       	ldd	r25, Y+24	; 0x18
    2f2c:	0b 97       	sbiw	r24, 0x0b	; 11
    2f2e:	49 f4       	brne	.+18     	; 0x2f42 <main+0x2dc6>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    2f30:	80 91 38 03 	lds	r24, 0x0338
    2f34:	80 61       	ori	r24, 0x10	; 16
    2f36:	80 93 38 03 	sts	0x0338, r24
    2f3a:	61 e0       	ldi	r22, 0x01	; 1
    2f3c:	c6 2e       	mov	r12, r22
    2f3e:	d1 2c       	mov	r13, r1
    2f40:	3b c0       	rjmp	.+118    	; 0x2fb8 <main+0x2e3c>
					m2 = 1;
				}
				if(state == 12){
    2f42:	ef 89       	ldd	r30, Y+23	; 0x17
    2f44:	f8 8d       	ldd	r31, Y+24	; 0x18
    2f46:	3c 97       	sbiw	r30, 0x0c	; 12
    2f48:	89 f4       	brne	.+34     	; 0x2f6c <main+0x2df0>
					m2 = 0;
					u_motorByte0.bits_in_motorByte0.m3Dir = 0;  // ******* dir3 *******
    2f4a:	80 91 38 03 	lds	r24, 0x0338
    2f4e:	8f 77       	andi	r24, 0x7F	; 127
    2f50:	80 93 38 03 	sts	0x0338, r24
					m3 = 1;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 1;
    2f54:	80 91 3a 03 	lds	r24, 0x033A
    2f58:	80 64       	ori	r24, 0x40	; 64
					u_outputByte0.bits_in_outputByte0.brush1Raise = 0;
    2f5a:	8f 7d       	andi	r24, 0xDF	; 223
    2f5c:	80 93 3a 03 	sts	0x033A, r24
    2f60:	cc 24       	eor	r12, r12
    2f62:	dd 24       	eor	r13, r13
    2f64:	51 e0       	ldi	r21, 0x01	; 1
    2f66:	45 2e       	mov	r4, r21
    2f68:	51 2c       	mov	r5, r1
    2f6a:	38 c0       	rjmp	.+112    	; 0x2fdc <main+0x2e60>
				}
				if(state == 13){
    2f6c:	2f 89       	ldd	r18, Y+23	; 0x17
    2f6e:	38 8d       	ldd	r19, Y+24	; 0x18
    2f70:	2d 30       	cpi	r18, 0x0D	; 13
    2f72:	31 05       	cpc	r19, r1
    2f74:	09 f4       	brne	.+2      	; 0x2f78 <main+0x2dfc>
    2f76:	40 c0       	rjmp	.+128    	; 0x2ff8 <main+0x2e7c>
					m2 = 1;
				}
				if(state == 14){
    2f78:	4f 89       	ldd	r20, Y+23	; 0x17
    2f7a:	58 8d       	ldd	r21, Y+24	; 0x18
    2f7c:	4e 30       	cpi	r20, 0x0E	; 14
    2f7e:	51 05       	cpc	r21, r1
    2f80:	71 f4       	brne	.+28     	; 0x2f9e <main+0x2e22>
					m3 = 0;
					u_outputByte0.bits_in_outputByte0.brush1Lower = 0;
    2f82:	80 91 3a 03 	lds	r24, 0x033A
    2f86:	8f 7b       	andi	r24, 0xBF	; 191
					u_outputByte0.bits_in_outputByte0.brush1Raise = 1;
    2f88:	80 62       	ori	r24, 0x20	; 32
    2f8a:	80 93 3a 03 	sts	0x033A, r24
					u_motorByte1.bits_in_motorByte1.m3Drop = 0;
    2f8e:	80 91 39 03 	lds	r24, 0x0339
    2f92:	8e 7f       	andi	r24, 0xFE	; 254
    2f94:	80 93 39 03 	sts	0x0339, r24
    2f98:	44 24       	eor	r4, r4
    2f9a:	55 24       	eor	r5, r5
    2f9c:	44 c0       	rjmp	.+136    	; 0x3026 <main+0x2eaa>
				}
				//*************************** may need to reverse order depending on dry station 1 positioning ***************************
				if(state == 15){
    2f9e:	8f 89       	ldd	r24, Y+23	; 0x17
    2fa0:	98 8d       	ldd	r25, Y+24	; 0x18
    2fa2:	0f 97       	sbiw	r24, 0x0f	; 15
    2fa4:	49 f4       	brne	.+18     	; 0x2fb8 <main+0x2e3c>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m4Drop = 1;
    2fa6:	80 91 39 03 	lds	r24, 0x0339
    2faa:	88 60       	ori	r24, 0x08	; 8
					u_motorByte1.bits_in_motorByte1.m4Dir = 0;  // ******* dir4 *******
    2fac:	8b 7f       	andi	r24, 0xFB	; 251
    2fae:	80 93 39 03 	sts	0x0339, r24
    2fb2:	cc 24       	eor	r12, r12
    2fb4:	dd 24       	eor	r13, r13
    2fb6:	44 c0       	rjmp	.+136    	; 0x3040 <main+0x2ec4>
						OrangutanLCD::clear();
						OrangutanLCD::print("Clean 2");
						print15 = 0;
					}*/
				}
				if(state == 16){
    2fb8:	ef 89       	ldd	r30, Y+23	; 0x17
    2fba:	f8 8d       	ldd	r31, Y+24	; 0x18
    2fbc:	70 97       	sbiw	r30, 0x10	; 16
    2fbe:	71 f4       	brne	.+28     	; 0x2fdc <main+0x2e60>
					m4 = 1;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
    2fc0:	80 91 3b 03 	lds	r24, 0x033B
    2fc4:	81 60       	ori	r24, 0x01	; 1
    2fc6:	80 93 3b 03 	sts	0x033B, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 0;
    2fca:	80 91 3a 03 	lds	r24, 0x033A
    2fce:	8f 77       	andi	r24, 0x7F	; 127
    2fd0:	80 93 3a 03 	sts	0x033A, r24
    2fd4:	41 e0       	ldi	r20, 0x01	; 1
    2fd6:	64 2e       	mov	r6, r20
    2fd8:	71 2c       	mov	r7, r1
    2fda:	4b c0       	rjmp	.+150    	; 0x3072 <main+0x2ef6>
				}
				if(state == 17){
    2fdc:	2f 89       	ldd	r18, Y+23	; 0x17
    2fde:	38 8d       	ldd	r19, Y+24	; 0x18
    2fe0:	21 31       	cpi	r18, 0x11	; 17
    2fe2:	31 05       	cpc	r19, r1
    2fe4:	61 f4       	brne	.+24     	; 0x2ffe <main+0x2e82>
					m2 = 1;
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    2fe6:	80 91 38 03 	lds	r24, 0x0338
    2fea:	8f 7e       	andi	r24, 0xEF	; 239
    2fec:	80 93 38 03 	sts	0x0338, r24
    2ff0:	31 e0       	ldi	r19, 0x01	; 1
    2ff2:	c3 2e       	mov	r12, r19
    2ff4:	d1 2c       	mov	r13, r1
    2ff6:	43 c0       	rjmp	.+134    	; 0x307e <main+0x2f02>
    2ff8:	21 e0       	ldi	r18, 0x01	; 1
    2ffa:	c2 2e       	mov	r12, r18
    2ffc:	d1 2c       	mov	r13, r1
				}
				if(state == 18){
    2ffe:	4f 89       	ldd	r20, Y+23	; 0x17
    3000:	58 8d       	ldd	r21, Y+24	; 0x18
    3002:	42 31       	cpi	r20, 0x12	; 18
    3004:	51 05       	cpc	r21, r1
    3006:	79 f4       	brne	.+30     	; 0x3026 <main+0x2eaa>
					m2 = 0;
					m4 = 0;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 0;
    3008:	80 91 3b 03 	lds	r24, 0x033B
    300c:	8e 7f       	andi	r24, 0xFE	; 254
    300e:	80 93 3b 03 	sts	0x033B, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
    3012:	80 91 3a 03 	lds	r24, 0x033A
    3016:	80 68       	ori	r24, 0x80	; 128
    3018:	80 93 3a 03 	sts	0x033A, r24
    301c:	cc 24       	eor	r12, r12
    301e:	dd 24       	eor	r13, r13
    3020:	66 24       	eor	r6, r6
    3022:	77 24       	eor	r7, r7
    3024:	45 c0       	rjmp	.+138    	; 0x30b0 <main+0x2f34>
				}
				if(state == 19){
    3026:	8f 89       	ldd	r24, Y+23	; 0x17
    3028:	98 8d       	ldd	r25, Y+24	; 0x18
    302a:	43 97       	sbiw	r24, 0x13	; 19
    302c:	49 f4       	brne	.+18     	; 0x3040 <main+0x2ec4>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    302e:	80 91 38 03 	lds	r24, 0x0338
    3032:	80 61       	ori	r24, 0x10	; 16
    3034:	80 93 38 03 	sts	0x0338, r24
    3038:	91 e0       	ldi	r25, 0x01	; 1
    303a:	c9 2e       	mov	r12, r25
    303c:	d1 2c       	mov	r13, r1
    303e:	45 c0       	rjmp	.+138    	; 0x30ca <main+0x2f4e>
					m2 = 1;
				}
				if(state == 20){
    3040:	ef 89       	ldd	r30, Y+23	; 0x17
    3042:	f8 8d       	ldd	r31, Y+24	; 0x18
    3044:	74 97       	sbiw	r30, 0x14	; 20
    3046:	a9 f4       	brne	.+42     	; 0x3072 <main+0x2ef6>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m4Dir = 0;  // ******* dir4 *******
    3048:	80 91 39 03 	lds	r24, 0x0339
    304c:	8b 7f       	andi	r24, 0xFB	; 251
    304e:	80 93 39 03 	sts	0x0339, r24
					m4 = 1;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 1;
    3052:	80 91 3b 03 	lds	r24, 0x033B
    3056:	81 60       	ori	r24, 0x01	; 1
    3058:	80 93 3b 03 	sts	0x033B, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 0;
    305c:	80 91 3a 03 	lds	r24, 0x033A
    3060:	8f 77       	andi	r24, 0x7F	; 127
    3062:	80 93 3a 03 	sts	0x033A, r24
    3066:	cc 24       	eor	r12, r12
    3068:	dd 24       	eor	r13, r13
    306a:	81 e0       	ldi	r24, 0x01	; 1
    306c:	68 2e       	mov	r6, r24
    306e:	71 2c       	mov	r7, r1
    3070:	38 c0       	rjmp	.+112    	; 0x30e2 <main+0x2f66>
				}
				if(state == 21){
    3072:	2f 89       	ldd	r18, Y+23	; 0x17
    3074:	38 8d       	ldd	r19, Y+24	; 0x18
    3076:	25 31       	cpi	r18, 0x15	; 21
    3078:	31 05       	cpc	r19, r1
    307a:	09 f4       	brne	.+2      	; 0x307e <main+0x2f02>
    307c:	40 c0       	rjmp	.+128    	; 0x30fe <main+0x2f82>
					m2 = 1;
				}
				if(state == 22){
    307e:	4f 89       	ldd	r20, Y+23	; 0x17
    3080:	58 8d       	ldd	r21, Y+24	; 0x18
    3082:	46 31       	cpi	r20, 0x16	; 22
    3084:	51 05       	cpc	r21, r1
    3086:	a1 f4       	brne	.+40     	; 0x30b0 <main+0x2f34>
					m4 = 0;
					m2 = 0;
					u_outputByte1.bits_in_outputByte1.brush2Lower = 0;
    3088:	80 91 3b 03 	lds	r24, 0x033B
    308c:	8e 7f       	andi	r24, 0xFE	; 254
    308e:	80 93 3b 03 	sts	0x033B, r24
					u_outputByte0.bits_in_outputByte0.brush2Raise = 1;
    3092:	80 91 3a 03 	lds	r24, 0x033A
    3096:	80 68       	ori	r24, 0x80	; 128
    3098:	80 93 3a 03 	sts	0x033A, r24
					u_motorByte1.bits_in_motorByte1.m4Drop = 0;
    309c:	80 91 39 03 	lds	r24, 0x0339
    30a0:	87 7f       	andi	r24, 0xF7	; 247
    30a2:	80 93 39 03 	sts	0x0339, r24
    30a6:	cc 24       	eor	r12, r12
    30a8:	dd 24       	eor	r13, r13
    30aa:	66 24       	eor	r6, r6
    30ac:	77 24       	eor	r7, r7
    30ae:	35 c0       	rjmp	.+106    	; 0x311a <main+0x2f9e>
				}
				//*************************************************
				if(state == 23){
    30b0:	8f 89       	ldd	r24, Y+23	; 0x17
    30b2:	98 8d       	ldd	r25, Y+24	; 0x18
    30b4:	47 97       	sbiw	r24, 0x17	; 23
    30b6:	49 f4       	brne	.+18     	; 0x30ca <main+0x2f4e>
					u_motorByte0.bits_in_motorByte0.m2Dir = 1;  // ******* dir2 *******
    30b8:	80 91 38 03 	lds	r24, 0x0338
    30bc:	80 61       	ori	r24, 0x10	; 16
    30be:	80 93 38 03 	sts	0x0338, r24
    30c2:	b1 e0       	ldi	r27, 0x01	; 1
    30c4:	cb 2e       	mov	r12, r27
    30c6:	d1 2c       	mov	r13, r1
    30c8:	39 c0       	rjmp	.+114    	; 0x313c <main+0x2fc0>
					m2 = 1;
				}
				if(state == 24){
    30ca:	ef 89       	ldd	r30, Y+23	; 0x17
    30cc:	f8 8d       	ldd	r31, Y+24	; 0x18
    30ce:	78 97       	sbiw	r30, 0x18	; 24
    30d0:	41 f4       	brne	.+16     	; 0x30e2 <main+0x2f66>
					m2 = 0;
					u_outputByte1.bits_in_outputByte1.airKnife = 0;
    30d2:	80 91 3b 03 	lds	r24, 0x033B
    30d6:	87 7f       	andi	r24, 0xF7	; 247
    30d8:	80 93 3b 03 	sts	0x033B, r24
    30dc:	cc 24       	eor	r12, r12
    30de:	dd 24       	eor	r13, r13
    30e0:	38 c0       	rjmp	.+112    	; 0x3152 <main+0x2fd6>
						OrangutanLCD::clear();
						OrangutanLCD::print("DRY AIR");
						print24 = 0;
					}*/
				}
				if(state == 25){
    30e2:	2f 89       	ldd	r18, Y+23	; 0x17
    30e4:	38 8d       	ldd	r19, Y+24	; 0x18
    30e6:	29 31       	cpi	r18, 0x19	; 25
    30e8:	31 05       	cpc	r19, r1
    30ea:	61 f4       	brne	.+24     	; 0x3104 <main+0x2f88>
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;  // ******* dir2 *******
    30ec:	80 91 38 03 	lds	r24, 0x0338
    30f0:	8f 7e       	andi	r24, 0xEF	; 239
    30f2:	80 93 38 03 	sts	0x0338, r24
    30f6:	a1 e0       	ldi	r26, 0x01	; 1
    30f8:	ca 2e       	mov	r12, r26
    30fa:	d1 2c       	mov	r13, r1
    30fc:	30 c0       	rjmp	.+96     	; 0x315e <main+0x2fe2>
    30fe:	f1 e0       	ldi	r31, 0x01	; 1
    3100:	cf 2e       	mov	r12, r31
    3102:	d1 2c       	mov	r13, r1
					m2 = 1;
				}
				if(state == 26){
    3104:	4f 89       	ldd	r20, Y+23	; 0x17
    3106:	58 8d       	ldd	r21, Y+24	; 0x18
    3108:	4a 31       	cpi	r20, 0x1A	; 26
    310a:	51 05       	cpc	r21, r1
    310c:	31 f4       	brne	.+12     	; 0x311a <main+0x2f9e>
					u_outputByte1.bits_in_outputByte1.airKnife = 1;
    310e:	80 91 3b 03 	lds	r24, 0x033B
    3112:	88 60       	ori	r24, 0x08	; 8
    3114:	80 93 3b 03 	sts	0x033B, r24
    3118:	34 c0       	rjmp	.+104    	; 0x3182 <main+0x3006>
				}
				if(state == 27){
    311a:	8f 89       	ldd	r24, Y+23	; 0x17
    311c:	98 8d       	ldd	r25, Y+24	; 0x18
    311e:	4b 97       	sbiw	r24, 0x1b	; 27
    3120:	69 f4       	brne	.+26     	; 0x313c <main+0x2fc0>
					m2 = 0;
					u_motorByte1.bits_in_motorByte1.m5Drop = 1;
    3122:	80 91 39 03 	lds	r24, 0x0339
    3126:	80 64       	ori	r24, 0x40	; 64
					u_motorByte1.bits_in_motorByte1.m5Dir = 0;
    3128:	8f 7d       	andi	r24, 0xDF	; 223
    312a:	80 93 39 03 	sts	0x0339, r24
    312e:	cc 24       	eor	r12, r12
    3130:	dd 24       	eor	r13, r13
    3132:	e1 e0       	ldi	r30, 0x01	; 1
    3134:	f0 e0       	ldi	r31, 0x00	; 0
    3136:	fa 87       	std	Y+10, r31	; 0x0a
    3138:	e9 87       	std	Y+9, r30	; 0x09
    313a:	2c c0       	rjmp	.+88     	; 0x3194 <main+0x3018>
					m5 = 1;
				}
				if(state == 28){
    313c:	2f 89       	ldd	r18, Y+23	; 0x17
    313e:	38 8d       	ldd	r19, Y+24	; 0x18
    3140:	2c 31       	cpi	r18, 0x1C	; 28
    3142:	31 05       	cpc	r19, r1
    3144:	31 f4       	brne	.+12     	; 0x3152 <main+0x2fd6>
					/*if(print28 == 1){
							OrangutanLCD::clear();
						OrangutanLCD::print("FINAL DRY");
						print28 = 0;
						}*/
					u_outputByte1.bits_in_outputByte1.ptRaise = 0;
    3146:	80 91 3b 03 	lds	r24, 0x033B
    314a:	8d 7f       	andi	r24, 0xFD	; 253
    314c:	80 93 3b 03 	sts	0x033B, r24
    3150:	2f c0       	rjmp	.+94     	; 0x31b0 <main+0x3034>
				}
				if(state == 29){
    3152:	4f 89       	ldd	r20, Y+23	; 0x17
    3154:	58 8d       	ldd	r21, Y+24	; 0x18
    3156:	4d 31       	cpi	r20, 0x1D	; 29
    3158:	51 05       	cpc	r21, r1
    315a:	09 f4       	brne	.+2      	; 0x315e <main+0x2fe2>
    315c:	3d c0       	rjmp	.+122    	; 0x31d8 <main+0x305c>
					m2 = 1;
				}
				if(state == 30){
    315e:	8f 89       	ldd	r24, Y+23	; 0x17
    3160:	98 8d       	ldd	r25, Y+24	; 0x18
    3162:	4e 97       	sbiw	r24, 0x1e	; 30
    3164:	71 f4       	brne	.+28     	; 0x3182 <main+0x3006>
					m5 = 0;
						u_motorByte1.bits_in_motorByte1.m5Drop = 0;
    3166:	80 91 39 03 	lds	r24, 0x0339
    316a:	8f 7b       	andi	r24, 0xBF	; 191
    316c:	80 93 39 03 	sts	0x0339, r24
					u_outputByte1.bits_in_outputByte1.ptRaise = 1;
    3170:	80 91 3b 03 	lds	r24, 0x033B
    3174:	82 60       	ori	r24, 0x02	; 2
					u_outputByte1.bits_in_outputByte1.ptLower = 0;
    3176:	8b 7f       	andi	r24, 0xFB	; 251
    3178:	80 93 3b 03 	sts	0x033B, r24
    317c:	1a 86       	std	Y+10, r1	; 0x0a
    317e:	19 86       	std	Y+9, r1	; 0x09
    3180:	3b c0       	rjmp	.+118    	; 0x31f8 <main+0x307c>
				}
				if(state == 31){
    3182:	ef 89       	ldd	r30, Y+23	; 0x17
    3184:	f8 8d       	ldd	r31, Y+24	; 0x18
    3186:	7f 97       	sbiw	r30, 0x1f	; 31
    3188:	29 f4       	brne	.+10     	; 0x3194 <main+0x3018>
					m2 = 0;
					u_outputByte0.bits_in_outputByte0.raiseFixture = 0;
    318a:	80 91 3a 03 	lds	r24, 0x033A
    318e:	87 7f       	andi	r24, 0xF7	; 247
					u_outputByte0.bits_in_outputByte0.lowerFixture = 1;
    3190:	80 61       	ori	r24, 0x10	; 16
    3192:	1d c0       	rjmp	.+58     	; 0x31ce <main+0x3052>
				}
				if(state == 32){
    3194:	2f 89       	ldd	r18, Y+23	; 0x17
    3196:	38 8d       	ldd	r19, Y+24	; 0x18
    3198:	20 32       	cpi	r18, 0x20	; 32
    319a:	31 05       	cpc	r19, r1
    319c:	49 f4       	brne	.+18     	; 0x31b0 <main+0x3034>
					u_motorByte0.bits_in_motorByte0.m2Dir = 0;
    319e:	80 91 38 03 	lds	r24, 0x0338
    31a2:	8f 7e       	andi	r24, 0xEF	; 239
    31a4:	80 93 38 03 	sts	0x0338, r24
    31a8:	e1 e0       	ldi	r30, 0x01	; 1
    31aa:	ce 2e       	mov	r12, r30
    31ac:	d1 2c       	mov	r13, r1
    31ae:	3f c0       	rjmp	.+126    	; 0x322e <main+0x30b2>
					m2 = 1;
				}
				if(state == 33){
    31b0:	4f 89       	ldd	r20, Y+23	; 0x17
    31b2:	58 8d       	ldd	r21, Y+24	; 0x18
    31b4:	41 32       	cpi	r20, 0x21	; 33
    31b6:	51 05       	cpc	r21, r1
    31b8:	91 f4       	brne	.+36     	; 0x31de <main+0x3062>
					m2 = 0;
					u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    31ba:	80 91 38 03 	lds	r24, 0x0338
    31be:	8f 7d       	andi	r24, 0xDF	; 223
					u_motorByte0.bits_in_motorByte0.m1Drop = 1;
    31c0:	84 60       	ori	r24, 0x04	; 4
    31c2:	80 93 38 03 	sts	0x0338, r24
					u_outputByte0.bits_in_outputByte0.raiseFixture = 1;
    31c6:	80 91 3a 03 	lds	r24, 0x033A
    31ca:	88 60       	ori	r24, 0x08	; 8
					u_outputByte0.bits_in_outputByte0.lowerFixture = 0;
    31cc:	8f 7e       	andi	r24, 0xEF	; 239
    31ce:	80 93 3a 03 	sts	0x033A, r24
    31d2:	cc 24       	eor	r12, r12
    31d4:	dd 24       	eor	r13, r13
    31d6:	2b c0       	rjmp	.+86     	; 0x322e <main+0x30b2>
    31d8:	71 e0       	ldi	r23, 0x01	; 1
    31da:	c7 2e       	mov	r12, r23
    31dc:	d1 2c       	mov	r13, r1
				}
				if(state == 34){
    31de:	8f 89       	ldd	r24, Y+23	; 0x17
    31e0:	98 8d       	ldd	r25, Y+24	; 0x18
    31e2:	82 97       	sbiw	r24, 0x22	; 34
    31e4:	49 f4       	brne	.+18     	; 0x31f8 <main+0x307c>
					u_motorByte0.bits_in_motorByte0.m1Dir = 0;
    31e6:	80 91 38 03 	lds	r24, 0x0338
    31ea:	8d 7f       	andi	r24, 0xFD	; 253
    31ec:	80 93 38 03 	sts	0x0338, r24
    31f0:	61 e0       	ldi	r22, 0x01	; 1
    31f2:	86 2e       	mov	r8, r22
    31f4:	91 2c       	mov	r9, r1
    31f6:	1b c0       	rjmp	.+54     	; 0x322e <main+0x30b2>
					m1 = 1;
					}
				if(state == 35){
    31f8:	ef 89       	ldd	r30, Y+23	; 0x17
    31fa:	f8 8d       	ldd	r31, Y+24	; 0x18
    31fc:	b3 97       	sbiw	r30, 0x23	; 35
    31fe:	b9 f4       	brne	.+46     	; 0x322e <main+0x30b2>
					m1 = 0;
					u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    3200:	80 91 38 03 	lds	r24, 0x0338
    3204:	8b 7f       	andi	r24, 0xFB	; 251
    3206:	80 93 38 03 	sts	0x0338, r24
					if(print35 == 1){
    320a:	29 89       	ldd	r18, Y+17	; 0x11
    320c:	3a 89       	ldd	r19, Y+18	; 0x12
    320e:	21 30       	cpi	r18, 0x01	; 1
    3210:	31 05       	cpc	r19, r1
    3212:	19 f0       	breq	.+6      	; 0x321a <main+0x309e>
    3214:	88 24       	eor	r8, r8
    3216:	99 24       	eor	r9, r9
    3218:	0a c0       	rjmp	.+20     	; 0x322e <main+0x30b2>
						OrangutanLCD::clear();
    321a:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
						OrangutanLCD::print("END OF CYCLE");
    321e:	8e e0       	ldi	r24, 0x0E	; 14
    3220:	93 e0       	ldi	r25, 0x03	; 3
    3222:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    3226:	88 24       	eor	r8, r8
    3228:	99 24       	eor	r9, r9
    322a:	1a 8a       	std	Y+18, r1	; 0x12
    322c:	19 8a       	std	Y+17, r1	; 0x11





				if( ((counter - counterRef) % (totallength1) ) < (steplength1) && m1)  //check if it is in the right period of the loop to send high
    322e:	c8 01       	movw	r24, r16
    3230:	8e 19       	sub	r24, r14
    3232:	9f 09       	sbc	r25, r15
    3234:	62 e0       	ldi	r22, 0x02	; 2
    3236:	70 e0       	ldi	r23, 0x00	; 0
    3238:	0e 94 b9 21 	call	0x4372	; 0x4372 <__divmodhi4>
    323c:	9c 01       	movw	r18, r24
    323e:	18 16       	cp	r1, r24
    3240:	19 06       	cpc	r1, r25
    3242:	4c f0       	brlt	.+18     	; 0x3256 <main+0x30da>
    3244:	81 14       	cp	r8, r1
    3246:	91 04       	cpc	r9, r1
    3248:	31 f0       	breq	.+12     	; 0x3256 <main+0x30da>
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 1; // set bit 0
    324a:	80 91 38 03 	lds	r24, 0x0338
    324e:	81 60       	ori	r24, 0x01	; 1
    3250:	80 93 38 03 	sts	0x0338, r24
    3254:	08 c0       	rjmp	.+16     	; 0x3266 <main+0x30ea>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m1Step = 0; // set bit 0
    3256:	80 91 38 03 	lds	r24, 0x0338
    325a:	8e 7f       	andi	r24, 0xFE	; 254
    325c:	80 93 38 03 	sts	0x0338, r24
				}

				if( ((counter - counterRef) % (totallength2) ) < (steplength2) && m2)
    3260:	12 16       	cp	r1, r18
    3262:	13 06       	cpc	r1, r19
    3264:	4c f0       	brlt	.+18     	; 0x3278 <main+0x30fc>
    3266:	c1 14       	cp	r12, r1
    3268:	d1 04       	cpc	r13, r1
    326a:	31 f0       	breq	.+12     	; 0x3278 <main+0x30fc>
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 1; // set bit 1
    326c:	80 91 38 03 	lds	r24, 0x0338
    3270:	88 60       	ori	r24, 0x08	; 8
    3272:	80 93 38 03 	sts	0x0338, r24
    3276:	08 c0       	rjmp	.+16     	; 0x3288 <main+0x310c>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m2Step = 0; // set bit 1
    3278:	80 91 38 03 	lds	r24, 0x0338
    327c:	87 7f       	andi	r24, 0xF7	; 247
    327e:	80 93 38 03 	sts	0x0338, r24
				}

				if( ((counter - counterRef) % (totallength3) ) < (steplength3) && m3)
    3282:	12 16       	cp	r1, r18
    3284:	13 06       	cpc	r1, r19
    3286:	4c f0       	brlt	.+18     	; 0x329a <main+0x311e>
    3288:	41 14       	cp	r4, r1
    328a:	51 04       	cpc	r5, r1
    328c:	31 f0       	breq	.+12     	; 0x329a <main+0x311e>
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 1; // set bit 1
    328e:	80 91 38 03 	lds	r24, 0x0338
    3292:	80 64       	ori	r24, 0x40	; 64
    3294:	80 93 38 03 	sts	0x0338, r24
    3298:	08 c0       	rjmp	.+16     	; 0x32aa <main+0x312e>
				}
				else
				{
					u_motorByte0.bits_in_motorByte0.m3Step = 0; // set bit 1
    329a:	80 91 38 03 	lds	r24, 0x0338
    329e:	8f 7b       	andi	r24, 0xBF	; 191
    32a0:	80 93 38 03 	sts	0x0338, r24
				}

				if( ((counter - counterRef) % (totallength4) ) < (steplength4) && m4)
    32a4:	12 16       	cp	r1, r18
    32a6:	13 06       	cpc	r1, r19
    32a8:	3c f0       	brlt	.+14     	; 0x32b8 <main+0x313c>
    32aa:	61 14       	cp	r6, r1
    32ac:	71 04       	cpc	r7, r1
    32ae:	21 f0       	breq	.+8      	; 0x32b8 <main+0x313c>
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 1; // set bit 1
    32b0:	80 91 39 03 	lds	r24, 0x0339
    32b4:	82 60       	ori	r24, 0x02	; 2
    32b6:	03 c0       	rjmp	.+6      	; 0x32be <main+0x3142>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m4Step = 0; // set bit 1
    32b8:	80 91 39 03 	lds	r24, 0x0339
    32bc:	8d 7f       	andi	r24, 0xFD	; 253
    32be:	80 93 39 03 	sts	0x0339, r24
				}

				if( ((counter - counterRefFive) % (totallength5) ) < (steplength5) && m5)
    32c2:	c8 01       	movw	r24, r16
    32c4:	4f 85       	ldd	r20, Y+15	; 0x0f
    32c6:	58 89       	ldd	r21, Y+16	; 0x10
    32c8:	84 1b       	sub	r24, r20
    32ca:	95 0b       	sbc	r25, r21
    32cc:	62 e0       	ldi	r22, 0x02	; 2
    32ce:	70 e0       	ldi	r23, 0x00	; 0
    32d0:	0e 94 b9 21 	call	0x4372	; 0x4372 <__divmodhi4>
    32d4:	18 16       	cp	r1, r24
    32d6:	19 06       	cpc	r1, r25
    32d8:	44 f0       	brlt	.+16     	; 0x32ea <main+0x316e>
    32da:	89 85       	ldd	r24, Y+9	; 0x09
    32dc:	9a 85       	ldd	r25, Y+10	; 0x0a
    32de:	89 2b       	or	r24, r25
    32e0:	21 f0       	breq	.+8      	; 0x32ea <main+0x316e>
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 1; // set bit 1
    32e2:	80 91 39 03 	lds	r24, 0x0339
    32e6:	80 61       	ori	r24, 0x10	; 16
    32e8:	03 c0       	rjmp	.+6      	; 0x32f0 <main+0x3174>
				}
				else
				{
					u_motorByte1.bits_in_motorByte1.m5Step = 0; // set bit 1
    32ea:	80 91 39 03 	lds	r24, 0x0339
    32ee:	8f 7e       	andi	r24, 0xEF	; 239
    32f0:	80 93 39 03 	sts	0x0339, r24
				}

				i2c_start(I2C1+I2C_WRITE);
    32f4:	80 e4       	ldi	r24, 0x40	; 64
    32f6:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				i2c_write(0x2);									// write command byte
    32fa:	82 e0       	ldi	r24, 0x02	; 2
    32fc:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_write(u_motorByte0.motorByte0);                       // write first byte of output
    3300:	80 91 38 03 	lds	r24, 0x0338
    3304:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
       	 		i2c_write(u_motorByte1.motorByte1);                       // write second byte of output
    3308:	80 91 39 03 	lds	r24, 0x0339
    330c:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
       		 	i2c_stop();                            // set stop conditon = release bus
    3310:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>

				i2c_start(I2C2+I2C_WRITE);
    3314:	82 e4       	ldi	r24, 0x42	; 66
    3316:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
				i2c_write(0x2);
    331a:	82 e0       	ldi	r24, 0x02	; 2
    331c:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_write(u_outputByte0.outputByte0);
    3320:	80 91 3a 03 	lds	r24, 0x033A
    3324:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
				i2c_write(u_outputByte1.outputByte1);
    3328:	80 91 3b 03 	lds	r24, 0x033B
    332c:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>

				counter ++;
    3330:	0f 5f       	subi	r16, 0xFF	; 255
    3332:	1f 4f       	sbci	r17, 0xFF	; 255
    3334:	81 e0       	ldi	r24, 0x01	; 1
    3336:	90 e0       	ldi	r25, 0x00	; 0
    3338:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>


		if(!OrangutanDigital::isInputHigh(IO_D1) && OrangutanDigital::isInputHigh(IO_D2)){
			OrangutanLCD::gotoXY(7,0);
			OrangutanLCD::print("BOTH B");
			while(state != -1)
    333c:	ef 89       	ldd	r30, Y+23	; 0x17
    333e:	f8 8d       	ldd	r31, Y+24	; 0x18
    3340:	ef 5f       	subi	r30, 0xFF	; 255
    3342:	ff 4f       	sbci	r31, 0xFF	; 255
    3344:	09 f0       	breq	.+2      	; 0x3348 <main+0x31cc>
    3346:	41 ca       	rjmp	.-2942   	; 0x27ca <main+0x264e>
				counter ++;
				delay_ms(1);
   		 	}
		}
		}
		u_motorByte0.bits_in_motorByte0.m1Drop = 0;
    3348:	80 91 38 03 	lds	r24, 0x0338
		u_motorByte0.bits_in_motorByte0.m2Drop = 0;
    334c:	8b 7d       	andi	r24, 0xDB	; 219
    334e:	80 93 38 03 	sts	0x0338, r24
		u_motorByte1.bits_in_motorByte1.m3Drop = 0;
    3352:	80 91 39 03 	lds	r24, 0x0339
		u_motorByte1.bits_in_motorByte1.m4Drop = 0;
		u_motorByte1.bits_in_motorByte1.m5Drop = 0;
    3356:	86 7b       	andi	r24, 0xB6	; 182
    3358:	80 93 39 03 	sts	0x0339, r24
		
		i2c_start(I2C1+I2C_WRITE);
    335c:	80 e4       	ldi	r24, 0x40	; 64
    335e:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>
		i2c_write(0x2);
    3362:	82 e0       	ldi	r24, 0x02	; 2
    3364:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
		i2c_write(u_motorByte0.motorByte0);
    3368:	80 91 38 03 	lds	r24, 0x0338
    336c:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
		i2c_write(u_motorByte1.motorByte1);
    3370:	80 91 39 03 	lds	r24, 0x0339
    3374:	0e 94 18 1c 	call	0x3830	; 0x3830 <_Z9i2c_writeh>
		i2c_stop();
    3378:	0e 94 10 1c 	call	0x3820	; 0x3820 <_Z8i2c_stopv>
	}
	OrangutanLCD::print("END");
    337c:	8b e2       	ldi	r24, 0x2B	; 43
    337e:	93 e0       	ldi	r25, 0x03	; 3
    3380:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    3384:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <main+0x34>
			while(button != 0){
				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
    3388:	31 e0       	ldi	r19, 0x01	; 1
    338a:	83 16       	cp	r8, r19
    338c:	91 04       	cpc	r9, r1
    338e:	11 f0       	breq	.+4      	; 0x3394 <main+0x3218>
    3390:	0c 94 8d 01 	jmp	0x31a	; 0x31a <main+0x19e>
    3394:	0c 94 76 01 	jmp	0x2ec	; 0x2ec <main+0x170>
    3398:	51 e0       	ldi	r21, 0x01	; 1
    339a:	85 2e       	mov	r8, r21
    339c:	91 2c       	mov	r9, r1
    339e:	0c 94 a8 01 	jmp	0x350	; 0x350 <main+0x1d4>
				
				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
    33a2:	41 e0       	ldi	r20, 0x01	; 1
    33a4:	84 16       	cp	r8, r20
    33a6:	91 04       	cpc	r9, r1
    33a8:	11 f0       	breq	.+4      	; 0x33ae <main+0x3232>
    33aa:	0c 94 16 02 	jmp	0x42c	; 0x42c <main+0x2b0>
    33ae:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <main+0x282>
    33b2:	41 e0       	ldi	r20, 0x01	; 1
    33b4:	84 2e       	mov	r8, r20
    33b6:	91 2c       	mov	r9, r1
    33b8:	0c 94 31 02 	jmp	0x462	; 0x462 <main+0x2e6>
					print = 0;
				}

				//state conversions

				if(state == 0 && button == 0){
    33bc:	8f 89       	ldd	r24, Y+23	; 0x17
    33be:	98 8d       	ldd	r25, Y+24	; 0x18
    33c0:	89 2b       	or	r24, r25
    33c2:	11 f0       	breq	.+4      	; 0x33c8 <main+0x324c>
    33c4:	0c 94 bf 02 	jmp	0x57e	; 0x57e <main+0x402>
    33c8:	0c 94 b3 02 	jmp	0x566	; 0x566 <main+0x3ea>
    33cc:	e1 e0       	ldi	r30, 0x01	; 1
    33ce:	f0 e0       	ldi	r31, 0x00	; 0
    33d0:	f8 8f       	std	Y+24, r31	; 0x18
    33d2:	ef 8b       	std	Y+23, r30	; 0x17
    33d4:	31 e0       	ldi	r19, 0x01	; 1
    33d6:	e3 2e       	mov	r14, r19
    33d8:	f1 2c       	mov	r15, r1
    33da:	0c 94 2e 03 	jmp	0x65c	; 0x65c <main+0x4e0>
    33de:	22 e0       	ldi	r18, 0x02	; 2
    33e0:	30 e0       	ldi	r19, 0x00	; 0
    33e2:	38 8f       	std	Y+24, r19	; 0x18
    33e4:	2f 8b       	std	Y+23, r18	; 0x17
    33e6:	21 e0       	ldi	r18, 0x01	; 1
    33e8:	e2 2e       	mov	r14, r18
    33ea:	f1 2c       	mov	r15, r1
    33ec:	0c 94 4a 03 	jmp	0x694	; 0x694 <main+0x518>
    33f0:	43 e0       	ldi	r20, 0x03	; 3
    33f2:	50 e0       	ldi	r21, 0x00	; 0
    33f4:	58 8f       	std	Y+24, r21	; 0x18
    33f6:	4f 8b       	std	Y+23, r20	; 0x17
    33f8:	91 e0       	ldi	r25, 0x01	; 1
    33fa:	e9 2e       	mov	r14, r25
    33fc:	f1 2c       	mov	r15, r1
    33fe:	0c 94 5f 03 	jmp	0x6be	; 0x6be <main+0x542>
    3402:	84 e0       	ldi	r24, 0x04	; 4
    3404:	90 e0       	ldi	r25, 0x00	; 0
    3406:	98 8f       	std	Y+24, r25	; 0x18
    3408:	8f 8b       	std	Y+23, r24	; 0x17
    340a:	04 c0       	rjmp	.+8      	; 0x3414 <main+0x3298>
    340c:	e5 e0       	ldi	r30, 0x05	; 5
    340e:	f0 e0       	ldi	r31, 0x00	; 0
    3410:	f8 8f       	std	Y+24, r31	; 0x18
    3412:	ef 8b       	std	Y+23, r30	; 0x17
    3414:	81 e0       	ldi	r24, 0x01	; 1
    3416:	e8 2e       	mov	r14, r24
    3418:	f1 2c       	mov	r15, r1
    341a:	0c 94 70 03 	jmp	0x6e0	; 0x6e0 <main+0x564>
    341e:	26 e0       	ldi	r18, 0x06	; 6
    3420:	30 e0       	ldi	r19, 0x00	; 0
    3422:	38 8f       	std	Y+24, r19	; 0x18
    3424:	2f 8b       	std	Y+23, r18	; 0x17
    3426:	b1 e0       	ldi	r27, 0x01	; 1
    3428:	eb 2e       	mov	r14, r27
    342a:	f1 2c       	mov	r15, r1
    342c:	0c 94 98 03 	jmp	0x730	; 0x730 <main+0x5b4>
    3430:	56 01       	movw	r10, r12
    3432:	4f ef       	ldi	r20, 0xFF	; 255
    3434:	5f ef       	ldi	r21, 0xFF	; 255
    3436:	58 8f       	std	Y+24, r21	; 0x18
    3438:	4f 8b       	std	Y+23, r20	; 0x17
    343a:	a1 e0       	ldi	r26, 0x01	; 1
    343c:	ea 2e       	mov	r14, r26
    343e:	f1 2c       	mov	r15, r1
    3440:	00 e0       	ldi	r16, 0x00	; 0
    3442:	10 e0       	ldi	r17, 0x00	; 0
    3444:	0c 94 70 03 	jmp	0x6e0	; 0x6e0 <main+0x564>
    3448:	88 e0       	ldi	r24, 0x08	; 8
    344a:	90 e0       	ldi	r25, 0x00	; 0
    344c:	98 8f       	std	Y+24, r25	; 0x18
    344e:	8f 8b       	std	Y+23, r24	; 0x17
    3450:	f1 e0       	ldi	r31, 0x01	; 1
    3452:	ef 2e       	mov	r14, r31
    3454:	f1 2c       	mov	r15, r1
    3456:	0c 94 be 03 	jmp	0x77c	; 0x77c <main+0x600>
    345a:	e9 e0       	ldi	r30, 0x09	; 9
    345c:	f0 e0       	ldi	r31, 0x00	; 0
    345e:	f8 8f       	std	Y+24, r31	; 0x18
    3460:	ef 8b       	std	Y+23, r30	; 0x17
    3462:	e1 e0       	ldi	r30, 0x01	; 1
    3464:	ee 2e       	mov	r14, r30
    3466:	f1 2c       	mov	r15, r1
    3468:	0c 94 d4 03 	jmp	0x7a8	; 0x7a8 <main+0x62c>
    346c:	2a e0       	ldi	r18, 0x0A	; 10
    346e:	30 e0       	ldi	r19, 0x00	; 0
    3470:	38 8f       	std	Y+24, r19	; 0x18
    3472:	2f 8b       	std	Y+23, r18	; 0x17
    3474:	71 e0       	ldi	r23, 0x01	; 1
    3476:	e7 2e       	mov	r14, r23
    3478:	f1 2c       	mov	r15, r1
    347a:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <main+0x650>
    347e:	4b e0       	ldi	r20, 0x0B	; 11
    3480:	50 e0       	ldi	r21, 0x00	; 0
    3482:	58 8f       	std	Y+24, r21	; 0x18
    3484:	4f 8b       	std	Y+23, r20	; 0x17
    3486:	61 e0       	ldi	r22, 0x01	; 1
    3488:	e6 2e       	mov	r14, r22
    348a:	f1 2c       	mov	r15, r1
    348c:	0c 94 fb 03 	jmp	0x7f6	; 0x7f6 <main+0x67a>
    3490:	8c e0       	ldi	r24, 0x0C	; 12
    3492:	90 e0       	ldi	r25, 0x00	; 0
    3494:	98 8f       	std	Y+24, r25	; 0x18
    3496:	8f 8b       	std	Y+23, r24	; 0x17
    3498:	51 e0       	ldi	r21, 0x01	; 1
    349a:	e5 2e       	mov	r14, r21
    349c:	f1 2c       	mov	r15, r1
    349e:	0c 94 0c 04 	jmp	0x818	; 0x818 <main+0x69c>
    34a2:	ed e0       	ldi	r30, 0x0D	; 13
    34a4:	f0 e0       	ldi	r31, 0x00	; 0
    34a6:	f8 8f       	std	Y+24, r31	; 0x18
    34a8:	ef 8b       	std	Y+23, r30	; 0x17
    34aa:	41 e0       	ldi	r20, 0x01	; 1
    34ac:	e4 2e       	mov	r14, r20
    34ae:	f1 2c       	mov	r15, r1
    34b0:	0c 94 22 04 	jmp	0x844	; 0x844 <main+0x6c8>
    34b4:	2e e0       	ldi	r18, 0x0E	; 14
    34b6:	30 e0       	ldi	r19, 0x00	; 0
    34b8:	38 8f       	std	Y+24, r19	; 0x18
    34ba:	2f 8b       	std	Y+23, r18	; 0x17
    34bc:	31 e0       	ldi	r19, 0x01	; 1
    34be:	e3 2e       	mov	r14, r19
    34c0:	f1 2c       	mov	r15, r1
    34c2:	0c 94 34 04 	jmp	0x868	; 0x868 <main+0x6ec>
    34c6:	4f e0       	ldi	r20, 0x0F	; 15
    34c8:	50 e0       	ldi	r21, 0x00	; 0
    34ca:	58 8f       	std	Y+24, r21	; 0x18
    34cc:	4f 8b       	std	Y+23, r20	; 0x17
    34ce:	21 e0       	ldi	r18, 0x01	; 1
    34d0:	e2 2e       	mov	r14, r18
    34d2:	f1 2c       	mov	r15, r1
    34d4:	0c 94 49 04 	jmp	0x892	; 0x892 <main+0x716>
    34d8:	80 e1       	ldi	r24, 0x10	; 16
    34da:	90 e0       	ldi	r25, 0x00	; 0
    34dc:	98 8f       	std	Y+24, r25	; 0x18
    34de:	8f 8b       	std	Y+23, r24	; 0x17
    34e0:	91 e0       	ldi	r25, 0x01	; 1
    34e2:	e9 2e       	mov	r14, r25
    34e4:	f1 2c       	mov	r15, r1
    34e6:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <main+0x738>
    34ea:	e1 e1       	ldi	r30, 0x11	; 17
    34ec:	f0 e0       	ldi	r31, 0x00	; 0
    34ee:	f8 8f       	std	Y+24, r31	; 0x18
    34f0:	ef 8b       	std	Y+23, r30	; 0x17
    34f2:	81 e0       	ldi	r24, 0x01	; 1
    34f4:	e8 2e       	mov	r14, r24
    34f6:	f1 2c       	mov	r15, r1
    34f8:	0c 94 70 04 	jmp	0x8e0	; 0x8e0 <main+0x764>
    34fc:	22 e1       	ldi	r18, 0x12	; 18
    34fe:	30 e0       	ldi	r19, 0x00	; 0
    3500:	38 8f       	std	Y+24, r19	; 0x18
    3502:	2f 8b       	std	Y+23, r18	; 0x17
    3504:	b1 e0       	ldi	r27, 0x01	; 1
    3506:	eb 2e       	mov	r14, r27
    3508:	f1 2c       	mov	r15, r1
    350a:	0c 94 82 04 	jmp	0x904	; 0x904 <main+0x788>
    350e:	43 e1       	ldi	r20, 0x13	; 19
    3510:	50 e0       	ldi	r21, 0x00	; 0
    3512:	58 8f       	std	Y+24, r21	; 0x18
    3514:	4f 8b       	std	Y+23, r20	; 0x17
    3516:	a1 e0       	ldi	r26, 0x01	; 1
    3518:	ea 2e       	mov	r14, r26
    351a:	f1 2c       	mov	r15, r1
    351c:	0c 94 97 04 	jmp	0x92e	; 0x92e <main+0x7b2>
    3520:	84 e1       	ldi	r24, 0x14	; 20
    3522:	90 e0       	ldi	r25, 0x00	; 0
    3524:	98 8f       	std	Y+24, r25	; 0x18
    3526:	8f 8b       	std	Y+23, r24	; 0x17
    3528:	f1 e0       	ldi	r31, 0x01	; 1
    352a:	ef 2e       	mov	r14, r31
    352c:	f1 2c       	mov	r15, r1
    352e:	0c 94 a8 04 	jmp	0x950	; 0x950 <main+0x7d4>
    3532:	e5 e1       	ldi	r30, 0x15	; 21
    3534:	f0 e0       	ldi	r31, 0x00	; 0
    3536:	f8 8f       	std	Y+24, r31	; 0x18
    3538:	ef 8b       	std	Y+23, r30	; 0x17
    353a:	e1 e0       	ldi	r30, 0x01	; 1
    353c:	ee 2e       	mov	r14, r30
    353e:	f1 2c       	mov	r15, r1
    3540:	0c 94 be 04 	jmp	0x97c	; 0x97c <main+0x800>
    3544:	26 e1       	ldi	r18, 0x16	; 22
    3546:	30 e0       	ldi	r19, 0x00	; 0
    3548:	38 8f       	std	Y+24, r19	; 0x18
    354a:	2f 8b       	std	Y+23, r18	; 0x17
    354c:	71 e0       	ldi	r23, 0x01	; 1
    354e:	e7 2e       	mov	r14, r23
    3550:	f1 2c       	mov	r15, r1
    3552:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <main+0x824>
    3556:	47 e1       	ldi	r20, 0x17	; 23
    3558:	50 e0       	ldi	r21, 0x00	; 0
    355a:	58 8f       	std	Y+24, r21	; 0x18
    355c:	4f 8b       	std	Y+23, r20	; 0x17
    355e:	61 e0       	ldi	r22, 0x01	; 1
    3560:	e6 2e       	mov	r14, r22
    3562:	f1 2c       	mov	r15, r1
    3564:	0c 94 e5 04 	jmp	0x9ca	; 0x9ca <main+0x84e>
    3568:	88 e1       	ldi	r24, 0x18	; 24
    356a:	90 e0       	ldi	r25, 0x00	; 0
    356c:	98 8f       	std	Y+24, r25	; 0x18
    356e:	8f 8b       	std	Y+23, r24	; 0x17
    3570:	51 e0       	ldi	r21, 0x01	; 1
    3572:	e5 2e       	mov	r14, r21
    3574:	f1 2c       	mov	r15, r1
    3576:	0c 94 f6 04 	jmp	0x9ec	; 0x9ec <main+0x870>
    357a:	e9 e1       	ldi	r30, 0x19	; 25
    357c:	f0 e0       	ldi	r31, 0x00	; 0
    357e:	f8 8f       	std	Y+24, r31	; 0x18
    3580:	ef 8b       	std	Y+23, r30	; 0x17
    3582:	41 e0       	ldi	r20, 0x01	; 1
    3584:	e4 2e       	mov	r14, r20
    3586:	f1 2c       	mov	r15, r1
    3588:	0c 94 0c 05 	jmp	0xa18	; 0xa18 <main+0x89c>
    358c:	2a e1       	ldi	r18, 0x1A	; 26
    358e:	30 e0       	ldi	r19, 0x00	; 0
    3590:	38 8f       	std	Y+24, r19	; 0x18
    3592:	2f 8b       	std	Y+23, r18	; 0x17
    3594:	31 e0       	ldi	r19, 0x01	; 1
    3596:	e3 2e       	mov	r14, r19
    3598:	f1 2c       	mov	r15, r1
    359a:	0c 94 2e 05 	jmp	0xa5c	; 0xa5c <main+0x8e0>
    359e:	4b e1       	ldi	r20, 0x1B	; 27
    35a0:	50 e0       	ldi	r21, 0x00	; 0
    35a2:	58 8f       	std	Y+24, r21	; 0x18
    35a4:	4f 8b       	std	Y+23, r20	; 0x17
    35a6:	21 e0       	ldi	r18, 0x01	; 1
    35a8:	e2 2e       	mov	r14, r18
    35aa:	f1 2c       	mov	r15, r1
    35ac:	0c 94 43 05 	jmp	0xa86	; 0xa86 <main+0x90a>
    35b0:	8c e1       	ldi	r24, 0x1C	; 28
    35b2:	90 e0       	ldi	r25, 0x00	; 0
    35b4:	98 8f       	std	Y+24, r25	; 0x18
    35b6:	8f 8b       	std	Y+23, r24	; 0x17
    35b8:	04 c0       	rjmp	.+8      	; 0x35c2 <main+0x3446>
    35ba:	ed e1       	ldi	r30, 0x1D	; 29
    35bc:	f0 e0       	ldi	r31, 0x00	; 0
    35be:	f8 8f       	std	Y+24, r31	; 0x18
    35c0:	ef 8b       	std	Y+23, r30	; 0x17
    35c2:	91 e0       	ldi	r25, 0x01	; 1
    35c4:	e9 2e       	mov	r14, r25
    35c6:	f1 2c       	mov	r15, r1
    35c8:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <main+0x93a>
    35cc:	81 e0       	ldi	r24, 0x01	; 1
    35ce:	e8 2e       	mov	r14, r24
    35d0:	f1 2c       	mov	r15, r1
    35d2:	2e e1       	ldi	r18, 0x1E	; 30
    35d4:	30 e0       	ldi	r19, 0x00	; 0
    35d6:	38 8f       	std	Y+24, r19	; 0x18
    35d8:	2f 8b       	std	Y+23, r18	; 0x17
    35da:	0c 94 8c 05 	jmp	0xb18	; 0xb18 <main+0x99c>
    35de:	56 01       	movw	r10, r12
    35e0:	4f ef       	ldi	r20, 0xFF	; 255
    35e2:	5f ef       	ldi	r21, 0xFF	; 255
    35e4:	58 8f       	std	Y+24, r21	; 0x18
    35e6:	4f 8b       	std	Y+23, r20	; 0x17
    35e8:	11 e0       	ldi	r17, 0x01	; 1
    35ea:	e1 2e       	mov	r14, r17
    35ec:	f1 2c       	mov	r15, r1
    35ee:	00 e0       	ldi	r16, 0x00	; 0
    35f0:	10 e0       	ldi	r17, 0x00	; 0
    35f2:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <main+0x93a>
    35f6:	80 e2       	ldi	r24, 0x20	; 32
    35f8:	90 e0       	ldi	r25, 0x00	; 0
    35fa:	98 8f       	std	Y+24, r25	; 0x18
    35fc:	8f 8b       	std	Y+23, r24	; 0x17
    35fe:	b1 e0       	ldi	r27, 0x01	; 1
    3600:	eb 2e       	mov	r14, r27
    3602:	f1 2c       	mov	r15, r1
    3604:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <main+0x9f6>
    3608:	e1 e2       	ldi	r30, 0x21	; 33
    360a:	f0 e0       	ldi	r31, 0x00	; 0
    360c:	f8 8f       	std	Y+24, r31	; 0x18
    360e:	ef 8b       	std	Y+23, r30	; 0x17
    3610:	a1 e0       	ldi	r26, 0x01	; 1
    3612:	ea 2e       	mov	r14, r26
    3614:	f1 2c       	mov	r15, r1
    3616:	0c 94 cf 05 	jmp	0xb9e	; 0xb9e <main+0xa22>
    361a:	22 e2       	ldi	r18, 0x22	; 34
    361c:	30 e0       	ldi	r19, 0x00	; 0
    361e:	38 8f       	std	Y+24, r19	; 0x18
    3620:	2f 8b       	std	Y+23, r18	; 0x17
    3622:	f1 e0       	ldi	r31, 0x01	; 1
    3624:	ef 2e       	mov	r14, r31
    3626:	f1 2c       	mov	r15, r1
    3628:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <main+0xa50>
    362c:	43 e2       	ldi	r20, 0x23	; 35
    362e:	50 e0       	ldi	r21, 0x00	; 0
    3630:	58 8f       	std	Y+24, r21	; 0x18
    3632:	4f 8b       	std	Y+23, r20	; 0x17
    3634:	e1 e0       	ldi	r30, 0x01	; 1
    3636:	ee 2e       	mov	r14, r30
    3638:	f1 2c       	mov	r15, r1
    363a:	0c 94 fc 05 	jmp	0xbf8	; 0xbf8 <main+0xa7c>
    363e:	84 e2       	ldi	r24, 0x24	; 36
    3640:	90 e0       	ldi	r25, 0x00	; 0
    3642:	98 8f       	std	Y+24, r25	; 0x18
    3644:	8f 8b       	std	Y+23, r24	; 0x17
    3646:	20 c0       	rjmp	.+64     	; 0x3688 <main+0x350c>
    3648:	e5 e2       	ldi	r30, 0x25	; 37
    364a:	f0 e0       	ldi	r31, 0x00	; 0
    364c:	f8 8f       	std	Y+24, r31	; 0x18
    364e:	ef 8b       	std	Y+23, r30	; 0x17
    3650:	1b c0       	rjmp	.+54     	; 0x3688 <main+0x350c>
    3652:	26 e2       	ldi	r18, 0x26	; 38
    3654:	30 e0       	ldi	r19, 0x00	; 0
    3656:	38 8f       	std	Y+24, r19	; 0x18
    3658:	2f 8b       	std	Y+23, r18	; 0x17
    365a:	71 e0       	ldi	r23, 0x01	; 1
    365c:	e7 2e       	mov	r14, r23
    365e:	f1 2c       	mov	r15, r1
    3660:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <main+0xb1c>
    3664:	47 e2       	ldi	r20, 0x27	; 39
    3666:	50 e0       	ldi	r21, 0x00	; 0
    3668:	58 8f       	std	Y+24, r21	; 0x18
    366a:	4f 8b       	std	Y+23, r20	; 0x17
    366c:	61 e0       	ldi	r22, 0x01	; 1
    366e:	e6 2e       	mov	r14, r22
    3670:	f1 2c       	mov	r15, r1
    3672:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <main+0xb56>
    3676:	88 e2       	ldi	r24, 0x28	; 40
    3678:	90 e0       	ldi	r25, 0x00	; 0
    367a:	98 8f       	std	Y+24, r25	; 0x18
    367c:	8f 8b       	std	Y+23, r24	; 0x17
    367e:	51 e0       	ldi	r21, 0x01	; 1
    3680:	e5 2e       	mov	r14, r21
    3682:	f1 2c       	mov	r15, r1
    3684:	0c 94 86 06 	jmp	0xd0c	; 0xd0c <main+0xb90>
    3688:	41 e0       	ldi	r20, 0x01	; 1
    368a:	e4 2e       	mov	r14, r20
    368c:	f1 2c       	mov	r15, r1
    368e:	0c 94 30 06 	jmp	0xc60	; 0xc60 <main+0xae4>
		while(button != 0){
			if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
				counterRefPush = counter;
				stateButton = 1;
			}
			if(stateButton == 1){
    3692:	91 e0       	ldi	r25, 0x01	; 1
    3694:	a9 16       	cp	r10, r25
    3696:	b1 04       	cpc	r11, r1
    3698:	11 f0       	breq	.+4      	; 0x369e <main+0x3522>
    369a:	0c 94 f7 09 	jmp	0x13ee	; 0x13ee <main+0x1272>
    369e:	0c 94 e0 09 	jmp	0x13c0	; 0x13c0 <main+0x1244>
    36a2:	31 e0       	ldi	r19, 0x01	; 1
    36a4:	a3 2e       	mov	r10, r19
    36a6:	b1 2c       	mov	r11, r1
    36a8:	0c 94 12 0a 	jmp	0x1424	; 0x1424 <main+0x12a8>
    36ac:	88 24       	eor	r8, r8
    36ae:	99 24       	eor	r9, r9
    36b0:	cc 24       	eor	r12, r12
    36b2:	dd 24       	eor	r13, r13
    36b4:	44 24       	eor	r4, r4
    36b6:	55 24       	eor	r5, r5
    36b8:	1a 86       	std	Y+10, r1	; 0x0a
    36ba:	19 86       	std	Y+9, r1	; 0x09
    36bc:	18 8e       	std	Y+24, r1	; 0x18
    36be:	1f 8a       	std	Y+23, r1	; 0x17
    36c0:	00 e0       	ldi	r16, 0x00	; 0
    36c2:	10 e0       	ldi	r17, 0x00	; 0
    36c4:	e1 e0       	ldi	r30, 0x01	; 1
    36c6:	f0 e0       	ldi	r31, 0x00	; 0
    36c8:	fc 8b       	std	Y+20, r31	; 0x14
    36ca:	eb 8b       	std	Y+19, r30	; 0x13
    36cc:	fa 8b       	std	Y+18, r31	; 0x12
    36ce:	e9 8b       	std	Y+17, r30	; 0x11
    36d0:	ee 24       	eor	r14, r14
    36d2:	ff 24       	eor	r15, r15
    36d4:	18 8a       	std	Y+16, r1	; 0x10
    36d6:	1f 86       	std	Y+15, r1	; 0x0f
    36d8:	f8 87       	std	Y+8, r31	; 0x08
    36da:	ef 83       	std	Y+7, r30	; 0x07
    36dc:	0c 94 f9 0e 	jmp	0x1df2	; 0x1df2 <main+0x1c76>

				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
    36e0:	f1 e0       	ldi	r31, 0x01	; 1
    36e2:	af 16       	cp	r10, r31
    36e4:	b1 04       	cpc	r11, r1
    36e6:	11 f0       	breq	.+4      	; 0x36ec <main+0x3570>
    36e8:	0c 94 a0 0a 	jmp	0x1540	; 0x1540 <main+0x13c4>
    36ec:	0c 94 89 0a 	jmp	0x1512	; 0x1512 <main+0x1396>
    36f0:	21 e0       	ldi	r18, 0x01	; 1
    36f2:	a2 2e       	mov	r10, r18
    36f4:	b1 2c       	mov	r11, r1
    36f6:	0c 94 bb 0a 	jmp	0x1576	; 0x1576 <main+0x13fa>
    36fa:	23 e2       	ldi	r18, 0x23	; 35
    36fc:	30 e0       	ldi	r19, 0x00	; 0
    36fe:	0c 94 bc 0c 	jmp	0x1978	; 0x1978 <main+0x17fc>
    3702:	cc 24       	eor	r12, r12
    3704:	dd 24       	eor	r13, r13
    3706:	1c 8a       	std	Y+20, r1	; 0x14
    3708:	1b 8a       	std	Y+19, r1	; 0x13
    370a:	0c 94 11 0d 	jmp	0x1a22	; 0x1a22 <main+0x18a6>
    370e:	66 24       	eor	r6, r6
    3710:	77 24       	eor	r7, r7
    3712:	46 c8       	rjmp	.-3956   	; 0x27a0 <main+0x2624>

				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
    3714:	31 e0       	ldi	r19, 0x01	; 1
    3716:	a3 16       	cp	r10, r19
    3718:	b1 04       	cpc	r11, r1
    371a:	11 f0       	breq	.+4      	; 0x3720 <main+0x35a4>
    371c:	0c 94 5c 0f 	jmp	0x1eb8	; 0x1eb8 <main+0x1d3c>
    3720:	0c 94 45 0f 	jmp	0x1e8a	; 0x1e8a <main+0x1d0e>
    3724:	91 e0       	ldi	r25, 0x01	; 1
    3726:	a9 2e       	mov	r10, r25
    3728:	b1 2c       	mov	r11, r1
    372a:	0c 94 77 0f 	jmp	0x1eee	; 0x1eee <main+0x1d72>
    372e:	43 e2       	ldi	r20, 0x23	; 35
    3730:	50 e0       	ldi	r21, 0x00	; 0
    3732:	58 8f       	std	Y+24, r21	; 0x18
    3734:	4f 8b       	std	Y+23, r20	; 0x17
    3736:	0c 94 7e 11 	jmp	0x22fc	; 0x22fc <main+0x2180>
    373a:	cc 24       	eor	r12, r12
    373c:	dd 24       	eor	r13, r13
    373e:	0c 94 d0 11 	jmp	0x23a0	; 0x23a0 <main+0x2224>

				if(stateButton == 0 && OrangutanDigital::isInputHigh(IO_D0)){
					counterRefPush = counter;
					stateButton = 1;
				}
				if(stateButton == 1){
    3742:	51 e0       	ldi	r21, 0x01	; 1
    3744:	a5 16       	cp	r10, r21
    3746:	b1 04       	cpc	r11, r1
    3748:	09 f0       	breq	.+2      	; 0x374c <main+0x35d0>
    374a:	86 c8       	rjmp	.-3828   	; 0x2858 <main+0x26dc>
    374c:	70 c8       	rjmp	.-3872   	; 0x282e <main+0x26b2>
    374e:	81 e0       	ldi	r24, 0x01	; 1
    3750:	a8 2e       	mov	r10, r24
    3752:	b1 2c       	mov	r11, r1
    3754:	9b c8       	rjmp	.-3786   	; 0x288c <main+0x2710>
    3756:	83 e2       	ldi	r24, 0x23	; 35
    3758:	90 e0       	ldi	r25, 0x00	; 0
    375a:	98 8f       	std	Y+24, r25	; 0x18
    375c:	8f 8b       	std	Y+23, r24	; 0x17
    375e:	25 cb       	rjmp	.-2486   	; 0x2daa <main+0x2c2e>
    3760:	cc 24       	eor	r12, r12
    3762:	dd 24       	eor	r13, r13
    3764:	75 cb       	rjmp	.-2326   	; 0x2e50 <main+0x2cd4>

00003766 <_ZdlPv>:
  return malloc(size); 
} 

void operator delete(void * ptr) 
{ 
  free(ptr); 
    3766:	0e 94 e6 22 	call	0x45cc	; 0x45cc <free>
} 
    376a:	08 95       	ret

0000376c <_Znwj>:
void * operator new(size_t size); 
void operator delete(void * ptr); 

void * operator new(size_t size) 
{ 
  return malloc(size); 
    376c:	0e 94 39 22 	call	0x4472	; 0x4472 <malloc>
} 
    3770:	08 95       	ret

00003772 <_Z8i2c_initv>:
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR = 0;                         /* no prescaler */
    3772:	10 92 b9 00 	sts	0x00B9, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
    3776:	8c e0       	ldi	r24, 0x0C	; 12
    3778:	80 93 b8 00 	sts	0x00B8, r24

}/* i2c_init */
    377c:	08 95       	ret

0000377e <_Z9i2c_starth>:

/*************************************************************************	
  Issues a start condition and sends address and transfer direction.
  return 0 = device accessible, 1= failed to access device
*************************************************************************/
unsigned char i2c_start(unsigned char address)
    377e:	98 2f       	mov	r25, r24
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
    3780:	84 ea       	ldi	r24, 0xA4	; 164
    3782:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
    3786:	80 91 bc 00 	lds	r24, 0x00BC
    378a:	87 ff       	sbrs	r24, 7
    378c:	fc cf       	rjmp	.-8      	; 0x3786 <_Z9i2c_starth+0x8>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
    378e:	80 91 b9 00 	lds	r24, 0x00B9
    3792:	88 7f       	andi	r24, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
    3794:	88 30       	cpi	r24, 0x08	; 8
    3796:	21 f0       	breq	.+8      	; 0x37a0 <_Z9i2c_starth+0x22>
    3798:	80 31       	cpi	r24, 0x10	; 16
    379a:	11 f0       	breq	.+4      	; 0x37a0 <_Z9i2c_starth+0x22>
    379c:	81 e0       	ldi	r24, 0x01	; 1
    379e:	08 95       	ret

	// send device address
	TWDR = address;
    37a0:	90 93 bb 00 	sts	0x00BB, r25
	TWCR = (1<<TWINT) | (1<<TWEN);
    37a4:	84 e8       	ldi	r24, 0x84	; 132
    37a6:	80 93 bc 00 	sts	0x00BC, r24

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
    37aa:	80 91 bc 00 	lds	r24, 0x00BC
    37ae:	87 ff       	sbrs	r24, 7
    37b0:	fc cf       	rjmp	.-8      	; 0x37aa <_Z9i2c_starth+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
    37b2:	90 91 b9 00 	lds	r25, 0x00B9
    37b6:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
    37b8:	98 31       	cpi	r25, 0x18	; 24
    37ba:	11 f4       	brne	.+4      	; 0x37c0 <_Z9i2c_starth+0x42>
    37bc:	80 e0       	ldi	r24, 0x00	; 0
    37be:	08 95       	ret
    37c0:	80 e0       	ldi	r24, 0x00	; 0
    37c2:	90 34       	cpi	r25, 0x40	; 64
    37c4:	09 f0       	breq	.+2      	; 0x37c8 <_Z9i2c_starth+0x4a>
    37c6:	81 e0       	ldi	r24, 0x01	; 1

	return 0;

}/* i2c_start */
    37c8:	08 95       	ret

000037ca <_Z14i2c_start_waith>:
 Issues a start condition and sends address and transfer direction.
 If device is busy, use ack polling to wait until device is ready
 
 Input:   address and transfer direction of I2C device
*************************************************************************/
void i2c_start_wait(unsigned char address)
    37ca:	98 2f       	mov	r25, r24


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
    37cc:	44 ea       	ldi	r20, 0xA4	; 164
    	twst = TW_STATUS & 0xF8;
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
    
    	// send device address
    	TWDR = address;
    	TWCR = (1<<TWINT) | (1<<TWEN);
    37ce:	34 e8       	ldi	r19, 0x84	; 132
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    37d0:	24 e9       	ldi	r18, 0x94	; 148


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
    37d2:	40 93 bc 00 	sts	0x00BC, r20
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
    37d6:	80 91 bc 00 	lds	r24, 0x00BC
    37da:	87 ff       	sbrs	r24, 7
    37dc:	fc cf       	rjmp	.-8      	; 0x37d6 <_Z14i2c_start_waith+0xc>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    37de:	80 91 b9 00 	lds	r24, 0x00B9
    37e2:	88 7f       	andi	r24, 0xF8	; 248
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
    37e4:	88 30       	cpi	r24, 0x08	; 8
    37e6:	11 f0       	breq	.+4      	; 0x37ec <_Z14i2c_start_waith+0x22>
    37e8:	80 31       	cpi	r24, 0x10	; 16
    37ea:	99 f7       	brne	.-26     	; 0x37d2 <_Z14i2c_start_waith+0x8>
    
    	// send device address
    	TWDR = address;
    37ec:	90 93 bb 00 	sts	0x00BB, r25
    	TWCR = (1<<TWINT) | (1<<TWEN);
    37f0:	30 93 bc 00 	sts	0x00BC, r19
    
    	// wail until transmission completed
    	while(!(TWCR & (1<<TWINT)));
    37f4:	80 91 bc 00 	lds	r24, 0x00BC
    37f8:	87 ff       	sbrs	r24, 7
    37fa:	fc cf       	rjmp	.-8      	; 0x37f4 <_Z14i2c_start_waith+0x2a>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    37fc:	80 91 b9 00 	lds	r24, 0x00B9
    3800:	88 7f       	andi	r24, 0xF8	; 248
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
    3802:	80 32       	cpi	r24, 0x20	; 32
    3804:	11 f0       	breq	.+4      	; 0x380a <_Z14i2c_start_waith+0x40>
    3806:	88 35       	cpi	r24, 0x58	; 88
    3808:	39 f4       	brne	.+14     	; 0x3818 <_Z14i2c_start_waith+0x4e>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    380a:	20 93 bc 00 	sts	0x00BC, r18
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR & (1<<TWSTO));
    380e:	80 91 bc 00 	lds	r24, 0x00BC
    3812:	84 fd       	sbrc	r24, 4
    3814:	fc cf       	rjmp	.-8      	; 0x380e <_Z14i2c_start_waith+0x44>
    3816:	dd cf       	rjmp	.-70     	; 0x37d2 <_Z14i2c_start_waith+0x8>
    3818:	08 95       	ret

0000381a <_Z13i2c_rep_starth>:
 Return:  0 device accessible
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );
    381a:	0e 94 bf 1b 	call	0x377e	; 0x377e <_Z9i2c_starth>

}/* i2c_rep_start */
    381e:	08 95       	ret

00003820 <_Z8i2c_stopv>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    3820:	84 e9       	ldi	r24, 0x94	; 148
    3822:	80 93 bc 00 	sts	0x00BC, r24
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
    3826:	80 91 bc 00 	lds	r24, 0x00BC
    382a:	84 fd       	sbrc	r24, 4
    382c:	fc cf       	rjmp	.-8      	; 0x3826 <_Z8i2c_stopv+0x6>

}/* i2c_stop */
    382e:	08 95       	ret

00003830 <_Z9i2c_writeh>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    3830:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
    3834:	84 e8       	ldi	r24, 0x84	; 132
    3836:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
    383a:	80 91 bc 00 	lds	r24, 0x00BC
    383e:	87 ff       	sbrs	r24, 7
    3840:	fc cf       	rjmp	.-8      	; 0x383a <_Z9i2c_writeh+0xa>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    3842:	80 91 b9 00 	lds	r24, 0x00B9
    3846:	90 e0       	ldi	r25, 0x00	; 0
    3848:	88 7f       	andi	r24, 0xF8	; 248
    384a:	88 32       	cpi	r24, 0x28	; 40
    384c:	09 f0       	breq	.+2      	; 0x3850 <_Z9i2c_writeh+0x20>
    384e:	91 e0       	ldi	r25, 0x01	; 1
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    3850:	89 2f       	mov	r24, r25
    3852:	08 95       	ret

00003854 <_Z11i2c_readAckv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    3854:	84 ec       	ldi	r24, 0xC4	; 196
    3856:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));    
    385a:	80 91 bc 00 	lds	r24, 0x00BC
    385e:	87 ff       	sbrs	r24, 7
    3860:	fc cf       	rjmp	.-8      	; 0x385a <_Z11i2c_readAckv+0x6>

    return TWDR;
    3862:	80 91 bb 00 	lds	r24, 0x00BB

}/* i2c_readAck */
    3866:	08 95       	ret

00003868 <_Z11i2c_readNakv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
    3868:	84 e8       	ldi	r24, 0x84	; 132
    386a:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
    386e:	80 91 bc 00 	lds	r24, 0x00BC
    3872:	87 ff       	sbrs	r24, 7
    3874:	fc cf       	rjmp	.-8      	; 0x386e <_Z11i2c_readNakv+0x6>
	
    return TWDR;
    3876:	80 91 bb 00 	lds	r24, 0x00BB

}/* i2c_readNak */
    387a:	08 95       	ret

0000387c <_ZN12OrangutanLCDC2Ev>:
    387c:	08 95       	ret

0000387e <_ZN12OrangutanLCDC1Ev>:
    387e:	08 95       	ret

00003880 <void_getchar>:
    3880:	80 e0       	ldi	r24, 0x00	; 0
    3882:	90 e0       	ldi	r25, 0x00	; 0
    3884:	08 95       	ret

00003886 <_ZN12OrangutanLCD8busyWaitEv>:
    3886:	ef 92       	push	r14
    3888:	ff 92       	push	r15
    388a:	0f 93       	push	r16
    388c:	1f 93       	push	r17
    388e:	67 b1       	in	r22, 0x07	; 7
    3890:	3d 98       	cbi	0x07, 5	; 7
    3892:	28 98       	cbi	0x05, 0	; 5
    3894:	29 9a       	sbi	0x05, 1	; 5
    3896:	e0 90 42 03 	lds	r14, 0x0342
    389a:	f0 90 43 03 	lds	r15, 0x0343
    389e:	00 91 44 03 	lds	r16, 0x0344
    38a2:	10 91 45 03 	lds	r17, 0x0345
    38a6:	20 e0       	ldi	r18, 0x00	; 0
    38a8:	30 e0       	ldi	r19, 0x00	; 0
    38aa:	41 e0       	ldi	r20, 0x01	; 1
    38ac:	50 e0       	ldi	r21, 0x00	; 0
    38ae:	ca 01       	movw	r24, r20
    38b0:	6f 93       	push	r22
    38b2:	64 e0       	ldi	r22, 0x04	; 4
    38b4:	6a 95       	dec	r22
    38b6:	f1 f7       	brne	.-4      	; 0x38b4 <_ZN12OrangutanLCD8busyWaitEv+0x2e>
    38b8:	6f 91       	pop	r22
    38ba:	01 97       	sbiw	r24, 0x01	; 1
    38bc:	c9 f7       	brne	.-14     	; 0x38b0 <_ZN12OrangutanLCD8busyWaitEv+0x2a>
    38be:	2a 9a       	sbi	0x05, 2	; 5
    38c0:	ca 01       	movw	r24, r20
    38c2:	6f 93       	push	r22
    38c4:	64 e0       	ldi	r22, 0x04	; 4
    38c6:	6a 95       	dec	r22
    38c8:	f1 f7       	brne	.-4      	; 0x38c6 <_ZN12OrangutanLCD8busyWaitEv+0x40>
    38ca:	6f 91       	pop	r22
    38cc:	01 97       	sbiw	r24, 0x01	; 1
    38ce:	c9 f7       	brne	.-14     	; 0x38c2 <_ZN12OrangutanLCD8busyWaitEv+0x3c>
    38d0:	86 b1       	in	r24, 0x06	; 6
    38d2:	2a 98       	cbi	0x05, 2	; 5
    38d4:	fa 01       	movw	r30, r20
    38d6:	6f 93       	push	r22
    38d8:	64 e0       	ldi	r22, 0x04	; 4
    38da:	6a 95       	dec	r22
    38dc:	f1 f7       	brne	.-4      	; 0x38da <_ZN12OrangutanLCD8busyWaitEv+0x54>
    38de:	6f 91       	pop	r22
    38e0:	31 97       	sbiw	r30, 0x01	; 1
    38e2:	c9 f7       	brne	.-14     	; 0x38d6 <_ZN12OrangutanLCD8busyWaitEv+0x50>
    38e4:	2a 9a       	sbi	0x05, 2	; 5
    38e6:	fa 01       	movw	r30, r20
    38e8:	6f 93       	push	r22
    38ea:	64 e0       	ldi	r22, 0x04	; 4
    38ec:	6a 95       	dec	r22
    38ee:	f1 f7       	brne	.-4      	; 0x38ec <_ZN12OrangutanLCD8busyWaitEv+0x66>
    38f0:	6f 91       	pop	r22
    38f2:	31 97       	sbiw	r30, 0x01	; 1
    38f4:	c9 f7       	brne	.-14     	; 0x38e8 <_ZN12OrangutanLCD8busyWaitEv+0x62>
    38f6:	2a 98       	cbi	0x05, 2	; 5
    38f8:	2c 5f       	subi	r18, 0xFC	; 252
    38fa:	3f 4f       	sbci	r19, 0xFF	; 255
    38fc:	85 ff       	sbrs	r24, 5
    38fe:	09 c0       	rjmp	.+18     	; 0x3912 <_ZN12OrangutanLCD8busyWaitEv+0x8c>
    3900:	c9 01       	movw	r24, r18
    3902:	a0 e0       	ldi	r26, 0x00	; 0
    3904:	b0 e0       	ldi	r27, 0x00	; 0
    3906:	8e 15       	cp	r24, r14
    3908:	9f 05       	cpc	r25, r15
    390a:	a0 07       	cpc	r26, r16
    390c:	b1 07       	cpc	r27, r17
    390e:	08 f4       	brcc	.+2      	; 0x3912 <_ZN12OrangutanLCD8busyWaitEv+0x8c>
    3910:	ce cf       	rjmp	.-100    	; 0x38ae <_ZN12OrangutanLCD8busyWaitEv+0x28>
    3912:	c9 01       	movw	r24, r18
    3914:	a0 e0       	ldi	r26, 0x00	; 0
    3916:	b0 e0       	ldi	r27, 0x00	; 0
    3918:	8e 15       	cp	r24, r14
    391a:	9f 05       	cpc	r25, r15
    391c:	a0 07       	cpc	r26, r16
    391e:	b1 07       	cpc	r27, r17
    3920:	28 f0       	brcs	.+10     	; 0x392c <_ZN12OrangutanLCD8busyWaitEv+0xa6>
    3922:	82 e3       	ldi	r24, 0x32	; 50
    3924:	90 e0       	ldi	r25, 0x00	; 0
    3926:	a0 e0       	ldi	r26, 0x00	; 0
    3928:	b0 e0       	ldi	r27, 0x00	; 0
    392a:	04 c0       	rjmp	.+8      	; 0x3934 <_ZN12OrangutanLCD8busyWaitEv+0xae>
    392c:	80 e3       	ldi	r24, 0x30	; 48
    392e:	95 e7       	ldi	r25, 0x75	; 117
    3930:	a0 e0       	ldi	r26, 0x00	; 0
    3932:	b0 e0       	ldi	r27, 0x00	; 0
    3934:	80 93 42 03 	sts	0x0342, r24
    3938:	90 93 43 03 	sts	0x0343, r25
    393c:	a0 93 44 03 	sts	0x0344, r26
    3940:	b0 93 45 03 	sts	0x0345, r27
    3944:	67 b9       	out	0x07, r22	; 7
    3946:	1f 91       	pop	r17
    3948:	0f 91       	pop	r16
    394a:	ff 90       	pop	r15
    394c:	ef 90       	pop	r14
    394e:	08 95       	ret

00003950 <_ZN12OrangutanLCD8sendDataEh>:
    3950:	28 b1       	in	r18, 0x08	; 8
    3952:	90 e0       	ldi	r25, 0x00	; 0
    3954:	8f 70       	andi	r24, 0x0F	; 15
    3956:	90 70       	andi	r25, 0x00	; 0
    3958:	88 0f       	add	r24, r24
    395a:	99 1f       	adc	r25, r25
    395c:	88 0f       	add	r24, r24
    395e:	99 1f       	adc	r25, r25
    3960:	23 7c       	andi	r18, 0xC3	; 195
    3962:	28 2b       	or	r18, r24
    3964:	28 b9       	out	0x08, r18	; 8
    3966:	2a 9a       	sbi	0x05, 2	; 5
    3968:	81 e0       	ldi	r24, 0x01	; 1
    396a:	90 e0       	ldi	r25, 0x00	; 0
    396c:	fc 01       	movw	r30, r24
    396e:	6f 93       	push	r22
    3970:	64 e0       	ldi	r22, 0x04	; 4
    3972:	6a 95       	dec	r22
    3974:	f1 f7       	brne	.-4      	; 0x3972 <_ZN12OrangutanLCD8sendDataEh+0x22>
    3976:	6f 91       	pop	r22
    3978:	31 97       	sbiw	r30, 0x01	; 1
    397a:	c9 f7       	brne	.-14     	; 0x396e <_ZN12OrangutanLCD8sendDataEh+0x1e>
    397c:	2a 98       	cbi	0x05, 2	; 5
    397e:	6f 93       	push	r22
    3980:	64 e0       	ldi	r22, 0x04	; 4
    3982:	6a 95       	dec	r22
    3984:	f1 f7       	brne	.-4      	; 0x3982 <_ZN12OrangutanLCD8sendDataEh+0x32>
    3986:	6f 91       	pop	r22
    3988:	01 97       	sbiw	r24, 0x01	; 1
    398a:	c9 f7       	brne	.-14     	; 0x397e <_ZN12OrangutanLCD8sendDataEh+0x2e>
    398c:	08 95       	ret

0000398e <_ZN12OrangutanLCD10initPrintfEv>:
    398e:	80 91 3e 03 	lds	r24, 0x033E
    3992:	90 91 3f 03 	lds	r25, 0x033F
    3996:	00 97       	sbiw	r24, 0x00	; 0
    3998:	11 f0       	breq	.+4      	; 0x399e <_ZN12OrangutanLCD10initPrintfEv+0x10>
    399a:	0e 94 e6 22 	call	0x45cc	; 0x45cc <free>
    399e:	80 91 2f 03 	lds	r24, 0x032F
    39a2:	90 e0       	ldi	r25, 0x00	; 0
    39a4:	01 97       	sbiw	r24, 0x01	; 1
    39a6:	20 91 30 03 	lds	r18, 0x0330
    39aa:	30 e0       	ldi	r19, 0x00	; 0
    39ac:	ac 01       	movw	r20, r24
    39ae:	42 9f       	mul	r20, r18
    39b0:	c0 01       	movw	r24, r0
    39b2:	43 9f       	mul	r20, r19
    39b4:	90 0d       	add	r25, r0
    39b6:	52 9f       	mul	r21, r18
    39b8:	90 0d       	add	r25, r0
    39ba:	11 24       	eor	r1, r1
    39bc:	0e 94 39 22 	call	0x4472	; 0x4472 <malloc>
    39c0:	90 93 3f 03 	sts	0x033F, r25
    39c4:	80 93 3e 03 	sts	0x033E, r24
    39c8:	00 97       	sbiw	r24, 0x00	; 0
    39ca:	29 f1       	breq	.+74     	; 0x3a16 <_ZN12OrangutanLCD10initPrintfEv+0x88>
    39cc:	60 e0       	ldi	r22, 0x00	; 0
    39ce:	70 e2       	ldi	r23, 0x20	; 32
    39d0:	08 c0       	rjmp	.+16     	; 0x39e2 <_ZN12OrangutanLCD10initPrintfEv+0x54>
    39d2:	e0 91 3e 03 	lds	r30, 0x033E
    39d6:	f0 91 3f 03 	lds	r31, 0x033F
    39da:	e4 0f       	add	r30, r20
    39dc:	f5 1f       	adc	r31, r21
    39de:	70 83       	st	Z, r23
    39e0:	6f 5f       	subi	r22, 0xFF	; 255
    39e2:	46 2f       	mov	r20, r22
    39e4:	50 e0       	ldi	r21, 0x00	; 0
    39e6:	80 91 2f 03 	lds	r24, 0x032F
    39ea:	90 e0       	ldi	r25, 0x00	; 0
    39ec:	01 97       	sbiw	r24, 0x01	; 1
    39ee:	20 91 30 03 	lds	r18, 0x0330
    39f2:	30 e0       	ldi	r19, 0x00	; 0
    39f4:	fc 01       	movw	r30, r24
    39f6:	e2 9f       	mul	r30, r18
    39f8:	c0 01       	movw	r24, r0
    39fa:	e3 9f       	mul	r30, r19
    39fc:	90 0d       	add	r25, r0
    39fe:	f2 9f       	mul	r31, r18
    3a00:	90 0d       	add	r25, r0
    3a02:	11 24       	eor	r1, r1
    3a04:	48 17       	cp	r20, r24
    3a06:	59 07       	cpc	r21, r25
    3a08:	24 f3       	brlt	.-56     	; 0x39d2 <_ZN12OrangutanLCD10initPrintfEv+0x44>
    3a0a:	8c e2       	ldi	r24, 0x2C	; 44
    3a0c:	9f e1       	ldi	r25, 0x1F	; 31
    3a0e:	60 e4       	ldi	r22, 0x40	; 64
    3a10:	7c e1       	ldi	r23, 0x1C	; 28
    3a12:	0e 94 3e 23 	call	0x467c	; 0x467c <fdevopen>
    3a16:	08 95       	ret

00003a18 <_ZN12OrangutanLCD10initPrintfEhh>:
    3a18:	80 93 30 03 	sts	0x0330, r24
    3a1c:	60 93 2f 03 	sts	0x032F, r22
    3a20:	0e 94 c7 1c 	call	0x398e	; 0x398e <_ZN12OrangutanLCD10initPrintfEv>
    3a24:	08 95       	ret

00003a26 <lcd_init_printf_with_dimensions>:
    3a26:	80 93 30 03 	sts	0x0330, r24
    3a2a:	60 93 2f 03 	sts	0x032F, r22
    3a2e:	0e 94 c7 1c 	call	0x398e	; 0x398e <_ZN12OrangutanLCD10initPrintfEv>
    3a32:	08 95       	ret

00003a34 <lcd_init_printf>:
    3a34:	0e 94 c7 1c 	call	0x398e	; 0x398e <_ZN12OrangutanLCD10initPrintfEv>
    3a38:	08 95       	ret

00003a3a <_ZN12OrangutanLCD5init2Ev>:
    3a3a:	3d 98       	cbi	0x07, 5	; 7
    3a3c:	45 9a       	sbi	0x08, 5	; 8
    3a3e:	80 e3       	ldi	r24, 0x30	; 48
    3a40:	95 e7       	ldi	r25, 0x75	; 117
    3a42:	a0 e0       	ldi	r26, 0x00	; 0
    3a44:	b0 e0       	ldi	r27, 0x00	; 0
    3a46:	80 93 42 03 	sts	0x0342, r24
    3a4a:	90 93 43 03 	sts	0x0343, r25
    3a4e:	a0 93 44 03 	sts	0x0344, r26
    3a52:	b0 93 45 03 	sts	0x0345, r27
    3a56:	20 9a       	sbi	0x04, 0	; 4
    3a58:	21 9a       	sbi	0x04, 1	; 4
    3a5a:	22 9a       	sbi	0x04, 2	; 4
    3a5c:	8e e1       	ldi	r24, 0x1E	; 30
    3a5e:	90 e0       	ldi	r25, 0x00	; 0
    3a60:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>
    3a64:	83 e0       	ldi	r24, 0x03	; 3
    3a66:	0e 94 72 20 	call	0x40e4	; 0x40e4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    3a6a:	86 e0       	ldi	r24, 0x06	; 6
    3a6c:	90 e0       	ldi	r25, 0x00	; 0
    3a6e:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>
    3a72:	83 e0       	ldi	r24, 0x03	; 3
    3a74:	0e 94 72 20 	call	0x40e4	; 0x40e4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    3a78:	82 e0       	ldi	r24, 0x02	; 2
    3a7a:	90 e0       	ldi	r25, 0x00	; 0
    3a7c:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>
    3a80:	83 e0       	ldi	r24, 0x03	; 3
    3a82:	0e 94 72 20 	call	0x40e4	; 0x40e4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    3a86:	82 e0       	ldi	r24, 0x02	; 2
    3a88:	90 e0       	ldi	r25, 0x00	; 0
    3a8a:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>
    3a8e:	82 e0       	ldi	r24, 0x02	; 2
    3a90:	0e 94 72 20 	call	0x40e4	; 0x40e4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    3a94:	82 e0       	ldi	r24, 0x02	; 2
    3a96:	90 e0       	ldi	r25, 0x00	; 0
    3a98:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>
    3a9c:	88 e2       	ldi	r24, 0x28	; 40
    3a9e:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <_ZN12OrangutanLCD8send_cmdEh>
    3aa2:	88 e0       	ldi	r24, 0x08	; 8
    3aa4:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <_ZN12OrangutanLCD8send_cmdEh>
    3aa8:	81 e0       	ldi	r24, 0x01	; 1
    3aaa:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <_ZN12OrangutanLCD8send_cmdEh>
    3aae:	86 e0       	ldi	r24, 0x06	; 6
    3ab0:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <_ZN12OrangutanLCD8send_cmdEh>
    3ab4:	8c e0       	ldi	r24, 0x0C	; 12
    3ab6:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <_ZN12OrangutanLCD8send_cmdEh>
    3aba:	08 95       	ret

00003abc <_ZN12OrangutanLCD4initEv>:
    3abc:	80 91 46 03 	lds	r24, 0x0346
    3ac0:	88 23       	and	r24, r24
    3ac2:	29 f4       	brne	.+10     	; 0x3ace <_ZN12OrangutanLCD4initEv+0x12>
    3ac4:	81 e0       	ldi	r24, 0x01	; 1
    3ac6:	80 93 46 03 	sts	0x0346, r24
    3aca:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <_ZN12OrangutanLCD5init2Ev>
    3ace:	08 95       	ret

00003ad0 <_ZN12OrangutanLCD4sendEhhh>:
    3ad0:	ff 92       	push	r15
    3ad2:	0f 93       	push	r16
    3ad4:	1f 93       	push	r17
    3ad6:	08 2f       	mov	r16, r24
    3ad8:	16 2f       	mov	r17, r22
    3ada:	f4 2e       	mov	r15, r20
    3adc:	0e 94 5e 1d 	call	0x3abc	; 0x3abc <_ZN12OrangutanLCD4initEv>
    3ae0:	0e 94 43 1c 	call	0x3886	; 0x3886 <_ZN12OrangutanLCD8busyWaitEv>
    3ae4:	37 b1       	in	r19, 0x07	; 7
    3ae6:	28 b1       	in	r18, 0x08	; 8
    3ae8:	29 98       	cbi	0x05, 1	; 5
    3aea:	11 23       	and	r17, r17
    3aec:	11 f0       	breq	.+4      	; 0x3af2 <_ZN12OrangutanLCD4sendEhhh+0x22>
    3aee:	28 9a       	sbi	0x05, 0	; 5
    3af0:	01 c0       	rjmp	.+2      	; 0x3af4 <_ZN12OrangutanLCD4sendEhhh+0x24>
    3af2:	28 98       	cbi	0x05, 0	; 5
    3af4:	87 b1       	in	r24, 0x07	; 7
    3af6:	8c 63       	ori	r24, 0x3C	; 60
    3af8:	87 b9       	out	0x07, r24	; 7
    3afa:	81 e0       	ldi	r24, 0x01	; 1
    3afc:	f8 16       	cp	r15, r24
    3afe:	e1 f0       	breq	.+56     	; 0x3b38 <_ZN12OrangutanLCD4sendEhhh+0x68>
    3b00:	88 b1       	in	r24, 0x08	; 8
    3b02:	90 2f       	mov	r25, r16
    3b04:	92 95       	swap	r25
    3b06:	9f 70       	andi	r25, 0x0F	; 15
    3b08:	99 0f       	add	r25, r25
    3b0a:	99 0f       	add	r25, r25
    3b0c:	83 7c       	andi	r24, 0xC3	; 195
    3b0e:	98 2b       	or	r25, r24
    3b10:	98 b9       	out	0x08, r25	; 8
    3b12:	2a 9a       	sbi	0x05, 2	; 5
    3b14:	81 e0       	ldi	r24, 0x01	; 1
    3b16:	90 e0       	ldi	r25, 0x00	; 0
    3b18:	fc 01       	movw	r30, r24
    3b1a:	6f 93       	push	r22
    3b1c:	64 e0       	ldi	r22, 0x04	; 4
    3b1e:	6a 95       	dec	r22
    3b20:	f1 f7       	brne	.-4      	; 0x3b1e <_ZN12OrangutanLCD4sendEhhh+0x4e>
    3b22:	6f 91       	pop	r22
    3b24:	31 97       	sbiw	r30, 0x01	; 1
    3b26:	c9 f7       	brne	.-14     	; 0x3b1a <_ZN12OrangutanLCD4sendEhhh+0x4a>
    3b28:	2a 98       	cbi	0x05, 2	; 5
    3b2a:	6f 93       	push	r22
    3b2c:	64 e0       	ldi	r22, 0x04	; 4
    3b2e:	6a 95       	dec	r22
    3b30:	f1 f7       	brne	.-4      	; 0x3b2e <_ZN12OrangutanLCD4sendEhhh+0x5e>
    3b32:	6f 91       	pop	r22
    3b34:	01 97       	sbiw	r24, 0x01	; 1
    3b36:	c9 f7       	brne	.-14     	; 0x3b2a <_ZN12OrangutanLCD4sendEhhh+0x5a>
    3b38:	88 b1       	in	r24, 0x08	; 8
    3b3a:	0f 70       	andi	r16, 0x0F	; 15
    3b3c:	00 0f       	add	r16, r16
    3b3e:	00 0f       	add	r16, r16
    3b40:	83 7c       	andi	r24, 0xC3	; 195
    3b42:	80 2b       	or	r24, r16
    3b44:	88 b9       	out	0x08, r24	; 8
    3b46:	2a 9a       	sbi	0x05, 2	; 5
    3b48:	81 e0       	ldi	r24, 0x01	; 1
    3b4a:	90 e0       	ldi	r25, 0x00	; 0
    3b4c:	fc 01       	movw	r30, r24
    3b4e:	6f 93       	push	r22
    3b50:	64 e0       	ldi	r22, 0x04	; 4
    3b52:	6a 95       	dec	r22
    3b54:	f1 f7       	brne	.-4      	; 0x3b52 <_ZN12OrangutanLCD4sendEhhh+0x82>
    3b56:	6f 91       	pop	r22
    3b58:	31 97       	sbiw	r30, 0x01	; 1
    3b5a:	c9 f7       	brne	.-14     	; 0x3b4e <_ZN12OrangutanLCD4sendEhhh+0x7e>
    3b5c:	2a 98       	cbi	0x05, 2	; 5
    3b5e:	6f 93       	push	r22
    3b60:	64 e0       	ldi	r22, 0x04	; 4
    3b62:	6a 95       	dec	r22
    3b64:	f1 f7       	brne	.-4      	; 0x3b62 <_ZN12OrangutanLCD4sendEhhh+0x92>
    3b66:	6f 91       	pop	r22
    3b68:	01 97       	sbiw	r24, 0x01	; 1
    3b6a:	c9 f7       	brne	.-14     	; 0x3b5e <_ZN12OrangutanLCD4sendEhhh+0x8e>
    3b6c:	37 b9       	out	0x07, r19	; 7
    3b6e:	28 b9       	out	0x08, r18	; 8
    3b70:	1f 91       	pop	r17
    3b72:	0f 91       	pop	r16
    3b74:	ff 90       	pop	r15
    3b76:	08 95       	ret

00003b78 <_ZN12OrangutanLCD8send_cmdEh>:
    3b78:	60 e0       	ldi	r22, 0x00	; 0
    3b7a:	42 e0       	ldi	r20, 0x02	; 2
    3b7c:	0e 94 68 1d 	call	0x3ad0	; 0x3ad0 <_ZN12OrangutanLCD4sendEhhh>
    3b80:	08 95       	ret

00003b82 <_ZN12OrangutanLCD10moveCursorEhh>:
    3b82:	0f 93       	push	r16
    3b84:	1f 93       	push	r17
    3b86:	08 2f       	mov	r16, r24
    3b88:	16 2f       	mov	r17, r22
    3b8a:	08 c0       	rjmp	.+16     	; 0x3b9c <_ZN12OrangutanLCD10moveCursorEhh+0x1a>
    3b8c:	00 23       	and	r16, r16
    3b8e:	11 f4       	brne	.+4      	; 0x3b94 <_ZN12OrangutanLCD10moveCursorEhh+0x12>
    3b90:	80 e1       	ldi	r24, 0x10	; 16
    3b92:	01 c0       	rjmp	.+2      	; 0x3b96 <_ZN12OrangutanLCD10moveCursorEhh+0x14>
    3b94:	84 e1       	ldi	r24, 0x14	; 20
    3b96:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <_ZN12OrangutanLCD8send_cmdEh>
    3b9a:	11 50       	subi	r17, 0x01	; 1
    3b9c:	11 23       	and	r17, r17
    3b9e:	b1 f7       	brne	.-20     	; 0x3b8c <_ZN12OrangutanLCD10moveCursorEhh+0xa>
    3ba0:	1f 91       	pop	r17
    3ba2:	0f 91       	pop	r16
    3ba4:	08 95       	ret

00003ba6 <lcd_move_cursor>:
    3ba6:	0e 94 c1 1d 	call	0x3b82	; 0x3b82 <_ZN12OrangutanLCD10moveCursorEhh>
    3baa:	08 95       	ret

00003bac <_ZN12OrangutanLCD10hideCursorEv>:
    3bac:	8c e0       	ldi	r24, 0x0C	; 12
    3bae:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <_ZN12OrangutanLCD8send_cmdEh>
    3bb2:	08 95       	ret

00003bb4 <lcd_hide_cursor>:
    3bb4:	0e 94 d6 1d 	call	0x3bac	; 0x3bac <_ZN12OrangutanLCD10hideCursorEv>
    3bb8:	08 95       	ret

00003bba <_ZN12OrangutanLCD10showCursorEh>:
    3bba:	81 30       	cpi	r24, 0x01	; 1
    3bbc:	11 f4       	brne	.+4      	; 0x3bc2 <_ZN12OrangutanLCD10showCursorEh+0x8>
    3bbe:	8f e0       	ldi	r24, 0x0F	; 15
    3bc0:	01 c0       	rjmp	.+2      	; 0x3bc4 <_ZN12OrangutanLCD10showCursorEh+0xa>
    3bc2:	8e e0       	ldi	r24, 0x0E	; 14
    3bc4:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <_ZN12OrangutanLCD8send_cmdEh>
    3bc8:	08 95       	ret

00003bca <lcd_show_cursor>:
    3bca:	0e 94 dd 1d 	call	0x3bba	; 0x3bba <_ZN12OrangutanLCD10showCursorEh>
    3bce:	08 95       	ret

00003bd0 <_ZN12OrangutanLCD6gotoXYEhh>:
    3bd0:	a4 e0       	ldi	r26, 0x04	; 4
    3bd2:	b0 e0       	ldi	r27, 0x00	; 0
    3bd4:	ee ee       	ldi	r30, 0xEE	; 238
    3bd6:	fd e1       	ldi	r31, 0x1D	; 29
    3bd8:	0c 94 fc 21 	jmp	0x43f8	; 0x43f8 <__prologue_saves__+0x1c>
    3bdc:	18 2f       	mov	r17, r24
    3bde:	06 2f       	mov	r16, r22
    3be0:	80 e8       	ldi	r24, 0x80	; 128
    3be2:	89 83       	std	Y+1, r24	; 0x01
    3be4:	80 ec       	ldi	r24, 0xC0	; 192
    3be6:	8a 83       	std	Y+2, r24	; 0x02
    3be8:	84 e9       	ldi	r24, 0x94	; 148
    3bea:	8b 83       	std	Y+3, r24	; 0x03
    3bec:	84 ed       	ldi	r24, 0xD4	; 212
    3bee:	8c 83       	std	Y+4, r24	; 0x04
    3bf0:	fe 01       	movw	r30, r28
    3bf2:	e6 0f       	add	r30, r22
    3bf4:	f1 1d       	adc	r31, r1
    3bf6:	81 81       	ldd	r24, Z+1	; 0x01
    3bf8:	81 0f       	add	r24, r17
    3bfa:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <_ZN12OrangutanLCD8send_cmdEh>
    3bfe:	10 93 41 03 	sts	0x0341, r17
    3c02:	00 93 40 03 	sts	0x0340, r16
    3c06:	24 96       	adiw	r28, 0x04	; 4
    3c08:	e4 e0       	ldi	r30, 0x04	; 4
    3c0a:	0c 94 18 22 	jmp	0x4430	; 0x4430 <__epilogue_restores__+0x1c>

00003c0e <lcd_goto_xy>:
    3c0e:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
    3c12:	08 95       	ret

00003c14 <_ZN12OrangutanLCD5clearEv>:
    3c14:	81 e0       	ldi	r24, 0x01	; 1
    3c16:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <_ZN12OrangutanLCD8send_cmdEh>
    3c1a:	80 91 3e 03 	lds	r24, 0x033E
    3c1e:	90 91 3f 03 	lds	r25, 0x033F
    3c22:	89 2b       	or	r24, r25
    3c24:	19 f1       	breq	.+70     	; 0x3c6c <_ZN12OrangutanLCD5clearEv+0x58>
    3c26:	60 e0       	ldi	r22, 0x00	; 0
    3c28:	70 e2       	ldi	r23, 0x20	; 32
    3c2a:	08 c0       	rjmp	.+16     	; 0x3c3c <_ZN12OrangutanLCD5clearEv+0x28>
    3c2c:	e0 91 3e 03 	lds	r30, 0x033E
    3c30:	f0 91 3f 03 	lds	r31, 0x033F
    3c34:	e4 0f       	add	r30, r20
    3c36:	f5 1f       	adc	r31, r21
    3c38:	70 83       	st	Z, r23
    3c3a:	6f 5f       	subi	r22, 0xFF	; 255
    3c3c:	46 2f       	mov	r20, r22
    3c3e:	50 e0       	ldi	r21, 0x00	; 0
    3c40:	80 91 2f 03 	lds	r24, 0x032F
    3c44:	90 e0       	ldi	r25, 0x00	; 0
    3c46:	01 97       	sbiw	r24, 0x01	; 1
    3c48:	20 91 30 03 	lds	r18, 0x0330
    3c4c:	30 e0       	ldi	r19, 0x00	; 0
    3c4e:	fc 01       	movw	r30, r24
    3c50:	e2 9f       	mul	r30, r18
    3c52:	c0 01       	movw	r24, r0
    3c54:	e3 9f       	mul	r30, r19
    3c56:	90 0d       	add	r25, r0
    3c58:	f2 9f       	mul	r31, r18
    3c5a:	90 0d       	add	r25, r0
    3c5c:	11 24       	eor	r1, r1
    3c5e:	48 17       	cp	r20, r24
    3c60:	59 07       	cpc	r21, r25
    3c62:	24 f3       	brlt	.-56     	; 0x3c2c <_ZN12OrangutanLCD5clearEv+0x18>
    3c64:	10 92 41 03 	sts	0x0341, r1
    3c68:	10 92 40 03 	sts	0x0340, r1
    3c6c:	08 95       	ret

00003c6e <clear>:
    3c6e:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <_ZN12OrangutanLCD5clearEv>
    3c72:	08 95       	ret

00003c74 <_ZN12OrangutanLCD9send_dataEh>:
    3c74:	61 e0       	ldi	r22, 0x01	; 1
    3c76:	42 e0       	ldi	r20, 0x02	; 2
    3c78:	0e 94 68 1d 	call	0x3ad0	; 0x3ad0 <_ZN12OrangutanLCD4sendEhhh>
    3c7c:	08 95       	ret

00003c7e <_ZN12OrangutanLCD11printBinaryEh>:
    3c7e:	0f 93       	push	r16
    3c80:	1f 93       	push	r17
    3c82:	cf 93       	push	r28
    3c84:	df 93       	push	r29
    3c86:	00 e0       	ldi	r16, 0x00	; 0
    3c88:	10 e8       	ldi	r17, 0x80	; 128
    3c8a:	c8 2f       	mov	r28, r24
    3c8c:	d0 e0       	ldi	r29, 0x00	; 0
    3c8e:	81 2f       	mov	r24, r17
    3c90:	90 e0       	ldi	r25, 0x00	; 0
    3c92:	8c 23       	and	r24, r28
    3c94:	9d 23       	and	r25, r29
    3c96:	89 2b       	or	r24, r25
    3c98:	11 f0       	breq	.+4      	; 0x3c9e <_ZN12OrangutanLCD11printBinaryEh+0x20>
    3c9a:	81 e3       	ldi	r24, 0x31	; 49
    3c9c:	01 c0       	rjmp	.+2      	; 0x3ca0 <_ZN12OrangutanLCD11printBinaryEh+0x22>
    3c9e:	80 e3       	ldi	r24, 0x30	; 48
    3ca0:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <_ZN12OrangutanLCD9send_dataEh>
    3ca4:	0f 5f       	subi	r16, 0xFF	; 255
    3ca6:	08 30       	cpi	r16, 0x08	; 8
    3ca8:	11 f0       	breq	.+4      	; 0x3cae <_ZN12OrangutanLCD11printBinaryEh+0x30>
    3caa:	16 95       	lsr	r17
    3cac:	f0 cf       	rjmp	.-32     	; 0x3c8e <_ZN12OrangutanLCD11printBinaryEh+0x10>
    3cae:	df 91       	pop	r29
    3cb0:	cf 91       	pop	r28
    3cb2:	1f 91       	pop	r17
    3cb4:	0f 91       	pop	r16
    3cb6:	08 95       	ret

00003cb8 <print_binary>:
    3cb8:	0e 94 3f 1e 	call	0x3c7e	; 0x3c7e <_ZN12OrangutanLCD11printBinaryEh>
    3cbc:	08 95       	ret

00003cbe <_ZN12OrangutanLCD14printHexNibbleEh>:
    3cbe:	8a 30       	cpi	r24, 0x0A	; 10
    3cc0:	10 f4       	brcc	.+4      	; 0x3cc6 <_ZN12OrangutanLCD14printHexNibbleEh+0x8>
    3cc2:	80 5d       	subi	r24, 0xD0	; 208
    3cc4:	01 c0       	rjmp	.+2      	; 0x3cc8 <_ZN12OrangutanLCD14printHexNibbleEh+0xa>
    3cc6:	89 5c       	subi	r24, 0xC9	; 201
    3cc8:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <_ZN12OrangutanLCD9send_dataEh>
    3ccc:	08 95       	ret

00003cce <_ZN12OrangutanLCD8printHexEh>:
    3cce:	1f 93       	push	r17
    3cd0:	18 2f       	mov	r17, r24
    3cd2:	82 95       	swap	r24
    3cd4:	8f 70       	andi	r24, 0x0F	; 15
    3cd6:	0e 94 5f 1e 	call	0x3cbe	; 0x3cbe <_ZN12OrangutanLCD14printHexNibbleEh>
    3cda:	81 2f       	mov	r24, r17
    3cdc:	8f 70       	andi	r24, 0x0F	; 15
    3cde:	0e 94 5f 1e 	call	0x3cbe	; 0x3cbe <_ZN12OrangutanLCD14printHexNibbleEh>
    3ce2:	1f 91       	pop	r17
    3ce4:	08 95       	ret

00003ce6 <_ZN12OrangutanLCD8printHexEj>:
    3ce6:	1f 93       	push	r17
    3ce8:	18 2f       	mov	r17, r24
    3cea:	89 2f       	mov	r24, r25
    3cec:	0e 94 67 1e 	call	0x3cce	; 0x3cce <_ZN12OrangutanLCD8printHexEh>
    3cf0:	81 2f       	mov	r24, r17
    3cf2:	0e 94 67 1e 	call	0x3cce	; 0x3cce <_ZN12OrangutanLCD8printHexEh>
    3cf6:	1f 91       	pop	r17
    3cf8:	08 95       	ret

00003cfa <print_hex>:
    3cfa:	0e 94 73 1e 	call	0x3ce6	; 0x3ce6 <_ZN12OrangutanLCD8printHexEj>
    3cfe:	08 95       	ret

00003d00 <print_hex_byte>:
    3d00:	0e 94 67 1e 	call	0x3cce	; 0x3cce <_ZN12OrangutanLCD8printHexEh>
    3d04:	08 95       	ret

00003d06 <_ZN12OrangutanLCD5printEm>:
    3d06:	6f 92       	push	r6
    3d08:	7f 92       	push	r7
    3d0a:	8f 92       	push	r8
    3d0c:	9f 92       	push	r9
    3d0e:	af 92       	push	r10
    3d10:	bf 92       	push	r11
    3d12:	cf 92       	push	r12
    3d14:	df 92       	push	r13
    3d16:	ff 92       	push	r15
    3d18:	0f 93       	push	r16
    3d1a:	df 93       	push	r29
    3d1c:	cf 93       	push	r28
    3d1e:	cd b7       	in	r28, 0x3d	; 61
    3d20:	de b7       	in	r29, 0x3e	; 62
    3d22:	2a 97       	sbiw	r28, 0x0a	; 10
    3d24:	0f b6       	in	r0, 0x3f	; 63
    3d26:	f8 94       	cli
    3d28:	de bf       	out	0x3e, r29	; 62
    3d2a:	0f be       	out	0x3f, r0	; 63
    3d2c:	cd bf       	out	0x3d, r28	; 61
    3d2e:	5b 01       	movw	r10, r22
    3d30:	6c 01       	movw	r12, r24
    3d32:	0a e0       	ldi	r16, 0x0A	; 10
    3d34:	3e 01       	movw	r6, r28
    3d36:	08 94       	sec
    3d38:	61 1c       	adc	r6, r1
    3d3a:	71 1c       	adc	r7, r1
    3d3c:	fa 2c       	mov	r15, r10
    3d3e:	c6 01       	movw	r24, r12
    3d40:	b5 01       	movw	r22, r10
    3d42:	2a e0       	ldi	r18, 0x0A	; 10
    3d44:	30 e0       	ldi	r19, 0x00	; 0
    3d46:	40 e0       	ldi	r20, 0x00	; 0
    3d48:	50 e0       	ldi	r21, 0x00	; 0
    3d4a:	0e 94 cc 21 	call	0x4398	; 0x4398 <__udivmodsi4>
    3d4e:	c9 01       	movw	r24, r18
    3d50:	da 01       	movw	r26, r20
    3d52:	5c 01       	movw	r10, r24
    3d54:	6d 01       	movw	r12, r26
    3d56:	01 50       	subi	r16, 0x01	; 1
    3d58:	43 01       	movw	r8, r6
    3d5a:	80 0e       	add	r8, r16
    3d5c:	91 1c       	adc	r9, r1
    3d5e:	80 e3       	ldi	r24, 0x30	; 48
    3d60:	f8 0e       	add	r15, r24
    3d62:	c6 01       	movw	r24, r12
    3d64:	b5 01       	movw	r22, r10
    3d66:	2a e0       	ldi	r18, 0x0A	; 10
    3d68:	30 e0       	ldi	r19, 0x00	; 0
    3d6a:	40 e0       	ldi	r20, 0x00	; 0
    3d6c:	50 e0       	ldi	r21, 0x00	; 0
    3d6e:	0e 94 9a 21 	call	0x4334	; 0x4334 <__mulsi3>
    3d72:	f6 1a       	sub	r15, r22
    3d74:	f4 01       	movw	r30, r8
    3d76:	f0 82       	st	Z, r15
    3d78:	a1 14       	cp	r10, r1
    3d7a:	b1 04       	cpc	r11, r1
    3d7c:	c1 04       	cpc	r12, r1
    3d7e:	d1 04       	cpc	r13, r1
    3d80:	e9 f6       	brne	.-70     	; 0x3d3c <_ZN12OrangutanLCD5printEm+0x36>
    3d82:	08 c0       	rjmp	.+16     	; 0x3d94 <_ZN12OrangutanLCD5printEm+0x8e>
    3d84:	f6 01       	movw	r30, r12
    3d86:	e0 0f       	add	r30, r16
    3d88:	f1 1d       	adc	r31, r1
    3d8a:	80 81       	ld	r24, Z
    3d8c:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <_ZN12OrangutanLCD9send_dataEh>
    3d90:	0f 5f       	subi	r16, 0xFF	; 255
    3d92:	04 c0       	rjmp	.+8      	; 0x3d9c <_ZN12OrangutanLCD5printEm+0x96>
    3d94:	6e 01       	movw	r12, r28
    3d96:	08 94       	sec
    3d98:	c1 1c       	adc	r12, r1
    3d9a:	d1 1c       	adc	r13, r1
    3d9c:	0a 30       	cpi	r16, 0x0A	; 10
    3d9e:	90 f3       	brcs	.-28     	; 0x3d84 <_ZN12OrangutanLCD5printEm+0x7e>
    3da0:	2a 96       	adiw	r28, 0x0a	; 10
    3da2:	0f b6       	in	r0, 0x3f	; 63
    3da4:	f8 94       	cli
    3da6:	de bf       	out	0x3e, r29	; 62
    3da8:	0f be       	out	0x3f, r0	; 63
    3daa:	cd bf       	out	0x3d, r28	; 61
    3dac:	cf 91       	pop	r28
    3dae:	df 91       	pop	r29
    3db0:	0f 91       	pop	r16
    3db2:	ff 90       	pop	r15
    3db4:	df 90       	pop	r13
    3db6:	cf 90       	pop	r12
    3db8:	bf 90       	pop	r11
    3dba:	af 90       	pop	r10
    3dbc:	9f 90       	pop	r9
    3dbe:	8f 90       	pop	r8
    3dc0:	7f 90       	pop	r7
    3dc2:	6f 90       	pop	r6
    3dc4:	08 95       	ret

00003dc6 <print_unsigned_long>:
    3dc6:	0e 94 83 1e 	call	0x3d06	; 0x3d06 <_ZN12OrangutanLCD5printEm>
    3dca:	08 95       	ret

00003dcc <_ZN12OrangutanLCD5printEl>:
    3dcc:	ef 92       	push	r14
    3dce:	ff 92       	push	r15
    3dd0:	0f 93       	push	r16
    3dd2:	1f 93       	push	r17
    3dd4:	7b 01       	movw	r14, r22
    3dd6:	8c 01       	movw	r16, r24
    3dd8:	97 ff       	sbrs	r25, 7
    3dda:	0b c0       	rjmp	.+22     	; 0x3df2 <_ZN12OrangutanLCD5printEl+0x26>
    3ddc:	10 95       	com	r17
    3dde:	00 95       	com	r16
    3de0:	f0 94       	com	r15
    3de2:	e0 94       	com	r14
    3de4:	e1 1c       	adc	r14, r1
    3de6:	f1 1c       	adc	r15, r1
    3de8:	01 1d       	adc	r16, r1
    3dea:	11 1d       	adc	r17, r1
    3dec:	8d e2       	ldi	r24, 0x2D	; 45
    3dee:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <_ZN12OrangutanLCD9send_dataEh>
    3df2:	c8 01       	movw	r24, r16
    3df4:	b7 01       	movw	r22, r14
    3df6:	0e 94 83 1e 	call	0x3d06	; 0x3d06 <_ZN12OrangutanLCD5printEm>
    3dfa:	1f 91       	pop	r17
    3dfc:	0f 91       	pop	r16
    3dfe:	ff 90       	pop	r15
    3e00:	ef 90       	pop	r14
    3e02:	08 95       	ret

00003e04 <print_long>:
    3e04:	0e 94 e6 1e 	call	0x3dcc	; 0x3dcc <_ZN12OrangutanLCD5printEl>
    3e08:	08 95       	ret

00003e0a <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>:
    3e0a:	cf 93       	push	r28
    3e0c:	df 93       	push	r29
    3e0e:	ec 01       	movw	r28, r24
    3e10:	03 c0       	rjmp	.+6      	; 0x3e18 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0xe>
    3e12:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <_ZN12OrangutanLCD9send_dataEh>
    3e16:	21 96       	adiw	r28, 0x01	; 1
    3e18:	fe 01       	movw	r30, r28
    3e1a:	84 91       	lpm	r24, Z+
    3e1c:	88 23       	and	r24, r24
    3e1e:	c9 f7       	brne	.-14     	; 0x3e12 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0x8>
    3e20:	df 91       	pop	r29
    3e22:	cf 91       	pop	r28
    3e24:	08 95       	ret

00003e26 <print_from_program_space>:
    3e26:	0e 94 05 1f 	call	0x3e0a	; 0x3e0a <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>
    3e2a:	08 95       	ret

00003e2c <_ZN12OrangutanLCD5printEPKc>:
    3e2c:	cf 93       	push	r28
    3e2e:	df 93       	push	r29
    3e30:	ec 01       	movw	r28, r24
    3e32:	03 c0       	rjmp	.+6      	; 0x3e3a <_ZN12OrangutanLCD5printEPKc+0xe>
    3e34:	21 96       	adiw	r28, 0x01	; 1
    3e36:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <_ZN12OrangutanLCD9send_dataEh>
    3e3a:	88 81       	ld	r24, Y
    3e3c:	88 23       	and	r24, r24
    3e3e:	d1 f7       	brne	.-12     	; 0x3e34 <_ZN12OrangutanLCD5printEPKc+0x8>
    3e40:	df 91       	pop	r29
    3e42:	cf 91       	pop	r28
    3e44:	08 95       	ret

00003e46 <print>:
    3e46:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <_ZN12OrangutanLCD5printEPKc>
    3e4a:	08 95       	ret

00003e4c <_ZN12OrangutanLCD5printEc>:
    3e4c:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <_ZN12OrangutanLCD9send_dataEh>
    3e50:	08 95       	ret

00003e52 <print_character>:
    3e52:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <_ZN12OrangutanLCD9send_dataEh>
    3e56:	08 95       	ret

00003e58 <lcd_putchar>:
    3e58:	a0 e0       	ldi	r26, 0x00	; 0
    3e5a:	b0 e0       	ldi	r27, 0x00	; 0
    3e5c:	e2 e3       	ldi	r30, 0x32	; 50
    3e5e:	ff e1       	ldi	r31, 0x1F	; 31
    3e60:	0c 94 f8 21 	jmp	0x43f0	; 0x43f0 <__prologue_saves__+0x14>
    3e64:	e8 2e       	mov	r14, r24
    3e66:	80 91 3e 03 	lds	r24, 0x033E
    3e6a:	90 91 3f 03 	lds	r25, 0x033F
    3e6e:	89 2b       	or	r24, r25
    3e70:	09 f4       	brne	.+2      	; 0x3e74 <lcd_putchar+0x1c>
    3e72:	05 c1       	rjmp	.+522    	; 0x407e <lcd_putchar+0x226>
    3e74:	2a e0       	ldi	r18, 0x0A	; 10
    3e76:	e2 16       	cp	r14, r18
    3e78:	09 f4       	brne	.+2      	; 0x3e7c <lcd_putchar+0x24>
    3e7a:	46 c0       	rjmp	.+140    	; 0x3f08 <lcd_putchar+0xb0>
    3e7c:	38 e0       	ldi	r19, 0x08	; 8
    3e7e:	e3 16       	cp	r14, r19
    3e80:	c9 f4       	brne	.+50     	; 0x3eb4 <lcd_putchar+0x5c>
    3e82:	80 91 41 03 	lds	r24, 0x0341
    3e86:	81 50       	subi	r24, 0x01	; 1
    3e88:	80 93 41 03 	sts	0x0341, r24
    3e8c:	8f 3f       	cpi	r24, 0xFF	; 255
    3e8e:	51 f4       	brne	.+20     	; 0x3ea4 <lcd_putchar+0x4c>
    3e90:	80 91 40 03 	lds	r24, 0x0340
    3e94:	81 50       	subi	r24, 0x01	; 1
    3e96:	80 93 40 03 	sts	0x0340, r24
    3e9a:	80 91 30 03 	lds	r24, 0x0330
    3e9e:	81 50       	subi	r24, 0x01	; 1
    3ea0:	80 93 41 03 	sts	0x0341, r24
    3ea4:	80 91 40 03 	lds	r24, 0x0340
    3ea8:	8f 3f       	cpi	r24, 0xFF	; 255
    3eaa:	09 f0       	breq	.+2      	; 0x3eae <lcd_putchar+0x56>
    3eac:	e2 c0       	rjmp	.+452    	; 0x4072 <lcd_putchar+0x21a>
    3eae:	10 92 40 03 	sts	0x0340, r1
    3eb2:	dd c0       	rjmp	.+442    	; 0x406e <lcd_putchar+0x216>
    3eb4:	8e 2d       	mov	r24, r14
    3eb6:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <_ZN12OrangutanLCD9send_dataEh>
    3eba:	20 91 40 03 	lds	r18, 0x0340
    3ebe:	22 23       	and	r18, r18
    3ec0:	c9 f0       	breq	.+50     	; 0x3ef4 <lcd_putchar+0x9c>
    3ec2:	30 e0       	ldi	r19, 0x00	; 0
    3ec4:	21 50       	subi	r18, 0x01	; 1
    3ec6:	30 40       	sbci	r19, 0x00	; 0
    3ec8:	80 91 30 03 	lds	r24, 0x0330
    3ecc:	90 e0       	ldi	r25, 0x00	; 0
    3ece:	ac 01       	movw	r20, r24
    3ed0:	24 9f       	mul	r18, r20
    3ed2:	c0 01       	movw	r24, r0
    3ed4:	25 9f       	mul	r18, r21
    3ed6:	90 0d       	add	r25, r0
    3ed8:	34 9f       	mul	r19, r20
    3eda:	90 0d       	add	r25, r0
    3edc:	11 24       	eor	r1, r1
    3ede:	20 91 41 03 	lds	r18, 0x0341
    3ee2:	e0 91 3e 03 	lds	r30, 0x033E
    3ee6:	f0 91 3f 03 	lds	r31, 0x033F
    3eea:	e8 0f       	add	r30, r24
    3eec:	f9 1f       	adc	r31, r25
    3eee:	e2 0f       	add	r30, r18
    3ef0:	f1 1d       	adc	r31, r1
    3ef2:	e0 82       	st	Z, r14
    3ef4:	80 91 41 03 	lds	r24, 0x0341
    3ef8:	8f 5f       	subi	r24, 0xFF	; 255
    3efa:	80 93 41 03 	sts	0x0341, r24
    3efe:	90 91 30 03 	lds	r25, 0x0330
    3f02:	89 17       	cp	r24, r25
    3f04:	09 f0       	breq	.+2      	; 0x3f08 <lcd_putchar+0xb0>
    3f06:	bb c0       	rjmp	.+374    	; 0x407e <lcd_putchar+0x226>
    3f08:	40 91 40 03 	lds	r20, 0x0340
    3f0c:	24 2f       	mov	r18, r20
    3f0e:	30 e0       	ldi	r19, 0x00	; 0
    3f10:	80 91 2f 03 	lds	r24, 0x032F
    3f14:	90 e0       	ldi	r25, 0x00	; 0
    3f16:	01 97       	sbiw	r24, 0x01	; 1
    3f18:	28 17       	cp	r18, r24
    3f1a:	39 07       	cpc	r19, r25
    3f1c:	09 f0       	breq	.+2      	; 0x3f20 <lcd_putchar+0xc8>
    3f1e:	a4 c0       	rjmp	.+328    	; 0x4068 <lcd_putchar+0x210>
    3f20:	c0 e0       	ldi	r28, 0x00	; 0
    3f22:	d0 e0       	ldi	r29, 0x00	; 0
    3f24:	44 c0       	rjmp	.+136    	; 0x3fae <lcd_putchar+0x156>
    3f26:	80 e0       	ldi	r24, 0x00	; 0
    3f28:	6c 2f       	mov	r22, r28
    3f2a:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
    3f2e:	ff 24       	eor	r15, r15
    3f30:	6e 01       	movw	r12, r28
    3f32:	08 94       	sec
    3f34:	c1 1c       	adc	r12, r1
    3f36:	d1 1c       	adc	r13, r1
    3f38:	35 c0       	rjmp	.+106    	; 0x3fa4 <lcd_putchar+0x14c>
    3f3a:	0f 2d       	mov	r16, r15
    3f3c:	10 e0       	ldi	r17, 0x00	; 0
    3f3e:	90 e0       	ldi	r25, 0x00	; 0
    3f40:	9c 01       	movw	r18, r24
    3f42:	c2 9f       	mul	r28, r18
    3f44:	c0 01       	movw	r24, r0
    3f46:	c3 9f       	mul	r28, r19
    3f48:	90 0d       	add	r25, r0
    3f4a:	d2 9f       	mul	r29, r18
    3f4c:	90 0d       	add	r25, r0
    3f4e:	11 24       	eor	r1, r1
    3f50:	e0 91 3e 03 	lds	r30, 0x033E
    3f54:	f0 91 3f 03 	lds	r31, 0x033F
    3f58:	e0 0f       	add	r30, r16
    3f5a:	f1 1f       	adc	r31, r17
    3f5c:	e8 0f       	add	r30, r24
    3f5e:	f9 1f       	adc	r31, r25
    3f60:	80 81       	ld	r24, Z
    3f62:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <_ZN12OrangutanLCD9send_dataEh>
    3f66:	e0 91 3e 03 	lds	r30, 0x033E
    3f6a:	f0 91 3f 03 	lds	r31, 0x033F
    3f6e:	80 91 30 03 	lds	r24, 0x0330
    3f72:	90 e0       	ldi	r25, 0x00	; 0
    3f74:	c8 9f       	mul	r28, r24
    3f76:	d0 01       	movw	r26, r0
    3f78:	c9 9f       	mul	r28, r25
    3f7a:	b0 0d       	add	r27, r0
    3f7c:	d8 9f       	mul	r29, r24
    3f7e:	b0 0d       	add	r27, r0
    3f80:	11 24       	eor	r1, r1
    3f82:	e0 0f       	add	r30, r16
    3f84:	f1 1f       	adc	r31, r17
    3f86:	ae 0f       	add	r26, r30
    3f88:	bf 1f       	adc	r27, r31
    3f8a:	ac 01       	movw	r20, r24
    3f8c:	c4 9e       	mul	r12, r20
    3f8e:	c0 01       	movw	r24, r0
    3f90:	c5 9e       	mul	r12, r21
    3f92:	90 0d       	add	r25, r0
    3f94:	d4 9e       	mul	r13, r20
    3f96:	90 0d       	add	r25, r0
    3f98:	11 24       	eor	r1, r1
    3f9a:	e8 0f       	add	r30, r24
    3f9c:	f9 1f       	adc	r31, r25
    3f9e:	80 81       	ld	r24, Z
    3fa0:	8c 93       	st	X, r24
    3fa2:	f3 94       	inc	r15
    3fa4:	80 91 30 03 	lds	r24, 0x0330
    3fa8:	f8 16       	cp	r15, r24
    3faa:	38 f2       	brcs	.-114    	; 0x3f3a <lcd_putchar+0xe2>
    3fac:	e6 01       	movw	r28, r12
    3fae:	60 91 2f 03 	lds	r22, 0x032F
    3fb2:	86 2f       	mov	r24, r22
    3fb4:	90 e0       	ldi	r25, 0x00	; 0
    3fb6:	02 97       	sbiw	r24, 0x02	; 2
    3fb8:	c8 17       	cp	r28, r24
    3fba:	d9 07       	cpc	r29, r25
    3fbc:	0c f4       	brge	.+2      	; 0x3fc0 <lcd_putchar+0x168>
    3fbe:	b3 cf       	rjmp	.-154    	; 0x3f26 <lcd_putchar+0xce>
    3fc0:	62 30       	cpi	r22, 0x02	; 2
    3fc2:	08 f4       	brcc	.+2      	; 0x3fc6 <lcd_putchar+0x16e>
    3fc4:	40 c0       	rjmp	.+128    	; 0x4046 <lcd_putchar+0x1ee>
    3fc6:	62 50       	subi	r22, 0x02	; 2
    3fc8:	80 e0       	ldi	r24, 0x00	; 0
    3fca:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
    3fce:	ff 24       	eor	r15, r15
    3fd0:	40 e2       	ldi	r20, 0x20	; 32
    3fd2:	d4 2e       	mov	r13, r20
    3fd4:	34 c0       	rjmp	.+104    	; 0x403e <lcd_putchar+0x1e6>
    3fd6:	0f 2d       	mov	r16, r15
    3fd8:	10 e0       	ldi	r17, 0x00	; 0
    3fda:	80 91 2f 03 	lds	r24, 0x032F
    3fde:	90 e0       	ldi	r25, 0x00	; 0
    3fe0:	02 97       	sbiw	r24, 0x02	; 2
    3fe2:	30 e0       	ldi	r19, 0x00	; 0
    3fe4:	ac 01       	movw	r20, r24
    3fe6:	42 9f       	mul	r20, r18
    3fe8:	c0 01       	movw	r24, r0
    3fea:	43 9f       	mul	r20, r19
    3fec:	90 0d       	add	r25, r0
    3fee:	52 9f       	mul	r21, r18
    3ff0:	90 0d       	add	r25, r0
    3ff2:	11 24       	eor	r1, r1
    3ff4:	e0 91 3e 03 	lds	r30, 0x033E
    3ff8:	f0 91 3f 03 	lds	r31, 0x033F
    3ffc:	e0 0f       	add	r30, r16
    3ffe:	f1 1f       	adc	r31, r17
    4000:	e8 0f       	add	r30, r24
    4002:	f9 1f       	adc	r31, r25
    4004:	80 81       	ld	r24, Z
    4006:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <_ZN12OrangutanLCD9send_dataEh>
    400a:	20 91 2f 03 	lds	r18, 0x032F
    400e:	30 e0       	ldi	r19, 0x00	; 0
    4010:	22 50       	subi	r18, 0x02	; 2
    4012:	30 40       	sbci	r19, 0x00	; 0
    4014:	80 91 30 03 	lds	r24, 0x0330
    4018:	90 e0       	ldi	r25, 0x00	; 0
    401a:	ac 01       	movw	r20, r24
    401c:	24 9f       	mul	r18, r20
    401e:	c0 01       	movw	r24, r0
    4020:	25 9f       	mul	r18, r21
    4022:	90 0d       	add	r25, r0
    4024:	34 9f       	mul	r19, r20
    4026:	90 0d       	add	r25, r0
    4028:	11 24       	eor	r1, r1
    402a:	e0 91 3e 03 	lds	r30, 0x033E
    402e:	f0 91 3f 03 	lds	r31, 0x033F
    4032:	e0 0f       	add	r30, r16
    4034:	f1 1f       	adc	r31, r17
    4036:	e8 0f       	add	r30, r24
    4038:	f9 1f       	adc	r31, r25
    403a:	d0 82       	st	Z, r13
    403c:	f3 94       	inc	r15
    403e:	20 91 30 03 	lds	r18, 0x0330
    4042:	f2 16       	cp	r15, r18
    4044:	40 f2       	brcs	.-112    	; 0x3fd6 <lcd_putchar+0x17e>
    4046:	60 91 2f 03 	lds	r22, 0x032F
    404a:	61 50       	subi	r22, 0x01	; 1
    404c:	80 e0       	ldi	r24, 0x00	; 0
    404e:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
    4052:	00 e0       	ldi	r16, 0x00	; 0
    4054:	04 c0       	rjmp	.+8      	; 0x405e <lcd_putchar+0x206>
    4056:	80 e2       	ldi	r24, 0x20	; 32
    4058:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <_ZN12OrangutanLCD9send_dataEh>
    405c:	0f 5f       	subi	r16, 0xFF	; 255
    405e:	80 91 30 03 	lds	r24, 0x0330
    4062:	08 17       	cp	r16, r24
    4064:	c0 f3       	brcs	.-16     	; 0x4056 <lcd_putchar+0x1fe>
    4066:	03 c0       	rjmp	.+6      	; 0x406e <lcd_putchar+0x216>
    4068:	4f 5f       	subi	r20, 0xFF	; 255
    406a:	40 93 40 03 	sts	0x0340, r20
    406e:	10 92 41 03 	sts	0x0341, r1
    4072:	80 91 41 03 	lds	r24, 0x0341
    4076:	60 91 40 03 	lds	r22, 0x0340
    407a:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <_ZN12OrangutanLCD6gotoXYEhh>
    407e:	2e 2d       	mov	r18, r14
    4080:	33 27       	eor	r19, r19
    4082:	27 fd       	sbrc	r18, 7
    4084:	30 95       	com	r19
    4086:	c9 01       	movw	r24, r18
    4088:	cd b7       	in	r28, 0x3d	; 61
    408a:	de b7       	in	r29, 0x3e	; 62
    408c:	e8 e0       	ldi	r30, 0x08	; 8
    408e:	0c 94 14 22 	jmp	0x4428	; 0x4428 <__epilogue_restores__+0x14>

00004092 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
    4092:	ef 92       	push	r14
    4094:	ff 92       	push	r15
    4096:	0f 93       	push	r16
    4098:	1f 93       	push	r17
    409a:	cf 93       	push	r28
    409c:	df 93       	push	r29
    409e:	7c 01       	movw	r14, r24
    40a0:	06 2f       	mov	r16, r22
    40a2:	10 e0       	ldi	r17, 0x00	; 0
    40a4:	53 e0       	ldi	r21, 0x03	; 3
    40a6:	00 0f       	add	r16, r16
    40a8:	11 1f       	adc	r17, r17
    40aa:	5a 95       	dec	r21
    40ac:	e1 f7       	brne	.-8      	; 0x40a6 <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x14>
    40ae:	c0 e0       	ldi	r28, 0x00	; 0
    40b0:	d0 e0       	ldi	r29, 0x00	; 0
    40b2:	9e 01       	movw	r18, r28
    40b4:	20 0f       	add	r18, r16
    40b6:	82 2f       	mov	r24, r18
    40b8:	80 64       	ori	r24, 0x40	; 64
    40ba:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <_ZN12OrangutanLCD8send_cmdEh>
    40be:	f7 01       	movw	r30, r14
    40c0:	ec 0f       	add	r30, r28
    40c2:	fd 1f       	adc	r31, r29
    40c4:	e4 91       	lpm	r30, Z+
    40c6:	8e 2f       	mov	r24, r30
    40c8:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <_ZN12OrangutanLCD9send_dataEh>
    40cc:	21 96       	adiw	r28, 0x01	; 1
    40ce:	c8 30       	cpi	r28, 0x08	; 8
    40d0:	d1 05       	cpc	r29, r1
    40d2:	79 f7       	brne	.-34     	; 0x40b2 <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x20>
    40d4:	cd b7       	in	r28, 0x3d	; 61
    40d6:	de b7       	in	r29, 0x3e	; 62
    40d8:	e6 e0       	ldi	r30, 0x06	; 6
    40da:	0c 94 16 22 	jmp	0x442c	; 0x442c <__epilogue_restores__+0x18>

000040de <lcd_load_custom_character>:
    40de:	0e 94 49 20 	call	0x4092	; 0x4092 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
    40e2:	08 95       	ret

000040e4 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    40e4:	60 e0       	ldi	r22, 0x00	; 0
    40e6:	41 e0       	ldi	r20, 0x01	; 1
    40e8:	0e 94 68 1d 	call	0x3ad0	; 0x3ad0 <_ZN12OrangutanLCD4sendEhhh>
    40ec:	08 95       	ret

000040ee <_ZN12OrangutanLCD6scrollEhhj>:
    40ee:	0f 93       	push	r16
    40f0:	1f 93       	push	r17
    40f2:	cf 93       	push	r28
    40f4:	df 93       	push	r29
    40f6:	08 2f       	mov	r16, r24
    40f8:	16 2f       	mov	r17, r22
    40fa:	ea 01       	movw	r28, r20
    40fc:	0b c0       	rjmp	.+22     	; 0x4114 <__stack+0x15>
    40fe:	00 23       	and	r16, r16
    4100:	11 f4       	brne	.+4      	; 0x4106 <__stack+0x7>
    4102:	88 e1       	ldi	r24, 0x18	; 24
    4104:	01 c0       	rjmp	.+2      	; 0x4108 <__stack+0x9>
    4106:	8c e1       	ldi	r24, 0x1C	; 28
    4108:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <_ZN12OrangutanLCD8send_cmdEh>
    410c:	ce 01       	movw	r24, r28
    410e:	0e 94 ff 20 	call	0x41fe	; 0x41fe <_ZN13OrangutanTime17delayMillisecondsEj>
    4112:	11 50       	subi	r17, 0x01	; 1
    4114:	11 23       	and	r17, r17
    4116:	99 f7       	brne	.-26     	; 0x40fe <_ZN12OrangutanLCD6scrollEhhj+0x10>
    4118:	df 91       	pop	r29
    411a:	cf 91       	pop	r28
    411c:	1f 91       	pop	r17
    411e:	0f 91       	pop	r16
    4120:	08 95       	ret

00004122 <lcd_scroll>:
    4122:	0e 94 77 20 	call	0x40ee	; 0x40ee <_ZN12OrangutanLCD6scrollEhhj>
    4126:	08 95       	ret

00004128 <__vector_11>:
    4128:	2f 92       	push	r2
    412a:	8f 93       	push	r24
    412c:	9f 93       	push	r25
    412e:	2f b6       	in	r2, 0x3f	; 63
    4130:	80 91 48 03 	lds	r24, 0x0348
    4134:	90 91 49 03 	lds	r25, 0x0349
    4138:	01 96       	adiw	r24, 0x01	; 1
    413a:	80 93 48 03 	sts	0x0348, r24
    413e:	90 93 49 03 	sts	0x0349, r25
    4142:	90 e0       	ldi	r25, 0x00	; 0
    4144:	80 91 4a 03 	lds	r24, 0x034A
    4148:	89 1f       	adc	r24, r25
    414a:	80 93 4a 03 	sts	0x034A, r24
    414e:	90 91 50 03 	lds	r25, 0x0350
    4152:	9c 5f       	subi	r25, 0xFC	; 252
    4154:	90 93 50 03 	sts	0x0350, r25
    4158:	80 91 4f 03 	lds	r24, 0x034F
    415c:	80 51       	subi	r24, 0x10	; 16
    415e:	97 42       	sbci	r25, 0x27	; 39
    4160:	c0 f0       	brcs	.+48     	; 0x4192 <end>
    4162:	90 93 50 03 	sts	0x0350, r25
    4166:	80 93 4f 03 	sts	0x034F, r24
    416a:	80 91 4b 03 	lds	r24, 0x034B
    416e:	90 91 4c 03 	lds	r25, 0x034C
    4172:	01 96       	adiw	r24, 0x01	; 1
    4174:	80 93 4b 03 	sts	0x034B, r24
    4178:	90 93 4c 03 	sts	0x034C, r25
    417c:	90 e0       	ldi	r25, 0x00	; 0
    417e:	80 91 4d 03 	lds	r24, 0x034D
    4182:	89 1f       	adc	r24, r25
    4184:	80 93 4d 03 	sts	0x034D, r24
    4188:	80 91 4e 03 	lds	r24, 0x034E
    418c:	89 1f       	adc	r24, r25
    418e:	80 93 4e 03 	sts	0x034E, r24

00004192 <end>:
    4192:	2f be       	out	0x3f, r2	; 63
    4194:	9f 91       	pop	r25
    4196:	8f 91       	pop	r24
    4198:	2f 90       	pop	r2
    419a:	18 95       	reti

0000419c <ticks_to_microseconds>:
    419c:	6f 5f       	subi	r22, 0xFF	; 255
    419e:	7f 4f       	sbci	r23, 0xFF	; 255
    41a0:	8f 4f       	sbci	r24, 0xFF	; 255
    41a2:	9f 4f       	sbci	r25, 0xFF	; 255
    41a4:	66 0f       	add	r22, r22
    41a6:	77 1f       	adc	r23, r23
    41a8:	88 1f       	adc	r24, r24
    41aa:	99 1f       	adc	r25, r25
    41ac:	25 e0       	ldi	r18, 0x05	; 5
    41ae:	30 e0       	ldi	r19, 0x00	; 0
    41b0:	40 e0       	ldi	r20, 0x00	; 0
    41b2:	50 e0       	ldi	r21, 0x00	; 0
    41b4:	0e 94 cc 21 	call	0x4398	; 0x4398 <__udivmodsi4>
    41b8:	ca 01       	movw	r24, r20
    41ba:	b9 01       	movw	r22, r18
    41bc:	08 95       	ret

000041be <delay_ms>:
    41be:	28 ee       	ldi	r18, 0xE8	; 232
    41c0:	33 e0       	ldi	r19, 0x03	; 3
    41c2:	09 c0       	rjmp	.+18     	; 0x41d6 <delay_ms+0x18>
    41c4:	f9 01       	movw	r30, r18
    41c6:	6f 93       	push	r22
    41c8:	64 e0       	ldi	r22, 0x04	; 4
    41ca:	6a 95       	dec	r22
    41cc:	f1 f7       	brne	.-4      	; 0x41ca <delay_ms+0xc>
    41ce:	6f 91       	pop	r22
    41d0:	31 97       	sbiw	r30, 0x01	; 1
    41d2:	c9 f7       	brne	.-14     	; 0x41c6 <delay_ms+0x8>
    41d4:	01 97       	sbiw	r24, 0x01	; 1
    41d6:	00 97       	sbiw	r24, 0x00	; 0
    41d8:	a9 f7       	brne	.-22     	; 0x41c4 <delay_ms+0x6>
    41da:	08 95       	ret

000041dc <_ZN13OrangutanTime19ticksToMicrosecondsEm>:
    41dc:	6f 5f       	subi	r22, 0xFF	; 255
    41de:	7f 4f       	sbci	r23, 0xFF	; 255
    41e0:	8f 4f       	sbci	r24, 0xFF	; 255
    41e2:	9f 4f       	sbci	r25, 0xFF	; 255
    41e4:	66 0f       	add	r22, r22
    41e6:	77 1f       	adc	r23, r23
    41e8:	88 1f       	adc	r24, r24
    41ea:	99 1f       	adc	r25, r25
    41ec:	25 e0       	ldi	r18, 0x05	; 5
    41ee:	30 e0       	ldi	r19, 0x00	; 0
    41f0:	40 e0       	ldi	r20, 0x00	; 0
    41f2:	50 e0       	ldi	r21, 0x00	; 0
    41f4:	0e 94 cc 21 	call	0x4398	; 0x4398 <__udivmodsi4>
    41f8:	ca 01       	movw	r24, r20
    41fa:	b9 01       	movw	r22, r18
    41fc:	08 95       	ret

000041fe <_ZN13OrangutanTime17delayMillisecondsEj>:
    41fe:	28 ee       	ldi	r18, 0xE8	; 232
    4200:	33 e0       	ldi	r19, 0x03	; 3
    4202:	09 c0       	rjmp	.+18     	; 0x4216 <_ZN13OrangutanTime17delayMillisecondsEj+0x18>
    4204:	f9 01       	movw	r30, r18
    4206:	6f 93       	push	r22
    4208:	64 e0       	ldi	r22, 0x04	; 4
    420a:	6a 95       	dec	r22
    420c:	f1 f7       	brne	.-4      	; 0x420a <_ZN13OrangutanTime17delayMillisecondsEj+0xc>
    420e:	6f 91       	pop	r22
    4210:	31 97       	sbiw	r30, 0x01	; 1
    4212:	c9 f7       	brne	.-14     	; 0x4206 <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
    4214:	01 97       	sbiw	r24, 0x01	; 1
    4216:	00 97       	sbiw	r24, 0x00	; 0
    4218:	a9 f7       	brne	.-22     	; 0x4204 <_ZN13OrangutanTime17delayMillisecondsEj+0x6>
    421a:	08 95       	ret

0000421c <_ZN13OrangutanTime5init2Ev>:
    421c:	a0 e7       	ldi	r26, 0x70	; 112
    421e:	b0 e0       	ldi	r27, 0x00	; 0
    4220:	8c 91       	ld	r24, X
    4222:	8e 7f       	andi	r24, 0xFE	; 254
    4224:	8c 93       	st	X, r24
    4226:	e0 eb       	ldi	r30, 0xB0	; 176
    4228:	f0 e0       	ldi	r31, 0x00	; 0
    422a:	80 81       	ld	r24, Z
    422c:	83 60       	ori	r24, 0x03	; 3
    422e:	80 83       	st	Z, r24
    4230:	e1 eb       	ldi	r30, 0xB1	; 177
    4232:	f0 e0       	ldi	r31, 0x00	; 0
    4234:	80 81       	ld	r24, Z
    4236:	80 7f       	andi	r24, 0xF0	; 240
    4238:	80 83       	st	Z, r24
    423a:	80 81       	ld	r24, Z
    423c:	82 60       	ori	r24, 0x02	; 2
    423e:	80 83       	st	Z, r24
    4240:	b8 9a       	sbi	0x17, 0	; 23
    4242:	8c 91       	ld	r24, X
    4244:	81 60       	ori	r24, 0x01	; 1
    4246:	8c 93       	st	X, r24
    4248:	78 94       	sei
    424a:	08 95       	ret

0000424c <_ZN13OrangutanTime4initEv>:
    424c:	80 91 51 03 	lds	r24, 0x0351
    4250:	88 23       	and	r24, r24
    4252:	29 f4       	brne	.+10     	; 0x425e <_ZN13OrangutanTime4initEv+0x12>
    4254:	81 e0       	ldi	r24, 0x01	; 1
    4256:	80 93 51 03 	sts	0x0351, r24
    425a:	0e 94 0e 21 	call	0x421c	; 0x421c <_ZN13OrangutanTime5init2Ev>
    425e:	08 95       	ret

00004260 <_ZN13OrangutanTime2msEv>:
    4260:	0e 94 26 21 	call	0x424c	; 0x424c <_ZN13OrangutanTime4initEv>
    4264:	e0 e7       	ldi	r30, 0x70	; 112
    4266:	f0 e0       	ldi	r31, 0x00	; 0
    4268:	80 81       	ld	r24, Z
    426a:	8e 7f       	andi	r24, 0xFE	; 254
    426c:	80 83       	st	Z, r24
    426e:	20 91 4b 03 	lds	r18, 0x034B
    4272:	30 91 4c 03 	lds	r19, 0x034C
    4276:	40 91 4d 03 	lds	r20, 0x034D
    427a:	50 91 4e 03 	lds	r21, 0x034E
    427e:	80 81       	ld	r24, Z
    4280:	81 60       	ori	r24, 0x01	; 1
    4282:	80 83       	st	Z, r24
    4284:	b9 01       	movw	r22, r18
    4286:	ca 01       	movw	r24, r20
    4288:	08 95       	ret

0000428a <get_ms>:
    428a:	0e 94 30 21 	call	0x4260	; 0x4260 <_ZN13OrangutanTime2msEv>
    428e:	08 95       	ret

00004290 <_ZN13OrangutanTime5ticksEv>:
    4290:	0e 94 26 21 	call	0x424c	; 0x424c <_ZN13OrangutanTime4initEv>
    4294:	80 91 70 00 	lds	r24, 0x0070
    4298:	8e 7f       	andi	r24, 0xFE	; 254
    429a:	80 93 70 00 	sts	0x0070, r24
    429e:	60 91 b2 00 	lds	r22, 0x00B2
    42a2:	80 91 47 03 	lds	r24, 0x0347
    42a6:	90 91 48 03 	lds	r25, 0x0348
    42aa:	a0 91 49 03 	lds	r26, 0x0349
    42ae:	b0 91 4a 03 	lds	r27, 0x034A
    42b2:	b8 99       	sbic	0x17, 0	; 23
    42b4:	05 c0       	rjmp	.+10     	; 0x42c0 <_ZN13OrangutanTime5ticksEv+0x30>
    42b6:	26 2f       	mov	r18, r22
    42b8:	30 e0       	ldi	r19, 0x00	; 0
    42ba:	40 e0       	ldi	r20, 0x00	; 0
    42bc:	50 e0       	ldi	r21, 0x00	; 0
    42be:	11 c0       	rjmp	.+34     	; 0x42e2 <_ZN13OrangutanTime5ticksEv+0x52>
    42c0:	80 91 b2 00 	lds	r24, 0x00B2
    42c4:	20 91 47 03 	lds	r18, 0x0347
    42c8:	30 91 48 03 	lds	r19, 0x0348
    42cc:	40 91 49 03 	lds	r20, 0x0349
    42d0:	50 91 4a 03 	lds	r21, 0x034A
    42d4:	20 50       	subi	r18, 0x00	; 0
    42d6:	3f 4f       	sbci	r19, 0xFF	; 255
    42d8:	4f 4f       	sbci	r20, 0xFF	; 255
    42da:	5f 4f       	sbci	r21, 0xFF	; 255
    42dc:	90 e0       	ldi	r25, 0x00	; 0
    42de:	a0 e0       	ldi	r26, 0x00	; 0
    42e0:	b0 e0       	ldi	r27, 0x00	; 0
    42e2:	28 2b       	or	r18, r24
    42e4:	39 2b       	or	r19, r25
    42e6:	4a 2b       	or	r20, r26
    42e8:	5b 2b       	or	r21, r27
    42ea:	80 91 70 00 	lds	r24, 0x0070
    42ee:	81 60       	ori	r24, 0x01	; 1
    42f0:	80 93 70 00 	sts	0x0070, r24
    42f4:	b9 01       	movw	r22, r18
    42f6:	ca 01       	movw	r24, r20
    42f8:	08 95       	ret

000042fa <get_ticks>:
    42fa:	0e 94 48 21 	call	0x4290	; 0x4290 <_ZN13OrangutanTime5ticksEv>
    42fe:	08 95       	ret

00004300 <_ZN13OrangutanTime5resetEv>:
    4300:	0e 94 26 21 	call	0x424c	; 0x424c <_ZN13OrangutanTime4initEv>
    4304:	e0 e7       	ldi	r30, 0x70	; 112
    4306:	f0 e0       	ldi	r31, 0x00	; 0
    4308:	80 81       	ld	r24, Z
    430a:	8e 7f       	andi	r24, 0xFE	; 254
    430c:	80 83       	st	Z, r24
    430e:	10 92 4b 03 	sts	0x034B, r1
    4312:	10 92 4c 03 	sts	0x034C, r1
    4316:	10 92 4d 03 	sts	0x034D, r1
    431a:	10 92 4e 03 	sts	0x034E, r1
    431e:	10 92 50 03 	sts	0x0350, r1
    4322:	10 92 4f 03 	sts	0x034F, r1
    4326:	80 81       	ld	r24, Z
    4328:	81 60       	ori	r24, 0x01	; 1
    432a:	80 83       	st	Z, r24
    432c:	08 95       	ret

0000432e <time_reset>:
    432e:	0e 94 80 21 	call	0x4300	; 0x4300 <_ZN13OrangutanTime5resetEv>
    4332:	08 95       	ret

00004334 <__mulsi3>:
    4334:	62 9f       	mul	r22, r18
    4336:	d0 01       	movw	r26, r0
    4338:	73 9f       	mul	r23, r19
    433a:	f0 01       	movw	r30, r0
    433c:	82 9f       	mul	r24, r18
    433e:	e0 0d       	add	r30, r0
    4340:	f1 1d       	adc	r31, r1
    4342:	64 9f       	mul	r22, r20
    4344:	e0 0d       	add	r30, r0
    4346:	f1 1d       	adc	r31, r1
    4348:	92 9f       	mul	r25, r18
    434a:	f0 0d       	add	r31, r0
    434c:	83 9f       	mul	r24, r19
    434e:	f0 0d       	add	r31, r0
    4350:	74 9f       	mul	r23, r20
    4352:	f0 0d       	add	r31, r0
    4354:	65 9f       	mul	r22, r21
    4356:	f0 0d       	add	r31, r0
    4358:	99 27       	eor	r25, r25
    435a:	72 9f       	mul	r23, r18
    435c:	b0 0d       	add	r27, r0
    435e:	e1 1d       	adc	r30, r1
    4360:	f9 1f       	adc	r31, r25
    4362:	63 9f       	mul	r22, r19
    4364:	b0 0d       	add	r27, r0
    4366:	e1 1d       	adc	r30, r1
    4368:	f9 1f       	adc	r31, r25
    436a:	bd 01       	movw	r22, r26
    436c:	cf 01       	movw	r24, r30
    436e:	11 24       	eor	r1, r1
    4370:	08 95       	ret

00004372 <__divmodhi4>:
    4372:	97 fb       	bst	r25, 7
    4374:	09 2e       	mov	r0, r25
    4376:	07 26       	eor	r0, r23
    4378:	0a d0       	rcall	.+20     	; 0x438e <__divmodhi4_neg1>
    437a:	77 fd       	sbrc	r23, 7
    437c:	04 d0       	rcall	.+8      	; 0x4386 <__divmodhi4_neg2>
    437e:	65 d0       	rcall	.+202    	; 0x444a <__udivmodhi4>
    4380:	06 d0       	rcall	.+12     	; 0x438e <__divmodhi4_neg1>
    4382:	00 20       	and	r0, r0
    4384:	1a f4       	brpl	.+6      	; 0x438c <__divmodhi4_exit>

00004386 <__divmodhi4_neg2>:
    4386:	70 95       	com	r23
    4388:	61 95       	neg	r22
    438a:	7f 4f       	sbci	r23, 0xFF	; 255

0000438c <__divmodhi4_exit>:
    438c:	08 95       	ret

0000438e <__divmodhi4_neg1>:
    438e:	f6 f7       	brtc	.-4      	; 0x438c <__divmodhi4_exit>
    4390:	90 95       	com	r25
    4392:	81 95       	neg	r24
    4394:	9f 4f       	sbci	r25, 0xFF	; 255
    4396:	08 95       	ret

00004398 <__udivmodsi4>:
    4398:	a1 e2       	ldi	r26, 0x21	; 33
    439a:	1a 2e       	mov	r1, r26
    439c:	aa 1b       	sub	r26, r26
    439e:	bb 1b       	sub	r27, r27
    43a0:	fd 01       	movw	r30, r26
    43a2:	0d c0       	rjmp	.+26     	; 0x43be <__udivmodsi4_ep>

000043a4 <__udivmodsi4_loop>:
    43a4:	aa 1f       	adc	r26, r26
    43a6:	bb 1f       	adc	r27, r27
    43a8:	ee 1f       	adc	r30, r30
    43aa:	ff 1f       	adc	r31, r31
    43ac:	a2 17       	cp	r26, r18
    43ae:	b3 07       	cpc	r27, r19
    43b0:	e4 07       	cpc	r30, r20
    43b2:	f5 07       	cpc	r31, r21
    43b4:	20 f0       	brcs	.+8      	; 0x43be <__udivmodsi4_ep>
    43b6:	a2 1b       	sub	r26, r18
    43b8:	b3 0b       	sbc	r27, r19
    43ba:	e4 0b       	sbc	r30, r20
    43bc:	f5 0b       	sbc	r31, r21

000043be <__udivmodsi4_ep>:
    43be:	66 1f       	adc	r22, r22
    43c0:	77 1f       	adc	r23, r23
    43c2:	88 1f       	adc	r24, r24
    43c4:	99 1f       	adc	r25, r25
    43c6:	1a 94       	dec	r1
    43c8:	69 f7       	brne	.-38     	; 0x43a4 <__udivmodsi4_loop>
    43ca:	60 95       	com	r22
    43cc:	70 95       	com	r23
    43ce:	80 95       	com	r24
    43d0:	90 95       	com	r25
    43d2:	9b 01       	movw	r18, r22
    43d4:	ac 01       	movw	r20, r24
    43d6:	bd 01       	movw	r22, r26
    43d8:	cf 01       	movw	r24, r30
    43da:	08 95       	ret

000043dc <__prologue_saves__>:
    43dc:	2f 92       	push	r2
    43de:	3f 92       	push	r3
    43e0:	4f 92       	push	r4
    43e2:	5f 92       	push	r5
    43e4:	6f 92       	push	r6
    43e6:	7f 92       	push	r7
    43e8:	8f 92       	push	r8
    43ea:	9f 92       	push	r9
    43ec:	af 92       	push	r10
    43ee:	bf 92       	push	r11
    43f0:	cf 92       	push	r12
    43f2:	df 92       	push	r13
    43f4:	ef 92       	push	r14
    43f6:	ff 92       	push	r15
    43f8:	0f 93       	push	r16
    43fa:	1f 93       	push	r17
    43fc:	cf 93       	push	r28
    43fe:	df 93       	push	r29
    4400:	cd b7       	in	r28, 0x3d	; 61
    4402:	de b7       	in	r29, 0x3e	; 62
    4404:	ca 1b       	sub	r28, r26
    4406:	db 0b       	sbc	r29, r27
    4408:	0f b6       	in	r0, 0x3f	; 63
    440a:	f8 94       	cli
    440c:	de bf       	out	0x3e, r29	; 62
    440e:	0f be       	out	0x3f, r0	; 63
    4410:	cd bf       	out	0x3d, r28	; 61
    4412:	09 94       	ijmp

00004414 <__epilogue_restores__>:
    4414:	2a 88       	ldd	r2, Y+18	; 0x12
    4416:	39 88       	ldd	r3, Y+17	; 0x11
    4418:	48 88       	ldd	r4, Y+16	; 0x10
    441a:	5f 84       	ldd	r5, Y+15	; 0x0f
    441c:	6e 84       	ldd	r6, Y+14	; 0x0e
    441e:	7d 84       	ldd	r7, Y+13	; 0x0d
    4420:	8c 84       	ldd	r8, Y+12	; 0x0c
    4422:	9b 84       	ldd	r9, Y+11	; 0x0b
    4424:	aa 84       	ldd	r10, Y+10	; 0x0a
    4426:	b9 84       	ldd	r11, Y+9	; 0x09
    4428:	c8 84       	ldd	r12, Y+8	; 0x08
    442a:	df 80       	ldd	r13, Y+7	; 0x07
    442c:	ee 80       	ldd	r14, Y+6	; 0x06
    442e:	fd 80       	ldd	r15, Y+5	; 0x05
    4430:	0c 81       	ldd	r16, Y+4	; 0x04
    4432:	1b 81       	ldd	r17, Y+3	; 0x03
    4434:	aa 81       	ldd	r26, Y+2	; 0x02
    4436:	b9 81       	ldd	r27, Y+1	; 0x01
    4438:	ce 0f       	add	r28, r30
    443a:	d1 1d       	adc	r29, r1
    443c:	0f b6       	in	r0, 0x3f	; 63
    443e:	f8 94       	cli
    4440:	de bf       	out	0x3e, r29	; 62
    4442:	0f be       	out	0x3f, r0	; 63
    4444:	cd bf       	out	0x3d, r28	; 61
    4446:	ed 01       	movw	r28, r26
    4448:	08 95       	ret

0000444a <__udivmodhi4>:
    444a:	aa 1b       	sub	r26, r26
    444c:	bb 1b       	sub	r27, r27
    444e:	51 e1       	ldi	r21, 0x11	; 17
    4450:	07 c0       	rjmp	.+14     	; 0x4460 <__udivmodhi4_ep>

00004452 <__udivmodhi4_loop>:
    4452:	aa 1f       	adc	r26, r26
    4454:	bb 1f       	adc	r27, r27
    4456:	a6 17       	cp	r26, r22
    4458:	b7 07       	cpc	r27, r23
    445a:	10 f0       	brcs	.+4      	; 0x4460 <__udivmodhi4_ep>
    445c:	a6 1b       	sub	r26, r22
    445e:	b7 0b       	sbc	r27, r23

00004460 <__udivmodhi4_ep>:
    4460:	88 1f       	adc	r24, r24
    4462:	99 1f       	adc	r25, r25
    4464:	5a 95       	dec	r21
    4466:	a9 f7       	brne	.-22     	; 0x4452 <__udivmodhi4_loop>
    4468:	80 95       	com	r24
    446a:	90 95       	com	r25
    446c:	bc 01       	movw	r22, r24
    446e:	cd 01       	movw	r24, r26
    4470:	08 95       	ret

00004472 <malloc>:
    4472:	cf 93       	push	r28
    4474:	df 93       	push	r29
    4476:	bc 01       	movw	r22, r24
    4478:	82 30       	cpi	r24, 0x02	; 2
    447a:	91 05       	cpc	r25, r1
    447c:	10 f4       	brcc	.+4      	; 0x4482 <malloc+0x10>
    447e:	62 e0       	ldi	r22, 0x02	; 2
    4480:	70 e0       	ldi	r23, 0x00	; 0
    4482:	a0 91 54 03 	lds	r26, 0x0354
    4486:	b0 91 55 03 	lds	r27, 0x0355
    448a:	ed 01       	movw	r28, r26
    448c:	e0 e0       	ldi	r30, 0x00	; 0
    448e:	f0 e0       	ldi	r31, 0x00	; 0
    4490:	40 e0       	ldi	r20, 0x00	; 0
    4492:	50 e0       	ldi	r21, 0x00	; 0
    4494:	21 c0       	rjmp	.+66     	; 0x44d8 <malloc+0x66>
    4496:	88 81       	ld	r24, Y
    4498:	99 81       	ldd	r25, Y+1	; 0x01
    449a:	86 17       	cp	r24, r22
    449c:	97 07       	cpc	r25, r23
    449e:	69 f4       	brne	.+26     	; 0x44ba <malloc+0x48>
    44a0:	8a 81       	ldd	r24, Y+2	; 0x02
    44a2:	9b 81       	ldd	r25, Y+3	; 0x03
    44a4:	30 97       	sbiw	r30, 0x00	; 0
    44a6:	19 f0       	breq	.+6      	; 0x44ae <malloc+0x3c>
    44a8:	93 83       	std	Z+3, r25	; 0x03
    44aa:	82 83       	std	Z+2, r24	; 0x02
    44ac:	04 c0       	rjmp	.+8      	; 0x44b6 <malloc+0x44>
    44ae:	90 93 55 03 	sts	0x0355, r25
    44b2:	80 93 54 03 	sts	0x0354, r24
    44b6:	fe 01       	movw	r30, r28
    44b8:	34 c0       	rjmp	.+104    	; 0x4522 <malloc+0xb0>
    44ba:	68 17       	cp	r22, r24
    44bc:	79 07       	cpc	r23, r25
    44be:	38 f4       	brcc	.+14     	; 0x44ce <malloc+0x5c>
    44c0:	41 15       	cp	r20, r1
    44c2:	51 05       	cpc	r21, r1
    44c4:	19 f0       	breq	.+6      	; 0x44cc <malloc+0x5a>
    44c6:	84 17       	cp	r24, r20
    44c8:	95 07       	cpc	r25, r21
    44ca:	08 f4       	brcc	.+2      	; 0x44ce <malloc+0x5c>
    44cc:	ac 01       	movw	r20, r24
    44ce:	fe 01       	movw	r30, r28
    44d0:	8a 81       	ldd	r24, Y+2	; 0x02
    44d2:	9b 81       	ldd	r25, Y+3	; 0x03
    44d4:	9c 01       	movw	r18, r24
    44d6:	e9 01       	movw	r28, r18
    44d8:	20 97       	sbiw	r28, 0x00	; 0
    44da:	e9 f6       	brne	.-70     	; 0x4496 <malloc+0x24>
    44dc:	41 15       	cp	r20, r1
    44de:	51 05       	cpc	r21, r1
    44e0:	a9 f1       	breq	.+106    	; 0x454c <malloc+0xda>
    44e2:	ca 01       	movw	r24, r20
    44e4:	86 1b       	sub	r24, r22
    44e6:	97 0b       	sbc	r25, r23
    44e8:	04 97       	sbiw	r24, 0x04	; 4
    44ea:	08 f4       	brcc	.+2      	; 0x44ee <malloc+0x7c>
    44ec:	ba 01       	movw	r22, r20
    44ee:	e0 e0       	ldi	r30, 0x00	; 0
    44f0:	f0 e0       	ldi	r31, 0x00	; 0
    44f2:	2a c0       	rjmp	.+84     	; 0x4548 <malloc+0xd6>
    44f4:	8d 91       	ld	r24, X+
    44f6:	9c 91       	ld	r25, X
    44f8:	11 97       	sbiw	r26, 0x01	; 1
    44fa:	84 17       	cp	r24, r20
    44fc:	95 07       	cpc	r25, r21
    44fe:	f9 f4       	brne	.+62     	; 0x453e <malloc+0xcc>
    4500:	64 17       	cp	r22, r20
    4502:	75 07       	cpc	r23, r21
    4504:	81 f4       	brne	.+32     	; 0x4526 <malloc+0xb4>
    4506:	12 96       	adiw	r26, 0x02	; 2
    4508:	8d 91       	ld	r24, X+
    450a:	9c 91       	ld	r25, X
    450c:	13 97       	sbiw	r26, 0x03	; 3
    450e:	30 97       	sbiw	r30, 0x00	; 0
    4510:	19 f0       	breq	.+6      	; 0x4518 <malloc+0xa6>
    4512:	93 83       	std	Z+3, r25	; 0x03
    4514:	82 83       	std	Z+2, r24	; 0x02
    4516:	04 c0       	rjmp	.+8      	; 0x4520 <malloc+0xae>
    4518:	90 93 55 03 	sts	0x0355, r25
    451c:	80 93 54 03 	sts	0x0354, r24
    4520:	fd 01       	movw	r30, r26
    4522:	32 96       	adiw	r30, 0x02	; 2
    4524:	4f c0       	rjmp	.+158    	; 0x45c4 <malloc+0x152>
    4526:	ca 01       	movw	r24, r20
    4528:	86 1b       	sub	r24, r22
    452a:	97 0b       	sbc	r25, r23
    452c:	fd 01       	movw	r30, r26
    452e:	e8 0f       	add	r30, r24
    4530:	f9 1f       	adc	r31, r25
    4532:	61 93       	st	Z+, r22
    4534:	71 93       	st	Z+, r23
    4536:	02 97       	sbiw	r24, 0x02	; 2
    4538:	8d 93       	st	X+, r24
    453a:	9c 93       	st	X, r25
    453c:	43 c0       	rjmp	.+134    	; 0x45c4 <malloc+0x152>
    453e:	fd 01       	movw	r30, r26
    4540:	82 81       	ldd	r24, Z+2	; 0x02
    4542:	93 81       	ldd	r25, Z+3	; 0x03
    4544:	9c 01       	movw	r18, r24
    4546:	d9 01       	movw	r26, r18
    4548:	10 97       	sbiw	r26, 0x00	; 0
    454a:	a1 f6       	brne	.-88     	; 0x44f4 <malloc+0x82>
    454c:	80 91 52 03 	lds	r24, 0x0352
    4550:	90 91 53 03 	lds	r25, 0x0353
    4554:	89 2b       	or	r24, r25
    4556:	41 f4       	brne	.+16     	; 0x4568 <malloc+0xf6>
    4558:	80 91 33 03 	lds	r24, 0x0333
    455c:	90 91 34 03 	lds	r25, 0x0334
    4560:	90 93 53 03 	sts	0x0353, r25
    4564:	80 93 52 03 	sts	0x0352, r24
    4568:	40 91 35 03 	lds	r20, 0x0335
    456c:	50 91 36 03 	lds	r21, 0x0336
    4570:	41 15       	cp	r20, r1
    4572:	51 05       	cpc	r21, r1
    4574:	41 f4       	brne	.+16     	; 0x4586 <malloc+0x114>
    4576:	4d b7       	in	r20, 0x3d	; 61
    4578:	5e b7       	in	r21, 0x3e	; 62
    457a:	80 91 31 03 	lds	r24, 0x0331
    457e:	90 91 32 03 	lds	r25, 0x0332
    4582:	48 1b       	sub	r20, r24
    4584:	59 0b       	sbc	r21, r25
    4586:	20 91 52 03 	lds	r18, 0x0352
    458a:	30 91 53 03 	lds	r19, 0x0353
    458e:	24 17       	cp	r18, r20
    4590:	35 07       	cpc	r19, r21
    4592:	b0 f4       	brcc	.+44     	; 0x45c0 <malloc+0x14e>
    4594:	ca 01       	movw	r24, r20
    4596:	82 1b       	sub	r24, r18
    4598:	93 0b       	sbc	r25, r19
    459a:	86 17       	cp	r24, r22
    459c:	97 07       	cpc	r25, r23
    459e:	80 f0       	brcs	.+32     	; 0x45c0 <malloc+0x14e>
    45a0:	ab 01       	movw	r20, r22
    45a2:	4e 5f       	subi	r20, 0xFE	; 254
    45a4:	5f 4f       	sbci	r21, 0xFF	; 255
    45a6:	84 17       	cp	r24, r20
    45a8:	95 07       	cpc	r25, r21
    45aa:	50 f0       	brcs	.+20     	; 0x45c0 <malloc+0x14e>
    45ac:	42 0f       	add	r20, r18
    45ae:	53 1f       	adc	r21, r19
    45b0:	50 93 53 03 	sts	0x0353, r21
    45b4:	40 93 52 03 	sts	0x0352, r20
    45b8:	f9 01       	movw	r30, r18
    45ba:	61 93       	st	Z+, r22
    45bc:	71 93       	st	Z+, r23
    45be:	02 c0       	rjmp	.+4      	; 0x45c4 <malloc+0x152>
    45c0:	e0 e0       	ldi	r30, 0x00	; 0
    45c2:	f0 e0       	ldi	r31, 0x00	; 0
    45c4:	cf 01       	movw	r24, r30
    45c6:	df 91       	pop	r29
    45c8:	cf 91       	pop	r28
    45ca:	08 95       	ret

000045cc <free>:
    45cc:	cf 93       	push	r28
    45ce:	df 93       	push	r29
    45d0:	00 97       	sbiw	r24, 0x00	; 0
    45d2:	09 f4       	brne	.+2      	; 0x45d6 <free+0xa>
    45d4:	50 c0       	rjmp	.+160    	; 0x4676 <free+0xaa>
    45d6:	ec 01       	movw	r28, r24
    45d8:	22 97       	sbiw	r28, 0x02	; 2
    45da:	1b 82       	std	Y+3, r1	; 0x03
    45dc:	1a 82       	std	Y+2, r1	; 0x02
    45de:	a0 91 54 03 	lds	r26, 0x0354
    45e2:	b0 91 55 03 	lds	r27, 0x0355
    45e6:	10 97       	sbiw	r26, 0x00	; 0
    45e8:	09 f1       	breq	.+66     	; 0x462c <free+0x60>
    45ea:	40 e0       	ldi	r20, 0x00	; 0
    45ec:	50 e0       	ldi	r21, 0x00	; 0
    45ee:	ac 17       	cp	r26, r28
    45f0:	bd 07       	cpc	r27, r29
    45f2:	08 f1       	brcs	.+66     	; 0x4636 <free+0x6a>
    45f4:	bb 83       	std	Y+3, r27	; 0x03
    45f6:	aa 83       	std	Y+2, r26	; 0x02
    45f8:	fe 01       	movw	r30, r28
    45fa:	21 91       	ld	r18, Z+
    45fc:	31 91       	ld	r19, Z+
    45fe:	e2 0f       	add	r30, r18
    4600:	f3 1f       	adc	r31, r19
    4602:	ae 17       	cp	r26, r30
    4604:	bf 07       	cpc	r27, r31
    4606:	79 f4       	brne	.+30     	; 0x4626 <free+0x5a>
    4608:	8d 91       	ld	r24, X+
    460a:	9c 91       	ld	r25, X
    460c:	11 97       	sbiw	r26, 0x01	; 1
    460e:	28 0f       	add	r18, r24
    4610:	39 1f       	adc	r19, r25
    4612:	2e 5f       	subi	r18, 0xFE	; 254
    4614:	3f 4f       	sbci	r19, 0xFF	; 255
    4616:	39 83       	std	Y+1, r19	; 0x01
    4618:	28 83       	st	Y, r18
    461a:	12 96       	adiw	r26, 0x02	; 2
    461c:	8d 91       	ld	r24, X+
    461e:	9c 91       	ld	r25, X
    4620:	13 97       	sbiw	r26, 0x03	; 3
    4622:	9b 83       	std	Y+3, r25	; 0x03
    4624:	8a 83       	std	Y+2, r24	; 0x02
    4626:	41 15       	cp	r20, r1
    4628:	51 05       	cpc	r21, r1
    462a:	71 f4       	brne	.+28     	; 0x4648 <free+0x7c>
    462c:	d0 93 55 03 	sts	0x0355, r29
    4630:	c0 93 54 03 	sts	0x0354, r28
    4634:	20 c0       	rjmp	.+64     	; 0x4676 <free+0xaa>
    4636:	12 96       	adiw	r26, 0x02	; 2
    4638:	8d 91       	ld	r24, X+
    463a:	9c 91       	ld	r25, X
    463c:	13 97       	sbiw	r26, 0x03	; 3
    463e:	ad 01       	movw	r20, r26
    4640:	00 97       	sbiw	r24, 0x00	; 0
    4642:	11 f0       	breq	.+4      	; 0x4648 <free+0x7c>
    4644:	dc 01       	movw	r26, r24
    4646:	d3 cf       	rjmp	.-90     	; 0x45ee <free+0x22>
    4648:	fa 01       	movw	r30, r20
    464a:	d3 83       	std	Z+3, r29	; 0x03
    464c:	c2 83       	std	Z+2, r28	; 0x02
    464e:	21 91       	ld	r18, Z+
    4650:	31 91       	ld	r19, Z+
    4652:	e2 0f       	add	r30, r18
    4654:	f3 1f       	adc	r31, r19
    4656:	ce 17       	cp	r28, r30
    4658:	df 07       	cpc	r29, r31
    465a:	69 f4       	brne	.+26     	; 0x4676 <free+0xaa>
    465c:	88 81       	ld	r24, Y
    465e:	99 81       	ldd	r25, Y+1	; 0x01
    4660:	28 0f       	add	r18, r24
    4662:	39 1f       	adc	r19, r25
    4664:	2e 5f       	subi	r18, 0xFE	; 254
    4666:	3f 4f       	sbci	r19, 0xFF	; 255
    4668:	fa 01       	movw	r30, r20
    466a:	31 83       	std	Z+1, r19	; 0x01
    466c:	20 83       	st	Z, r18
    466e:	8a 81       	ldd	r24, Y+2	; 0x02
    4670:	9b 81       	ldd	r25, Y+3	; 0x03
    4672:	93 83       	std	Z+3, r25	; 0x03
    4674:	82 83       	std	Z+2, r24	; 0x02
    4676:	df 91       	pop	r29
    4678:	cf 91       	pop	r28
    467a:	08 95       	ret

0000467c <fdevopen>:
    467c:	0f 93       	push	r16
    467e:	1f 93       	push	r17
    4680:	cf 93       	push	r28
    4682:	df 93       	push	r29
    4684:	8c 01       	movw	r16, r24
    4686:	eb 01       	movw	r28, r22
    4688:	00 97       	sbiw	r24, 0x00	; 0
    468a:	31 f4       	brne	.+12     	; 0x4698 <fdevopen+0x1c>
    468c:	61 15       	cp	r22, r1
    468e:	71 05       	cpc	r23, r1
    4690:	19 f4       	brne	.+6      	; 0x4698 <fdevopen+0x1c>
    4692:	20 e0       	ldi	r18, 0x00	; 0
    4694:	30 e0       	ldi	r19, 0x00	; 0
    4696:	38 c0       	rjmp	.+112    	; 0x4708 <fdevopen+0x8c>
    4698:	81 e0       	ldi	r24, 0x01	; 1
    469a:	90 e0       	ldi	r25, 0x00	; 0
    469c:	6e e0       	ldi	r22, 0x0E	; 14
    469e:	70 e0       	ldi	r23, 0x00	; 0
    46a0:	0e 94 8a 23 	call	0x4714	; 0x4714 <calloc>
    46a4:	fc 01       	movw	r30, r24
    46a6:	9c 01       	movw	r18, r24
    46a8:	00 97       	sbiw	r24, 0x00	; 0
    46aa:	71 f1       	breq	.+92     	; 0x4708 <fdevopen+0x8c>
    46ac:	80 e8       	ldi	r24, 0x80	; 128
    46ae:	83 83       	std	Z+3, r24	; 0x03
    46b0:	20 97       	sbiw	r28, 0x00	; 0
    46b2:	71 f0       	breq	.+28     	; 0x46d0 <fdevopen+0x54>
    46b4:	d3 87       	std	Z+11, r29	; 0x0b
    46b6:	c2 87       	std	Z+10, r28	; 0x0a
    46b8:	81 e8       	ldi	r24, 0x81	; 129
    46ba:	83 83       	std	Z+3, r24	; 0x03
    46bc:	80 91 56 03 	lds	r24, 0x0356
    46c0:	90 91 57 03 	lds	r25, 0x0357
    46c4:	89 2b       	or	r24, r25
    46c6:	21 f4       	brne	.+8      	; 0x46d0 <fdevopen+0x54>
    46c8:	f0 93 57 03 	sts	0x0357, r31
    46cc:	e0 93 56 03 	sts	0x0356, r30
    46d0:	01 15       	cp	r16, r1
    46d2:	11 05       	cpc	r17, r1
    46d4:	c9 f0       	breq	.+50     	; 0x4708 <fdevopen+0x8c>
    46d6:	11 87       	std	Z+9, r17	; 0x09
    46d8:	00 87       	std	Z+8, r16	; 0x08
    46da:	83 81       	ldd	r24, Z+3	; 0x03
    46dc:	82 60       	ori	r24, 0x02	; 2
    46de:	83 83       	std	Z+3, r24	; 0x03
    46e0:	80 91 58 03 	lds	r24, 0x0358
    46e4:	90 91 59 03 	lds	r25, 0x0359
    46e8:	89 2b       	or	r24, r25
    46ea:	71 f4       	brne	.+28     	; 0x4708 <fdevopen+0x8c>
    46ec:	f0 93 59 03 	sts	0x0359, r31
    46f0:	e0 93 58 03 	sts	0x0358, r30
    46f4:	80 91 5a 03 	lds	r24, 0x035A
    46f8:	90 91 5b 03 	lds	r25, 0x035B
    46fc:	89 2b       	or	r24, r25
    46fe:	21 f4       	brne	.+8      	; 0x4708 <fdevopen+0x8c>
    4700:	f0 93 5b 03 	sts	0x035B, r31
    4704:	e0 93 5a 03 	sts	0x035A, r30
    4708:	c9 01       	movw	r24, r18
    470a:	df 91       	pop	r29
    470c:	cf 91       	pop	r28
    470e:	1f 91       	pop	r17
    4710:	0f 91       	pop	r16
    4712:	08 95       	ret

00004714 <calloc>:
    4714:	0f 93       	push	r16
    4716:	1f 93       	push	r17
    4718:	cf 93       	push	r28
    471a:	df 93       	push	r29
    471c:	68 9f       	mul	r22, r24
    471e:	80 01       	movw	r16, r0
    4720:	69 9f       	mul	r22, r25
    4722:	10 0d       	add	r17, r0
    4724:	78 9f       	mul	r23, r24
    4726:	10 0d       	add	r17, r0
    4728:	11 24       	eor	r1, r1
    472a:	c8 01       	movw	r24, r16
    472c:	0e 94 39 22 	call	0x4472	; 0x4472 <malloc>
    4730:	ec 01       	movw	r28, r24
    4732:	00 97       	sbiw	r24, 0x00	; 0
    4734:	29 f0       	breq	.+10     	; 0x4740 <calloc+0x2c>
    4736:	60 e0       	ldi	r22, 0x00	; 0
    4738:	70 e0       	ldi	r23, 0x00	; 0
    473a:	a8 01       	movw	r20, r16
    473c:	0e 94 a6 23 	call	0x474c	; 0x474c <memset>
    4740:	ce 01       	movw	r24, r28
    4742:	df 91       	pop	r29
    4744:	cf 91       	pop	r28
    4746:	1f 91       	pop	r17
    4748:	0f 91       	pop	r16
    474a:	08 95       	ret

0000474c <memset>:
    474c:	dc 01       	movw	r26, r24
    474e:	01 c0       	rjmp	.+2      	; 0x4752 <memset+0x6>
    4750:	6d 93       	st	X+, r22
    4752:	41 50       	subi	r20, 0x01	; 1
    4754:	50 40       	sbci	r21, 0x00	; 0
    4756:	e0 f7       	brcc	.-8      	; 0x4750 <memset+0x4>
    4758:	08 95       	ret

0000475a <_exit>:
    475a:	f8 94       	cli

0000475c <__stop_program>:
    475c:	ff cf       	rjmp	.-2      	; 0x475c <__stop_program>
